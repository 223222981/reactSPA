{"version":3,"sources":["../node_modules/zrender/lib/core/util.js","../node_modules/echarts/lib/echarts.js","../node_modules/echarts/lib/util/graphic.js","../node_modules/echarts/lib/util/number.js","../node_modules/echarts/lib/config.js","../node_modules/echarts/lib/util/model.js","../node_modules/echarts/lib/util/layout.js","../node_modules/zrender/lib/core/vector.js","../node_modules/echarts/lib/util/format.js","../node_modules/zrender/lib/core/BoundingRect.js","../node_modules/echarts/lib/model/Model.js","../node_modules/zrender/lib/core/env.js","../node_modules/zrender/lib/graphic/Path.js","../node_modules/echarts/lib/model/Component.js","../node_modules/echarts/lib/data/List.js","../node_modules/echarts/lib/model/Series.js","../node_modules/zrender/lib/core/matrix.js","../node_modules/echarts/lib/coord/axisHelper.js","../node_modules/echarts/lib/util/symbol.js","../node_modules/echarts/lib/data/helper/completeDimensions.js","../node_modules/zrender/lib/contain/text.js","../node_modules/echarts/lib/CoordinateSystem.js","../node_modules/zrender/lib/tool/color.js","../node_modules/zrender/lib/core/event.js","../node_modules/echarts/lib/util/clazz.js","../node_modules/zrender/lib/core/curve.js","../node_modules/echarts/lib/view/Chart.js","../node_modules/echarts/lib/chart/helper/createListFromArray.js","../node_modules/echarts/lib/coord/Axis.js","../node_modules/echarts/lib/component/toolbox/featureManager.js","../node_modules/zrender/lib/mixin/Eventful.js","../node_modules/echarts/lib/util/throttle.js","../node_modules/echarts/lib/visual/symbol.js","../node_modules/echarts/lib/component/axis/AxisBuilder.js","../node_modules/echarts/lib/component/axis/AxisView.js","../node_modules/echarts/lib/visual/VisualMapping.js","../node_modules/echarts/lib/model/mixin/makeStyleMapper.js","../node_modules/zrender/lib/core/PathProxy.js","../node_modules/echarts/lib/data/DataDiffer.js","../node_modules/echarts/lib/coord/axisModelCommonMixin.js","../node_modules/echarts/lib/lang.js","../node_modules/zrender/lib/core/log.js","../node_modules/zrender/lib/graphic/Image.js","../node_modules/zrender/lib/graphic/Text.js","../node_modules/echarts/lib/chart/helper/SymbolDraw.js","../node_modules/echarts/lib/component/gridSimple.js","../node_modules/echarts/lib/chart/treemap/helper.js","../node_modules/echarts/lib/component/helper/sliderMove.js","../node_modules/echarts/lib/component/axisPointer.js","../node_modules/echarts/lib/component/dataZoom/DataZoomModel.js","../node_modules/echarts/lib/component/dataZoom/DataZoomView.js","../node_modules/zrender/lib/zrender.js","../node_modules/zrender/lib/container/Group.js","../node_modules/zrender/lib/config.js","../node_modules/zrender/lib/graphic/Displayable.js","../node_modules/zrender/lib/graphic/helper/text.js","../node_modules/zrender/lib/graphic/Gradient.js","../node_modules/echarts/lib/scale/Scale.js","../node_modules/echarts/lib/scale/Interval.js","../node_modules/echarts/lib/chart/helper/Symbol.js","../node_modules/echarts/lib/coord/axisModelCreator.js","../node_modules/echarts/lib/component/axisPointer/modelHelper.js","../node_modules/echarts/lib/processor/dataFilter.js","../node_modules/echarts/lib/coord/geo/geoCreator.js","../node_modules/echarts/lib/component/helper/RoamController.js","../node_modules/echarts/lib/chart/helper/whiskerBoxCommon.js","../node_modules/echarts/lib/component/axisPointer/viewHelper.js","../node_modules/echarts/lib/visual/visualSolution.js","../node_modules/zrender/lib/mixin/Transformable.js","../node_modules/zrender/lib/core/timsort.js","../node_modules/zrender/lib/graphic/helper/image.js","../node_modules/zrender/lib/core/bbox.js","../node_modules/echarts/lib/util/component.js","../node_modules/echarts/lib/view/Component.js","../node_modules/echarts/lib/layout/points.js","../node_modules/echarts/lib/coord/cartesian/Grid.js","../node_modules/echarts/lib/layout/barGrid.js","../node_modules/echarts/lib/component/helper/selectableMixin.js","../node_modules/echarts/lib/visual/dataColor.js","../node_modules/echarts/lib/component/helper/cursorHelper.js","../node_modules/echarts/lib/chart/helper/LineDraw.js","../node_modules/echarts/lib/chart/helper/Line.js","../node_modules/echarts/lib/component/helper/BrushController.js","../node_modules/echarts/lib/component/axisPointer/BaseAxisPointer.js","../node_modules/echarts/lib/coord/polar/polarCreator.js","../node_modules/echarts/lib/component/dataZoom/helper.js","../node_modules/echarts/lib/component/marker/MarkerModel.js","../node_modules/echarts/lib/component/marker/markerHelper.js","../node_modules/echarts/lib/component/marker/MarkerView.js","../node_modules/zrender/lib/svg/graphic.js","../node_modules/zrender/lib/svg/core.js","../node_modules/echarts-for-react/lib/index.js","../node_modules/echarts/index.js","../node_modules/zrender/lib/core/guid.js","../node_modules/zrender/lib/Element.js","../node_modules/zrender/lib/animation/Animator.js","../node_modules/zrender/lib/core/LRU.js","../node_modules/zrender/lib/graphic/Style.js","../node_modules/zrender/lib/graphic/Pattern.js","../node_modules/zrender/lib/animation/requestAnimationFrame.js","../node_modules/zrender/lib/graphic/mixin/RectText.js","../node_modules/zrender/lib/graphic/helper/roundRect.js","../node_modules/zrender/lib/contain/line.js","../node_modules/zrender/lib/contain/quadratic.js","../node_modules/zrender/lib/contain/util.js","../node_modules/zrender/lib/contain/windingLine.js","../node_modules/zrender/lib/graphic/helper/fixClipWithShadow.js","../node_modules/zrender/lib/graphic/helper/poly.js","../node_modules/zrender/lib/graphic/LinearGradient.js","../node_modules/echarts/lib/model/mixin/colorPalette.js","../node_modules/echarts/lib/export.js","../node_modules/echarts/lib/scale/helper.js","../node_modules/echarts/lib/coord/geo/parseGeoJson.js","../node_modules/echarts/lib/coord/geo/Region.js","../node_modules/zrender/lib/contain/polygon.js","../node_modules/echarts/lib/chart/helper/labelHelper.js","../node_modules/echarts/lib/chart/line/poly.js","../node_modules/echarts/lib/coord/cartesian/AxisModel.js","../node_modules/echarts/lib/coord/axisDefault.js","../node_modules/echarts/lib/component/axis/cartesianAxisHelper.js","../node_modules/echarts/lib/chart/bar/BaseBarSeries.js","../node_modules/echarts/lib/chart/bar/helper.js","../node_modules/echarts/lib/action/createDataSelectAction.js","../node_modules/echarts/lib/coord/View.js","../node_modules/echarts/lib/component/helper/MapDraw.js","../node_modules/echarts/lib/component/helper/interactionMutex.js","../node_modules/echarts/lib/component/helper/roamHelper.js","../node_modules/echarts/lib/action/geoRoam.js","../node_modules/echarts/lib/action/roamHelper.js","../node_modules/echarts/lib/data/Tree.js","../node_modules/echarts/lib/data/helper/linkList.js","../node_modules/echarts/lib/chart/tree/layoutHelper.js","../node_modules/echarts/lib/chart/tree/commonLayout.js","../node_modules/echarts/lib/chart/helper/createGraphFromNodeEdge.js","../node_modules/echarts/lib/chart/graph/simpleLayoutHelper.js","../node_modules/echarts/lib/chart/graph/circularLayoutHelper.js","../node_modules/echarts/lib/component/parallel.js","../node_modules/echarts/lib/coord/parallel/parallelCreator.js","../node_modules/echarts/lib/component/helper/brushHelper.js","../node_modules/echarts/lib/util/array/nest.js","../node_modules/echarts/lib/chart/helper/EffectLine.js","../node_modules/echarts/lib/chart/helper/Polyline.js","../node_modules/echarts/lib/component/singleAxis.js","../node_modules/echarts/lib/component/axis/singleAxisHelper.js","../node_modules/echarts/lib/component/axisPointer/findPointFromSeries.js","../node_modules/echarts/lib/component/axisPointer/globalListener.js","../node_modules/echarts/lib/component/axisPointer/CartesianAxisPointer.js","../node_modules/echarts/lib/component/legend/LegendModel.js","../node_modules/echarts/lib/component/legend/LegendView.js","../node_modules/echarts/lib/component/helper/listComponent.js","../node_modules/echarts/lib/component/helper/BrushTargetManager.js","../node_modules/echarts/lib/component/dataZoom/typeDefaulter.js","../node_modules/echarts/lib/component/dataZoom/dataZoomProcessor.js","../node_modules/echarts/lib/component/dataZoom/dataZoomAction.js","../node_modules/echarts/lib/component/visualMap/preprocessor.js","../node_modules/echarts/lib/component/visualMap/typeDefaulter.js","../node_modules/echarts/lib/component/visualMap/visualEncoding.js","../node_modules/echarts/lib/component/visualMap/VisualMapModel.js","../node_modules/echarts/lib/visual/visualDefault.js","../node_modules/echarts/lib/component/visualMap/VisualMapView.js","../node_modules/echarts/lib/component/visualMap/helper.js","../node_modules/echarts/lib/component/visualMap/visualMapAction.js","../node_modules/echarts/lib/component/dataZoom/history.js","../node_modules/zrender/lib/vml/core.js","../node_modules/zrender/lib/svg/helper/Definable.js","../node_modules/zrender/lib/Handler.js","../node_modules/zrender/lib/mixin/Draggable.js","../node_modules/zrender/lib/Storage.js","../node_modules/zrender/lib/mixin/Animatable.js","../node_modules/zrender/lib/animation/Clip.js","../node_modules/zrender/lib/animation/easing.js","../node_modules/zrender/lib/Painter.js","../node_modules/zrender/lib/Layer.js","../node_modules/zrender/lib/animation/Animation.js","../node_modules/zrender/lib/dom/HandlerProxy.js","../node_modules/zrender/lib/core/GestureMgr.js","../node_modules/echarts/lib/model/Global.js","../node_modules/echarts/lib/model/mixin/lineStyle.js","../node_modules/echarts/lib/model/mixin/areaStyle.js","../node_modules/echarts/lib/model/mixin/textStyle.js","../node_modules/zrender/lib/tool/path.js","../node_modules/zrender/lib/contain/path.js","../node_modules/zrender/lib/contain/cubic.js","../node_modules/zrender/lib/contain/arc.js","../node_modules/zrender/lib/tool/transformPath.js","../node_modules/zrender/lib/graphic/shape/Circle.js","../node_modules/zrender/lib/graphic/shape/Sector.js","../node_modules/zrender/lib/graphic/shape/Ring.js","../node_modules/zrender/lib/graphic/shape/Polygon.js","../node_modules/zrender/lib/graphic/helper/smoothSpline.js","../node_modules/zrender/lib/graphic/helper/smoothBezier.js","../node_modules/zrender/lib/graphic/shape/Polyline.js","../node_modules/zrender/lib/graphic/shape/Rect.js","../node_modules/zrender/lib/graphic/shape/Line.js","../node_modules/zrender/lib/graphic/shape/BezierCurve.js","../node_modules/zrender/lib/graphic/shape/Arc.js","../node_modules/zrender/lib/graphic/CompoundPath.js","../node_modules/zrender/lib/graphic/RadialGradient.js","../node_modules/echarts/lib/model/mixin/itemStyle.js","../node_modules/echarts/lib/model/mixin/boxLayout.js","../node_modules/echarts/lib/model/globalDefault.js","../node_modules/echarts/lib/ExtensionAPI.js","../node_modules/echarts/lib/model/OptionManager.js","../node_modules/echarts/lib/preprocessor/backwardCompat.js","../node_modules/echarts/lib/preprocessor/helper/compatStyle.js","../node_modules/echarts/lib/visual/seriesColor.js","../node_modules/echarts/lib/loading/default.js","../node_modules/echarts/lib/helper.js","../node_modules/echarts/lib/scale/Ordinal.js","../node_modules/echarts/lib/scale/Time.js","../node_modules/echarts/lib/scale/Log.js","../node_modules/echarts/lib/chart/line.js","../node_modules/echarts/lib/chart/line/LineSeries.js","../node_modules/echarts/lib/chart/line/LineView.js","../node_modules/echarts/lib/chart/line/lineAnimationDiff.js","../node_modules/echarts/lib/processor/dataSample.js","../node_modules/echarts/lib/coord/cartesian/Cartesian2D.js","../node_modules/echarts/lib/coord/cartesian/Cartesian.js","../node_modules/echarts/lib/coord/cartesian/Axis2D.js","../node_modules/echarts/lib/coord/cartesian/GridModel.js","../node_modules/echarts/lib/component/axis.js","../node_modules/echarts/lib/component/axis/CartesianAxisView.js","../node_modules/echarts/lib/chart/bar.js","../node_modules/echarts/lib/chart/bar/BarSeries.js","../node_modules/echarts/lib/chart/bar/BarView.js","../node_modules/echarts/lib/chart/bar/barItemStyle.js","../node_modules/echarts/lib/chart/pie.js","../node_modules/echarts/lib/chart/pie/PieSeries.js","../node_modules/echarts/lib/chart/pie/PieView.js","../node_modules/echarts/lib/chart/pie/pieLayout.js","../node_modules/echarts/lib/chart/pie/labelLayout.js","../node_modules/echarts/lib/chart/scatter.js","../node_modules/echarts/lib/chart/scatter/ScatterSeries.js","../node_modules/echarts/lib/chart/scatter/ScatterView.js","../node_modules/echarts/lib/chart/helper/LargeSymbolDraw.js","../node_modules/echarts/lib/chart/radar.js","../node_modules/echarts/lib/component/radar.js","../node_modules/echarts/lib/coord/radar/Radar.js","../node_modules/echarts/lib/coord/radar/IndicatorAxis.js","../node_modules/echarts/lib/coord/radar/RadarModel.js","../node_modules/echarts/lib/component/radar/RadarView.js","../node_modules/echarts/lib/chart/radar/RadarSeries.js","../node_modules/echarts/lib/chart/radar/RadarView.js","../node_modules/echarts/lib/chart/radar/radarLayout.js","../node_modules/echarts/lib/chart/radar/backwardCompat.js","../node_modules/echarts/lib/chart/map.js","../node_modules/echarts/lib/chart/map/MapSeries.js","../node_modules/echarts/lib/coord/geo/Geo.js","../node_modules/echarts/lib/coord/geo/fix/nanhai.js","../node_modules/echarts/lib/coord/geo/fix/textCoord.js","../node_modules/echarts/lib/coord/geo/fix/geoCoord.js","../node_modules/echarts/lib/coord/geo/fix/diaoyuIsland.js","../node_modules/echarts/lib/chart/map/MapView.js","../node_modules/echarts/lib/chart/map/mapSymbolLayout.js","../node_modules/echarts/lib/chart/map/mapVisual.js","../node_modules/echarts/lib/chart/map/mapDataStatistic.js","../node_modules/echarts/lib/chart/map/backwardCompat.js","../node_modules/echarts/lib/chart/tree.js","../node_modules/echarts/lib/chart/tree/TreeSeries.js","../node_modules/echarts/lib/chart/tree/TreeView.js","../node_modules/echarts/lib/chart/tree/treeAction.js","../node_modules/echarts/lib/chart/tree/orthogonalLayout.js","../node_modules/echarts/lib/chart/tree/traversalHelper.js","../node_modules/echarts/lib/chart/tree/radialLayout.js","../node_modules/echarts/lib/chart/treemap.js","../node_modules/echarts/lib/chart/treemap/TreemapSeries.js","../node_modules/echarts/lib/chart/treemap/TreemapView.js","../node_modules/echarts/lib/chart/treemap/Breadcrumb.js","../node_modules/echarts/lib/util/animation.js","../node_modules/echarts/lib/chart/treemap/treemapAction.js","../node_modules/echarts/lib/chart/treemap/treemapVisual.js","../node_modules/echarts/lib/chart/treemap/treemapLayout.js","../node_modules/echarts/lib/chart/graph.js","../node_modules/echarts/lib/chart/graph/GraphSeries.js","../node_modules/echarts/lib/data/Graph.js","../node_modules/echarts/lib/chart/graph/GraphView.js","../node_modules/echarts/lib/chart/helper/LinePath.js","../node_modules/echarts/lib/chart/graph/adjustEdge.js","../node_modules/echarts/lib/chart/graph/graphAction.js","../node_modules/echarts/lib/chart/graph/categoryFilter.js","../node_modules/echarts/lib/chart/graph/categoryVisual.js","../node_modules/echarts/lib/chart/graph/edgeVisual.js","../node_modules/echarts/lib/chart/graph/simpleLayout.js","../node_modules/echarts/lib/chart/graph/circularLayout.js","../node_modules/echarts/lib/chart/graph/forceLayout.js","../node_modules/echarts/lib/chart/graph/forceHelper.js","../node_modules/echarts/lib/chart/graph/createView.js","../node_modules/echarts/lib/chart/gauge.js","../node_modules/echarts/lib/chart/gauge/GaugeSeries.js","../node_modules/echarts/lib/chart/gauge/GaugeView.js","../node_modules/echarts/lib/chart/gauge/PointerPath.js","../node_modules/echarts/lib/chart/funnel.js","../node_modules/echarts/lib/chart/funnel/FunnelSeries.js","../node_modules/echarts/lib/chart/funnel/FunnelView.js","../node_modules/echarts/lib/chart/funnel/funnelLayout.js","../node_modules/echarts/lib/chart/parallel.js","../node_modules/echarts/lib/coord/parallel/parallelPreprocessor.js","../node_modules/echarts/lib/coord/parallel/Parallel.js","../node_modules/echarts/lib/coord/parallel/ParallelAxis.js","../node_modules/echarts/lib/coord/parallel/ParallelModel.js","../node_modules/echarts/lib/coord/parallel/AxisModel.js","../node_modules/echarts/lib/component/parallelAxis.js","../node_modules/echarts/lib/component/axis/parallelAxisAction.js","../node_modules/echarts/lib/component/axis/ParallelAxisView.js","../node_modules/echarts/lib/chart/parallel/ParallelSeries.js","../node_modules/echarts/lib/chart/parallel/ParallelView.js","../node_modules/echarts/lib/chart/parallel/parallelVisual.js","../node_modules/echarts/lib/chart/sankey.js","../node_modules/echarts/lib/chart/sankey/SankeySeries.js","../node_modules/echarts/lib/chart/sankey/SankeyView.js","../node_modules/echarts/lib/chart/sankey/sankeyLayout.js","../node_modules/echarts/lib/chart/sankey/sankeyVisual.js","../node_modules/echarts/lib/chart/boxplot.js","../node_modules/echarts/lib/chart/boxplot/BoxplotSeries.js","../node_modules/echarts/lib/chart/helper/WhiskerBoxDraw.js","../node_modules/echarts/lib/chart/boxplot/BoxplotView.js","../node_modules/echarts/lib/chart/boxplot/boxplotVisual.js","../node_modules/echarts/lib/chart/boxplot/boxplotLayout.js","../node_modules/echarts/lib/chart/candlestick.js","../node_modules/echarts/lib/chart/candlestick/CandlestickSeries.js","../node_modules/echarts/lib/chart/candlestick/CandlestickView.js","../node_modules/echarts/lib/chart/candlestick/preprocessor.js","../node_modules/echarts/lib/chart/candlestick/candlestickVisual.js","../node_modules/echarts/lib/chart/candlestick/candlestickLayout.js","../node_modules/echarts/lib/chart/effectScatter.js","../node_modules/echarts/lib/chart/effectScatter/EffectScatterSeries.js","../node_modules/echarts/lib/chart/effectScatter/EffectScatterView.js","../node_modules/echarts/lib/chart/helper/EffectSymbol.js","../node_modules/echarts/lib/chart/lines.js","../node_modules/echarts/lib/chart/lines/LinesSeries.js","../node_modules/echarts/lib/chart/lines/LinesView.js","../node_modules/echarts/lib/chart/helper/EffectPolyline.js","../node_modules/echarts/lib/chart/helper/LargeLineDraw.js","../node_modules/echarts/lib/chart/lines/linesLayout.js","../node_modules/echarts/lib/chart/lines/linesVisual.js","../node_modules/echarts/lib/chart/heatmap.js","../node_modules/echarts/lib/chart/heatmap/HeatmapSeries.js","../node_modules/echarts/lib/chart/heatmap/HeatmapView.js","../node_modules/echarts/lib/chart/heatmap/HeatmapLayer.js","../node_modules/echarts/lib/chart/pictorialBar.js","../node_modules/echarts/lib/chart/bar/PictorialBarSeries.js","../node_modules/echarts/lib/chart/bar/PictorialBarView.js","../node_modules/echarts/lib/chart/themeRiver.js","../node_modules/echarts/lib/coord/single/singleCreator.js","../node_modules/echarts/lib/coord/single/Single.js","../node_modules/echarts/lib/coord/single/SingleAxis.js","../node_modules/echarts/lib/component/axis/SingleAxisView.js","../node_modules/echarts/lib/coord/single/AxisModel.js","../node_modules/echarts/lib/component/axisPointer/axisTrigger.js","../node_modules/echarts/lib/component/axisPointer/AxisPointerModel.js","../node_modules/echarts/lib/component/axisPointer/AxisPointerView.js","../node_modules/echarts/lib/component/axisPointer/SingleAxisPointer.js","../node_modules/echarts/lib/chart/themeRiver/ThemeRiverSeries.js","../node_modules/echarts/lib/chart/themeRiver/ThemeRiverView.js","../node_modules/echarts/lib/chart/themeRiver/themeRiverLayout.js","../node_modules/echarts/lib/chart/themeRiver/themeRiverVisual.js","../node_modules/echarts/lib/chart/custom.js","../node_modules/echarts/lib/coord/cartesian/prepareCustom.js","../node_modules/echarts/lib/coord/geo/prepareCustom.js","../node_modules/echarts/lib/coord/single/prepareCustom.js","../node_modules/echarts/lib/coord/polar/prepareCustom.js","../node_modules/echarts/lib/coord/calendar/prepareCustom.js","../node_modules/echarts/lib/component/graphic.js","../node_modules/echarts/lib/component/grid.js","../node_modules/echarts/lib/component/legendScroll.js","../node_modules/echarts/lib/component/legend.js","../node_modules/echarts/lib/component/legend/legendAction.js","../node_modules/echarts/lib/component/legend/legendFilter.js","../node_modules/echarts/lib/component/legend/ScrollableLegendModel.js","../node_modules/echarts/lib/component/legend/ScrollableLegendView.js","../node_modules/echarts/lib/component/legend/scrollableLegendAction.js","../node_modules/echarts/lib/component/tooltip.js","../node_modules/echarts/lib/component/tooltip/TooltipModel.js","../node_modules/echarts/lib/component/tooltip/TooltipView.js","../node_modules/echarts/lib/component/tooltip/TooltipContent.js","../node_modules/echarts/lib/component/polar.js","../node_modules/echarts/lib/layout/barPolar.js","../node_modules/echarts/lib/coord/polar/Polar.js","../node_modules/echarts/lib/coord/polar/RadiusAxis.js","../node_modules/echarts/lib/coord/polar/AngleAxis.js","../node_modules/echarts/lib/coord/polar/PolarModel.js","../node_modules/echarts/lib/coord/polar/AxisModel.js","../node_modules/echarts/lib/component/angleAxis.js","../node_modules/echarts/lib/component/axis/AngleAxisView.js","../node_modules/echarts/lib/component/radiusAxis.js","../node_modules/echarts/lib/component/axis/RadiusAxisView.js","../node_modules/echarts/lib/component/axisPointer/PolarAxisPointer.js","../node_modules/echarts/lib/component/geo.js","../node_modules/echarts/lib/coord/geo/GeoModel.js","../node_modules/echarts/lib/component/geo/GeoView.js","../node_modules/echarts/lib/component/brush.js","../node_modules/echarts/lib/component/brush/preprocessor.js","../node_modules/echarts/lib/component/brush/visualEncoding.js","../node_modules/echarts/lib/component/brush/selector.js","../node_modules/echarts/lib/component/brush/BrushModel.js","../node_modules/echarts/lib/component/brush/BrushView.js","../node_modules/echarts/lib/component/brush/brushAction.js","../node_modules/echarts/lib/component/toolbox/feature/Brush.js","../node_modules/echarts/lib/component/calendar.js","../node_modules/echarts/lib/coord/calendar/Calendar.js","../node_modules/echarts/lib/coord/calendar/CalendarModel.js","../node_modules/echarts/lib/component/calendar/CalendarView.js","../node_modules/echarts/lib/component/title.js","../node_modules/echarts/lib/component/dataZoom.js","../node_modules/echarts/lib/component/dataZoom/AxisProxy.js","../node_modules/echarts/lib/component/dataZoom/SliderZoomModel.js","../node_modules/echarts/lib/component/dataZoom/SliderZoomView.js","../node_modules/echarts/lib/component/dataZoom/InsideZoomModel.js","../node_modules/echarts/lib/component/dataZoom/InsideZoomView.js","../node_modules/echarts/lib/component/dataZoom/roams.js","../node_modules/echarts/lib/component/visualMap.js","../node_modules/echarts/lib/component/visualMapContinuous.js","../node_modules/echarts/lib/component/visualMap/ContinuousModel.js","../node_modules/echarts/lib/component/visualMap/ContinuousView.js","../node_modules/echarts/lib/component/visualMapPiecewise.js","../node_modules/echarts/lib/component/visualMap/PiecewiseModel.js","../node_modules/echarts/lib/component/visualMap/PiecewiseView.js","../node_modules/echarts/lib/component/markPoint.js","../node_modules/echarts/lib/component/marker/MarkPointModel.js","../node_modules/echarts/lib/component/marker/MarkPointView.js","../node_modules/echarts/lib/component/markLine.js","../node_modules/echarts/lib/component/marker/MarkLineModel.js","../node_modules/echarts/lib/component/marker/MarkLineView.js","../node_modules/echarts/lib/component/markArea.js","../node_modules/echarts/lib/component/marker/MarkAreaModel.js","../node_modules/echarts/lib/component/marker/MarkAreaView.js","../node_modules/echarts/lib/component/timeline.js","../node_modules/echarts/lib/component/timeline/preprocessor.js","../node_modules/echarts/lib/component/timeline/typeDefaulter.js","../node_modules/echarts/lib/component/timeline/timelineAction.js","../node_modules/echarts/lib/component/timeline/SliderTimelineModel.js","../node_modules/echarts/lib/component/timeline/TimelineModel.js","../node_modules/echarts/lib/component/timeline/SliderTimelineView.js","../node_modules/echarts/lib/component/timeline/TimelineView.js","../node_modules/echarts/lib/component/timeline/TimelineAxis.js","../node_modules/echarts/lib/component/toolbox.js","../node_modules/echarts/lib/component/toolbox/ToolboxModel.js","../node_modules/echarts/lib/component/toolbox/ToolboxView.js","../node_modules/echarts/lib/component/toolbox/feature/SaveAsImage.js","../node_modules/echarts/lib/component/toolbox/feature/MagicType.js","../node_modules/echarts/lib/component/toolbox/feature/DataView.js","../node_modules/echarts/lib/component/toolbox/feature/DataZoom.js","../node_modules/echarts/lib/component/dataZoomSelect.js","../node_modules/echarts/lib/component/dataZoom/SelectZoomModel.js","../node_modules/echarts/lib/component/dataZoom/SelectZoomView.js","../node_modules/echarts/lib/component/toolbox/feature/Restore.js","../node_modules/zrender/lib/vml/vml.js","../node_modules/zrender/lib/vml/graphic.js","../node_modules/zrender/lib/vml/Painter.js","../node_modules/zrender/lib/svg/svg.js","../node_modules/zrender/lib/svg/Painter.js","../node_modules/zrender/lib/core/arrayDiff2.js","../node_modules/zrender/lib/svg/helper/GradientManager.js","../node_modules/zrender/lib/svg/helper/ClippathManager.js","../node_modules/echarts-for-react/lib/core.js","../node_modules/element-resize-event/index.js","../node_modules/antd/lib/timeline/index.js","../node_modules/antd/lib/timeline/Timeline.js","../node_modules/antd/lib/timeline/TimelineItem.js","../node_modules/antd/lib/timeline/style/index.js","webpack:///./node_modules/antd/lib/timeline/style/index.less?b17b","../node_modules/antd/lib/timeline/style/index.less"],"names":["BUILTIN_OBJECT","[object Function]","[object RegExp]","[object Date]","[object Error]","[object CanvasGradient]","[object CanvasPattern]","[object Image]","[object Canvas]","TYPED_ARRAY","[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]","objToString","Object","prototype","toString","arrayProto","Array","nativeForEach","forEach","nativeFilter","filter","nativeSlice","slice","nativeMap","map","nativeReduce","reduce","methods","clone","source","result","typeStr","call","i","len","length","Ctor","constructor","from","isPrimitive","isDom","key","hasOwnProperty","merge","target","overwrite","isObject","targetProp","sourceProp","isArray","isBuiltInObject","defaults","overlay","_ctx","createCanvas","each","obj","cb","context","bind","func","args","arguments","apply","concat","value","type","nodeType","ownerDocument","document","createElement","primitiveKey","HashMap","this","set","get","prefixedKey","removeKey","exports","$override","name","fn","mergeAll","targetAndSources","extend","getContext","indexOf","array","inherits","clazz","baseClazz","clazzPrototype","F","prop","superClass","mixin","isArrayLike","data","push","memo","find","curry","isFunction","isString","eqNaN","retrieve","values","retrieve2","value0","value1","retrieve3","value2","Function","normalizeCssArray","val","assert","condition","message","Error","setAsPrimitive","createHashMap","noop","__webpack_require__","__DEV__","zrender","zrUtil","colorTool","env","timsort","Eventful","GlobalModel","ExtensionAPI","CoordinateSystemManager","OptionManager","backwardCompat","ComponentModel","SeriesModel","ComponentView","ChartView","graphic","modelUtil","throttle","seriesColor","loadingDefault","parseClassType","PRIORITY_PROCESSOR_FILTER","PRIORITY_VISUAL_LAYOUT","PRIORITY_VISUAL_CHART","PRIORITY","PROCESSOR","FILTER","STATISTIC","VISUAL","LAYOUT","GLOBAL","CHART","COMPONENT","BRUSH","IN_MAIN_PROCESS","OPTION_UPDATED","ACTION_REG","createRegisterEventWithLowercaseName","method","eventName","handler","toLowerCase","MessageCenter","ECharts","dom","theme","opts","themeStorage","id","group","_dom","ecInstance","coordSysMgr","zr","_zr","init","renderer","devicePixelRatio","width","height","prioritySortFunc","a","b","prio","_throttledZrFlush","flush","_theme","_chartsViews","_chartsMap","_componentsViews","_componentsMap","_coordSysMgr","_api","getCoordinateSystems","getComponentByElement","el","modelInfo","__ecComponentInfo","_model","getComponent","mainType","index","parent","_messageCenter","_initEvents","resize","_pendingActions","visualFuncs","dataProcessorFuncs","animation","on","_onframe","off","one","echartsProto","doConvertPixel","methodName","finder","ecModel","coordSysList","parseFinder","coordSys","silent","updateMethods","prepareAndUpdate","flushPendingActions","triggerUpdatedEvent","getDom","getZr","setOption","option","notMerge","lazyUpdate","optionManager","optionPreprocessorFuncs","setTheme","console","log","getModel","getOption","getWidth","getHeight","getDevicePixelRatio","painter","dpr","window","getRenderedCanvas","canvasSupported","pixelRatio","backgroundColor","list","storage","getDisplayList","stopAnimation","getSvgDataUrl","svgSupported","pathToSvg","getDataURL","excludeComponents","excludesComponentViews","self","componentType","eachComponent","component","view","__viewId","ignore","url","getType","toDataURL","getConnectedDataURL","groupId","mathMin","Math","min","mathMax","max","connectedGroups","left","Infinity","top","right","bottom","canvasList","instances","chart","canvas","boundingRect","getBoundingClientRect","targetCanvas","item","img","Image","style","x","y","image","add","refreshImmediately","convertToPixel","convertFromPixel","containPixel","models","model","coordinateSystem","containPoint","getVisual","visualType","defaultMainType","seriesModel","getData","dataIndexInside","indexOfRawIndex","dataIndex","getItemVisual","getViewOfComponentModel","componentModel","getViewOfSeriesModel","update","payload","api","restoreData","create","process","stackedDataMap","eachSeries","series","stack","previousStack","stackedOn","doVisualEncoding","componentView","__model","render","updateZ","__alive","idx","chartView","updateProgressiveAndBlend","updateHoverLayerStatus","remove","isSingleCanvas","configLayer","clearColor","colorArr","parse","stringify","colorStops","background","postUpdateFuncs","updateView","clearAllVisual","invokeUpdateMethod","updateVisual","updateLayout","visual","isLayout","prepareView","updateDirectly","ecIns","subType","query","callView","doDispatchAction","payloadType","escapeConnect","actionWrap","actions","actionInfo","cptType","split","updateMethod","pop","payloads","batched","batch","eventObj","eventObjBatch","isHighDown","batchItem","action","event","main","sub","trigger","pendingActions","shift","isComponent","viewList","viewMap","viewId","classType","Clazz","getClass","__id","componentIndex","dispose","splice","excludesLayout","clearColorPalette","optionChanged","resetOption","_loadingFX","showLoading","cfg","hideLoading","loadingEffects","makeActionFromEvent","eventActionMap","dispatchAction","opt","browser","weChat","MOUSE_EVENT_NAMES","elCount","traverse","isGroup","node","useHoverLayer","frameDrawNum","needProgressive","progressive","floor","blendMode","setStyle","z","zlevel","eveName","e","params","dataModel","getSeriesByIndex","seriesIndex","getDataParams","dataType","eventData","actionType","eventType","isDisposed","_disposed","clear","idBase","Date","groupIdBase","DOM_ATTRIBUTE_KEY","mapDataStores","disConnect","disconnect","getInstanceByDom","getAttribute","registerPreprocessor","preprocessorFunc","registerAction","test","registerVisual","priority","visualFunc","registerLoading","loadingFx","version","dependencies","existInstance","setAttribute","STATUS_KEY","updateConnectedChartsStatus","charts","status","otherCharts","otherChart","enableConnect","connect","getInstanceById","registerTheme","registerProcessor","processorFunc","registerPostUpdate","postUpdateFunc","registerCoordinateSystem","CoordinateSystem","register","getCoordinateSystemDimensions","coordSysCreator","getDimensionsInfo","dimensions","registerLayout","layoutFunc","extendComponentModel","extendComponentView","extendSeriesModel","extendChartView","setCanvasCreator","creator","registerMap","mapName","geoJson","specialAreas","features","JSON","getMap","dataTool","___ec_export","pathTool","matrix","vector","Path","Transformable","Group","Text","Circle","Sector","Ring","Polygon","Polyline","Rect","Line","BezierCurve","Arc","CompoundPath","LinearGradient","RadialGradient","BoundingRect","round","EMPTY_OBJ","makePath","pathData","rect","layout","path","createFromString","getBoundingRect","centerGraphic","resizePath","aspect","mergePath","applyTransform","m","calculateTransform","subPixelOptimize","position","lineWidth","positiveOrNegative","doubledPosition","hasFillOrStroke","fillOrStroke","liftColor","color","lift","cacheElementStl","__hoverStlDirty","stroke","fill","hoverStyle","__hoverStl","normalStyle","__normalStl","doSingleEnterHover","__isHover","__zr","addHover","insideRollbackOpt","insideRollback","textFill","textStroke","textStrokeWidth","rollbackInsideStyle","extendFrom","applyInsideStyle","insideOriginalTextPosition","autoColor","dirty","z2","doSingleLeaveHover","normalStl","removeHover","doEnterHover","child","doLeaveHover","setElementHoverStl","hoverStl","onElementMouseOver","__hoverSilentOnTouch","zrByTouch","__isEmphasis","onElementMouseOut","enterEmphasis","leaveEmphasis","setTextStyle","textStyle","textStyleModel","specifiedTextStyle","isEmphasis","setTextStyleCommon","host","isRectText","textPosition","getShallow","textOffset","labelRotate","PI","textRotation","textDistance","richResult","globalTextStyle","richItemNames","richItemNameMap","rich","parentModel","getRichItemNames","richTextStyle","setTokenTextStyle","forceRich","isBlock","getAutoColor","textBorderColor","textBorderWidth","originalTextPosition","fontStyle","fontWeight","fontSize","fontFamily","textAlign","textVerticalAlign","textLineHeight","textWidth","textHeight","textTag","disableBox","textBackgroundColor","textPadding","textBorderRadius","textBoxShadowColor","textBoxShadowBlur","textBoxShadowOffsetX","textBoxShadowOffsetY","textShadowColor","textShadowBlur","textShadowOffsetX","textShadowOffsetY","useInsideStyle","animateOrSetProps","isUpdate","props","animatableModel","isAnimationEnabled","postfix","duration","animationEasing","animationDelay","getAnimationDelayParams","animateTo","attr","updateProps","transform","invert","getLocalTransform","extendShape","extendPath","extendFromString","makeImage","imageUrl","onload","subPixelOptimizeLine","param","shape","x1","x2","y1","y2","subPixelOptimizeRect","originX","originY","originWidth","originHeight","setHoverStyle","hoverSilentOnTouch","setLabelStyle","emphasisStyle","normalModel","emphasisModel","normalSpecified","emphasisSpecified","labelFetcher","labelDataIndex","labelDimIndex","showNormal","showEmphasis","baseText","getFormattedLabel","defaultText","normalStyleText","emphasisStyleText","text","setText","labelModel","defaultColor","getFont","gTextStyleModel","join","initProps","getTransform","ancestor","mat","identity","mul","transformDirection","direction","hBase","abs","vBase","vertex","groupTransition","g1","g2","elMap","elMap1","anid","oldEl","newProp","getAnimatableProps","rotation","clipPointsByRect","points","point","clipRectByRect","targetRect","createIcon","iconStr","rectHover","strokeNoScale","replace","RADIAN_EPSILON","TIME_REG","quantityExponent","LN10","linearMap","domain","range","clamp","subDomain","subRange","parsePercent","percent","all","str","match","parseFloat","NaN","precision","returnStr","toFixed","asc","arr","sort","getPrecision","isNaN","count","getPrecisionSafe","eIndex","dotIndex","getPixelPrecision","dataExtent","pixelExtent","dataQuantity","sizeQuantity","isFinite","getPercentWithPrecision","valueList","sum","acc","digits","pow","votesPerQuota","targetSeats","seats","votes","currentSum","remainder","Number","NEGATIVE_INFINITY","maxId","MAX_SAFE_INTEGER","remRadian","radian","pi2","isRadianAroundZero","parseDate","exec","hour","toUpperCase","UTC","quantity","nice","exponent","exp10","f","reformIntervals","littleThan","lg","interval","close","curr","currClose","isNumeric","v","global","dev","formatUtil","nubmerUtil","Model","normalizeToArray","dataFormatMixin","rawValue","getRawValue","rawDataIndex","getRawIndex","getName","itemOpt","getRawDataItem","componentSubType","seriesType","seriesId","seriesName","marker","getTooltipMarker","$vars","dimIndex","labelProp","itemModel","getItemModel","formatter","formatTpl","dataItem","formatTooltip","isIdInner","cptOption","makeGetter","hostObj","has","defaultEmphasis","subOpts","emphasisOpt","emphasis","normalOpt","normal","subOptName","TEXT_STYLE_OPTIONS","getDataItemValue","isDataItemOption","converDataValue","dimInfo","dimType","createDataFormatModel","mappingToExists","exists","newCptOptions","exist","makeIdAndName","mapResult","idMap","existCpt","keyInfo","idNum","compressBatches","batchA","batchB","mapA","mapB","makeMap","mapToArray","sourceBatch","otherMap","dataIndices","otherDataIndices","j","lenj","isData","queryDataIndex","indexOfName","parsedKey","queryType","includeMainTypes","queryParam","queryComponents","dataDimToCoordDim","dataDim","getDimension","dimItem","getDimensionInfo","coordDim","coordDimToDataDim","dimName","coordDimIndex","otherDimToDataDim","otherDim","otherDims","LOCATION_PARAMS","HV_NAMES","boxLayout","orient","gap","maxWidth","maxHeight","currentLineMaxSize","eachChild","nextX","nextY","nextChild","childAt","nextChildRect","moveX","newline","moveY","box","vbox","hbox","getLayoutRect","positionInfo","containerRect","margin","containerWidth","containerHeight","verticalMargin","horizontalMargin","copyLayoutParams","getAvailableSize","positionElement","h","hv","boundingMode","needLocalTransform","elPos","dx","dy","sizeCalculable","hvIdx","mergeLayoutParam","targetOption","newOption","ignoreSize","hResult","vResult","names","newParams","newValueCount","merged","mergedValueCount","hasProp","hasValue","copy","getLayoutParams","ArrayCtor","Float32Array","sqrt","lenSquare","lengthSquare","distance","v1","v2","dist","distanceSquare","distSquare","out","scaleAndAdd","div","dot","scale","s","normalize","d","negate","lerp","t","textContain","numberUtil","encodeHTML","String","TPL_VAR_ALIAS","wrapVar","varName","seriesIdx","s2d","truncateText","getTextRect","addCommas","toCamelCase","upperCaseFirst","group1","charAt","tpl","paramsList","encode","seriesLen","alias","k","formatTplSimple","extraCssText","formatTime","isUTC","date","utc","M","capitalFirst","substr","lt","rb","lb","rt","vec2","v2ApplyTransform","union","other","maxX","maxY","sx","sy","translate","intersect","ax0","ax1","ay0","ay1","bx0","bx1","by0","by1","contain","plain","_default","module","clazzUtil","lineStyleMixin","areaStyleMixin","textStyleMixin","itemStyleMixin","doGet","pathArr","getParent","getParentMethod","mergeOption","ignoreParent","parsePath","thisParentModel","isEmpty","setReadOnly","properties","customizeGetParent","enableClassExtend","navigator","os","ua","firefox","ie","edge","SVGRect","touchEventsSupported","pointerEventsSupported","detect","userAgent","Displayable","PathProxy","pathContain","getCanvasPattern","pathProxyForDraw","__dirtyPath","strokeContainThreshold","brush","ctx","prevEl","hasStroke","hasFill","hasFillGradient","hasStrokeGradient","hasFillPattern","hasStrokePattern","setTransform","__dirty","_fillGradient","getGradient","_strokeGradient","fillStyle","strokeStyle","lineDash","lineDashOffset","ctxLineDash","setLineDash","getGlobalScale","setScale","beginPath","setLineDashOffset","buildPath","rebuildPath","restoreTransform","drawRectText","shapeCfg","inBundle","createPathProxy","_rect","needsUpdateRect","rectWithStroke","_rectWithStroke","w","lineScale","getLineScale","localPos","transformCoordToLocal","containStroke","dirtyPath","refresh","__clipTarget","animateShape","loop","animate","attrKV","setShape","Sub","defaultShape","thisShape","componentUtil","boxLayoutMixin","arrayPush","defaultOption","dependentModels","uid","layoutMode","$constructor","extraOpt","getUID","mergeDefaultAndTheme","inputPositionParams","themeModel","getTheme","getDefaultOption","optionUpdated","newCptOption","isInit","hasOwn","optList","Class","getReferringComponents","enableClassManagement","registerWhenExtend","enableSubTypeDefaulter","enableTopologicalTravel","deps","getClassesByMainType","DataDiffer","globalObj","dataCtors","float","Float64Array","int","Int32Array","ordinal","number","time","TRANSFERABLE_PROPERTIES","transferProperties","__wrappedMethods","propName","DefaultDataProvider","dataArray","_array","pure","getItem","List","hostModel","dimensionInfos","dimensionNames","dimensionName","dimensionInfo","stackable","_dimensionInfos","indices","_storage","_nameList","_idList","_optionModels","_visual","_layout","_itemVisuals","_itemLayouts","_graphicEls","_rawData","_extent","listProto","normalizeDimensions","cloneListForMapAndSample","original","excludeDimensions","allDimensions","originalStorage","dim","dimStore","hasItemOption","initData","nameList","dimValueGetter","nameDimIdx","dimensionInfoMap","size","idList","nameRepeatCount","itemName","DataCtor","stackedValue","getValues","getDataExtent","dimData","dimExtent","getSum","rawIndex","mid","indicesOfNearest","maxDistance","nearestIndices","minDist","MAX_VALUE","minDiff","diff","rawIdx","getId","dims","dimSize","filterSelf","newIndices","keep","mapArray","tmpRetValue","retValue","downSample","dimension","rate","sampleValue","sampleIndex","targetStorage","originalIndices","frameValues","frameIndices","frameSize","otherList","otherIdList","setVisual","setLayout","getLayout","getItemLayout","setItemLayout","clearItemLayouts","itemVisual","setItemVisual","setItemDataAndSeriesIndex","setItemGraphicEl","getItemGraphicEl","eachItemGraphicEl","cloneShallow","dimensionInfoList","wrapMethod","injectFunction","originalMethod","res","TRANSFERABLE_METHODS","CHANGABLE_METHODS","_format","_clazz","colorPaletteMixin","legendDataProvider","visualColorAccessPath","getInitialData","themeSubType","hasClass","label","fillDataTextStyle","newSeriesOption","getLinkedData","setData","getRawData","getBaseAxis","multipleSeries","formattedValue","vertially","tooltip","tooltipName","tooltipDims","setEachItem","dimIdx","valStr","formatArrayValue","colorEl","animationEnabled","getColorFromPalette","scope","getAxisTooltipData","getTooltipPosition","m1","m2","out0","out1","out2","out3","out4","out5","rotate","rad","aa","ac","atx","ab","ad","aty","st","sin","ct","cos","vx","vy","det","OrdinalScale","IntervalScale","Scale","getScaleExtent","axisDataLen","boundaryGap","span","scaleType","getMin","getMax","fixMin","fixMax","originalExtent","getExtent","setBlank","getNeedCrossZero","getAxisRawValue","axis","getLabel","niceScaleExtent","extent","splitNumber","base","setExtent","niceExtent","minInterval","maxInterval","setInterval","createScaleByModel","axisType","getCategories","ifAxisCrossZero","getAxisLabelInterval","tickCoords","labels","font","axisRotate","textSpaceTakenRect","autoLabelInterval","accumulatedLabelInterval","step","tickCoord","getFormattedLabels","labelFormatter","getTicksLabels","ticks","getTicks","tick","Triangle","cx","cy","moveTo","lineTo","closePath","Diamond","Pin","r","angle","asin","tanX","tanY","cpLen","cpLen2","arc","bezierCurveTo","Arrow","symbolCtors","line","roundRect","square","circle","diamond","pin","arrow","triangle","symbolShapeMakers","symbolBuildProxies","SymbolClz","symbolType","beforeBrush","proxySymbol","symbolPathSetColor","innerColor","symbolStyle","symbolShape","__isEmptyBrush","createSymbol","keepAspect","symbolPath","setColor","OTHER_DIMS","completeDimensions","sysDims","dimsDef","encodeDef","dataDimNameMap","coordDimNameMap","dimCount","retrieveValue","sysDimItem","sysDimItemDimsDef","dimDefItem","userDimName","resultItem","dataDims","resultDimIdx","applyDim","availDimIdx","sysDimIndex","sysDimItemOtherDims","extra","extraPrefix","genName","extraFromZero","isExtraCoord","guessOrdinal","fromZero","o","imageHelper","_util","textWidthCache","textWidthCacheCounter","TEXT_CACHE_MAX","STYLE_REG","DEFAULT_FONT","textLines","l","measureText","adjustTextX","adjustTextY","ellipsis","options","prepareTruncateOptions","truncateSingleLine","maxIterations","minChar","cnCharWidth","ascCharWidth","placeholder","contentWidth","ellipsisWidth","textLine","subLength","estimateLength","charCode","charCodeAt","getLineHeight","parsePlainText","padding","truncate","lineHeight","lines","outerHeight","truncOuterHeight","truncOuterWidth","outerWidth","parseRichText","contentBlock","lastIndex","matchedIndex","pushTokens","substring","contentHeight","pendingList","stlPadding","truncateWidth","truncateHeight","tokens","tokenStyle","token","styleName","tokenHeight","tokenWidth","tokenWidthNotSpecified","percentWidth","bgImg","findExistImage","isImageReady","paddingW","remianTruncWidth","parseInt","block","isEmptyStr","strs","isLineHolder","tokensLen","getRichTextRect","getPlainTextRect","adjustTextPositionOnRect","halfHeight","makeFont","textFont","coordinateSystemCreators","_coordinateSystems","coordinateSystems","creater","coordinateSystemCreator","LRU","kCSSColorTable","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","clampCssByte","clampCssFloat","parseCssInt","parseCssFloat","cssHueToRgb","lerpNumber","p","setRgba","g","copyRgba","colorCache","lastRemovedArr","putToCache","colorStr","rgbaArr","put","cached","iv","op","ep","fname","alpha","hsla2rgba","hsla","rgba","fastLerp","normalizedValue","colors","leftIndex","rightIndex","ceil","leftColor","rightColor","dv","fastMapToColor","fullOutput","mapToColor","arrColor","level","toHex","modifyHSL","H","S","R","G","B","vMin","vMax","delta","L","deltaR","deltaG","deltaB","rgba2hsla","modifyAlpha","Dispatcher","isDomLevel2","addEventListener","MOUSE_EVENT_REG","clientToLocal","calculate","defaultGetZrXY","layerX","offsetX","zrX","zrY","layerY","offsetY","clientX","clientY","stop","preventDefault","stopPropagation","cancelBubble","returnValue","normalizeEvent","touch","targetTouches","changedTouches","zrDelta","wheelDelta","detail","button","which","undefined","attachEvent","removeEventListener","detachEvent","notLeftMouse","TYPE_DELIMITER","IS_CONTAINER","MEMBER_PRIFIX","ret","superCall","superApply","RootClass","mandatoryMethods","proto","ExtendedClass","entity","registerClass","checkClassType","container","makeContainer","componentMainType","throwWhenNotFound","getAllClassMainTypes","types","hasSubTypes","originalExtend","_vector","v2Create","v2DistSquare","mathPow","mathSqrt","EPSILON","EPSILON_NUMERIC","THREE_SQRT","ONE_THIRD","_v0","_v1","_v2","isAroundZero","isNotAroundZero","cubicAt","p0","p1","p2","p3","onet","quadraticAt","cubicDerivativeAt","cubicRootAt","roots","c","A","C","n","t1","disc","K","t2","discSqrt","Y1","Y2","T","theta","acos","ASqrt","tmp","t3","cubicExtrema","extrema","cubicSubdivide","p01","p12","p23","p012","p123","p0123","cubicProjectPoint","x0","y0","x3","y3","prev","next","d1","d2","_t","quadraticDerivativeAt","quadraticRootAt","quadraticExtremum","divider","quadraticSubdivide","quadraticProjectPoint","Chart","highlight","toggleHighlight","downplay","removeAll","chartProto","elSetState","state","childCount","dataIdx","isStackable","getDimTypeByAxis","creators","cartesian2d","completeDimOpt","axesModels","xAxisModel","yAxisModel","xAxisType","yAxisType","isXAxisCateogry","isYAxisCategory","categoryAxesModels","categoryIndex","singleAxis","singleAxisModel","singleAxisType","isCategory","single","polar","polarModel","angleAxisModel","findAxisModel","radiusAxisModel","radiusAxisType","angleAxisType","isAngleAxisCateogry","isRadiusAxisCateogry","radius","geo","coordSysName","registeredCoordSys","axesInfo","categoryAxisModel","categoryDim","categories","dataLen","createNameList","sampleItem","firstDataNotNull","ifNeedCompleteOrdinalData","axisHelper","fixExtentWithBands","nTick","normalizedExtent","Axis","inverse","onBand","_labelInterval","coord","containData","dataToCoord","start","end","coordToData","pointToData","getTicksCoords","alignWithLabel","bands","getBands","coords","getLabelsCoords","getBandWidth","axisExtent","isHorizontal","getRotate","getLabelInterval","labelInterval","axisModel","ctor","arrySlice","_$handlers","_h","isSilent","newList","argLen","triggerWithContext","ORIGIN_METHOD","RATE","THROTTLE_TYPE","delay","debounce","currCall","debounceNextCall","lastCall","lastExec","timer","getTime","thisDelay","thisDebounce","clearTimeout","setTimeout","debounceDelay","createOrUpdate","fnAttr","throttleType","originFn","lastThrottleType","defaultSymbolType","legendSymbol","eachRawSeriesByType","symbolSize","symbol","isSeriesFiltered","itemSymbolType","itemSymbolSize","_number","matrixUtil","makeAxisEventDataBase","AxisBuilder","labelOffset","nameDirection","tickDirection","labelDirection","dumbGroup","updateTransform","_transform","_dumbGroup","hasBuilder","builders","getGroup","axisLine","pt1","pt2","lineStyle","lineCap","getLineStyle","arrows","arrowSize","symbolWidth","symbolHeight","axisTickLabel","tickEls","axisBuilder","isBlank","tickModel","lineStyleModel","tickLen","tickInterval","getInterval","ticksCoords","showMinLabel","showMaxLabel","ticksCnt","ifIgnoreOnTick","tickEl","buildAxisTick","labelEls","firstLabel","nextLabel","lastLabel","prevLabel","firstTick","nextTick","lastTick","prevTick","ignoreEl","isTwoLabelOverlapped","fixMinMaxLabelShow","axisLabelShow","labelMargin","labelRotation","labelLayout","innerTextLayout","categoryData","triggerEvent","tickVal","itemLabelModel","textColor","getTextColor","pos","labelStr","textEl","targetType","decomposeTransform","buildAxisLabel","axisName","axisNameAvailableWidth","nameLocation","gapSignal","isNameLocationCenter","nameRotation","textRotate","rotationDiff","onLeft","endTextLayout","truncateOpt","nameTruncateMaxWidth","truncatedText","tooltipOpt","formatterParams","__fullText","__truncatedText","show","content","axisRotation","current","firstRect","nextRect","mRotationBack","rawTick","echarts","axisPointerModelHelper","AxisView","_axisPointer","axisPointerClass","fixValue","updateAxisPointer","force","axisPointer","disposeAxisPointer","axisView","forceRender","getAxisPointerClass","axisPointerModel","getAxisPointerModel","axisPointerClazz","registerAxisPointerClass","zrColor","CATEGORY_DEFAULT_VISUAL_INDEX","VisualMapping","mappingMethod","thisOption","_normalizeData","normalizers","visualHandler","visualHandlers","applyVisual","getColorMapper","_doMap","normalizeVisualRange","pieceList","hasSpecialVisual","piece","originIndex","preprocessForPiecewise","categoryMap","cate","visualArr","setVisualToOption","preprocessForSpecifiedCategory","mapValueToVisual","normalized","getNormalizer","makeApplyVisual","isNormalized","doMapCategory","returnRGBArray","parsedVisual","linear","category","piecewise","getSpecifiedVisual","fixed","doMapFixed","colorHue","makePartialColorVisualHandler","colorSaturation","colorLightness","colorAlpha","opacity","makeDoMap","getter","setter","symbolCfg","doMapToArray","applyValue","sourceExtent","findPieceIndex","pieceIndex","listVisualTypes","visualTypes","addVisualHandler","isValidType","eachVisual","callback","mapVisual","isPrimary","newVisual","newVal","retrieveVisuals","hasVisual","prepareVisualTypes","type1","type2","dependsOn","visualType1","visualType2","findClosestWhenOutside","possibleI","pieceValue","updatePossible","newAbs","excludes","includes","curve","bbox","CMD","Q","Z","min2","max2","mathCos","mathSin","mathAbs","hasTypedArray","notSaveData","_saveData","_xi","_yi","_x0","_y0","_ux","_uy","_len","_lineDash","_dashOffset","_dashIdx","_dashSum","addData","exceedUnit","_needsDash","_dashedLineTo","_dashedBezierTo","quadraticCurveTo","_dashedQuadraticTo","startAngle","endAngle","anticlockwise","arcTo","toStatic","lineDashSum","offset","appendPath","appendSize","appendPathData","cmd","_expandData","_prevCmd","newData","dash","dashSum","nDash","bezierLen","tmpLen","xi","yi","fromLine","fromCubic","fromQuadratic","rx","ry","fromArc","ux","uy","dTheta","psi","fs","scaleX","scaleY","defaultKeyGetter","oldArr","newArr","oldKeyGetter","newKeyGetter","_old","_new","_oldKeyGetter","_newKeyGetter","initIndexMap","keyArr","keyGetterName","dataDiffer","existence","_add","_update","_remove","execute","newDataIndexMap","oldDataKeyArr","newDataKeyArr","unshift","origin","rangeStart","rangeEnd","getCoordSysModel","setRange","resetRange","toolbox","title","polygon","lineX","lineY","dataView","lang","dataZoom","zoom","back","magicType","bar","tiled","restore","saveAsImage","debugMode","ZImage","src","_image","createOrUpdateImage","sWidth","sHeight","drawImage","textHelper","normalizeTextStyle","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","needDrawText","renderText","getStroke","SymbolDraw","symbolCtor","_symbolCtor","symbolDrawProto","symbolNeedsDraw","isIgnore","updateData","oldData","_data","SymbolCtor","seriesScope","itemStyle","getItemStyle","hoverItemStyle","symbolRotate","symbolOffset","hoverAnimation","hoverLabelModel","cursorStyle","newIdx","symbolEl","oldIdx","fadeOut","enableAnimation","gridModel","getRect","xAxis","yAxis","grid","getPathToRoot","parentNode","reverse","retrieveTargetInfo","root","tree","targetNode","contains","targetNodeId","getNodeById","aboveViewRoot","viewRoot","viewPath","wrapTreePathInfo","treePathInfo","nodeDataIndex","getSpanSign","handleEnds","handleIndex","sign","restrict","minSpan","maxSpan","extentSpan","originalDistSign","extentMinSpan","realExtent","currDistSign","axisTrigger","link","coordSysAxesInfo","collect","helper","AxisProxy","eachAxisDim","retrieveRaw","updateRangeUse","dataZoomModel","rawOption","rangePropMode","_rangePropMode","rangeModeInOption","percentSpecified","valueSpecified","xAxisIndex","yAxisIndex","filterMode","startValue","endValue","minValueSpan","maxValueSpan","rangeMode","_dataIntervalByAxis","_dataInfo","_axisProxies","_autoThrottle","doInit","realtime","_setDefaultThrottle","_resetTarget","_giveAxisProxies","axisProxies","eachTargetAxis","dimNames","axisIndex","axisProxy","__dzAxisProxy","autoMode","_judgeAutoMode","axisIndexName","_autoSetAxisIndex","_autoSetOrient","hasIndexSpecified","autoAxisIndex","singleAxisIndex","axisIndices","axisModels","_isSeriesHasAllAxesTypeOf","axisId","is","seriesAxisIndex","globalOption","animationDurationUpdate","getFirstTargetAxisModel","firstAxisModel","getAxisProxy","getAxisModel","setRawRange","ignoreUpdateRangeUsg","getPercentRange","findRepresentativeAxisProxy","getDataPercentWindow","getValueRange","axisDimName","getDataValueWindow","hostedBy","getRangePropMode","getTargetCoordInfo","coordSysLists","coordModel","store","coordIndex","save","guid","Handler","Storage","Painter","Animation","HandlerProxy","useVML","painterCtors","ZRender","rendererType","vml","handerProxy","getViewportRoot","stage","_needsRefresh","oldDelFromStorage","delFromStorage","oldAddToStorage","addToStorage","removeSelfFromZr","addSelfToZr","addRoot","delRoot","zLevel","config","_needsRefreshHover","refreshHoverImmediately","refreshHover","clearHover","clearAnimation","pathToImage","setCursorStyle","findHover","eventHandler","getInstance","registerPainter","Element","_children","__storage","children","childOfName","_doAdd","addBefore","nextSibling","addChildrenToStorage","delChildrenFromStorage","includeChildren","tmpRect","tmpMat","invisible","childRect","Style","RectText","__clipPaths","draggable","dragging","culling","cursor","afterBrush","rectContain","animateStyle","useStyle","roundRectHelper","VALID_TEXT_ALIGN","center","VALID_TEXT_VERTICAL_ALIGN","middle","normalizeStyle","textBaseline","applyTextRotation","textOrigin","placeToken","hostEl","lineTop","needDrawBackground","drawBackground","getTextXForPadding","setCtx","getFill","strokeText","fillText","isPlainBg","onBgImageLoaded","getBoxPosition","blockHeiht","baseX","baseY","maxValue","lastIndexOf","__textCotentBlock","boxPos","boxX","boxY","xLeft","xRight","tokenCount","usedWidth","lineXLeft","lineXRight","drawRichText","renderRichText","textX","textY","needDrawBg","renderPlainText","Gradient","addColorStop","setting","_setting","_interval","getSetting","unionExtent","unionExtentFromData","thisExtent","_isBlank","roundNumber","_intervalPrecision","_niceExtent","getIntervalPrecision","intervalScaleGetTicks","niceTicks","intervalScaleNiceTicks","intervalPrecision","niceTickExtent","expandSize","findLabelValueDim","getScale","symbolProto","driftSymbol","drift","_createSymbol","_symbolType","stopSymbolAnimation","toLastFrame","getSymbolPath","setZ","setDraggable","getSymbolSize","_updateCommon","fadeIn","_seriesModel","normalStyleAccessPath","emphasisStyleAccessPath","normalLabelAccessPath","emphasisLabelAccessPath","elStyle","symbolInnerColor","useNameLabel","valueDim","onEmphasis","ratio","onNormal","keepLabel","axisDefault","AXIS_TYPES","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","registerSubTypeDefaulter","checkPropInLink","linkPropValue","axisPropValue","getAxisInfo","makeKey","isHandleTrigger","seriesInvolved","coordSysMap","globalTooltipModel","globalAxisPointerModel","linksOption","linkGroups","axisPointerEnabled","coordSysKey","axesInfoInCoordSys","coordSysModel","baseTooltipModel","getAxes","saveTooltipAxisInfo","getTooltipAxes","triggerAxis","cross","tooltipAxes","baseAxes","otherAxes","fromTooltip","triggerTooltip","axisPointerShow","snap","tooltipAxisPointerModel","volatileOption","field","labelOption","crossStyle","makeAxisPointerModel","involveSeries","axisInfo","useHandle","seriesModels","groupIndex","linkOption","getLinkGroupIndex","linkGroup","mapper","collectAxesInfo","seriesTooltipTrigger","seriesTooltipShow","getAxis","seriesDataCount","collectSeriesInfo","legendModels","findComponents","eachSeriesByType","isSelected","Geo","resizeGeo","geoModel","boundingCoords","leftTop","rightBottom","setBoundingRect","boxLayoutOption","viewWidth","viewHeight","aspectScale","useCenterAndSize","viewRect","getBoxLayoutParams","setViewRect","setCenter","setZoom","setGeoCoords","geoCoord","addGeoCoord","geoCreator","geoList","mapData","zoomLimit","geoIndex","mapModelGroupBySeries","getHostGeoModel","mapType","getMapType","mapSeries","nameMapList","singleMapSeries","getFilledRegions","originRegionArr","nameMap","regionsArr","dataNameMap","eventTool","interactionMutex","RoamController","pointerChecker","_opt","mousedownHandler","mousedown","mousemoveHandler","mousemove","mouseupHandler","mouseup","mousewheelHandler","mousewheel","pinchHandler","pinch","setPointerChecker","enable","controlType","disable","zoomOnMouseWheel","moveOnMouseMove","preventDefaultMouseMove","isDragging","_dragging","isPinching","_pinching","_x","_y","checkKeyBinding","gestureEvent","isTaken","oldX","oldY","zoomDelta","pinchScale","pinchX","pinchY","zoomX","zoomY","roamController","WhiskerBoxDraw","seriesModelMixin","_baseAxisDim","addOrdinal","coordDims","baseAxisDimIndex","baseAxisDim","otherAxisDim","defaultValueDimensions","viewMixin","whiskerBoxDraw","_whiskerBoxDraw","getStyleUpdater","buildLabelElOption","elOption","labelPos","getValueLabel","paddings","textRect","align","verticalAlign","confineInContainer","bgColor","seriesDataIndices","seriesData","idxItem","dataParams","getTransformedPosition","layoutInfo","buildElStyle","axisPointerType","styleModel","getAreaStyle","buildCartesianSingleLabelElOption","textLayout","makeLineShape","xDimIndex","makeRectShape","xy","wh","makeSectorShape","r0","clockwise","hasKeys","createVisualMappings","stateList","supplementVisualOption","visualMappings","Creater","mappings","__hidden","visualData","mappingOption","__alphaForOpacity","replaceVisualOption","keys","getValueState","visualTypesMap","eachItem","valueOrIndex","rawDataItem","visualMap","valueState","mIdentity","transformableProto","parentHasTransform","invTransform","tmpTransform","atan2","transformCoordToGlobal","DEFAULT_MIN_MERGE","DEFAULT_MIN_GALLOPING","makeAscendingRun","lo","hi","compare","runHi","reverseRun","binaryInsertionSort","pivot","gallopLeft","hint","lastOffset","maxOffset","gallopRight","TimSort","runStart","runLength","minGallop","stackSize","mergeAt","start1","length1","start2","length2","cursor1","cursor2","dest","count1","count2","exit","_minGallop","mergeLow","customCursor","customDest","mergeHigh","mergeRuns","forceMergeRuns","pushRun","_runStart","_runLength","remaining","ts","minRun","minRunLength","globalImageCache","imageOnLoad","cachedImgObj","__cachedImgObj","pending","pendingWrap","cbPayload","newImageOrSrc","__zrImageSrc","PI2","extremity","xDim","yDim","fromPoints","tx","ty","vec2Min","vec2Max","DELIMITER","random","subTypeDefaulters","defaulter","determineSubType","componentTypeMain","dependencyGetter","createDependencyGraphItem","graph","predecessor","successor","topologicalTravel","targetNameList","fullNameList","noEntryList","thisItem","availableDeps","originalDeps","dep","getAvailableDependencies","entryCount","dependentName","thatItem","makeDepndencyGraph","targetNameSet","currComponentType","currVertex","isInTargetNameSet","removeEdgeAndAdd","removeEdge","succComponentType","Component","componentProto","dataToPoint","Cartesian2D","Axis2D","isAxisUsedInTheGrid","Grid","_coordsMap","_coordsList","_axesMap","_axesList","_initCartesian","gridProto","fixAxisOnZero","axesMap","axes","onZero","onZeroAxisIndex","otherAxis","canNotOnZeroToAxis","_updateScale","ignoreContainLabel","gridRect","axesList","adjustAxes","coordBase","axisExtentSum","toGlobalCoord","toLocalCoord","updateAxisTransfrom","labelUnionRect","rotateRadians","boundingBox","beforeWidth","beforeHeight","afterWidth","afterHeight","axisLabelModel","labelCount","isLabelIgnored","unrotatedSingleRect","singleRect","getLabelUnionRect","axesMapOnDim","getCartesian","coordList","getCartesians","_findConvertTarget","cartesian","coordsList","axisPositionUsed","axesCount","createAxisCreator","axisPosition","addAxis","isCartesian2D","findAxesModels","baseAxis","getOtherAxis","axesTypes","grids","STACK_PREFIX","getSeriesStackId","getAxisKey","doCalBarWidthAndOffset","seriesInfoList","columnsMap","seriesInfo","axisKey","bandWidth","columnsOnAxis","remainedWidth","autoWidthCount","categoryGap","stacks","stackId","barWidth","barMaxWidth","barGap","barCategoryGap","barGapPercent","autoWidth","column","lastColumn","widthSum","barLayoutGrid","barSeries","barWidthAndOffset","getSeriesByType","lastStackCoords","lastStackCoordsOrigin","columnLayoutInfo","columnOffset","columnWidth","valueAxis","barMinHeight","valueAxisStart","getGlobalExtent","lastCoord","lastCoordOrigin","getLayoutOnAxis","widthAndOffsets","offsetCenter","updateSelectedMap","targetList","_targetList","_selectTargetMap","targetMap","select","selected","unSelect","toggleSelected","paletteScope","dataAll","idxMap","filteredIdx","singleDataColor","IRRELEVANT_EXCLUDES","onIrrelevantElement","targetCoordSysModel","topTarget","LineGroup","isPointNaN","pt","lineNeedsDraw","pts","LineDraw","_ctor","lineDrawProto","lineData","oldLineData","_lineData","LineCtor","hoverLineStyle","lineGroup","symbolUtil","LinePath","SYMBOL_CATEGORIES","makeSymbolTypeKey","symbolCategory","setLinePoints","targetShape","cp1","cpx1","cpy1","_createLine","lineProto","beforeUpdate","symbolFrom","symbolTo","invScale","fromPos","pointAt","toPos","tangent","tangentAt","__position","halfPercent","cp","__verticalAlign","__textAlign","createLine","_updateCommonStl","linePoints","visualColor","visualOpacity","defaultLabelColor","normalText","emphasisText","showLabel","hoverShowLabel","rawVal","labelStyle","linePath","COVER_Z","UNSELECT_THRESHOLD","MIN_RESIZE_LINE_WIDTH","MUTEX_RESOURCE_KEY","DIRECTION_MAP","CURSOR_MAP","ne","sw","nw","se","DEFAULT_BRUSH_OPT","brushStyle","transformable","brushMode","removeOnClick","baseUID","BrushController","_brushType","_brushOption","_panels","_track","_covers","_creatingCover","_creatingPanel","_enableGlobalPan","_uid","_handlers","mouseHandlers","createCover","controller","brushOption","cover","coverRenderers","brushType","__brushOption","endCreating","creatingCover","coverRenderer","getCoverRenderer","updateCoverShape","updateCoverAfterCreation","updateCommon","getPanelByPoint","localCursorPoint","panel","panels","pn","isTargetByCursor","getPanelByCover","panelId","clearCovers","covers","originalLength","areas","isEnd","getTrackEnds","track","tail","createBaseRectCover","doDrift","edgeNames","makeStyle","ondragend","updateBaseRect","localRange","handleSize","xa","ya","x2a","y2a","widtha","heighta","updateRectShape","mainEl","globalDir","getGlobalDirection","localDirection","xmin","ymin","xmax","ymax","clipByPanel","formatRectRange","driftRect","toRectRange","fromRectRange","rectRange","localDelta","toLocalDelta","namePart","ind","driftPolygon","thisGroup","localD","localZero","clipPath","rawE","mainShapeContain","updateCoverByMouse","eventParams","thisBrushOption","shouldShowCover","determineBrushType","getCreatingRange","defaultBrushType","enableBrush","release","take","doEnableBrush","setPanels","panelOpts","mount","enableGlobalPan","eachCover","updateCovers","brushOptionList","tmpIdPrefix","oldCovers","newCovers","getKey","addOrUpdate","oldIndex","newIndex","newBrushOption","unmount","handleDragEnd","currPanel","resetCursor","getLineRenderer","localTrack","ends","xyIndex","otherExtent","getLinearBrushOtherExtent","throttleUtil","BaseAxisPointer","animationModel","moveAnimation","propsEqual","lastProps","newProps","equals","lastProp","updateLabelShowHide","labelEl","getHandleTransProps","trans","updateMandatoryProps","_group","_lastGraphicKey","_handle","_lastValue","_lastStatus","_payloadInfo","animationThreshold","_axisModel","_axisPointerModel","handle","hide","makeElOption","graphicKey","_moveAnimation","determineAnimation","doUpdateProps","updatePointerEl","updateLabelEl","createPointerEl","createLabelEl","_renderHandle","isCategoryAxis","useSnap","pointerOption","pointer","pointerEl","updateHandleTransform","handleModel","onmousemove","onmousedown","_onHandleDragMove","_onHandleDragEnd","_moveHandleToValue","getHandleTransform","_doDispatchAxisPointer","payloadInfo","cursorPoint","tooltipOption","axisDim","doClear","buildLabel","Polar","_axisHelper","updatePolarScale","angleAxis","getAngleAxis","radiusAxis","getRadiusAxis","setAxis","polarCreator","polarList","resizePolar","COORDS","createNameEach","attrs","capitalNames","capitalAttrs","nameObj","capital","isCoordSupported","coordType","createLinkedNodesFinder","forEachNode","forEachEdgeType","edgeIdGetter","sourceNode","existsLink","nodes","records","edgeType","absorb","processSingleNode","isNodeAbsorded","hasLink","edgeId","isLinked","fillLabel","MarkerModel","createdBySelf","hostSeries","__hostSeries","newOpt","modelPropName","markerOpt","markerModel","html","markerTypeCalculatorWithExtent","mlType","otherDataDim","targetDataDim","otherCoordIndex","targetCoordIndex","coordArr","numCalculate","valueAxisDim","markerTypeCalculator","average","valueIndex","valueDataDim","baseDataDim","dataTransform","hasXAndY","dataFilter","hasXOrY","markerGroupMap","__keep","markerModelKey","renderSeries","arrayJoin","NONE","mathRound","degree","round4","svgEl","bindStyle","isText","pathHasFill","pathHasStroke","lineJoin","miterLimit","svgPath","__svgEl","pathStr","dataLength","cmdStr","nData","dThetaPositive","isCircle","large","pathDataToString","svgTextDrawRectText","svgImage","HTMLImageElement","dw","dh","__imageSrc","setAttributeNS","attrXLink","svgText","textSvgEl","__textSvgEl","transformText","getVerticalAlignForSvg","newPos","nTextLines","textAnchor","__text","__textFont","tspanList","__tspanList","tspan","innerHTML","appendChild","createTextNode","removeChild","svgURI","createElementNS","defineProperty","_echarts2","_interopRequireDefault","_core2","__esModule","default","EchartsReact","_Core","instance","Constructor","TypeError","_classCallCheck","_this","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","echartsInstance","subClass","enumerable","writable","configurable","setPrototypeOf","_inherits","_echarts","_export","idStart","Animatable","afterUpdate","setClipPath","removeClipPath","animators","addAnimator","removeAnimator","Clip","arraySlice","defaultGetter","defaultSetter","interpolateNumber","interpolateString","interpolateArray","arrDim","len2","fillArr","arr0","arr1","arr0Len","arr1Len","isArraySame","catmullRomInterpolateArray","catmullRomInterpolate","v0","cloneValue","rgba2String","createTrackClip","animator","easing","oneTrackDone","keyframes","forceAnimate","_getter","_setter","useSpline","trackLen","trackMaxTime","firstVal","isValueArray","isValueColor","isValueString","lastValue","getArrayDim","kfPercents","kfValues","prevValue","isAllValueEqual","colorArray","_target","lastFrame","lastFramePercent","clip","life","_loop","_delay","onframe","frame","ondestroy","Animator","_tracks","_clipCount","_doneList","_onframeList","_clipList","when","tracks","during","pause","_paused","resume","isPaused","_doneCallback","doneList","lastClip","clipCount","addClip","oldOnFrame","forwardToLast","clipList","removeClip","done","getClips","LinkedList","head","linkedListProto","insert","entry","Entry","insertEntry","maxSize","_list","_map","_maxSize","_lastRemovedEntry","LRUProto","removed","leastUsedEntry","STYLE_COMMON_PROPS","createLinearGradient","createRadialGradient","styleProto","blend","prevStyle","firstDraw","globalAlpha","globalCompositeOperation","otherStyle","newStyle","canvasGradient","Pattern","repeat","createPattern","requestAnimationFrame","msRequestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","r1","r2","r3","r4","total","_l","_a","normalizeRadian","dir","shadowTemp","orignalBrush","modified","clipPaths","smoothSpline","smoothBezier","smooth","controlPoints","smoothConstraint","cp2","globalCoord","colorIdx","colorNameMap","colorPalette","format","_throttle","ecHelper","_List","_Model","_Axis","_env","_parseGeoJson","parseGeoJson","ecUtil","util","fixExtent","Region","decodePolygon","coordinate","encodeOffsets","encodeScale","prevX","prevY","json","UTF8Encoding","UTF8Scale","geometry","coordinates","c2","decode","featureObj","geometries","exterior","interiors","region","polygonContain","MAX_NUMBER","loopGeo","transformTo","windingLine","isAroundEqual","labelDims","fixClipWithShadow","v2Copy","cp0","isPointNull","drawSegment","segLen","allLen","smoothMin","smoothMax","smoothMonotone","connectNulls","prevIdx","nextIdx","nextP","ratioNextSeg","prevP","lenPrevSeg","lenNextSeg","getBoundingBox","ptMin","ptMax","stackedOnPoints","stackedOnSmooth","stackedOnBBox","axisModelCreator","axisModelCommonMixin","AxisModel","gridIndex","gridId","getAxisType","extraOption","nameRotate","nameTruncate","nameTextStyle","nameGap","axisTick","inside","axisLabel","splitLine","splitArea","areaStyle","categoryAxis","timeAxis","logAxis","logBase","rawAxisPosition","rectBound","axisOffset","posBound","onZeroCoord","labelInside","createListFromArray","getMarkerPosition","legendHoverLink","barMinAngle","fixPosition","labelPositionOutside","setLabel","actionInfos","TransformDummy","View","_roamTransform","_viewTransform","_center","_zoom","doConvert","_viewRect","viewTransform","_updateTransform","centerCoord","_updateCenterAndZoom","getDefaultCenter","rawRect","getCenter","getZoom","getRoamTransform","viewTransformMatrix","roamTransform","defaultCenter","getViewRect","getViewRectAfterRoam","roamHelper","getFixedItemStyle","areaColor","updateMapSelected","mapOrGeoModel","otherRegionEl","__regions","MapDraw","updateGroup","_controller","_controllerHost","_updateGroup","_mouseDownFlag","draw","fromView","isGeo","groupNewProp","itemStyleAccessPath","hoverItemStyleAccessPath","labelAccessPath","hoverLabelAccessPath","regions","regionGroup","compoundPath","paths","itemStyleModel","regionModel","getRegionModel","hoverItemStyleModel","isDataNaN","itemLayout","_updateController","mapDraw","updateMapSelectHandler","controllerHost","makeActionBase","updateViewOnPan","mouseX","mouseY","updateViewOnZoom","ATTR","getStore","resourceKey","userKey","newZoom","zoomMin","zoomMax","zoomScale","updateCenterAndZoom","seriesGroup","previousZoom","fixX","fixY","linkList","TreeNode","hostTree","depth","viewChildren","Tree","levelOptions","leavesOption","_nodes","levelModels","levelDefine","leavesModel","isRemoved","eachNode","order","suppressVisitSub","updateDepthAndHeight","getAncestors","includeSelf","ancestors","getValue","levelModel","getLevelModel","isExpand","getLeavesModel","getNodeByDataIndex","getNodeByName","clearLayouts","createTree","dataRoot","treeOptions","levels","leaves","listData","dimMax","buildHierarchy","dataNode","addChild","mainData","struct","structAttr","DATAS","MAIN_DATA","transferInjection","datas","linkAll","linkSingle","changeInjection","cloneShallowInjection","datasAttr","nextRight","hierNode","thread","nextLeft","nextAncestor","nodeInLeft","moveSubtree","wl","wr","change","modifier","prelim","defaultSeparation","node1","node2","defaultAncestor","firstWalk","separation","siblings","subtreeW","executeShifts","midPoint","subtreeV","nodeOutRight","nodeInRight","nodeOutLeft","sumOutRight","sumInRight","sumOutLeft","sumInLeft","apportion","secondWalk","nodeX","radialCoordinate","radialCoor","_traversalHelper","eachAfter","eachBefore","_layoutHelper","sep","virtualRoot","realRoot","kx","ky","coorX","coorY","finalCoor","rawX","rawY","Graph","edges","directed","beforeLink","addNode","linkNameList","validEdges","linkCount","addEdge","nodeData","coordSysCtor","edgeData","simpleLayoutEdge","eachEdge","curveness","simpleLayout","getGraph","circularLayout","unitAngle","x12","y12","parallelPreprocessor","parallelModel","handlers","_throttledDispatchExpand","_dispatchExpand","checkTrigger","_mouseDownPoint","mouseDownPoint","getSlidedAxisExpandWindow","behavior","axisExpandWindow","triggerOn","Parallel","graphicUtil","normalizeRect","makeRectPanelClipPath","localPoints","makeLinearBrushOtherExtent","specifiedXYIndex","brushWidth","makeRectIsTargetByCursor","targetModel","keysFunction","sortKeysFunction","sortKeys","entries","entriesMap","mapObject","sortKeyFunction","keyFunction","valuesByKey","keyValue","curveUtil","EffectLine","_updateEffectSymbol","effectLineProto","effectModel","_updateEffectAnimation","period","constantSpeed","delayExpr","isDelayFunc","updateAnimationPoints","getLineLength","_period","__t","updateSymbolPosition","__p1","__cp1","__p2","_createPolyline","polylineProto","positionMap","horizontal","vertical","onLeave","record","doEnter","currTrigger","useHandler","dis","pendings","showTip","hideTip","makeDispatchAction","actuallyPayload","showLen","hideLen","dispatchTooltipFinally","initialized","initGlobalListeners","unregister","viewHelper","cartesianAxisHelper","CartesianAxisPointer","pixelValue","pointerShapeBuilder","currPosition","cursorOtherValue","getAxisDimIndex","shadow","LegendModel","_updateData","legendData","hasSelected","availableNames","getSeries","_availableNames","borderColor","borderRadius","borderWidth","itemGap","itemWidth","itemHeight","inactiveColor","selectedMode","makeBackground","layoutUtil","newlineDisabled","_contentGroup","_backgroundEl","getContentGroup","legendModel","resetInner","itemAlign","renderInner","viewportSize","mainRect","layoutInner","layoutRect","contentGroup","legendDrawnMap","selectMode","getSeriesByName","legendSymbolType","_createItem","dispatchSelectAction","dispatchHighlightAction","dispatchDownplayAction","eachRawSeries","itemGroup","itemIcon","tooltipModel","legendGlobalTooltipModel","hitRect","legendIndex","__legendDataIndex","contentRect","dataName","layoutBox","boxLayoutParams","brushHelper","COORD_CONVERTS","INCLUDE_FINDER_MAIN_TYPES","BrushTargetManager","targetInfoList","_targetInfoList","info","foundCpts","targetInfoBuilders","builder","include","formatMinMax","minMax","setOutputRanges","matchOutputRanges","area","coordRange","coordRanges","coordConvert","__rangeOffset","diffProcessor","xyMinMax","targetInfo","findTargetInfo","coordSyses","setInputRanges","xyMinMaxCurr","xyMinMaxOrigin","sizeCurr","sizeOrigin","scales","rangeOffset","getSize","makePanelOpts","getDefaultBrushType","getPanelRect","controlSeries","areaPanelId","targetInfoMatchers","xAxisModels","yAxisModels","gridModels","gridModelMap","xAxesHas","yAxesHas","cartesians","panelRectBuilder","xAxisDeclared","yAxisDeclared","geoModels","axisConvert","to","rangeOrCoordRange","xminymin","xmaxymax","axisNameIndex","axisDiffProcessor","refer","resetSingleAxis","reset","filterSingleAxis","filterData","percentRange","valueRange","linkedNodesFinder","effectedModels","pieces","splitList","calculable","visualSolution","getColorVisual","visualMapModel","targetVisuals","resultVisual","mapping","eachTargetSeries","getDataDimension","processSingleVisualMap","visualMetaList","isTargetSeries","visualMeta","getVisualMeta","stops","outerColors","prepareVisualMeta","visualDefault","DEFAULT_COLOR","replacableOptionKeys","dataBound","inRange","outOfRange","contentColor","textGap","_dataExtent","controllerVisuals","itemSize","resetItemSize","completeVisualOption","resetVisual","getTargetSeriesIndices","optionSeriesIndex","seriesIndices","formatValueText","edgeSymbols","isMinMax","textValue","resetExtent","optDim","completeSingle","defa","stateExist","stateAbsent","optExist","optAbsent","symbolExists","symbolSizeExists","visuals","setSelected","active","inactive","autoPositionValues","doRender","renderBackground","getControllerVisual","targetValue","visualCluster","forceState","visualObj","visualMapping","convertOpacityToAlpha","positionGroup","getItemAlign","modelOption","ecSize","realIndex","paramsSet","reals","fakeValue","layoutInput","rParam","convertDataIndex","giveStore","newSnapshot","dataZoomId","snapshot","doCreateNode","urn","win","vmlInited","doc","namespaces","zrvml","tagName","createNode","initVML","styleSheets","createStyleSheet","addRule","ZText","_graphic","Definable","svgRoot","tagNames","markLabel","_svgRoot","_tagNames","_markLabel","nextId","getDefs","isForceCreating","defs","getElementsByTagName","insertBefore","firstChild","element","onUpdate","addDom","removeDom","getDoms","doms","tags","markAllUnused","that","markUsed","removeUnused","getSvgProxy","displayable","getTextSvgElement","getSvgElement","Draggable","SILENT","EmptyProxy","handlerNames","proxy","painterRoot","_hovered","_lastTouchMoment","_lastX","_lastY","isHover","lastHovered","lastHoveredTarget","hovered","hoveredTarget","setCursor","dispatchToElement","mouseout","innerDom","toElement","relatedTarget","dispatch","eventArgs","eventPacket","eveType","makeEventPacket","eachOtherLayer","layer","exclude","hoverCheckResult","_downEl","_downPoint","_upEl","_dragStart","_drag","_dragEnd","draggingTarget","_draggingTarget","dropTarget","lastDropTarget","_dropTarget","shapeCompareFunc","_roots","_displayList","_displayListLen","includeIgnore","updateDisplayList","displayList","_updateAndAddDisplayable","userSetClipPath","currentClipPath","parentClipPath","_renderList","displayableSortFunc","animatingShape","pathSplitted","_animateToShallow","objShallow","propertyCount","easingFuncs","_life","_initialized","onrestart","_pausedTime","globalTime","deltaTime","_startTime","easingFunc","schedule","fire","restart","_needsRemove","arg","quadraticIn","quadraticOut","quadraticInOut","cubicIn","cubicOut","cubicInOut","quarticIn","quarticOut","quarticInOut","quinticIn","quinticOut","quinticInOut","sinusoidalIn","sinusoidalOut","sinusoidalInOut","exponentialIn","exponentialOut","exponentialInOut","circularIn","circularOut","circularInOut","elasticIn","elasticOut","elasticInOut","backIn","backOut","backInOut","bounceIn","bounceOut","bounceInOut","Layer","parseInt10","preProcessLayer","__unusedCount","postProcessLayer","singleCanvas","nodeName","_opts","_singleCanvas","rootStyle","zlevelList","_zlevelList","layers","_layers","_layerConfig","_width","_height","mainLayer","initContext","_domRoot","_getSize","domRoot","cssText","createRoot","_progressiveLayers","_hoverlayer","_hoverElements","getViewportRootOffset","viewportRoot","offsetLeft","offsetTop","paintAll","_paintList","__builtin__","_startProgessive","__hoverMir","elMirror","__from","hoverElements","hoverLayer","getLayer","originalEl","_doPaintEl","_furtherProgressive","_progressiveToken","_progress","_doPaintList","_clearProgressive","_updateLayerStatus","eachBuiltinLayer","currentLayer","currentZLevel","currentProgressiveLayer","layerProgress","progressiveLayerIdx","flushProgressiveLayer","elZLevel","elFrame","__frame","MAX_PROGRESSIVE_LAYER_NUMBER","renderScope","__progress","__maxProgress","__nextIdxNotProg","forcePaint","isDisplayableCulled","prevClipLayer","prevClipPaths","isClipPathChanged","prevElClipPaths","doClip","insertLayer","layersMap","prevLayer","isLayerValid","virtual","prevDom","eachLayer","getLayers","progressiveLayers","elCountsLastFrame","progressiveElCountsLastFrame","lastProgressiveKey","progressiveLayerCount","frameCount","elProgress","_clearLayer","layerConfig","delLayer","display","clearLayer","imageLayer","findAndDrawOtherLayer","smaller","larger","intermediateLayer","renderToCanvas","whIdx","cwh","plt","prb","stl","defaultView","getComputedStyle","shadowBlurSize","leftMargin","rightMargin","topMargin","bottomMargin","clearRect","pathTransform","imgShape","returnFalse","createDom","newDom","newDomStyle","domStyle","onselectstart","domBack","ctxBack","motionBlur","lastFrameAlpha","__currentValues","createBackBuffer","clearAll","clearColorGradientOrPattern","haveMotionBLur","__canvasGradient","fillRect","_clips","_running","_time","_pauseStart","clips","deferredEvents","deferredClips","_startLoop","_event","GestureMgr","mouseHandlerNames","touchHandlerNames","pointerEventNames","pointerdown","pointerup","pointermove","pointerout","pointerHandlerNames","nm","eventNameFix","processGesture","gestureMgr","_gestureMgr","gestureInfo","recognize","setTouchTimer","_touching","_touchTimer","domHandlers","touchstart","touchmove","touchend","click","isPointerFromTouch","pointerType","HandlerDomProxy","mountHandlers","makeMouseHandler","handlerDomProxyProto","eventUtil","pointPair","_doTrack","_recognize","touches","trackItem","recognizers","pinchEnd","pinchPre","pinchCenter","globalDefault","colorPaletteMinin","OPTION_INNER_KEY","_optionManager","baseOption","mountOption","_seriesIndices","themeItem","timelineOption","getTimelineOption","mediaOptions","getMediaOption","mediaOption","componentsMap","newCptTypes","componentOption","newCptOptionList","existComponent","getComponentsByTypes","ComponentModelClass","createSeriesIndices","cpts","isIdArray","cpt","isNameArray","filterBySubType","q","indexAttr","idAttr","nameAttr","queryCond","components","queryResult","oneSeries","rawSeriesIndex","getCurrentSeriesIndices","filterSeries","filteredSeries","componentTypes","makeStyleMapper","getLineDash","lineType","dotSize","dashSize","PATH_COLOR","transformPath","cc","vMag","vRatio","u","vAngle","processArc","fa","psiDeg","xp","yp","lambda","cxp","cyp","createPathOptions","pathProxy","cs","RegExp","prevCmd","cpx","cpy","ctlPtx","ctlPty","createPathProxyFromString","pathEls","pathList","pathEl","pathBundle","cubic","quadratic","windingCubic","nRoots","y0_","y1_","nExtrema","unit","windingQuadratic","y_","windingArc","x_","containPath","isStroke","mathAtan2","nPoint","unitX","unitY","polyHelper","v2Distance","interpolate","isLoop","segs","w2","w3","v2Min","v2Max","v2Scale","v2Add","v2Clone","v2Sub","constraint","prevPoint","nextPoint","cps","d0","_curve","someVectorAt","isTangent","cpx2","cpy2","_updatePathDirty","getBorderLineDash","platform","animationDuration","animationEasingUpdate","progressiveThreshold","hoverLayerThreshold","useUTC","echartsAPIList","chartInstance","QUERY_REG","_timelineOptions","_mediaList","_mediaDefault","_currentMediaIndices","_optionBackup","_newBaseOption","applyMediaQuery","ecWidth","ecHeight","realMap","aspectratio","applicatable","matched","operator","realAttr","real","expect","oldOption","oldOptionBackup","newParsedOption","isNew","mediaDefault","timelineOptions","mediaList","timelineOpt","timeline","media","singleMedia","preProcess","newCptOpt","oldCptOpt","isRecreate","optionBackup","timelineModel","getCurrentIndex","indices1","indices2","compatStyle","compatLayoutProperties","LAYOUT_PROPERTIES","COMPATITABLE_COMPONENTS","COMPATITABLE_SERIES","isTheme","seriesOpt","clockWise","pointerColor","dataRange","componentName","POSSIBLE_STYLES","compatItemStyle","itemStyleOpt","normalItemStyleOpt","emphasisItemStyleOpt","compatTextStyle","labelOptSingle","compatLabelTextStyle","labelOpt","toArr","toObj","upperLabel","edgeLabel","markPoint","markLine","markArea","mpData","mlData","processSeries","axisOpt","parallel","parallelOpt","parallelAxisDefault","calendar","calendarOpt","radar","radarOpt","geoOpt","regionObj","colorAccessPath","maskColor","mask","labelRect","_completeDimensions","_symbol","createList","createScale","mixinAxisModelCommonMethods","scaleProto","rank","scaleHelper","intervalScaleProto","mathCeil","mathFloor","TimeScale","stepLvl","_stepLvl","ONE_HOUR","getFullYear","getMonth","getDate","approxTickNum","approxInterval","scaleLevelsLen","scaleLevels","bisect","yearSpan","timezoneOffset","getTimezoneOffset","ONE_SECOND","ONE_MINUTE","ONE_DAY","roundingErrorFix","mathLog","LogScale","_originalScale","originalScale","powVal","__fixMin","fixRoundingError","__fixMax","originalVal","visualSymbol","layoutPoints","dataSample","clipOverflow","showSymbol","showAllSymbol","sampling","lineAnimationDiff","_poly","isPointsSame","points1","points2","getSmooth","getAxisExtentWithGap","halfBandWidth","createClipShape","hasAnimation","radiusExtent","angleExtent","RADIAN","createPolarClipShape","xExtent","yExtent","createGridClipShape","turnPointsIntoStep","stepTurnAt","baseIndex","stepPoints","nextPt","stepPt","stepPt2","symbolDraw","_symbolDraw","_lineGroup","areaStyleModel","isCoordSysPolar","prevCoordSys","_coordSys","polyline","_polyline","_polygon","isAreaChart","valueStart","baseDataOffset","stackedOnSameSign","stackedData","getStackedOnPoints","isSymbolIgnore","_getSymbolIgnoreFunc","__temp","_step","_newPolygon","_stackedOnPoints","_points","_updateAnimation","_newPolyline","stopLen","minCoord","maxCoord","coordSpan","gradient","getVisualGradient","getAxesByScale","stackedOnCurrent","stackedOnNext","__points","updatedDataInfo","diffStatus","idx1","ptIdx","getStackedOnPoint","oldStackedOnPoints","newStackedOnPoints","oldCoordSys","newCoordSys","diffResult","diffData","currPoints","nextPoints","currStackedPoints","nextStackedPoints","sortedIndices","rawIndices","diffItem","pointAdded","currentPt","sortedCurrPoints","sortedNextPoints","sortedCurrStackedPoints","sortedNextStackedPoints","sortedStatus","samplers","nearest","indexSampler","sampler","Cartesian","axisX","axisY","dimAxisMapper","_axes","_dimList","_dataCoordConvert","input","dimList","output","coordExtent","containLabel","axisBuilderAttrs","selfBuilderAttrs","CartesianAxisView","oldAxisGroup","_axisGroup","_splitLine","splitLineModel","lineColors","lineInterval","lineCount","colorIndex","_splitArea","splitAreaModel","areaColors","areaInterval","brushSelector","barItemStyle","BAR_BORDER_WIDTH_QUERY","coordinateSystemType","_render","isHorizontalOrRadial","elementCreator","updateStyle","removeRect","removeSector","animateProperty","animateTarget","isRadial","sector","fixedLineWidth","rawLayout","getLineWidth","signX","signY","isPolar","getBarItemStyle","createDataSelectAction","dataColor","pieLayout","dataSelectableMixin","PieSeries","_defaultLabelLine","labelLine","labelLineNormalOpt","labelLineEmphasisOpt","minAngle","selectedOffset","hoverOffset","avoidLabelOverlap","percentPrecision","stillShowZeroSum","animationType","updateDataSelected","toggleItemSelected","midAngle","PiePiece","hoverIgnore","normalIgnore","piePieceProto","firstCreate","sectorShape","_updateLabel","labelText","labelHoverModel","labelLineModel","labelLineHoverModel","sectorGroup","_sectorGroup","isFirstRender","onSectorClick","piePiece","_createClipPath","validDataCount","unitRadian","roseType","restAngle","valueSumLargerThanMinAngle","currentAngle","adjustSingleSide","shiftDown","shiftUp","changeX","isDownList","lastDeltaX","deltaY","deltaX","lastY","upList","downList","labelLayoutList","hasLabelRotate","labelPosition","labelLineLen","labelLineLen2","isLabelInside","leftList","rightList","avoidOverlap","largeThreshold","LargeSymbolDraw","_normalSymbolDraw","_largeSymbolDraw","largeSymbolDraw","normalSymbolDraw","LargeSymbolPath","sizes","symbolProxy","symbolProxyShape","findDataIndex","_symbolEl","largeSymbolProto","radarLayout","IndicatorAxis","Radar","radarModel","_indicatorAxes","getIndicatorModels","indicatorModel","indicatorAxis","getIndicatorAxes","indicatorIndex","coordToPoint","closestAxis","minRadianDiff","closestAxisIdx","coodToData","viewSize","indicatorAxes","radarSeries","increaseInterval","rawExtent","fixedMin","fixedMax","halfSplitNumber","radarList","valueAxisDefault","defaultsShow","showName","nameFormatter","indicatorModels","indicatorOpt","iNameTextStyle","indName","indicator","_buildAxes","_buildSplitLineAndArea","axisBuilders","showSplitLine","showSplitArea","splitLineColors","splitAreaColors","splitLines","splitAreas","ticksRadius","getColorIndex","realSplitNumber","axesTicksPoints","prevPoints","areaOrLine","areaOrLineColorList","RadarSeries","radarIndex","normalizeSymbolSize","updateSymbols","oldPoints","newPoints","symbolGroup","__dimIdx","getInitialPoints","hoverAreaStyleModel","polygonIgnore","hoverPolygonIgnore","itemHoverStyle","pointsConverter","polarOptArr","polarNotRadar","polarOpt","polarIndex","mapSymbolLayout","mapDataStatistic","MapSeries","needsDrawMap","_fillOption","regionName","seriesNames","otherIndex","originalData","getRegion","showLegendSymbol","dataRangeHoverLink","scaleLimit","geoFixFuncs","_nameCoordMap","loadGeoJson","containCoord","regionsMap","specialArea","_regionsMap","fixFunc","getRegionByCoord","getGeoCoord","regionRect","coordsOffsetMap","南海诸岛","广东","香港","澳门","天津","coordFix","geoCoordMap","Russia","United States","United States of America","mapModel","_mapDraw","_renderSymbols","fullData","mainSeries","fullIndex","polygonGroups","__mapOriginalZ2","processedMapType","mapSymbolOffsets","subMapSeries","colorList","seriesGroups","hostGeoModel","seriesList","statisticType","mapKey","mapLocation","orthogonalLayout","radialLayout","treeOption","treeDepth","expandTreeDepth","expandAndCollapse","initialTreeDepth","collapsed","_oldTree","_mainGroup","curvature","updateNode","removeNode","getTreeNodeStyle","sourceSymbolEl","sourceLayout","sourceOldLayout","__radialOldRawX","__radialOldRawY","targetLayout","__radialRawX","__radialRawY","isLeft","rootLayout","__edge","getEdgeShape","radialCoor1","radialCoor2","radialCoor3","radialCoor4","commonLayout","treemapVisual","treemapLayout","_viewRoot","clipWindow","squareRatio","leafDepth","drillDownIcon","zoomToNodeRatio","roam","nodeClick","breadcrumb","emptyItemWidth","gapWidth","borderColorSaturation","visualDimension","visualMin","visualMax","colorMappingBy","visibleMin","childrenVisibleMin","completeTreeValue","childValue","thisValue","hasColorDefine","globalColorList","modelColor","level0","setDefault","resetViewRoot","setLayoutInfo","mapIdToIndex","idIndexMap","_idIndexMap","_idIndexMapCount","getViewRoot","Breadcrumb","animationUtil","PATH_LABEL_NOAMAL","PATH_LABEL_EMPHASIS","PATH_UPPERLABEL_NORMAL","PATH_UPPERLABEL_EMPHASIS","Z_BASE","Z_BG","Z_CONTENT","getItemStyleEmphasis","getItemStyleNormal","_containerGroup","nodeGroup","_breadcrumb","_state","thisStorage","reRoot","rootNodeGroup","containerGroup","_giveContainerGroup","renderResult","_doRender","renderFinally","_doAnimation","_resetController","_renderBreadcrumb","thisTree","oldTree","lastsForAnimation","oldStorage","willInvisibleEls","doRenderNode","renderNode","dualTravel","thisViewChildren","oldViewChildren","parentGroup","sameTree","processNode","thisNode","oldNode","willDeleteEls","storageName","delEls","__tmWillDelete","clearStorage","els","animationWrap","createWrap","__tmNodeWidth","__tmNodeHeight","targetX","targetY","last","old","fadein","_onPan","_onZoom","_clearController","rootRect","findTarget","isLeafRoot","_rootToNode","_zoomToNode","linkTarget","open","bgEl","thisLayout","isInView","thisWidth","thisHeight","thisInvisible","thisRawIndex","oldRawIndex","upperHeight","isParent","itemStyleNormalModel","itemStyleEmphasisModel","giveGraphic","isAboveViewRoot","bg","useUpperLabel","visualBorderColor","emphasisBorderColor","upperLabelWidth","prepareText","renderContent","__tmWillVisible","upperLabelRect","nodeModel","iconChar","normalLabelModel","emphasisLabelModel","isShow","lasts","prepareAnimationWhenHasOld","zInLevel","zb","calculateZ","__tmDepth","__tmStorageName","lastCfg","parentOldX","parentOldY","parentOldBg","prepareAnimationWhenNoOld","ARRAY_LENGTH","makeItemPoints","packEventData","itemNode","selfType","onSelect","normalStyleModel","layoutParam","totalWidth","renderList","_prepare","_renderContent","TEXT_PADDING","lastX","availableSize","onclick","doneCallback","elExistsMap","actionTypes","originViewRoot","ITEM_STYLE_NORMAL","calculateColor","getValueVisualDefine","getRangeVisual","seriesItemStyleModel","travelTree","designatedVisual","levelItemStyles","viewRootAncestors","nodeLayout","thisNodeColor","nodeItemStyleModel","levelItemStyle","visualName","buildVisuals","calculateBorderColor","rangeVisual","__drColorMappingBy","buildVisualMapping","childVisual","childVisuals","mappingType","PATH_BORDER_WIDTH","PATH_GAP_WIDTH","PATH_UPPER_LABEL_SHOW","PATH_UPPER_LABEL_HEIGHT","worst","row","rowFixedLength","areaMax","areaMin","squareArea","halfGapWidth","idx0WhenH","idx1WhenH","rowOtherLength","rowLen","wh1","remain","modWH","wh0","getUpperLabelHeight","seriesOption","viewAbovePath","rootSize","currNode","defaultSize","viewArea","currNodeValue","estimateRootSize","viewRootLayout","squarify","hideChildren","upperLabelHeight","layoutOffset","layoutOffsetUpper","totalArea","orderBy","overLeafDepth","statistic","orderedChildren","deletePoint","filterByThreshold","initChildren","best","score","treeRoot","defaultPosition","targetCenter","calculateRootPosition","prunning","clipRect","nodeInViewAbovePath","childClipRect","categoryFilter","categoryVisual","edgeVisual","forceLayout","createView","createGraphFromNodeEdge","GraphSeries","_categoriesData","links","_updateCategoriesData","categoriesModels","_categoriesModels","categoryIdx","categoryModel","edgeLabelModel","fakeSeriesModel","edgeGetParent","getEdgeData","getCategoriesData","getEdgeByIndex","sourceName","targetName","categoriesData","focusNodeAdjacency","circular","rotateLabel","initLayout","repulsion","gravity","edgeLength","layoutAnimation","edgeSymbol","edgeSymbolSize","nodeScaleRatio","generateNodeKey","_directed","_nodesMap","_edgesMap","graphProto","Node","inEdges","outEdges","hostGraph","Edge","n1","n2","isDirected","nodesMap","getNodeByIndex","edgesMap","getEdge","breadthFirstTraverse","startNode","__visited","queue","currentNode","otherNode","inDegree","outDegree","createGraphDataProxyMixin","hostName","getGraphicEl","adjustEdge","nodeOpacityPath","lineOpacityPath","getItemOpacity","opacityPath","fadeOutItem","opacityRatio","fadeInItem","lineDraw","_lineDraw","_firstRender","_nodeScaleRatio","_getNodeGlobalScale","_updateNodeAndLinkScale","_layoutTimeout","_startForceLayoutIteration","warmUp","_layouting","setFixed","setUnfixed","__focusNodeAdjacency","__unfocusNodeAdjacency","edgeDataIndex","circularRotateLabel","adjacentEdge","unfocusNodeAdjacency","stopped","nodeScale","groupScale","groupZoom","straightLineProto","bezierCurveProto","isLine","curveTool","v3","intersectCurveCircle","curvePoints","radiusSquare","nextDiff","tmp0","pts2","fromSymbol","toSymbol","__original","originalPoints","graphSeries","categoryNames","categoryNameIdxMap","colorQuery","opacityQuery","_simpleLayoutHelper","preservedPoints","forceModel","nodeDataExtent","edgeDataExtent","rep","forceInstance","oldStep","pp","friction","v12","nLen","repFact","coordSysType","positions","bbWidth","bbHeight","viewCoordSys","dataOpt","PointerPath","formatLabel","posInfo","parsePosition","_renderMain","angleRangeSpan","prevEndAngle","axisLineWidth","getColor","_renderTicks","_renderPointer","_renderTitle","_renderDetail","minVal","maxVal","subSplitNumber","splitLineLen","subStep","splitLineStyle","tickLineStyle","tickLine","valueExtent","pointerModel","titleModel","detailModel","funnelLayout","FunnelSeries","minSize","funnelAlign","FunnelPiece","funnelPieceProto","opacityAccessPath","funnelPiece","valueArr","isAscending","getSortedIndices","sizeExtent","getLinePoints","offY","parallelVisual","hasParallelSeries","createParallelIfNeeded","parallelAxis","axisOption","parallelIndex","parallelOption","mergeAxisOptionFromParallel","ParallelAxis","sliderMove","_axesLayout","_init","parallelAxisIndex","_updateAxesFromSeries","_makeLayoutInfo","axisBase","layoutBase","pixelDimIndex","pAxis","pLayout","axisLength","layoutLength","_layoutAxes","winSize","layoutExtent","axisCount","axisExpandWidth","axisExpandCount","axisExpandable","axisCollapseWidth","winInnerIndices","axisExpandWindow0Pos","positionTable","rotationTable","axisCoordToPoint","eachActiveState","hasActiveSet","hasAxisBrushed","activeState","getActiveState","axisLayout","getAxisLayout","pointCoord","triggerArea","useJump","axisExpandCenter","axisExpandRate","axisExpandDebounce","axisExpandSlideTriggerArea","axisExpandTriggerOn","_initDimensions","setAxisExpand","activeIntervals","getAreaSelectStyle","setActiveIntervals","intervals","areaSelectStyle","parallelAxisModel","elementList","_brushController","_onBrush","fromAxisAreaSelect","areaWidth","builderOpt","_refreshBrushController","getCoverInfoList","extentLen","coverInfoList","coverInfo","parallelAxisId","parallelAxisIndices","rawData","modelDims","maxDimNum","numberDim","convertDimNameToNumber","firstItem","generateDataDims","dataDimsInfo","modelDimsIndex","axisData","translateCategoryValue","getRawIndicesByActiveState","theActiveState","inactiveOpacity","activeOpacity","createLinePoints","_dataGroup","_renderForNormal","dataGroup","newDataIndex","addEl","oldDataIndex","seriesStyleModel","updateElCommon","rectEl","globalColors","opacityMap","itemOpacity","sankeyLayout","sankeyVisual","SankeySeries","rawDataOpt","nodeWidth","nodeGap","layoutIterations","SankeyShape","halfExtent","n1Layout","n2Layout","edgeLayout","nest","resolveCollisions","nodesByBreadth","ascendingDepth","nodeY","relaxRightToLeft","weightedTarget","getEdgeValue","relaxLeftToRight","weightedSource","ascendingTargetDepth","ascendingSourceDepth","ascending","computeNodeValues","iterations","remainNodes","nextNode","moveSinksRight","scaleNodeBreadths","computeNodeBreadths","kyArray","ky0","nodeDy","edgeDy","initializeNodeDepth","computeNodeDepths","computeEdgeDepths","layoutSankey","minValue","mapValueToColor","customColor","boxplotVisual","boxplotLayout","BoxplotSeries","boxWidth","WhiskerPath","WhiskerBox","styleUpdater","bodyIndex","whiskerIndex","_createContent","whiskerBoxProto","transInit","initBaseline","makeWhiskerEndsShape","whiskerEnds","constDim","chartLayout","bodyEnds","whiskerBoxDrawProto","BoxplotView","normalItemStyleModel","whiskerEl","bodyEl","borderColorQuery","defaulColor","groupResult","axisList","groupSeriesByAxis","groupItem","seriesCount","boxWidthList","boxOffsetList","boundList","maxDataCount","boxWidthBound","availableWidth","boxGap","calculateBase","cDim","halfWidth","variableDim","vDims","axisDimVal","median","getPoint","end1","end5","layEndLine","addBodyEnd","point1","point2","endCenter","layoutSingleSeries","preprocessor","candlestickVisual","candlestickLayout","CandlestickSeries","color0","borderColor0","barMinWidth","animationUpdate","getShadowDim","selectors","brushRect","CandlestickView","seriesItem","positiveBorderColorQuery","negativeBorderColorQuery","positiveColorQuery","negativeColorQuery","candleWidth","calculateCandleWidth","pmin","pmax","openVal","closeVal","lowestVal","highestVal","ocLow","ocHigh","ocLowPoint","ocHighPoint","lowestPoint","subPixelOptimizePoint","effectType","showEffectOn","rippleEffect","EffectSymbol","effectSymbolDraw","updateRipplePath","rippleGroup","effectCfg","ripplePath","effectSymbolProto","stopEffectAnimation","startEffectAnimation","effectOffset","rippleScale","updateEffectAnimation","oldEffectCfg","_effectCfg","DIFFICULT_PROPS","linesLayout","linesVisual","preprocessOption","fromName","toName","LinesSeries","effect","trailLength","EffectPolyline","LargeLineDraw","hasEffect","isPolyline","isLarge","_hasEffet","_isPolyline","_isLarge","isSvg","_lastZlevel","_lastFrame","_lastFramePercent","effectPolylineProto","accLenArr","_offsets","_length","offsets","lineContain","quadraticContain","LargeLineShape","seg","_lineEl","largeLineProto","lineEl","blurSize","pointSize","maxOpacity","minOpacity","HeatmapLayer","visualMapOfThisSeries","targetSeries","_renderOnCartesianAndCalendar","isGeoCoordSys","_renderOnGeo","dataToRect","contentShape","inRangeVisuals","outOfRangeVisuals","hmLayer","_hmLayer","lng","lat","isInRange","dataSpan","getIsInContinuousRange","getIsInPiecewiseRange","getPieceList","Heatmap","_gradientPixels","colorFunc","_getBrush","gradientInRange","_getGradient","gradientOutOfRange","imageData","getImageData","pixels","pixelLen","diffOpacity","gradientOffset","putImageData","brushCanvas","_brushCanvas","gradientPixels","pixelsSingleState","Uint8ClampedArray","PictorialBarSeries","symbolPosition","symbolMargin","symbolRepeat","symbolRepeatDirection","symbolClip","symbolBoundingData","symbolPatternSize","LAYOUT_ATTRS","posDesc","pathForLineWidth","getSymbolMeta","symbolMeta","boundingLength","zeroPx","pxSignIdx","symbolBoundingExtent","convertToCoordOnAxis","coordSysExtent","repeatCutLength","pxSign","prepareBarLength","categorySize","symbolScale","prepareSymbolSize","valueLineWidth","prepareLineWidth","unitLength","pathLen","absBoundingLength","hasEndGap","uLenWithMargin","endFix","repeatSpecified","repeatTimes","toIntTimes","mDiff","sizeFix","pathPosition","bundlePosition","barRectShape","clipShape","prepareLayoutInfo","createPath","createOrUpdateRepeatSymbols","bundle","__pictorialBundle","eachPath","__pictorialAnimationIndex","__pictorialRepeatTimes","updateAttr","makeTarget","updateHoverAnimation","onMouseOver","onMouseOut","createOrUpdateSingleSymbol","mainPath","__pictorialMainPath","createOrUpdateBarRect","rectShape","barRect","__pictorialBarRect","createOrUpdateClip","__pictorialClipPath","createBar","__pictorialShapeStr","getShapeStr","__pictorialSymbolMeta","removeBar","pathes","immediateAttrs","animationAttrs","barRectHoverStyle","barPositionOutside","times","roundedTimes","coordSysRect","pictorialShapeStr","updateBar","themeRiverLayout","themeRiverVisual","Single","singles","SingleAxis","_axis","_adjustAxis","_updateAxisTransform","extentSum","singleAxisHelper","SingleAxisView","selfBuilderAttr","modelHelper","findPointFromSeries","processOnAxis","newValue","updaters","dontSnap","outputFinder","snapToValue","payloadBatch","seriesNestestValue","nestestValue","buildPayloadsBySeries","showPointer","showTooltip","showValueMap","dataByCoordSys","coordSysItem","coordSysId","coordSysIndex","coordSysMainType","dataByAxis","valueLabelOpt","makeMapperParam","illegalPoint","isIllegalPoint","inputAxesInfo","shouldHide","coordSysContainsPoint","inputAxisInfo","findInputAxisInfo","linkTriggers","tarAxisInfo","tarKey","srcAxisInfo","srcKey","srcValItem","outputAxesInfo","valItem","updateModelActually","dispatchTooltipActually","lastHighlights","newHighlights","toHighlight","toDownplay","dispatchHighDownActually","shadowStyle","icon","globalListener","AxisPointerView","XY","WH","SingleAxisPointer","getPointDimIndex","ThemeRiverSeries","fixData","rawDataLength","dataByName","layData","dataList","layerNum","largestLayer","timeValue","keyIndex","getLayerSeries","lenCount","indexArr","layerSeries","comparer","index1","index2","nearestIdx","pointNum","theValue","htmlName","htmlValue","keyGetter","_layersSeries","newLayersGroups","oldLayersGroups","points0","layerGroup","baseY0","layerPoints","singleLayer","sums","temp","computeBaseline","baseLine","layerIndex","barGrid","prepareCartesian2d","prepareGeo","prepareSingleAxis","preparePolar","prepareCalendar","ITEM_STYLE_NORMAL_PATH","ITEM_STYLE_EMPHASIS_PATH","LABEL_NORMAL","LABEL_EMPHASIS","GROUP_DIFF_PREFIX","prepareCustoms","prepareStyleTransition","targetStyle","elOptionStyle","oldElStyle","doCreateOrUpdate","elOptionType","__customGraphicType","__customPathData","__customImagePath","__customText","graphicType","Clz","createEl","targetProps","targetOpacity","styleEmphasis","updateEl","oldChildren","newChildren","diffChildrenByName","processAddUpdate","processRemove","childOption","customSeries","renderItem","prepareResult","currDataIndexInside","currItemModel","currLabelNormalModel","currLabelEmphasisModel","currLabelValueDim","currVisualColor","userAPI","updateCache","barLayout","currentSeriesIndices","userParams","dataInsideLength","dataDimIndex","wrapEncodeDef","currDirty","makeRenderItem","dataToCoordSize","dataSize","halfSize","dataToRadius","dataToAngle","rangeInfo","getRangeInfo","cellWidth","getCellWidth","cellHeight","getCellHeight","weeks","dayCount","allDay","graphicOption","elements","GraphicModel","parentId","_elOptionsToUpdate","existList","flattenedList","_flatten","mappingResult","elOptionsToUpdate","newElOption","existElOption","newElParentOption","parentOption","setKeyInfoToNewElOption","newElOptCopy","$action","mergeNewElOptionToExist","existItem","isSetLoc","setLayoutInfoToExist","optionList","useElOptionsToUpdate","targetElParent","__ecGraphicId","removeEl","existEl","existElParent","isSet","_elMap","_lastGraphicModel","graphicModel","_clear","_updateElements","_relocate","rootGroup","elOptionCleaned","getCleanedElOption","__ecGraphicWidth","__ecGraphicHeight","elOptions","parentEl","containerInfo","bounding","legendFilter","legendSelectActionHandler","selectedMap","isToggleSelect","isItemSelected","ScrollableLegendModel","setScrollDataIndex","scrollDataIndex","pageButtonItemGap","pageButtonGap","pageButtonPosition","pageFormatter","pageIcons","pageIconColor","pageIconInactiveColor","pageIconSize","pageTextStyle","mergeAndNormalizeLayoutParams","getOrient","raw","LegendView","ScrollableLegendView","_currentIndex","_controllerGroup","_showController","__rectSize","me","controllerGroup","createPageButton","pageTextStyleModel","iconIdx","pageDataIndexName","_pageGo","orientIdx","hw","yx","controllerRect","showController","contentPos","containerPos","controllerPos","pageInfo","_getPageInfo","pageIndex","contentPosition","_updatePageInfoView","legendId","canJump","pageText","pageCount","pagePrevDataIndex","pageNextDataIndex","targetItemGroup","currDataIndex","containerRectSize","itemRect","itemLoc","startIdx","winRect","getItemRect","startRect","showContent","alwaysShowContent","displayMode","confine","showDelay","hideDelay","transitionDuration","enterable","TooltipContent","axisPointerViewHelper","proxyRect","tooltipContent","_tooltipContent","_tooltipModel","_ecModel","_lastDataByCoordSys","_alwaysShowContent","setEnterable","_initGlobalListener","_keepShow","_tryShow","_hide","_refreshUpdateTimeout","manuallyShowTip","_ticket","_manuallyAxisShowTip","pointInfo","manuallyHideTip","hideLater","buildTooltipModel","_showAxisTooltip","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","_showTimout","singleDefaultHTML","singleParamsList","singleTooltipModel","itemCoordSys","axisValue","seriesDefaultHTML","valueLabel","axisValueLabel","firstLine","positionExpr","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","tooltipTrigger","defaultHtml","asyncTicket","subTooltipModel","cbTicket","setContent","contentSize","vAlign","domWidth","domHeight","rectWidth","rectHeight","calcTooltipPosition","gapH","gapV","getOuterSize","refixTooltipPosition","isCenterAlign","confineTooltipPosition","lastCoordSys","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisDataByAxis","lastItem","indexAxis","lastIndices","lastIdxItem","newIdxItem","modelCascade","resultModel","clientWidth","clientHeight","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","vendors","assembleCssText","transitionText","vendorPrefix","borderName","camelCase","assembleFont","_container","_show","_hideTimeout","onmouseenter","_enterable","_inContent","onmouseleave","_hideDelay","currentStyle","viewportRootOffset","barPolar","calRadialBar","valueMax","valueMin","pointToCoord","stackCoord","RadiusAxis","AngleAxis","_radiusAxis","_angleAxis","radiusToData","angleToData","maxAngle","foundAxisModel","PolarAxisModel","polarId","polarAxisDefaultExtendedOption","getAxisLineShape","rExtent","getRadiusIdx","ticksAngles","_axisLine","_axisTick","tickAngle","_axisLabel","labelsAngles","labelTextAlign","labelTextVerticalAlign","prevAngle","axisAngle","layoutAxis","prevRadius","PolarAxisPointer","coordValue","getLabelPosition","makeAction","selectableMixin","GeoModel","_optionModelMap","optionModelMap","regionOpt","DEFAULT_TOOLBOX_BTNS","brushComponents","brushComponentSpecifiedBtns","brushOpt","tbs","feature","toolboxFeature","toolboxBrush","brushTypes","flag","selector","STATE_LIST","DISPATCH_METHOD","DISPATCH_FLAG","PRIORITY_BRUSH","doDispatch","brushSelected","checkInRange","selectorsByBrushType","rangeInfoList","getSelectorsByBrushType","sels","selectorsByElementType","bSelector","sel","brushModel","setBrushOption","brushTargetManager","throttleDelay","brushIndex","thisBrushSelected","brushId","brushName","brushLink","linkedSeriesMap","selectedDataIndexForLink","rangeInfoBySeries","hasBrushExists","selFn","elType","bindSelector","boundingRectBuilders","linkOthers","brushed","stepAParallel","brushModelNotControll","stepAOthers","seriesBrushSelected","getBoundingRectFromMinMax","rg","getLineSelectors","inLineRange","layoutRange","lineIntersectPolygon","lx","ly","l2x","l2y","lineIntersect","a1x","a1y","a2x","a2y","b1x","b1y","b2x","b2y","determinant","namenda","miu","v4","DEFAULT_OUT_OF_BRUSH_COLOR","generateBrushOption","coordInfoList","inBrush","outOfBrush","setAreas","updateController","modelId","$from","featureManager","brushLang","Brush","_brushMode","featureModel","isBrushed","setIconStatus","getIcons","availableIcons","icons","command","Calendar","calendarModel","_rangeInfo","_sw","_sh","_orient","getFirstDayOfWeek","_firstDayOfWeek","getDateInfo","day","getDay","formatedDate","getNextNDay","setDate","_lineWidth","_getRangeInfo","_initRangeOption","whNames","cellSize","layoutParams","cellNumbers","cellSizeSpecified","whGlobal","calendarRect","dayInfo","week","nthWeek","pointToDate","tl","tr","br","bl","nthX","nthY","_getDateByWeeksAndDay","firstDay","setMonth","reversed","startDateNum","endDateNum","fweek","lweek","nthDay","calendarList","calendarSeries","CalendarModel","dayLabel","monthLabel","yearLabel","MONTH_TEXT","EN","CN","WEEK_TEXT","_tlpoints","_blpoints","_firstDayOfMonth","_firstDayPoints","rangeData","_renderDayRect","_renderLines","_renderYearText","_renderMonthText","_renderWeekText","itemRectStyleModel","sh","addPoints","_getLinePointsOfOneWeek","_drawSplitline","_getEdgesPoints","rs","poyline","tmpD","_formatterLabel","_yearTextPositionControl","aligns","xc","yc","posPoints","yearText","_monthTextPositionControl","isCenter","termPoints","firstDayPoints","yyyy","yy","MM","monthText","_weekTextPositionControl","isStart","firstDayOfWeek","weekText","subtext","subtarget","subtextStyle","subtextStyleModel","subText","subTextEl","sublink","groupRect","layoutOption","alignStyle","_dimName","_axisIndex","_valueWindow","_percentWindow","_minMaxSpan","_dataZoomModel","setAxisModel","isRestore","percentWindow","valueWindow","useOrigin","getTargetSeriesModels","getOtherAxisModel","coordSysIndexName","foundOtherAxisModel","otherAxisModel","getMinMaxSpan","calculateDataWindow","percentExtent","boundValue","boundPercent","seriesExtent","fixExtentByAxis","calculateDataExtent","dataWindow","minMaxSpan","valueSpan","setMinMaxSpan","leftOut","rightOut","thisHasValue","thisLeftOut","thisRightOut","isInWindow","dataBackground","fillerColor","handleIcon","handleStyle","labelPrecision","showDetail","showDataShadow","zoomLock","DataZoomView","HORIZONTAL","LABEL_GAP","SHOW_DATA_SHADOW_SERIES_TYPE","SliderZoomView","_displayables","_range","_handleEnds","_size","_handleWidth","_handleHeight","_location","_dataShadowInfo","_buildView","_updateView","_resetLocation","_resetInterval","barGroup","_renderBackground","_renderDataShadow","_positionGroup","coordRect","_findCoordRect","location","targetAxisModel","otherAxisInverse","_getViewExtent","_onClickPanelClick","_prepareDataShadowInfo","otherDataExtent","otherOffset","lastIsEmpty","otherShadowExtent","thisShadowExtent","areaPoints","thisCoord","stride","otherCoord","thisAxis","thisDim","displaybles","handles","handleLabels","filler","getCursor","_onDragMove","ondragstart","_showDataInfo","_onDragEnd","onmouseover","onmouseout","bRect","handleColor","viewExtent","_updateInterval","viewExtend","nonRealtime","handleInterval","handleHeight","_updateDataInfo","labelTexts","dataInterval","_formatLabel","orderedHandleEnds","barTransform","textPoint","valueStr","showOrHide","_dispatchZoomAction","localPoint","disabled","roams","InsideZoomView","shouldRecordRange","allCoordIds","coordInfo","generateCoordId","dataZoomOption","coordId","containsPoint","throttleRate","panGetRange","zoomGetRange","roamControllerOpt","newX","newY","directionInfo","getDirectionInfo","percentDelta","signal","pixel","pixelLength","percentPoint","pixelStart","oldPoint","newPoint","cleanStore","onPan","wrapAndDispatch","onZoom","getRange","dataZoomInfos","dataZoomInfo","theDataZoomId","theCoordId","newRecord","createController","typePriority","controllerParams","true","move","false","oneType","VisualMapModel","DEFAULT_BAR_BOUND","ContinuousModel","hoverLink","hoverLinkDataSize","hoverLinkOnHandle","_resetRange","auto","getSelected","findTargetDataIndices","oVals","getColorStopValues","iVals","setStop","iIdx","oIdx","iLen","oLen","first","stopsLen","stopValues","VisualMapView","HOVER_LINK_SIZE","HOVER_LINK_OUT","ContinuousView","_shapes","_dataInterval","_useHandle","_hoverLinkDataIndices","_hovering","_renderBar","dataRangeText","_renderEndsText","_enableHoverLinkToSeries","_enableHoverLinkFromSeries","endsIndex","_applyTransform","targetGroup","shapes","_createBarGroup","createPolygon","_dragHandle","textSize","handleThumbs","handleLabelPoints","_createHandle","_createIndicator","onDrift","onDragEnd","handleThumb","createHandlePoints","handleLabel","handleLabelPoint","indicatorLabel","indicatorLabelPoint","visualMapId","_clearHoverLinkToSeries","useHoverLinkOnHandle","_doHoverLinkToSeries","forSketch","outOfRangeHandleEnds","inRangeHandleEnds","visualInRange","_createBarVisual","visualOutOfRange","barColor","barPoints","_updateHandle","_makeColorGradient","symbolSizes","_createBarPoints","handlesColor","currValue","_showIndicator","cursorValue","rangeSymbol","halfHoverLinkSize","isRange","extentMax","createIndicatorPoints","_hoverLinkFromSeriesMouseOver","_hideIndicator","_clearHoverLinkFromSeries","cursorPos","hoverOnBar","getHalfHoverLinkSize","hoverRange","oldBatch","newBatch","resultBatches","_dispatchHighDown","PiecewiseModel","minOpen","maxOpen","itemSymbol","_pieceList","mode","_mode","_determineMode","resetMethods","_resetSelected","visualTypesInPieces","getSelectedMapKey","hasSel","getRepresentValue","representValue","pieceInterval","splitStep","normalizeReverse","pieceListItem","closeList","infinityList","useMinMax","_getItemAlign","viewData","_getViewData","endsText","viewPieceList","_onItemClick","_enableHoverLink","indexInModelPieceList","_createItemSymbol","visualState","onHoverLink","shapeParam","newKey","markerHelper","updateMarkerLayout","xPx","yPx","markPointModel","mpModel","symbolDrawMap","coordDimsInfos","MarkerView","markLineTransform","mlModel","mlFrom","mlTo","isInifinity","ifMarkLineHasOnlyDim","fromCoord","toCoord","otherDimIndex","markLineFilter","updateSingleMarkerEndLayout","isFrom","markLineModel","fromData","toData","__to","lineDrawMap","optData","updateDataVisualAndLayout","lineColor","fromSymbolSize","toSymbolSize","colorUtil","markAreaTransform","maModel","ltCoord","rbCoord","markAreaFilter","getSingleMarkerEndPoint","dimPermutations","markAreaModel","areaData","areaGroupMap","polygonGroup","__data","transferItem","itemStyleEmphasis","labelNormal","excludeLabelAttr","ec2Types","controlStyle","controlPosition","compatibleEC2","currentIndex","setCurrentIndex","isIndexMax","setPlayState","playState","TimelineModel","SliderTimelineModel","checkpointStyle","showPlayBtn","showPrevBtn","showNextBtn","playIcon","stopIcon","nextIcon","prevIcon","autoPlay","rewind","playInterval","_names","_initData","getPlayState","dataArr","idxArr","newItem","TimelineView","TimelineAxis","_timer","_currentPointer","_labelGroup","mainGroup","_createGroup","labelGroup","_createAxis","_renderAxisLabel","_position","_doPlayStop","_clearTimer","labelPosOpt","playPosition","prevBtnPosition","nextBtnPosition","labelAlignMap","labelBaselineMap","rotationMap","mainLength","controlModel","controlSize","showControl","controlGap","sizePlusGap","labelAlign","labelBaseline","rotateOriginX","rotateOriginY","viewBound","getBound","mainBound","labelBound","mainPosition","labelsPosition","mainBoundIdx","toBound","setOrigin","boundIdx","_customizeScale","newGroup","_renderAxisLine","_renderAxisTick","hoverStyleModel","symbolOpt","_changeTimeline","giveSymbol","_renderControl","makeBtn","iconPath","willRotate","btn","objPath","makeIcon","_handlePlayClick","_renderCurrentPointer","onCreate","_handlePointerDrag","_handlePointerDragend","pointerMoveTo","nextState","_pointerChangeTimeline","mousePos","_toAxisCoord","targetDataIndex","_findNearestTick","axisCoord","nextIndex","noAnimation","_autoLabelInterval","ToolboxModel","featureOpt","featureName","Feature","showTitle","iconStyle","listComponentHelper","toolboxModel","featureOpts","_features","featureNames","_featureNames","processFeature","titleText","__title","needPutOnTop","topOffset","oldName","isUserFeatureName","unusable","iconStyleModel","titles","iconPaths","iconName","createIconPaths","iconStatus","saveAsImageLang","SaveAsImage","$a","download","href","MouseEvent","msSaveOrOpenBlob","bstr","atob","u8arr","Uint8Array","blob","Blob","write","evt","bubbles","cancelable","dispatchEvent","magicTypeLang","MagicType","seriesOptGenreator","radioTypes","radio","newSeriesOpt","currentType","dataViewLang","BLOCK_SPLITER","ITEM_SPLITER","getContentFromModel","tables","seriesGroupByCategoryAxis","otherSeries","meta","groupSeries","headers","columns","items","vals","assembleOtherSeries","trim","itemSplitRegex","parseContents","blockMetaList","blocks","isTSVFormat","tsv","tsvLines","header","parseTSVContents","blockMeta","hasName","parseListContents","DataView","readOnly","optionToContent","contentToOption","textareaColor","textareaBorderColor","buttonColor","buttonTextColor","viewMain","textarea","htmlOrDom","buttonContainer","buttonStyle","closeButton","refreshButton","keyCode","selectionStart","selectionEnd","newSeriesOptList","tryMergeDataOption","history","dataZoomLang","DATA_ZOOM_ID_BASE","DataZoom","_isZoomActive","zoomActive","dataZoomSelectActive","retrieveAxisSetting","updateZoomBtnStatus","updateBackBtnStatus","nextActive","setBatch","found","dzModel","findDataZoom","dataZoomOpts","toolboxOpt","dataZoomOpt","addForAxis","axisIndicesName","givenAxisIndices","forEachComponent","$fromToolbox","restoreLang","Restore","vmlCore","Z2","initRootElStyle","coordsize","coordorigin","rgb2Str","append","getZIndex","setColorAndOpacity","updateFillAndStroke","vmlEl","zrEl","isFill","gradientType","focus","expansion","cs1","cs2","colorAndAlphaList","colorAndAlpha","color1","color2","opacity1","opacity2","focusposition","updateFillNode","dashstyle","updateStrokeNode","brushVML","vmlRoot","_vmlEl","needTransform","strokeEl","weight","zIndex","removeRectText","onRemove","onAdd","appendRectText","ow","oh","_imageSrc","_imageWidth","_imageHeight","imageRuntimeStyle","runtimeStyle","oldRuntimeWidth","oldRuntimeHeight","hasCrop","vmlElStyle","hasRotation","transformFilter","imageTransformPrefix","imageEl","_imageEl","cropEl","_cropEl","imageELStyle","tmpImage","overflow","cropElStyle","filterStr","textMeasureEl","fontStyleCache","fontStyleCacheCount","fontEl","body","ex","offsetWidth","fromTextEl","fontString","variant","fontVariant","family","getFontStyle","textPathEl","skewEl","textVmlEl","_textVmlEl","textpathok","textVmlElStyle","string","zrLog","VMLPainter","vmlViewport","_vmlRoot","_vmlViewport","_firstPaint","__alreadyNotVisible","_getWidth","_getHeight","vmlViewportStyle","arrayDiff","GradientManager","ClippathManager","checkParentAvailable","insertAfter","prevSibling","prepend","SVGPainter","gradientManager","clipPathManager","viewport","_viewport","_visibleList","visibleList","listLen","newVisibleList","svgProxy","prevSvgElement","svgElement","textSvgElement","added","addWithoutUpdate","_getDefs","viewportStyle","outerHTML","unescape","Diff","buildValues","componentPos","componentLen","oldPos","newLen","oldLen","editLength","maxEditLength","bestPath","extractCommon","execEditLength","diagonalPath","basePath","addPath","removePath","canAdd","canRemove","pushComponent","commonCount","tokenize","updateDom","clipPathEl","cloneNode","_textDom","_createClass","defineProperties","descriptor","protoProps","staticProps","_react2","_propTypes2","_elementResizeEvent2","ReactEcharts","_React$Component","getEchartsInstance","echartsElement","bindEvents","events","_loopEvent","renderEchartDom","echartObj","loadingOption","onEvents","onChartReady","unbind","_this2","ref","className","propTypes","object","isRequired","bool","defaultProps","isIE","requestFrame","raf","cancel","cancelFrame","cancelAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","resizeListener","srcElement","__resizeRAF__","__resizeTrigger__","__resizeListeners__","__resizeElement__","contentDocument","_Timeline","_Timeline2","_extends3","_toConsumableArray3","_defineProperty3","_classCallCheck3","_createClass3","_possibleConstructorReturn3","_inherits3","React","newObj","_interopRequireWildcard","_classnames2","_TimelineItem2","_icon2","__rest","getOwnPropertySymbols","Timeline","_classNames","prefixCls","_a$pending","pendingDot","restProps","pendingNode","classString","pendingItem","truthyItems","Children","toArray","itemsCount","lastCls","ele","cloneElement","Item","TimelineItem","_classNames2","_a$color","itemClassName","dotClassName","locals"],"mappings":"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C,EAAAy1C,cACAz1C,EAAA01C,cACA11C,EAAAq5C,yBArhBA,SAAA74B,EAAArE,EAAA8a,GACA,IAAArpB,EAAAuO,EAAAvO,EACAC,EAAAsO,EAAAtO,EACApH,EAAA0V,EAAA1V,OACAD,EAAA2V,EAAA3V,MACA8yC,EAAA7yC,EAAA,EACAyb,EAAA,OACAC,EAAA,MAEA,OAAA3B,GACA,WACA5S,GAAAqpB,EACAppB,GAAAyrC,EACAp3B,EAAA,QACAC,EAAA,SACA,MAEA,YACAvU,GAAAqpB,EAAAzwB,EACAqH,GAAAyrC,EACAn3B,EAAA,SACA,MAEA,UACAvU,GAAApH,EAAA,EACAqH,GAAAopB,EACA/U,EAAA,SACAC,EAAA,SACA,MAEA,aACAvU,GAAApH,EAAA,EACAqH,GAAApH,EAAAwwB,EACA/U,EAAA,SACA,MAEA,aACAtU,GAAApH,EAAA,EACAqH,GAAAyrC,EACAp3B,EAAA,SACAC,EAAA,SACA,MAEA,iBACAvU,GAAAqpB,EACAppB,GAAAyrC,EACAn3B,EAAA,SACA,MAEA,kBACAvU,GAAApH,EAAAywB,EACAppB,GAAAyrC,EACAp3B,EAAA,QACAC,EAAA,SACA,MAEA,gBACAvU,GAAApH,EAAA,EACAqH,GAAAopB,EACA/U,EAAA,SACA,MAEA,mBACAtU,GAAApH,EAAA,EACAqH,GAAApH,EAAAwwB,EACA/U,EAAA,SACAC,EAAA,SACA,MAEA,oBACAvU,GAAAqpB,EACAppB,GAAAopB,EACA,MAEA,qBACArpB,GAAApH,EAAAywB,EACAppB,GAAAopB,EACA/U,EAAA,QACA,MAEA,uBACAtU,GAAAqpB,EACAppB,GAAApH,EAAAwwB,EACA9U,EAAA,SACA,MAEA,wBACAvU,GAAApH,EAAAywB,EACAppB,GAAApH,EAAAwwB,EACA/U,EAAA,QACAC,EAAA,SAIA,OACAvU,IACAC,IACAqU,YACAC,sBAobAniB,EAAA24B,eACA34B,EAAA22C,gBACA32C,EAAAw1C,cACAx1C,EAAA42C,iBACA52C,EAAAq3C,gBACAr3C,EAAAu5C,SAnBA,SAAA5rC,GAGA,OAAAA,EAAA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","file":"static/js/16.bce56023.chunk.js","sourcesContent":["/**\n * @module zrender/core/util\n */\n// 用于处理merge时无法遍历Date等对象的问题\nvar BUILTIN_OBJECT = {\n  '[object Function]': 1,\n  '[object RegExp]': 1,\n  '[object Date]': 1,\n  '[object Error]': 1,\n  '[object CanvasGradient]': 1,\n  '[object CanvasPattern]': 1,\n  // For node-canvas\n  '[object Image]': 1,\n  '[object Canvas]': 1\n};\nvar TYPED_ARRAY = {\n  '[object Int8Array]': 1,\n  '[object Uint8Array]': 1,\n  '[object Uint8ClampedArray]': 1,\n  '[object Int16Array]': 1,\n  '[object Uint16Array]': 1,\n  '[object Int32Array]': 1,\n  '[object Uint32Array]': 1,\n  '[object Float32Array]': 1,\n  '[object Float64Array]': 1\n};\nvar objToString = Object.prototype.toString;\nvar arrayProto = Array.prototype;\nvar nativeForEach = arrayProto.forEach;\nvar nativeFilter = arrayProto.filter;\nvar nativeSlice = arrayProto.slice;\nvar nativeMap = arrayProto.map;\nvar nativeReduce = arrayProto.reduce; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * Those data types can be cloned:\n *     Plain object, Array, TypedArray, number, string, null, undefined.\n * Those data types will be assgined using the orginal data:\n *     BUILTIN_OBJECT\n * Instance of user defined class will be cloned to a plain object, without\n * properties in prototype.\n * Other data types is not supported (not sure what will happen).\n *\n * Caution: do not support clone Date, for performance consideration.\n * (There might be a large number of date in `series.data`).\n * So date should not be modified in and out of echarts.\n *\n * @param {*} source\n * @return {*} new\n */\n\n\nfunction clone(source) {\n  if (source == null || typeof source != 'object') {\n    return source;\n  }\n\n  var result = source;\n  var typeStr = objToString.call(source);\n\n  if (typeStr === '[object Array]') {\n    result = [];\n\n    for (var i = 0, len = source.length; i < len; i++) {\n      result[i] = clone(source[i]);\n    }\n  } else if (TYPED_ARRAY[typeStr]) {\n    var Ctor = source.constructor;\n\n    if (source.constructor.from) {\n      result = Ctor.from(source);\n    } else {\n      result = new Ctor(source.length);\n\n      for (var i = 0, len = source.length; i < len; i++) {\n        result[i] = clone(source[i]);\n      }\n    }\n  } else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n    result = {};\n\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) {\n        result[key] = clone(source[key]);\n      }\n    }\n  }\n\n  return result;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overwrite=false]\n */\n\n\nfunction merge(target, source, overwrite) {\n  // We should escapse that source is string\n  // and enter for ... in ...\n  if (!isObject(source) || !isObject(target)) {\n    return overwrite ? clone(source) : target;\n  }\n\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      var targetProp = target[key];\n      var sourceProp = source[key];\n\n      if (isObject(sourceProp) && isObject(targetProp) && !isArray(sourceProp) && !isArray(targetProp) && !isDom(sourceProp) && !isDom(targetProp) && !isBuiltInObject(sourceProp) && !isBuiltInObject(targetProp) && !isPrimitive(sourceProp) && !isPrimitive(targetProp)) {\n        // 如果需要递归覆盖，就递归调用merge\n        merge(targetProp, sourceProp, overwrite);\n      } else if (overwrite || !(key in target)) {\n        // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n        // NOTE，在 target[key] 不存在的时候也是直接覆盖\n        target[key] = clone(source[key], true);\n      }\n    }\n  }\n\n  return target;\n}\n/**\n * @param {Array} targetAndSources The first item is target, and the rests are source.\n * @param {boolean} [overwrite=false]\n * @return {*} target\n */\n\n\nfunction mergeAll(targetAndSources, overwrite) {\n  var result = targetAndSources[0];\n\n  for (var i = 1, len = targetAndSources.length; i < len; i++) {\n    result = merge(result, targetAndSources[i], overwrite);\n  }\n\n  return result;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @memberOf module:zrender/core/util\n */\n\n\nfunction extend(target, source) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overlay=false]\n * @memberOf module:zrender/core/util\n */\n\n\nfunction defaults(target, source, overlay) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key) && (overlay ? source[key] != null : target[key] == null)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar createCanvas = function () {\n  return methods.createCanvas();\n};\n\nmethods.createCanvas = function () {\n  return document.createElement('canvas');\n}; // FIXME\n\n\nvar _ctx;\n\nfunction getContext() {\n  if (!_ctx) {\n    // Use util.createCanvas instead of createCanvas\n    // because createCanvas may be overwritten in different environment\n    _ctx = createCanvas().getContext('2d');\n  }\n\n  return _ctx;\n}\n/**\n * 查询数组中元素的index\n * @memberOf module:zrender/core/util\n */\n\n\nfunction indexOf(array, value) {\n  if (array) {\n    if (array.indexOf) {\n      return array.indexOf(value);\n    }\n\n    for (var i = 0, len = array.length; i < len; i++) {\n      if (array[i] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n}\n/**\n * 构造类继承关系\n *\n * @memberOf module:zrender/core/util\n * @param {Function} clazz 源类\n * @param {Function} baseClazz 基类\n */\n\n\nfunction inherits(clazz, baseClazz) {\n  var clazzPrototype = clazz.prototype;\n\n  function F() {}\n\n  F.prototype = baseClazz.prototype;\n  clazz.prototype = new F();\n\n  for (var prop in clazzPrototype) {\n    clazz.prototype[prop] = clazzPrototype[prop];\n  }\n\n  clazz.prototype.constructor = clazz;\n  clazz.superClass = baseClazz;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Object|Function} target\n * @param {Object|Function} sorce\n * @param {boolean} overlay\n */\n\n\nfunction mixin(target, source, overlay) {\n  target = 'prototype' in target ? target.prototype : target;\n  source = 'prototype' in source ? source.prototype : source;\n  defaults(target, source, overlay);\n}\n/**\n * Consider typed array.\n * @param {Array|TypedArray} data\n */\n\n\nfunction isArrayLike(data) {\n  if (!data) {\n    return;\n  }\n\n  if (typeof data == 'string') {\n    return false;\n  }\n\n  return typeof data.length == 'number';\n}\n/**\n * 数组或对象遍历\n * @memberOf module:zrender/core/util\n * @param {Object|Array} obj\n * @param {Function} cb\n * @param {*} [context]\n */\n\n\nfunction each(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.forEach && obj.forEach === nativeForEach) {\n    obj.forEach(cb, context);\n  } else if (obj.length === +obj.length) {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      cb.call(context, obj[i], i, obj);\n    }\n  } else {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        cb.call(context, obj[key], key, obj);\n      }\n    }\n  }\n}\n/**\n * 数组映射\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction map(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.map && obj.map === nativeMap) {\n    return obj.map(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      result.push(cb.call(context, obj[i], i, obj));\n    }\n\n    return result;\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {Object} [memo]\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction reduce(obj, cb, memo, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.reduce && obj.reduce === nativeReduce) {\n    return obj.reduce(cb, memo, context);\n  } else {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      memo = cb.call(context, memo, obj[i], i, obj);\n    }\n\n    return memo;\n  }\n}\n/**\n * 数组过滤\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction filter(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.filter && obj.filter === nativeFilter) {\n    return obj.filter(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      if (cb.call(context, obj[i], i, obj)) {\n        result.push(obj[i]);\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * 数组项查找\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {*}\n */\n\n\nfunction find(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  for (var i = 0, len = obj.length; i < len; i++) {\n    if (cb.call(context, obj[i], i, obj)) {\n      return obj[i];\n    }\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @param {*} context\n * @return {Function}\n */\n\n\nfunction bind(func, context) {\n  var args = nativeSlice.call(arguments, 2);\n  return function () {\n    return func.apply(context, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @return {Function}\n */\n\n\nfunction curry(func) {\n  var args = nativeSlice.call(arguments, 1);\n  return function () {\n    return func.apply(this, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isArray(value) {\n  return objToString.call(value) === '[object Array]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isString(value) {\n  return objToString.call(value) === '[object String]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return type === 'function' || !!value && type == 'object';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isBuiltInObject(value) {\n  return !!BUILTIN_OBJECT[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isDom(value) {\n  return typeof value === 'object' && typeof value.nodeType === 'number' && typeof value.ownerDocument === 'object';\n}\n/**\n * Whether is exactly NaN. Notice isNaN('a') returns true.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction eqNaN(value) {\n  return value !== value;\n}\n/**\n * If value1 is not null, then return value1, otherwise judget rest of values.\n * Low performance.\n * @memberOf module:zrender/core/util\n * @return {*} Final value\n */\n\n\nfunction retrieve(values) {\n  for (var i = 0, len = arguments.length; i < len; i++) {\n    if (arguments[i] != null) {\n      return arguments[i];\n    }\n  }\n}\n\nfunction retrieve2(value0, value1) {\n  return value0 != null ? value0 : value1;\n}\n\nfunction retrieve3(value0, value1, value2) {\n  return value0 != null ? value0 : value1 != null ? value1 : value2;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} arr\n * @param {number} startIndex\n * @param {number} endIndex\n * @return {Array}\n */\n\n\nfunction slice() {\n  return Function.call.apply(nativeSlice, arguments);\n}\n/**\n * Normalize css liked array configuration\n * e.g.\n *  3 => [3, 3, 3, 3]\n *  [4, 2] => [4, 2, 4, 2]\n *  [4, 3, 2] => [4, 3, 2, 3]\n * @param {number|Array.<number>} val\n * @return {Array.<number>}\n */\n\n\nfunction normalizeCssArray(val) {\n  if (typeof val === 'number') {\n    return [val, val, val, val];\n  }\n\n  var len = val.length;\n\n  if (len === 2) {\n    // vertical | horizontal\n    return [val[0], val[1], val[0], val[1]];\n  } else if (len === 3) {\n    // top | horizontal | bottom\n    return [val[0], val[1], val[2], val[1]];\n  }\n\n  return val;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {boolean} condition\n * @param {string} message\n */\n\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n\nvar primitiveKey = '__ec_primitive__';\n/**\n * Set an object as primitive to be ignored traversing children in clone or merge\n */\n\nfunction setAsPrimitive(obj) {\n  obj[primitiveKey] = true;\n}\n\nfunction isPrimitive(obj) {\n  return obj[primitiveKey];\n}\n/**\n * @constructor\n * @param {Object} obj Only apply `ownProperty`.\n */\n\n\nfunction HashMap(obj) {\n  obj && each(obj, function (value, key) {\n    this.set(key, value);\n  }, this);\n} // Add prefix to avoid conflict with Object.prototype.\n\n\nvar HASH_MAP_PREFIX = '_ec_';\nvar HASH_MAP_PREFIX_LENGTH = 4;\nHashMap.prototype = {\n  constructor: HashMap,\n  // Do not provide `has` method to avoid defining what is `has`.\n  // (We usually treat `null` and `undefined` as the same, different\n  // from ES6 Map).\n  get: function (key) {\n    return this[HASH_MAP_PREFIX + key];\n  },\n  set: function (key, value) {\n    this[HASH_MAP_PREFIX + key] = value; // Comparing with invocation chaining, `return value` is more commonly\n    // used in this case: `var someVal = map.set('a', genVal());`\n\n    return value;\n  },\n  // Although util.each can be performed on this hashMap directly, user\n  // should not use the exposed keys, who are prefixed.\n  each: function (cb, context) {\n    context !== void 0 && (cb = bind(cb, context));\n\n    for (var prefixedKey in this) {\n      this.hasOwnProperty(prefixedKey) && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n    }\n  },\n  // Do not use this method if performance sensitive.\n  removeKey: function (key) {\n    delete this[HASH_MAP_PREFIX + key];\n  }\n};\n\nfunction createHashMap(obj) {\n  return new HashMap(obj);\n}\n\nfunction noop() {}\n\nexports.$override = $override;\nexports.clone = clone;\nexports.merge = merge;\nexports.mergeAll = mergeAll;\nexports.extend = extend;\nexports.defaults = defaults;\nexports.createCanvas = createCanvas;\nexports.getContext = getContext;\nexports.indexOf = indexOf;\nexports.inherits = inherits;\nexports.mixin = mixin;\nexports.isArrayLike = isArrayLike;\nexports.each = each;\nexports.map = map;\nexports.reduce = reduce;\nexports.filter = filter;\nexports.find = find;\nexports.bind = bind;\nexports.curry = curry;\nexports.isArray = isArray;\nexports.isFunction = isFunction;\nexports.isString = isString;\nexports.isObject = isObject;\nexports.isBuiltInObject = isBuiltInObject;\nexports.isDom = isDom;\nexports.eqNaN = eqNaN;\nexports.retrieve = retrieve;\nexports.retrieve2 = retrieve2;\nexports.retrieve3 = retrieve3;\nexports.slice = slice;\nexports.normalizeCssArray = normalizeCssArray;\nexports.assert = assert;\nexports.setAsPrimitive = setAsPrimitive;\nexports.isPrimitive = isPrimitive;\nexports.createHashMap = createHashMap;\nexports.noop = noop;","var _config = require(\"./config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrender = require(\"zrender/lib/zrender\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar timsort = require(\"zrender/lib/core/timsort\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar GlobalModel = require(\"./model/Global\");\n\nvar ExtensionAPI = require(\"./ExtensionAPI\");\n\nvar CoordinateSystemManager = require(\"./CoordinateSystem\");\n\nvar OptionManager = require(\"./model/OptionManager\");\n\nvar backwardCompat = require(\"./preprocessor/backwardCompat\");\n\nvar ComponentModel = require(\"./model/Component\");\n\nvar SeriesModel = require(\"./model/Series\");\n\nvar ComponentView = require(\"./view/Component\");\n\nvar ChartView = require(\"./view/Chart\");\n\nvar graphic = require(\"./util/graphic\");\n\nvar modelUtil = require(\"./util/model\");\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\n\nvar seriesColor = require(\"./visual/seriesColor\");\n\nvar loadingDefault = require(\"./loading/default\");\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\nvar each = zrUtil.each;\nvar parseClassType = ComponentModel.parseClassType;\nvar version = '3.8.5';\nvar dependencies = {\n  zrender: '3.7.4'\n};\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // FIXME\n// necessary?\n\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS = '__flagInMainProcess';\nvar HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\nvar OPTION_UPDATED = '__optionUpdated';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\nfunction createRegisterEventWithLowercaseName(method) {\n  return function (eventName, handler, context) {\n    // Event name is all lowercase\n    eventName = eventName && eventName.toLowerCase();\n    Eventful.prototype[method].call(this, eventName, handler, context);\n  };\n}\n/**\n * @module echarts~MessageCenter\n */\n\n\nfunction MessageCenter() {\n  Eventful.call(this);\n}\n\nMessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\nMessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\nMessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\nzrUtil.mixin(MessageCenter, Eventful);\n/**\n * @module echarts~ECharts\n */\n\nfunction ECharts(dom, theme, opts) {\n  opts = opts || {}; // Get theme by name\n\n  if (typeof theme === 'string') {\n    theme = themeStorage[theme];\n  }\n  /**\n   * @type {string}\n   */\n\n\n  this.id;\n  /**\n   * Group id\n   * @type {string}\n   */\n\n  this.group;\n  /**\n   * @type {HTMLElement}\n   * @private\n   */\n\n  this._dom = dom;\n  var defaultRenderer = 'canvas';\n\n  /**\n   * @type {module:zrender/ZRender}\n   * @private\n   */\n  var zr = this._zr = zrender.init(dom, {\n    renderer: opts.renderer || defaultRenderer,\n    devicePixelRatio: opts.devicePixelRatio,\n    width: opts.width,\n    height: opts.height\n  });\n  /**\n   * Expect 60 pfs.\n   * @type {Function}\n   * @private\n   */\n\n  this._throttledZrFlush = throttle(zrUtil.bind(zr.flush, zr), 17);\n  var theme = zrUtil.clone(theme);\n  theme && backwardCompat(theme, true);\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._theme = theme;\n  /**\n   * @type {Array.<module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsMap = {};\n  /**\n   * @type {Array.<module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsMap = {};\n  /**\n   * @type {module:echarts/CoordinateSystem}\n   * @private\n   */\n\n  this._coordSysMgr = new CoordinateSystemManager();\n  /**\n   * @type {module:echarts/ExtensionAPI}\n   * @private\n   */\n\n  this._api = createExtensionAPI(this);\n  Eventful.call(this);\n  /**\n   * @type {module:echarts~MessageCenter}\n   * @private\n   */\n\n  this._messageCenter = new MessageCenter(); // Init mouse events\n\n  this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n\n  this.resize = zrUtil.bind(this.resize, this); // Can't dispatch action during rendering procedure\n\n  this._pendingActions = []; // Sort on demand\n\n  function prioritySortFunc(a, b) {\n    return a.prio - b.prio;\n  }\n\n  timsort(visualFuncs, prioritySortFunc);\n  timsort(dataProcessorFuncs, prioritySortFunc);\n  zr.animation.on('frame', this._onframe, this); // ECharts instance can be used as value.\n\n  zrUtil.setAsPrimitive(this);\n}\n\nvar echartsProto = ECharts.prototype;\n\nechartsProto._onframe = function () {\n  // Lazy update\n  if (this[OPTION_UPDATED]) {\n    var silent = this[OPTION_UPDATED].silent;\n    this[IN_MAIN_PROCESS] = true;\n    updateMethods.prepareAndUpdate.call(this);\n    this[IN_MAIN_PROCESS] = false;\n    this[OPTION_UPDATED] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @return {HTMLElement}\n */\n\n\nechartsProto.getDom = function () {\n  return this._dom;\n};\n/**\n * @return {module:zrender~ZRender}\n */\n\n\nechartsProto.getZr = function () {\n  return this._zr;\n};\n/**\n * Usage:\n * chart.setOption(option, notMerge, lazyUpdate);\n * chart.setOption(option, {\n *     notMerge: ...,\n *     lazyUpdate: ...,\n *     silent: ...\n * });\n *\n * @param {Object} option\n * @param {Object|boolean} [opts] opts or notMerge.\n * @param {boolean} [opts.notMerge=false]\n * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n */\n\n\nechartsProto.setOption = function (option, notMerge, lazyUpdate) {\n  var silent;\n\n  if (zrUtil.isObject(notMerge)) {\n    lazyUpdate = notMerge.lazyUpdate;\n    silent = notMerge.silent;\n    notMerge = notMerge.notMerge;\n  }\n\n  this[IN_MAIN_PROCESS] = true;\n\n  if (!this._model || notMerge) {\n    var optionManager = new OptionManager(this._api);\n    var theme = this._theme;\n    var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n    ecModel.init(null, null, theme, optionManager);\n  }\n\n  this._model.setOption(option, optionPreprocessorFuncs);\n\n  if (lazyUpdate) {\n    this[OPTION_UPDATED] = {\n      silent: silent\n    };\n    this[IN_MAIN_PROCESS] = false;\n  } else {\n    updateMethods.prepareAndUpdate.call(this); // Ensure zr refresh sychronously, and then pixel in canvas can be\n    // fetched after `setOption`.\n\n    this._zr.flush();\n\n    this[OPTION_UPDATED] = false;\n    this[IN_MAIN_PROCESS] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @DEPRECATED\n */\n\n\nechartsProto.setTheme = function () {\n  console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n};\n/**\n * @return {module:echarts/model/Global}\n */\n\n\nechartsProto.getModel = function () {\n  return this._model;\n};\n/**\n * @return {Object}\n */\n\n\nechartsProto.getOption = function () {\n  return this._model && this._model.getOption();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getWidth = function () {\n  return this._zr.getWidth();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getHeight = function () {\n  return this._zr.getHeight();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getDevicePixelRatio = function () {\n  return this._zr.painter.dpr || window.devicePixelRatio || 1;\n};\n/**\n * Get canvas which has all thing rendered\n * @param {Object} opts\n * @param {string} [opts.backgroundColor]\n * @return {string}\n */\n\n\nechartsProto.getRenderedCanvas = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  opts = opts || {};\n  opts.pixelRatio = opts.pixelRatio || 1;\n  opts.backgroundColor = opts.backgroundColor || this._model.get('backgroundColor');\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.getRenderedCanvas(opts);\n};\n/**\n * Get svg data url\n * @return {string}\n */\n\n\nechartsProto.getSvgDataUrl = function () {\n  if (!env.svgSupported) {\n    return;\n  }\n\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.pathToSvg();\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n * @param {string} [opts.excludeComponents]\n */\n\n\nechartsProto.getDataURL = function (opts) {\n  opts = opts || {};\n  var excludeComponents = opts.excludeComponents;\n  var ecModel = this._model;\n  var excludesComponentViews = [];\n  var self = this;\n  each(excludeComponents, function (componentType) {\n    ecModel.eachComponent({\n      mainType: componentType\n    }, function (component) {\n      var view = self._componentsMap[component.__viewId];\n\n      if (!view.group.ignore) {\n        excludesComponentViews.push(view);\n        view.group.ignore = true;\n      }\n    });\n  });\n  var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataUrl() : this.getRenderedCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n  each(excludesComponentViews, function (view) {\n    view.group.ignore = false;\n  });\n  return url;\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n */\n\n\nechartsProto.getConnectedDataURL = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  var groupId = this.group;\n  var mathMin = Math.min;\n  var mathMax = Math.max;\n  var MAX_NUMBER = Infinity;\n\n  if (connectedGroups[groupId]) {\n    var left = MAX_NUMBER;\n    var top = MAX_NUMBER;\n    var right = -MAX_NUMBER;\n    var bottom = -MAX_NUMBER;\n    var canvasList = [];\n    var dpr = opts && opts.pixelRatio || 1;\n    zrUtil.each(instances, function (chart, id) {\n      if (chart.group === groupId) {\n        var canvas = chart.getRenderedCanvas(zrUtil.clone(opts));\n        var boundingRect = chart.getDom().getBoundingClientRect();\n        left = mathMin(boundingRect.left, left);\n        top = mathMin(boundingRect.top, top);\n        right = mathMax(boundingRect.right, right);\n        bottom = mathMax(boundingRect.bottom, bottom);\n        canvasList.push({\n          dom: canvas,\n          left: boundingRect.left,\n          top: boundingRect.top\n        });\n      }\n    });\n    left *= dpr;\n    top *= dpr;\n    right *= dpr;\n    bottom *= dpr;\n    var width = right - left;\n    var height = bottom - top;\n    var targetCanvas = zrUtil.createCanvas();\n    targetCanvas.width = width;\n    targetCanvas.height = height;\n    var zr = zrender.init(targetCanvas);\n    each(canvasList, function (item) {\n      var img = new graphic.Image({\n        style: {\n          x: item.left * dpr - left,\n          y: item.top * dpr - top,\n          image: item.dom\n        }\n      });\n      zr.add(img);\n    });\n    zr.refreshImmediately();\n    return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n  } else {\n    return this.getDataURL(opts);\n  }\n};\n/**\n * Convert from logical coordinate system to pixel coordinate system.\n * See CoordinateSystem#convertToPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId, geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\n\nechartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n/**\n * Convert from pixel coordinate system to logical coordinate system.\n * See CoordinateSystem#convertFromPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\nechartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\nfunction doConvertPixel(methodName, finder, value) {\n  var ecModel = this._model;\n\n  var coordSysList = this._coordSysMgr.getCoordinateSystems();\n\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n\n  for (var i = 0; i < coordSysList.length; i++) {\n    var coordSys = coordSysList[i];\n\n    if (coordSys[methodName] && (result = coordSys[methodName](ecModel, finder, value)) != null) {\n      return result;\n    }\n  }\n}\n/**\n * Is the specified coordinate systems or components contain the given pixel point.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {boolean} result\n */\n\n\nechartsProto.containPixel = function (finder, value) {\n  var ecModel = this._model;\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n  zrUtil.each(finder, function (models, key) {\n    key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n      var coordSys = model.coordinateSystem;\n\n      if (coordSys && coordSys.containPoint) {\n        result |= !!coordSys.containPoint(value);\n      } else if (key === 'seriesModels') {\n        var view = this._chartsMap[model.__viewId];\n\n        if (view && view.containPoint) {\n          result |= view.containPoint(value, model);\n        } else {}\n      } else {}\n    }, this);\n  }, this);\n  return !!result;\n};\n/**\n * Get visual from series or data.\n * @param {string|Object} finder\n *        If string, e.g., 'series', means {seriesIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            dataIndex / dataIndexInside\n *        }\n *        If dataIndex is not specified, series visual will be fetched,\n *        but not data item visual.\n *        If all of seriesIndex, seriesId, seriesName are not specified,\n *        visual will be fetched from first series.\n * @param {string} visualType 'color', 'symbol', 'symbolSize'\n */\n\n\nechartsProto.getVisual = function (finder, visualType) {\n  var ecModel = this._model;\n  finder = modelUtil.parseFinder(ecModel, finder, {\n    defaultMainType: 'series'\n  });\n  var seriesModel = finder.seriesModel;\n  var data = seriesModel.getData();\n  var dataIndexInside = finder.hasOwnProperty('dataIndexInside') ? finder.dataIndexInside : finder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(finder.dataIndex) : null;\n  return dataIndexInside != null ? data.getItemVisual(dataIndexInside, visualType) : data.getVisual(visualType);\n};\n/**\n * Get view of corresponding component model\n * @param  {module:echarts/model/Component} componentModel\n * @return {module:echarts/view/Component}\n */\n\n\nechartsProto.getViewOfComponentModel = function (componentModel) {\n  return this._componentsMap[componentModel.__viewId];\n};\n/**\n * Get view of corresponding series model\n * @param  {module:echarts/model/Series} seriesModel\n * @return {module:echarts/view/Chart}\n */\n\n\nechartsProto.getViewOfSeriesModel = function (seriesModel) {\n  return this._chartsMap[seriesModel.__viewId];\n};\n\nvar updateMethods = {\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  update: function (payload) {\n    // console.profile && console.profile('update');\n    var ecModel = this._model;\n    var api = this._api;\n    var coordSysMgr = this._coordSysMgr;\n    var zr = this._zr; // update before setOption\n\n    if (!ecModel) {\n      return;\n    } // Fixme First time update ?\n\n\n    ecModel.restoreData(); // TODO\n    // Save total ecModel here for undo/redo (after restoring data and before processing data).\n    // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n    // Create new coordinate system each update\n    // In LineView may save the old coordinate system and use it to get the orignal point\n\n    coordSysMgr.create(this._model, this._api);\n    processData.call(this, ecModel, api);\n    stackSeriesData.call(this, ecModel);\n    coordSysMgr.update(ecModel, api);\n    doVisualEncoding.call(this, ecModel, payload);\n    doRender.call(this, ecModel, payload); // Set background\n\n    var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n    var painter = zr.painter; // TODO all use clearColor ?\n\n    if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n      zr.configLayer(0, {\n        clearColor: backgroundColor\n      });\n    } else {\n      // In IE8\n      if (!env.canvasSupported) {\n        var colorArr = colorTool.parse(backgroundColor);\n        backgroundColor = colorTool.stringify(colorArr, 'rgb');\n\n        if (colorArr[3] === 0) {\n          backgroundColor = 'transparent';\n        }\n      }\n\n      if (backgroundColor.colorStops || backgroundColor.image) {\n        // Gradient background\n        // FIXME Fixed layer？\n        zr.configLayer(0, {\n          clearColor: backgroundColor\n        });\n        this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n        this._dom.style.background = 'transparent';\n      } else {\n        if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n          zr.configLayer(0, {\n            clearColor: null\n          });\n        }\n\n        this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n        this._dom.style.background = backgroundColor;\n      }\n    }\n\n    each(postUpdateFuncs, function (func) {\n      func(ecModel, api);\n    }); // console.profile && console.profileEnd('update');\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateView: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ecModel.eachSeries(function (seriesModel) {\n      seriesModel.getData().clearAllVisual();\n    });\n    doVisualEncoding.call(this, ecModel, payload);\n    invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateVisual: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ecModel.eachSeries(function (seriesModel) {\n      seriesModel.getData().clearAllVisual();\n    });\n    doVisualEncoding.call(this, ecModel, payload, true);\n    invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateLayout: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    doLayout.call(this, ecModel, payload);\n    invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  prepareAndUpdate: function (payload) {\n    var ecModel = this._model;\n    prepareView.call(this, 'component', ecModel);\n    prepareView.call(this, 'chart', ecModel);\n    updateMethods.update.call(this, payload);\n  }\n};\n/**\n * @private\n */\n\nfunction updateDirectly(ecIns, method, payload, mainType, subType) {\n  var ecModel = ecIns._model; // broadcast\n\n  if (!mainType) {\n    each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n    return;\n  }\n\n  var query = {};\n  query[mainType + 'Id'] = payload[mainType + 'Id'];\n  query[mainType + 'Index'] = payload[mainType + 'Index'];\n  query[mainType + 'Name'] = payload[mainType + 'Name'];\n  var condition = {\n    mainType: mainType,\n    query: query\n  };\n  subType && (condition.subType = subType); // subType may be '' by parseClassType;\n  // If dispatchAction before setOption, do nothing.\n\n  ecModel && ecModel.eachComponent(condition, function (model, index) {\n    callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n  }, ecIns);\n\n  function callView(view) {\n    view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n  }\n}\n/**\n * Resize the chart\n * @param {Object} opts\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n * @param {boolean} [opts.silent=false]\n */\n\n\nechartsProto.resize = function (opts) {\n  this[IN_MAIN_PROCESS] = true;\n\n  this._zr.resize(opts);\n\n  var optionChanged = this._model && this._model.resetOption('media');\n\n  var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n  updateMethods[updateMethod].call(this); // Resize loading effect\n\n  this._loadingFX && this._loadingFX.resize();\n  this[IN_MAIN_PROCESS] = false;\n  var silent = opts && opts.silent;\n  flushPendingActions.call(this, silent);\n  triggerUpdatedEvent.call(this, silent);\n};\n/**\n * Show loading effect\n * @param  {string} [name='default']\n * @param  {Object} [cfg]\n */\n\n\nechartsProto.showLoading = function (name, cfg) {\n  if (zrUtil.isObject(name)) {\n    cfg = name;\n    name = '';\n  }\n\n  name = name || 'default';\n  this.hideLoading();\n\n  if (!loadingEffects[name]) {\n    return;\n  }\n\n  var el = loadingEffects[name](this._api, cfg);\n  var zr = this._zr;\n  this._loadingFX = el;\n  zr.add(el);\n};\n/**\n * Hide loading effect\n */\n\n\nechartsProto.hideLoading = function () {\n  this._loadingFX && this._zr.remove(this._loadingFX);\n  this._loadingFX = null;\n};\n/**\n * @param {Object} eventObj\n * @return {Object}\n */\n\n\nechartsProto.makeActionFromEvent = function (eventObj) {\n  var payload = zrUtil.extend({}, eventObj);\n  payload.type = eventActionMap[eventObj.type];\n  return payload;\n};\n/**\n * @pubilc\n * @param {Object} payload\n * @param {string} [payload.type] Action type\n * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n * @param {boolean} [opt.silent=false] Whether trigger events.\n * @param {boolean} [opt.flush=undefined]\n *                  true: Flush immediately, and then pixel in canvas can be fetched\n *                      immediately. Caution: it might affect performance.\n *                  false: Not not flush.\n *                  undefined: Auto decide whether perform flush.\n */\n\n\nechartsProto.dispatchAction = function (payload, opt) {\n  if (!zrUtil.isObject(opt)) {\n    opt = {\n      silent: !!opt\n    };\n  }\n\n  if (!actions[payload.type]) {\n    return;\n  } // Avoid dispatch action before setOption. Especially in `connect`.\n\n\n  if (!this._model) {\n    return;\n  } // May dispatchAction in rendering procedure\n\n\n  if (this[IN_MAIN_PROCESS]) {\n    this._pendingActions.push(payload);\n\n    return;\n  }\n\n  doDispatchAction.call(this, payload, opt.silent);\n\n  if (opt.flush) {\n    this._zr.flush(true);\n  } else if (opt.flush !== false && env.browser.weChat) {\n    // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n    // hang when sliding page (on touch event), which cause that zr does not\n    // refresh util user interaction finished, which is not expected.\n    // But `dispatchAction` may be called too frequently when pan on touch\n    // screen, which impacts performance if do not throttle them.\n    this._throttledZrFlush();\n  }\n\n  flushPendingActions.call(this, opt.silent);\n  triggerUpdatedEvent.call(this, opt.silent);\n};\n\nfunction doDispatchAction(payload, silent) {\n  var payloadType = payload.type;\n  var escapeConnect = payload.escapeConnect;\n  var actionWrap = actions[payloadType];\n  var actionInfo = actionWrap.actionInfo;\n  var cptType = (actionInfo.update || 'update').split(':');\n  var updateMethod = cptType.pop();\n  cptType = cptType[0] != null && parseClassType(cptType[0]);\n  this[IN_MAIN_PROCESS] = true;\n  var payloads = [payload];\n  var batched = false; // Batch action\n\n  if (payload.batch) {\n    batched = true;\n    payloads = zrUtil.map(payload.batch, function (item) {\n      item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n      item.batch = null;\n      return item;\n    });\n  }\n\n  var eventObjBatch = [];\n  var eventObj;\n  var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n  each(payloads, function (batchItem) {\n    // Action can specify the event by return it.\n    eventObj = actionWrap.action(batchItem, this._model, this._api); // Emit event outside\n\n    eventObj = eventObj || zrUtil.extend({}, batchItem); // Convert type to eventType\n\n    eventObj.type = actionInfo.event || eventObj.type;\n    eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n    if (isHighDown) {\n      // method, payload, mainType, subType\n      updateDirectly(this, updateMethod, batchItem, 'series');\n    } else if (cptType) {\n      updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n    }\n  }, this);\n\n  if (updateMethod !== 'none' && !isHighDown && !cptType) {\n    // Still dirty\n    if (this[OPTION_UPDATED]) {\n      // FIXME Pass payload ?\n      updateMethods.prepareAndUpdate.call(this, payload);\n      this[OPTION_UPDATED] = false;\n    } else {\n      updateMethods[updateMethod].call(this, payload);\n    }\n  } // Follow the rule of action batch\n\n\n  if (batched) {\n    eventObj = {\n      type: actionInfo.event || payloadType,\n      escapeConnect: escapeConnect,\n      batch: eventObjBatch\n    };\n  } else {\n    eventObj = eventObjBatch[0];\n  }\n\n  this[IN_MAIN_PROCESS] = false;\n  !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n}\n\nfunction flushPendingActions(silent) {\n  var pendingActions = this._pendingActions;\n\n  while (pendingActions.length) {\n    var payload = pendingActions.shift();\n    doDispatchAction.call(this, payload, silent);\n  }\n}\n\nfunction triggerUpdatedEvent(silent) {\n  !silent && this.trigger('updated');\n}\n/**\n * Register event\n * @method\n */\n\n\nechartsProto.on = createRegisterEventWithLowercaseName('on');\nechartsProto.off = createRegisterEventWithLowercaseName('off');\nechartsProto.one = createRegisterEventWithLowercaseName('one');\n/**\n * @param {string} methodName\n * @private\n */\n\nfunction invokeUpdateMethod(methodName, ecModel, payload) {\n  var api = this._api; // Update all components\n\n  each(this._componentsViews, function (component) {\n    var componentModel = component.__model;\n    component[methodName](componentModel, ecModel, api, payload);\n    updateZ(componentModel, component);\n  }, this); // Upate all charts\n\n  ecModel.eachSeries(function (seriesModel, idx) {\n    var chart = this._chartsMap[seriesModel.__viewId];\n    chart[methodName](seriesModel, ecModel, api, payload);\n    updateZ(seriesModel, chart);\n    updateProgressiveAndBlend(seriesModel, chart);\n  }, this); // If use hover layer\n\n  updateHoverLayerStatus(this._zr, ecModel); // Post render\n\n  each(postUpdateFuncs, function (func) {\n    func(ecModel, api);\n  });\n}\n/**\n * Prepare view instances of charts and components\n * @param  {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction prepareView(type, ecModel) {\n  var isComponent = type === 'component';\n  var viewList = isComponent ? this._componentsViews : this._chartsViews;\n  var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n  var zr = this._zr;\n\n  for (var i = 0; i < viewList.length; i++) {\n    viewList[i].__alive = false;\n  }\n\n  ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n    if (isComponent) {\n      if (componentType === 'series') {\n        return;\n      }\n    } else {\n      model = componentType;\n    } // Consider: id same and type changed.\n\n\n    var viewId = '_ec_' + model.id + '_' + model.type;\n    var view = viewMap[viewId];\n\n    if (!view) {\n      var classType = parseClassType(model.type);\n      var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : ChartView.getClass(classType.sub);\n\n      if (Clazz) {\n        view = new Clazz();\n        view.init(ecModel, this._api);\n        viewMap[viewId] = view;\n        viewList.push(view);\n        zr.add(view.group);\n      } else {\n        // Error\n        return;\n      }\n    }\n\n    model.__viewId = view.__id = viewId;\n    view.__alive = true;\n    view.__model = model;\n    view.group.__ecComponentInfo = {\n      mainType: model.mainType,\n      index: model.componentIndex\n    };\n  }, this);\n\n  for (var i = 0; i < viewList.length;) {\n    var view = viewList[i];\n\n    if (!view.__alive) {\n      zr.remove(view.group);\n      view.dispose(ecModel, this._api);\n      viewList.splice(i, 1);\n      delete viewMap[view.__id];\n      view.__id = view.group.__ecComponentInfo = null;\n    } else {\n      i++;\n    }\n  }\n}\n/**\n * Processor data in each series\n *\n * @param {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction processData(ecModel, api) {\n  each(dataProcessorFuncs, function (process) {\n    process.func(ecModel, api);\n  });\n}\n/**\n * @private\n */\n\n\nfunction stackSeriesData(ecModel) {\n  var stackedDataMap = {};\n  ecModel.eachSeries(function (series) {\n    var stack = series.get('stack');\n    var data = series.getData();\n\n    if (stack && data.type === 'list') {\n      var previousStack = stackedDataMap[stack]; // Avoid conflict with Object.prototype\n\n      if (stackedDataMap.hasOwnProperty(stack) && previousStack) {\n        data.stackedOn = previousStack;\n      }\n\n      stackedDataMap[stack] = data;\n    }\n  });\n}\n/**\n * Layout before each chart render there series, special visual encoding stage\n *\n * @param {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction doLayout(ecModel, payload) {\n  var api = this._api;\n  each(visualFuncs, function (visual) {\n    if (visual.isLayout) {\n      visual.func(ecModel, api, payload);\n    }\n  });\n}\n/**\n * Encode visual infomation from data after data processing\n *\n * @param {module:echarts/model/Global} ecModel\n * @param {object} layout\n * @param {boolean} [excludesLayout]\n * @private\n */\n\n\nfunction doVisualEncoding(ecModel, payload, excludesLayout) {\n  var api = this._api;\n  ecModel.clearColorPalette();\n  ecModel.eachSeries(function (seriesModel) {\n    seriesModel.clearColorPalette();\n  });\n  each(visualFuncs, function (visual) {\n    (!excludesLayout || !visual.isLayout) && visual.func(ecModel, api, payload);\n  });\n}\n/**\n * Render each chart and component\n * @private\n */\n\n\nfunction doRender(ecModel, payload) {\n  var api = this._api; // Render all components\n\n  each(this._componentsViews, function (componentView) {\n    var componentModel = componentView.__model;\n    componentView.render(componentModel, ecModel, api, payload);\n    updateZ(componentModel, componentView);\n  }, this);\n  each(this._chartsViews, function (chart) {\n    chart.__alive = false;\n  }, this); // Render all charts\n\n  ecModel.eachSeries(function (seriesModel, idx) {\n    var chartView = this._chartsMap[seriesModel.__viewId];\n    chartView.__alive = true;\n    chartView.render(seriesModel, ecModel, api, payload);\n    chartView.group.silent = !!seriesModel.get('silent');\n    updateZ(seriesModel, chartView);\n    updateProgressiveAndBlend(seriesModel, chartView);\n  }, this); // If use hover layer\n\n  updateHoverLayerStatus(this._zr, ecModel); // Remove groups of unrendered charts\n\n  each(this._chartsViews, function (chart) {\n    if (!chart.__alive) {\n      chart.remove(ecModel, api);\n    }\n  }, this);\n}\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n/**\n * @private\n */\n\nechartsProto._initEvents = function () {\n  each(MOUSE_EVENT_NAMES, function (eveName) {\n    this._zr.on(eveName, function (e) {\n      var ecModel = this.getModel();\n      var el = e.target;\n      var params; // no e.target when 'globalout'.\n\n      if (eveName === 'globalout') {\n        params = {};\n      } else if (el && el.dataIndex != null) {\n        var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n        params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n      } // If element has custom eventData of components\n      else if (el && el.eventData) {\n          params = zrUtil.extend({}, el.eventData);\n        }\n\n      if (params) {\n        params.event = e;\n        params.type = eveName;\n        this.trigger(eveName, params);\n      }\n    }, this);\n  }, this);\n  each(eventActionMap, function (actionType, eventType) {\n    this._messageCenter.on(eventType, function (event) {\n      this.trigger(eventType, event);\n    }, this);\n  }, this);\n};\n/**\n * @return {boolean}\n */\n\n\nechartsProto.isDisposed = function () {\n  return this._disposed;\n};\n/**\n * Clear\n */\n\n\nechartsProto.clear = function () {\n  this.setOption({\n    series: []\n  }, true);\n};\n/**\n * Dispose instance\n */\n\n\nechartsProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._disposed = true;\n  var api = this._api;\n  var ecModel = this._model;\n  each(this._componentsViews, function (component) {\n    component.dispose(ecModel, api);\n  });\n  each(this._chartsViews, function (chart) {\n    chart.dispose(ecModel, api);\n  }); // Dispose after all views disposed\n\n  this._zr.dispose();\n\n  delete instances[this.id];\n};\n\nzrUtil.mixin(ECharts, Eventful);\n\nfunction updateHoverLayerStatus(zr, ecModel) {\n  var storage = zr.storage;\n  var elCount = 0;\n  storage.traverse(function (el) {\n    if (!el.isGroup) {\n      elCount++;\n    }\n  });\n\n  if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n    storage.traverse(function (el) {\n      if (!el.isGroup) {\n        el.useHoverLayer = true;\n      }\n    });\n  }\n}\n/**\n * Update chart progressive and blend.\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateProgressiveAndBlend(seriesModel, chartView) {\n  // Progressive configuration\n  var elCount = 0;\n  chartView.group.traverse(function (el) {\n    if (el.type !== 'group' && !el.ignore) {\n      elCount++;\n    }\n  });\n  var frameDrawNum = +seriesModel.get('progressive');\n  var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n\n  if (needProgressive) {\n    chartView.group.traverse(function (el) {\n      // FIXME marker and other components\n      if (!el.isGroup) {\n        el.progressive = needProgressive ? Math.floor(elCount++ / frameDrawNum) : -1;\n\n        if (needProgressive) {\n          el.stopAnimation(true);\n        }\n      }\n    });\n  } // Blend configration\n\n\n  var blendMode = seriesModel.get('blendMode') || null;\n  chartView.group.traverse(function (el) {\n    // FIXME marker and other components\n    if (!el.isGroup) {\n      el.setStyle('blend', blendMode);\n    }\n  });\n}\n/**\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateZ(model, view) {\n  var z = model.get('z');\n  var zlevel = model.get('zlevel'); // Set z and zlevel\n\n  view.group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n    }\n  });\n}\n\nfunction createExtensionAPI(ecInstance) {\n  var coordSysMgr = ecInstance._coordSysMgr;\n  return zrUtil.extend(new ExtensionAPI(ecInstance), {\n    // Inject methods\n    getCoordinateSystems: zrUtil.bind(coordSysMgr.getCoordinateSystems, coordSysMgr),\n    getComponentByElement: function (el) {\n      while (el) {\n        var modelInfo = el.__ecComponentInfo;\n\n        if (modelInfo != null) {\n          return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n        }\n\n        el = el.parent;\n      }\n    }\n  });\n}\n/**\n * @type {Object} key: actionType.\n * @inner\n */\n\n\nvar actions = {};\n/**\n * Map eventType to actionType\n * @type {Object}\n */\n\nvar eventActionMap = {};\n/**\n * Data processor functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar dataProcessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar optionPreprocessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar postUpdateFuncs = [];\n/**\n * Visual encoding functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar visualFuncs = [];\n/**\n * Theme storage\n * @type {Object.<key, Object>}\n */\n\nvar themeStorage = {};\n/**\n * Loading effects\n */\n\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = new Date() - 0;\nvar groupIdBase = new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\nvar mapDataStores = {};\n\nfunction enableConnect(chart) {\n  var STATUS_PENDING = 0;\n  var STATUS_UPDATING = 1;\n  var STATUS_UPDATED = 2;\n  var STATUS_KEY = '__connectUpdateStatus';\n\n  function updateConnectedChartsStatus(charts, status) {\n    for (var i = 0; i < charts.length; i++) {\n      var otherChart = charts[i];\n      otherChart[STATUS_KEY] = status;\n    }\n  }\n\n  zrUtil.each(eventActionMap, function (actionType, eventType) {\n    chart._messageCenter.on(eventType, function (event) {\n      if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n        if (event && event.escapeConnect) {\n          return;\n        }\n\n        var action = chart.makeActionFromEvent(event);\n        var otherCharts = [];\n        zrUtil.each(instances, function (otherChart) {\n          if (otherChart !== chart && otherChart.group === chart.group) {\n            otherCharts.push(otherChart);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n        each(otherCharts, function (otherChart) {\n          if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n            otherChart.dispatchAction(action);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n      }\n    });\n  });\n}\n/**\n * @param {HTMLElement} dom\n * @param {Object} [theme]\n * @param {Object} opts\n * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n *                              Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n *                               Can be 'auto' (the same as null/undefined)\n */\n\n\nfunction init(dom, theme, opts) {\n  var existInstance = getInstanceByDom(dom);\n\n  if (existInstance) {\n    return existInstance;\n  }\n\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n\n  if (dom.setAttribute) {\n    dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n  } else {\n    dom[DOM_ATTRIBUTE_KEY] = chart.id;\n  }\n\n  enableConnect(chart);\n  return chart;\n}\n/**\n * @return {string|Array.<module:echarts~ECharts>} groupId\n */\n\n\nfunction connect(groupId) {\n  // Is array of charts\n  if (zrUtil.isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    zrUtil.each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    zrUtil.each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @DEPRECATED\n * @return {string} groupId\n */\n\n\nfunction disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * @return {string} groupId\n */\n\n\nvar disconnect = disConnect;\n/**\n * Dispose a chart instance\n * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n */\n\nfunction dispose(chart) {\n  if (typeof chart === 'string') {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\n/**\n * @param  {HTMLElement} dom\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceByDom(dom) {\n  var key;\n\n  if (dom.getAttribute) {\n    key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n  } else {\n    key = dom[DOM_ATTRIBUTE_KEY];\n  }\n\n  return instances[key];\n}\n/**\n * @param {string} key\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\n\nfunction registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n * @param {Function} preprocessorFunc\n */\n\n\nfunction registerPreprocessor(preprocessorFunc) {\n  optionPreprocessorFuncs.push(preprocessorFunc);\n}\n/**\n * @param {number} [priority=1000]\n * @param {Function} processorFunc\n */\n\n\nfunction registerProcessor(priority, processorFunc) {\n  if (typeof priority === 'function') {\n    processorFunc = priority;\n    priority = PRIORITY_PROCESSOR_FILTER;\n  }\n\n  dataProcessorFuncs.push({\n    prio: priority,\n    func: processorFunc\n  });\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\n\nfunction registerPostUpdate(postUpdateFunc) {\n  postUpdateFuncs.push(postUpdateFunc);\n}\n/**\n * Usage:\n * registerAction('someAction', 'someEvent', function () { ... });\n * registerAction('someAction', function () { ... });\n * registerAction(\n *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n *     function () { ... }\n * );\n *\n * @param {(string|Object)} actionInfo\n * @param {string} actionInfo.type\n * @param {string} [actionInfo.event]\n * @param {string} [actionInfo.update]\n * @param {string} [eventName]\n * @param {Function} action\n */\n\n\nfunction registerAction(actionInfo, eventName, action) {\n  if (typeof eventName === 'function') {\n    action = eventName;\n    eventName = '';\n  }\n\n  var actionType = zrUtil.isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event; // Validate action type and event name.\n\n  zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n\n  eventActionMap[eventName] = actionType;\n}\n/**\n * @param {string} type\n * @param {*} CoordinateSystem\n */\n\n\nfunction registerCoordinateSystem(type, CoordinateSystem) {\n  CoordinateSystemManager.register(type, CoordinateSystem);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\n\nfunction getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\n/**\n * Layout is a special stage of visual encoding\n * Most visual encoding like color are common for different chart\n * But each chart has it's own layout algorithm\n *\n * @param {number} [priority=1000]\n * @param {Function} layoutFunc\n */\n\n\nfunction registerLayout(priority, layoutFunc) {\n  if (typeof priority === 'function') {\n    layoutFunc = priority;\n    priority = PRIORITY_VISUAL_LAYOUT;\n  }\n\n  visualFuncs.push({\n    prio: priority,\n    func: layoutFunc,\n    isLayout: true\n  });\n}\n/**\n * @param {number} [priority=3000]\n * @param {Function} visualFunc\n */\n\n\nfunction registerVisual(priority, visualFunc) {\n  if (typeof priority === 'function') {\n    visualFunc = priority;\n    priority = PRIORITY_VISUAL_CHART;\n  }\n\n  visualFuncs.push({\n    prio: priority,\n    func: visualFunc\n  });\n}\n/**\n * @param {string} name\n */\n\n\nfunction registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentModel(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentModel;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentView(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentView;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentView.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendSeriesModel(opts\n/*, superClass*/\n) {\n  // var Clazz = SeriesModel;\n  // if (superClass) {\n  //     superClass = 'series.' + superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return SeriesModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendChartView(opts\n/*, superClass*/\n) {\n  // var Clazz = ChartView;\n  // if (superClass) {\n  //     superClass = superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ChartView.getClass(classType.main, true);\n  // }\n  return ChartView.extend(opts);\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n * Be careful of using it in the browser.\n *\n * @param {Function} creator\n * @example\n *     var Canvas = require('canvas');\n *     var echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\n\nfunction setCanvasCreator(creator) {\n  zrUtil.$override('createCanvas', creator);\n}\n/**\n * @param {string} mapName\n * @param {Object|string} geoJson\n * @param {Object} [specialAreas]\n *\n * @example\n *     $.get('USA.json', function (geoJson) {\n *         echarts.registerMap('USA', geoJson);\n *         // Or\n *         echarts.registerMap('USA', {\n *             geoJson: geoJson,\n *             specialAreas: {}\n *         })\n *     });\n */\n\n\nfunction registerMap(mapName, geoJson, specialAreas) {\n  if (geoJson.geoJson && !geoJson.features) {\n    specialAreas = geoJson.specialAreas;\n    geoJson = geoJson.geoJson;\n  }\n\n  if (typeof geoJson === 'string') {\n    geoJson = typeof JSON !== 'undefined' && JSON.parse ? JSON.parse(geoJson) : new Function('return (' + geoJson + ');')();\n  }\n\n  mapDataStores[mapName] = {\n    geoJson: geoJson,\n    specialAreas: specialAreas\n  };\n}\n/**\n * @param {string} mapName\n * @return {Object}\n */\n\n\nfunction getMap(mapName) {\n  return mapDataStores[mapName];\n}\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesColor);\nregisterPreprocessor(backwardCompat);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: 'highlight',\n  event: 'highlight',\n  update: 'highlight'\n}, zrUtil.noop);\nregisterAction({\n  type: 'downplay',\n  event: 'downplay',\n  update: 'downplay'\n}, zrUtil.noop); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nvar dataTool = {};\nexports.version = version;\nexports.dependencies = dependencies;\nexports.PRIORITY = PRIORITY;\nexports.init = init;\nexports.connect = connect;\nexports.disConnect = disConnect;\nexports.disconnect = disconnect;\nexports.dispose = dispose;\nexports.getInstanceByDom = getInstanceByDom;\nexports.getInstanceById = getInstanceById;\nexports.registerTheme = registerTheme;\nexports.registerPreprocessor = registerPreprocessor;\nexports.registerProcessor = registerProcessor;\nexports.registerPostUpdate = registerPostUpdate;\nexports.registerAction = registerAction;\nexports.registerCoordinateSystem = registerCoordinateSystem;\nexports.getCoordinateSystemDimensions = getCoordinateSystemDimensions;\nexports.registerLayout = registerLayout;\nexports.registerVisual = registerVisual;\nexports.registerLoading = registerLoading;\nexports.extendComponentModel = extendComponentModel;\nexports.extendComponentView = extendComponentView;\nexports.extendSeriesModel = extendSeriesModel;\nexports.extendChartView = extendChartView;\nexports.setCanvasCreator = setCanvasCreator;\nexports.registerMap = registerMap;\nexports.getMap = getMap;\nexports.dataTool = dataTool;\nvar ___ec_export = require(\"./export\");\n(function () {\n    for (var key in ___ec_export) {\n        if (___ec_export.hasOwnProperty(key)) {\n            exports[key] = ___ec_export[key];\n        }\n    }\n})();","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar pathTool = require(\"zrender/lib/tool/path\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\nvar Transformable = require(\"zrender/lib/mixin/Transformable\");\n\nvar Image = require(\"zrender/lib/graphic/Image\");\n\nexports.Image = Image;\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nexports.Group = Group;\n\nvar Text = require(\"zrender/lib/graphic/Text\");\n\nexports.Text = Text;\n\nvar Circle = require(\"zrender/lib/graphic/shape/Circle\");\n\nexports.Circle = Circle;\n\nvar Sector = require(\"zrender/lib/graphic/shape/Sector\");\n\nexports.Sector = Sector;\n\nvar Ring = require(\"zrender/lib/graphic/shape/Ring\");\n\nexports.Ring = Ring;\n\nvar Polygon = require(\"zrender/lib/graphic/shape/Polygon\");\n\nexports.Polygon = Polygon;\n\nvar Polyline = require(\"zrender/lib/graphic/shape/Polyline\");\n\nexports.Polyline = Polyline;\n\nvar Rect = require(\"zrender/lib/graphic/shape/Rect\");\n\nexports.Rect = Rect;\n\nvar Line = require(\"zrender/lib/graphic/shape/Line\");\n\nexports.Line = Line;\n\nvar BezierCurve = require(\"zrender/lib/graphic/shape/BezierCurve\");\n\nexports.BezierCurve = BezierCurve;\n\nvar Arc = require(\"zrender/lib/graphic/shape/Arc\");\n\nexports.Arc = Arc;\n\nvar CompoundPath = require(\"zrender/lib/graphic/CompoundPath\");\n\nexports.CompoundPath = CompoundPath;\n\nvar LinearGradient = require(\"zrender/lib/graphic/LinearGradient\");\n\nexports.LinearGradient = LinearGradient;\n\nvar RadialGradient = require(\"zrender/lib/graphic/RadialGradient\");\n\nexports.RadialGradient = RadialGradient;\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nexports.BoundingRect = BoundingRect;\nvar round = Math.round;\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar EMPTY_OBJ = {};\n/**\n * Extend shape with parameters\n */\n\nfunction extendShape(opts) {\n  return Path.extend(opts);\n}\n/**\n * Extend path\n */\n\n\nfunction extendPath(pathData, opts) {\n  return pathTool.extendFromString(pathData, opts);\n}\n/**\n * Create a path element from path data string\n * @param {string} pathData\n * @param {Object} opts\n * @param {module:zrender/core/BoundingRect} rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makePath(pathData, opts, rect, layout) {\n  var path = pathTool.createFromString(pathData, opts);\n  var boundingRect = path.getBoundingRect();\n\n  if (rect) {\n    if (layout === 'center') {\n      rect = centerGraphic(rect, boundingRect);\n    }\n\n    resizePath(path, rect);\n  }\n\n  return path;\n}\n/**\n * Create a image element from image url\n * @param {string} imageUrl image url\n * @param {Object} opts options\n * @param {module:zrender/core/BoundingRect} rect constrain rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makeImage(imageUrl, rect, layout) {\n  var path = new Image({\n    style: {\n      image: imageUrl,\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    onload: function (img) {\n      if (layout === 'center') {\n        var boundingRect = {\n          width: img.width,\n          height: img.height\n        };\n        path.setStyle(centerGraphic(rect, boundingRect));\n      }\n    }\n  });\n  return path;\n}\n/**\n * Get position of centered element in bounding box.\n *\n * @param  {Object} rect         element local bounding box\n * @param  {Object} boundingRect constraint bounding box\n * @return {Object} element position containing x, y, width, and height\n */\n\n\nfunction centerGraphic(rect, boundingRect) {\n  // Set rect to center, keep width / height ratio.\n  var aspect = boundingRect.width / boundingRect.height;\n  var width = rect.height * aspect;\n  var height;\n\n  if (width <= rect.width) {\n    height = rect.height;\n  } else {\n    width = rect.width;\n    height = width / aspect;\n  }\n\n  var cx = rect.x + rect.width / 2;\n  var cy = rect.y + rect.height / 2;\n  return {\n    x: cx - width / 2,\n    y: cy - height / 2,\n    width: width,\n    height: height\n  };\n}\n\nvar mergePath = pathTool.mergePath;\n/**\n * Resize a path to fit the rect\n * @param {module:zrender/graphic/Path} path\n * @param {Object} rect\n */\n\nfunction resizePath(path, rect) {\n  if (!path.applyTransform) {\n    return;\n  }\n\n  var pathRect = path.getBoundingRect();\n  var m = pathRect.calculateTransform(rect);\n  path.applyTransform(m);\n}\n/**\n * Sub pixel optimize line for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x1]\n * @param {number} [param.shape.y1]\n * @param {number} [param.shape.x2]\n * @param {number} [param.shape.y2]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeLine(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n\n  if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n    shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n  }\n\n  if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n    shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n  }\n\n  return param;\n}\n/**\n * Sub pixel optimize rect for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x]\n * @param {number} [param.shape.y]\n * @param {number} [param.shape.width]\n * @param {number} [param.shape.height]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeRect(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n  var originX = shape.x;\n  var originY = shape.y;\n  var originWidth = shape.width;\n  var originHeight = shape.height;\n  shape.x = subPixelOptimize(shape.x, lineWidth, true);\n  shape.y = subPixelOptimize(shape.y, lineWidth, true);\n  shape.width = Math.max(subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x, originWidth === 0 ? 0 : 1);\n  shape.height = Math.max(subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y, originHeight === 0 ? 0 : 1);\n  return param;\n}\n/**\n * Sub pixel optimize for canvas\n *\n * @param {number} position Coordinate, such as x, y\n * @param {number} lineWidth Should be nonnegative integer.\n * @param {boolean=} positiveOrNegative Default false (negative).\n * @return {number} Optimized position.\n */\n\n\nfunction subPixelOptimize(position, lineWidth, positiveOrNegative) {\n  // Assure that (position + lineWidth / 2) is near integer edge,\n  // otherwise line will be fuzzy in canvas.\n  var doubledPosition = round(position * 2);\n  return (doubledPosition + round(lineWidth)) % 2 === 0 ? doubledPosition / 2 : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n}\n\nfunction hasFillOrStroke(fillOrStroke) {\n  return fillOrStroke != null && fillOrStroke != 'none';\n}\n\nfunction liftColor(color) {\n  return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n}\n/**\n * @private\n */\n\n\nfunction cacheElementStl(el) {\n  if (el.__hoverStlDirty) {\n    var stroke = el.style.stroke;\n    var fill = el.style.fill; // Create hoverStyle on mouseover\n\n    var hoverStyle = el.__hoverStl;\n    hoverStyle.fill = hoverStyle.fill || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n    hoverStyle.stroke = hoverStyle.stroke || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n    var normalStyle = {};\n\n    for (var name in hoverStyle) {\n      // See comment in `doSingleEnterHover`.\n      if (hoverStyle[name] != null) {\n        normalStyle[name] = el.style[name];\n      }\n    }\n\n    el.__normalStl = normalStyle;\n    el.__hoverStlDirty = false;\n  }\n}\n/**\n * @private\n */\n\n\nfunction doSingleEnterHover(el) {\n  if (el.__isHover) {\n    return;\n  }\n\n  cacheElementStl(el);\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.addHover(el, el.__hoverStl);\n  } else {\n    var style = el.style;\n    var insideRollbackOpt = style.insideRollbackOpt; // Consider case: only `position: 'top'` is set on emphasis, then text\n    // color should be returned to `autoColor`, rather than remain '#fff'.\n    // So we should rollback then apply again after style merging.\n\n    insideRollbackOpt && rollbackInsideStyle(style); // styles can be:\n    // {\n    //     label: {\n    //         normal: {\n    //             show: false,\n    //             position: 'outside',\n    //             fontSize: 18\n    //         },\n    //         emphasis: {\n    //             show: true\n    //         }\n    //     }\n    // },\n    // where properties of `emphasis` may not appear in `normal`. We previously use\n    // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n    // But consider rich text and setOption in merge mode, it is impossible to cover\n    // all properties in merge. So we use merge mode when setting style here, where\n    // only properties that is not `null/undefined` can be set. The disadventage:\n    // null/undefined can not be used to remove style any more in `emphasis`.\n\n    style.extendFrom(el.__hoverStl); // Do not save `insideRollback`.\n\n    if (insideRollbackOpt) {\n      applyInsideStyle(style, style.insideOriginalTextPosition, insideRollbackOpt); // textFill may be rollbacked to null.\n\n      if (style.textFill == null) {\n        style.textFill = insideRollbackOpt.autoColor;\n      }\n    }\n\n    el.dirty(false);\n    el.z2 += 1;\n  }\n\n  el.__isHover = true;\n}\n/**\n * @inner\n */\n\n\nfunction doSingleLeaveHover(el) {\n  if (!el.__isHover) {\n    return;\n  }\n\n  var normalStl = el.__normalStl;\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.removeHover(el);\n  } else {\n    // Consider null/undefined value, should use\n    // `setStyle` but not `extendFrom(stl, true)`.\n    normalStl && el.setStyle(normalStl);\n    el.z2 -= 1;\n  }\n\n  el.__isHover = false;\n}\n/**\n * @inner\n */\n\n\nfunction doEnterHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleEnterHover(child);\n    }\n  }) : doSingleEnterHover(el);\n}\n\nfunction doLeaveHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleLeaveHover(child);\n    }\n  }) : doSingleLeaveHover(el);\n}\n/**\n * @inner\n */\n\n\nfunction setElementHoverStl(el, hoverStl) {\n  // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n  // Often used when item group has a label element and it's hoverStyle is different\n  el.__hoverStl = el.hoverStyle || hoverStl || {};\n  el.__hoverStlDirty = true;\n\n  if (el.__isHover) {\n    cacheElementStl(el);\n  }\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOver(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOut(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doLeaveHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction enterEmphasis() {\n  this.__isEmphasis = true;\n  doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction leaveEmphasis() {\n  this.__isEmphasis = false;\n  doLeaveHover(this);\n}\n/**\n * Set hover style of element.\n * This method can be called repeatly without side-effects.\n * @param {module:zrender/Element} el\n * @param {Object} [hoverStyle]\n * @param {Object} [opt]\n * @param {boolean} [opt.hoverSilentOnTouch=false]\n *        In touch device, mouseover event will be trigger on touchstart event\n *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n *        conviniently use hoverStyle when tap on touch screen without additional\n *        code for compatibility.\n *        But if the chart/component has select feature, which usually also use\n *        hoverStyle, there might be conflict between 'select-highlight' and\n *        'hover-highlight' especially when roam is enabled (see geo for example).\n *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n *        on touch device.\n */\n\n\nfunction setHoverStyle(el, hoverStyle, opt) {\n  el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      setElementHoverStl(child, hoverStyle);\n    }\n  }) : setElementHoverStl(el, hoverStyle); // Duplicated function will be auto-ignored, see Eventful.js.\n\n  el.on('mouseover', onElementMouseOver).on('mouseout', onElementMouseOut); // Emphasis, normal can be triggered manually\n\n  el.on('emphasis', enterEmphasis).on('normal', leaveEmphasis);\n}\n/**\n * @param {Object|module:zrender/graphic/Style} normalStyle\n * @param {Object} emphasisStyle\n * @param {module:echarts/model/Model} normalModel\n * @param {module:echarts/model/Model} emphasisModel\n * @param {Object} opt Check `opt` of `setTextStyleCommon` to find other props.\n * @param {Object} [opt.defaultText]\n * @param {module:echarts/model/Model} [opt.labelFetcher] Fetch text by\n *      `opt.labelFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDataIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDimIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {Object} [normalSpecified]\n * @param {Object} [emphasisSpecified]\n */\n\n\nfunction setLabelStyle(normalStyle, emphasisStyle, normalModel, emphasisModel, opt, normalSpecified, emphasisSpecified) {\n  opt = opt || EMPTY_OBJ;\n  var labelFetcher = opt.labelFetcher;\n  var labelDataIndex = opt.labelDataIndex;\n  var labelDimIndex = opt.labelDimIndex; // This scenario, `label.normal.show = true; label.emphasis.show = false`,\n  // is not supported util someone requests.\n\n  var showNormal = normalModel.getShallow('show');\n  var showEmphasis = emphasisModel.getShallow('show'); // Consider performance, only fetch label when necessary.\n  // If `normal.show` is `false` and `emphasis.show` is `true` and `emphasis.formatter` is not set,\n  // label should be displayed, where text is fetched by `normal.formatter` or `opt.defaultText`.\n\n  var baseText = showNormal || showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'normal', null, labelDimIndex) : null, opt.defaultText) : null;\n  var normalStyleText = showNormal ? baseText : null;\n  var emphasisStyleText = showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'emphasis', null, labelDimIndex) : null, baseText) : null; // Optimize: If style.text is null, text will not be drawn.\n\n  if (normalStyleText != null || emphasisStyleText != null) {\n    // Always set `textStyle` even if `normalStyle.text` is null, because default\n    // values have to be set on `normalStyle`.\n    // If we set default values on `emphasisStyle`, consider case:\n    // Firstly, `setOption(... label: {normal: {text: null}, emphasis: {show: true}} ...);`\n    // Secondly, `setOption(... label: {noraml: {show: true, text: 'abc', color: 'red'} ...);`\n    // Then the 'red' will not work on emphasis.\n    setTextStyle(normalStyle, normalModel, normalSpecified, opt);\n    setTextStyle(emphasisStyle, emphasisModel, emphasisSpecified, opt, true);\n  }\n\n  normalStyle.text = normalStyleText;\n  emphasisStyle.text = emphasisStyleText;\n}\n/**\n * Set basic textStyle properties.\n * @param {Object|module:zrender/graphic/Style} textStyle\n * @param {module:echarts/model/Model} model\n * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\n * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\n * @param {boolean} [isEmphasis]\n */\n\n\nfunction setTextStyle(textStyle, textStyleModel, specifiedTextStyle, opt, isEmphasis) {\n  setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis);\n  specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n  return textStyle;\n}\n/**\n * Set text option in the style.\n * @deprecated\n * @param {Object} textStyle\n * @param {module:echarts/model/Model} labelModel\n * @param {string|boolean} defaultColor Default text color.\n *        If set as false, it will be processed as a emphasis style.\n */\n\n\nfunction setText(textStyle, labelModel, defaultColor) {\n  var opt = {\n    isRectText: true\n  };\n  var isEmphasis;\n\n  if (defaultColor === false) {\n    isEmphasis = true;\n  } else {\n    // Support setting color as 'auto' to get visual color.\n    opt.autoColor = defaultColor;\n  }\n\n  setTextStyleCommon(textStyle, labelModel, opt, isEmphasis);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n}\n/**\n * {\n *      disableBox: boolean, Whether diable drawing box of block (outer most).\n *      isRectText: boolean,\n *      autoColor: string, specify a color when color is 'auto',\n *              for textFill, textStroke, textBackgroundColor, and textBorderColor.\n *              If autoColor specified, it is used as default textFill.\n *      useInsideStyle:\n *              `true`: Use inside style (textFill, textStroke, textStrokeWidth)\n *                  if `textFill` is not specified.\n *              `false`: Do not use inside style.\n *              `null/undefined`: use inside style if `isRectText` is true and\n *                  `textFill` is not specified and textPosition contains `'inside'`.\n *      forceRich: boolean\n * }\n */\n\n\nfunction setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis) {\n  // Consider there will be abnormal when merge hover style to normal style if given default value.\n  opt = opt || EMPTY_OBJ;\n\n  if (opt.isRectText) {\n    var textPosition = textStyleModel.getShallow('position') || (isEmphasis ? null : 'inside'); // 'outside' is not a valid zr textPostion value, but used\n    // in bar series, and magric type should be considered.\n\n    textPosition === 'outside' && (textPosition = 'top');\n    textStyle.textPosition = textPosition;\n    textStyle.textOffset = textStyleModel.getShallow('offset');\n    var labelRotate = textStyleModel.getShallow('rotate');\n    labelRotate != null && (labelRotate *= Math.PI / 180);\n    textStyle.textRotation = labelRotate;\n    textStyle.textDistance = zrUtil.retrieve2(textStyleModel.getShallow('distance'), isEmphasis ? null : 5);\n  }\n\n  var ecModel = textStyleModel.ecModel;\n  var globalTextStyle = ecModel && ecModel.option.textStyle; // Consider case:\n  // {\n  //     data: [{\n  //         value: 12,\n  //         label: {\n  //             normal: {\n  //                 rich: {\n  //                     // no 'a' here but using parent 'a'.\n  //                 }\n  //             }\n  //         }\n  //     }],\n  //     rich: {\n  //         a: { ... }\n  //     }\n  // }\n\n  var richItemNames = getRichItemNames(textStyleModel);\n  var richResult;\n\n  if (richItemNames) {\n    richResult = {};\n\n    for (var name in richItemNames) {\n      if (richItemNames.hasOwnProperty(name)) {\n        // Cascade is supported in rich.\n        var richTextStyle = textStyleModel.getModel(['rich', name]); // In rich, never `disableBox`.\n\n        setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt, isEmphasis);\n      }\n    }\n  }\n\n  textStyle.rich = richResult;\n  setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, true);\n\n  if (opt.forceRich && !opt.textStyle) {\n    opt.textStyle = {};\n  }\n\n  return textStyle;\n} // Consider case:\n// {\n//     data: [{\n//         value: 12,\n//         label: {\n//             normal: {\n//                 rich: {\n//                     // no 'a' here but using parent 'a'.\n//                 }\n//             }\n//         }\n//     }],\n//     rich: {\n//         a: { ... }\n//     }\n// }\n\n\nfunction getRichItemNames(textStyleModel) {\n  // Use object to remove duplicated names.\n  var richItemNameMap;\n\n  while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n    var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n\n    if (rich) {\n      richItemNameMap = richItemNameMap || {};\n\n      for (var name in rich) {\n        if (rich.hasOwnProperty(name)) {\n          richItemNameMap[name] = 1;\n        }\n      }\n    }\n\n    textStyleModel = textStyleModel.parentModel;\n  }\n\n  return richItemNameMap;\n}\n\nfunction setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, isBlock) {\n  // In merge mode, default value should not be given.\n  globalTextStyle = !isEmphasis && globalTextStyle || EMPTY_OBJ;\n  textStyle.textFill = getAutoColor(textStyleModel.getShallow('color'), opt) || globalTextStyle.color;\n  textStyle.textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'), opt) || globalTextStyle.textBorderColor;\n  textStyle.textStrokeWidth = zrUtil.retrieve2(textStyleModel.getShallow('textBorderWidth'), globalTextStyle.textBorderWidth);\n\n  if (!isEmphasis) {\n    if (isBlock) {\n      // Always set `insideRollback`, for clearing previous.\n      var originalTextPosition = textStyle.textPosition;\n      textStyle.insideRollback = applyInsideStyle(textStyle, originalTextPosition, opt); // Save original textPosition, because style.textPosition will be repalced by\n      // real location (like [10, 30]) in zrender.\n\n      textStyle.insideOriginalTextPosition = originalTextPosition;\n      textStyle.insideRollbackOpt = opt;\n    } // Set default finally.\n\n\n    if (textStyle.textFill == null) {\n      textStyle.textFill = opt.autoColor;\n    }\n  } // Do not use `getFont` here, because merge should be supported, where\n  // part of these properties may be changed in emphasis style, and the\n  // others should remain their original value got from normal style.\n\n\n  textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n  textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n  textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n  textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n  textStyle.textAlign = textStyleModel.getShallow('align');\n  textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign') || textStyleModel.getShallow('baseline');\n  textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n  textStyle.textWidth = textStyleModel.getShallow('width');\n  textStyle.textHeight = textStyleModel.getShallow('height');\n  textStyle.textTag = textStyleModel.getShallow('tag');\n\n  if (!isBlock || !opt.disableBox) {\n    textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n    textStyle.textPadding = textStyleModel.getShallow('padding');\n    textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n    textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n    textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n    textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n    textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n    textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n    textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n  }\n\n  textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor') || globalTextStyle.textShadowColor;\n  textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur') || globalTextStyle.textShadowBlur;\n  textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX') || globalTextStyle.textShadowOffsetX;\n  textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY') || globalTextStyle.textShadowOffsetY;\n}\n\nfunction getAutoColor(color, opt) {\n  return color !== 'auto' ? color : opt && opt.autoColor ? opt.autoColor : null;\n}\n\nfunction applyInsideStyle(textStyle, textPosition, opt) {\n  var useInsideStyle = opt.useInsideStyle;\n  var insideRollback;\n\n  if (textStyle.textFill == null && useInsideStyle !== false && (useInsideStyle === true || opt.isRectText && textPosition // textPosition can be [10, 30]\n  && typeof textPosition === 'string' && textPosition.indexOf('inside') >= 0)) {\n    insideRollback = {\n      textFill: null,\n      textStroke: textStyle.textStroke,\n      textStrokeWidth: textStyle.textStrokeWidth\n    };\n    textStyle.textFill = '#fff'; // Consider text with #fff overflow its container.\n\n    if (textStyle.textStroke == null) {\n      textStyle.textStroke = opt.autoColor;\n      textStyle.textStrokeWidth == null && (textStyle.textStrokeWidth = 2);\n    }\n  }\n\n  return insideRollback;\n}\n\nfunction rollbackInsideStyle(style) {\n  var insideRollback = style.insideRollback;\n\n  if (insideRollback) {\n    style.textFill = insideRollback.textFill;\n    style.textStroke = insideRollback.textStroke;\n    style.textStrokeWidth = insideRollback.textStrokeWidth;\n  }\n}\n\nfunction getFont(opt, ecModel) {\n  // ecModel or default text style model.\n  var gTextStyleModel = ecModel || ecModel.getModel('textStyle');\n  return [// FIXME in node-canvas fontWeight is before fontStyle\n  opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '', opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '', (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px', opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'].join(' ');\n}\n\nfunction animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n  if (typeof dataIndex === 'function') {\n    cb = dataIndex;\n    dataIndex = null;\n  } // Do not check 'animation' property directly here. Consider this case:\n  // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n  // but its parent model (`seriesModel`) does.\n\n\n  var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n  if (animationEnabled) {\n    var postfix = isUpdate ? 'Update' : '';\n    var duration = animatableModel.getShallow('animationDuration' + postfix);\n    var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n    var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n\n    if (typeof animationDelay === 'function') {\n      animationDelay = animationDelay(dataIndex, animatableModel.getAnimationDelayParams ? animatableModel.getAnimationDelayParams(el, dataIndex) : null);\n    }\n\n    if (typeof duration === 'function') {\n      duration = duration(dataIndex);\n    }\n\n    duration > 0 ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb) : (el.stopAnimation(), el.attr(props), cb && cb());\n  } else {\n    el.stopAnimation();\n    el.attr(props);\n    cb && cb();\n  }\n}\n/**\n * Update graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} [cb]\n * @example\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n *     // Or\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, function () { console.log('Animation done!'); });\n */\n\n\nfunction updateProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Init graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} cb\n */\n\n\nfunction initProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Get transform matrix of target (param target),\n * in coordinate of its ancestor (param ancestor)\n *\n * @param {module:zrender/mixin/Transformable} target\n * @param {module:zrender/mixin/Transformable} [ancestor]\n */\n\n\nfunction getTransform(target, ancestor) {\n  var mat = matrix.identity([]);\n\n  while (target && target !== ancestor) {\n    matrix.mul(mat, target.getLocalTransform(), mat);\n    target = target.parent;\n  }\n\n  return mat;\n}\n/**\n * Apply transform to an vertex.\n * @param {Array.<number>} target [x, y]\n * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n * @param {boolean=} invert Whether use invert matrix.\n * @return {Array.<number>} [x, y]\n */\n\n\nfunction applyTransform(target, transform, invert) {\n  if (transform && !zrUtil.isArrayLike(transform)) {\n    transform = Transformable.getLocalTransform(transform);\n  }\n\n  if (invert) {\n    transform = matrix.invert([], transform);\n  }\n\n  return vector.applyTransform([], target, transform);\n}\n/**\n * @param {string} direction 'left' 'right' 'top' 'bottom'\n * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n * @param {boolean=} invert Whether use invert matrix.\n * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n */\n\n\nfunction transformDirection(direction, transform, invert) {\n  // Pick a base, ensure that transform result will not be (0, 0).\n  var hBase = transform[4] === 0 || transform[5] === 0 || transform[0] === 0 ? 1 : Math.abs(2 * transform[4] / transform[0]);\n  var vBase = transform[4] === 0 || transform[5] === 0 || transform[2] === 0 ? 1 : Math.abs(2 * transform[4] / transform[2]);\n  var vertex = [direction === 'left' ? -hBase : direction === 'right' ? hBase : 0, direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0];\n  vertex = applyTransform(vertex, transform, invert);\n  return Math.abs(vertex[0]) > Math.abs(vertex[1]) ? vertex[0] > 0 ? 'right' : 'left' : vertex[1] > 0 ? 'bottom' : 'top';\n}\n/**\n * Apply group transition animation from g1 to g2.\n * If no animatableModel, no animation.\n */\n\n\nfunction groupTransition(g1, g2, animatableModel, cb) {\n  if (!g1 || !g2) {\n    return;\n  }\n\n  function getElMap(g) {\n    var elMap = {};\n    g.traverse(function (el) {\n      if (!el.isGroup && el.anid) {\n        elMap[el.anid] = el;\n      }\n    });\n    return elMap;\n  }\n\n  function getAnimatableProps(el) {\n    var obj = {\n      position: vector.clone(el.position),\n      rotation: el.rotation\n    };\n\n    if (el.shape) {\n      obj.shape = zrUtil.extend({}, el.shape);\n    }\n\n    return obj;\n  }\n\n  var elMap1 = getElMap(g1);\n  g2.traverse(function (el) {\n    if (!el.isGroup && el.anid) {\n      var oldEl = elMap1[el.anid];\n\n      if (oldEl) {\n        var newProp = getAnimatableProps(el);\n        el.attr(getAnimatableProps(oldEl));\n        updateProps(el, newProp, animatableModel, el.dataIndex);\n      } // else {\n      //     if (el.previousProps) {\n      //         graphic.updateProps\n      //     }\n      // }\n\n    }\n  });\n}\n/**\n * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n * @param {Object} rect {x, y, width, height}\n * @return {Array.<Array.<number>>} A new clipped points.\n */\n\n\nfunction clipPointsByRect(points, rect) {\n  return zrUtil.map(points, function (point) {\n    var x = point[0];\n    x = mathMax(x, rect.x);\n    x = mathMin(x, rect.x + rect.width);\n    var y = point[1];\n    y = mathMax(y, rect.y);\n    y = mathMin(y, rect.y + rect.height);\n    return [x, y];\n  });\n}\n/**\n * @param {Object} targetRect {x, y, width, height}\n * @param {Object} rect {x, y, width, height}\n * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n */\n\n\nfunction clipRectByRect(targetRect, rect) {\n  var x = mathMax(targetRect.x, rect.x);\n  var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n  var y = mathMax(targetRect.y, rect.y);\n  var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n  if (x2 >= x && y2 >= y) {\n    return {\n      x: x,\n      y: y,\n      width: x2 - x,\n      height: y2 - y\n    };\n  }\n}\n/**\n * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\n * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\n * @param {Object} [rect] {x, y, width, height}\n * @return {module:zrender/Element} Icon path or image element.\n */\n\n\nfunction createIcon(iconStr, opt, rect) {\n  opt = zrUtil.extend({\n    rectHover: true\n  }, opt);\n  var style = opt.style = {\n    strokeNoScale: true\n  };\n  rect = rect || {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  };\n\n  if (iconStr) {\n    return iconStr.indexOf('image://') === 0 ? (style.image = iconStr.slice(8), zrUtil.defaults(style, rect), new Image(opt)) : makePath(iconStr.replace('path://', ''), opt, rect, 'center');\n  }\n}\n\nexports.extendShape = extendShape;\nexports.extendPath = extendPath;\nexports.makePath = makePath;\nexports.makeImage = makeImage;\nexports.mergePath = mergePath;\nexports.resizePath = resizePath;\nexports.subPixelOptimizeLine = subPixelOptimizeLine;\nexports.subPixelOptimizeRect = subPixelOptimizeRect;\nexports.subPixelOptimize = subPixelOptimize;\nexports.setHoverStyle = setHoverStyle;\nexports.setLabelStyle = setLabelStyle;\nexports.setTextStyle = setTextStyle;\nexports.setText = setText;\nexports.getFont = getFont;\nexports.updateProps = updateProps;\nexports.initProps = initProps;\nexports.getTransform = getTransform;\nexports.applyTransform = applyTransform;\nexports.transformDirection = transformDirection;\nexports.groupTransition = groupTransition;\nexports.clipPointsByRect = clipPointsByRect;\nexports.clipRectByRect = clipRectByRect;\nexports.createIcon = createIcon;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar RADIAN_EPSILON = 1e-4;\n\nfunction _trim(str) {\n  return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n}\n/**\n * Linear mapping a value from domain to range\n * @memberOf module:echarts/util/number\n * @param  {(number|Array.<number>)} val\n * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n * @param  {boolean} clamp\n * @return {(number|Array.<number>}\n */\n\n\nfunction linearMap(val, domain, range, clamp) {\n  var subDomain = domain[1] - domain[0];\n  var subRange = range[1] - range[0];\n\n  if (subDomain === 0) {\n    return subRange === 0 ? range[0] : (range[0] + range[1]) / 2;\n  } // Avoid accuracy problem in edge, such as\n  // 146.39 - 62.83 === 83.55999999999999.\n  // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n  // It is a little verbose for efficiency considering this method\n  // is a hotspot.\n\n\n  if (clamp) {\n    if (subDomain > 0) {\n      if (val <= domain[0]) {\n        return range[0];\n      } else if (val >= domain[1]) {\n        return range[1];\n      }\n    } else {\n      if (val >= domain[0]) {\n        return range[0];\n      } else if (val <= domain[1]) {\n        return range[1];\n      }\n    }\n  } else {\n    if (val === domain[0]) {\n      return range[0];\n    }\n\n    if (val === domain[1]) {\n      return range[1];\n    }\n  }\n\n  return (val - domain[0]) / subDomain * subRange + range[0];\n}\n/**\n * Convert a percent string to absolute number.\n * Returns NaN if percent is not a valid string or number\n * @memberOf module:echarts/util/number\n * @param {string|number} percent\n * @param {number} all\n * @return {number}\n */\n\n\nfunction parsePercent(percent, all) {\n  switch (percent) {\n    case 'center':\n    case 'middle':\n      percent = '50%';\n      break;\n\n    case 'left':\n    case 'top':\n      percent = '0%';\n      break;\n\n    case 'right':\n    case 'bottom':\n      percent = '100%';\n      break;\n  }\n\n  if (typeof percent === 'string') {\n    if (_trim(percent).match(/%$/)) {\n      return parseFloat(percent) / 100 * all;\n    }\n\n    return parseFloat(percent);\n  }\n\n  return percent == null ? NaN : +percent;\n}\n/**\n * (1) Fix rounding error of float numbers.\n * (2) Support return string to avoid scientific notation like '3.5e-7'.\n *\n * @param {number} x\n * @param {number} [precision]\n * @param {boolean} [returnStr]\n * @return {number|string}\n */\n\n\nfunction round(x, precision, returnStr) {\n  if (precision == null) {\n    precision = 10;\n  } // Avoid range error\n\n\n  precision = Math.min(Math.max(0, precision), 20);\n  x = (+x).toFixed(precision);\n  return returnStr ? x : +x;\n}\n\nfunction asc(arr) {\n  arr.sort(function (a, b) {\n    return a - b;\n  });\n  return arr;\n}\n/**\n * Get precision\n * @param {number} val\n */\n\n\nfunction getPrecision(val) {\n  val = +val;\n\n  if (isNaN(val)) {\n    return 0;\n  } // It is much faster than methods converting number to string as follows\n  //      var tmp = val.toString();\n  //      return tmp.length - 1 - tmp.indexOf('.');\n  // especially when precision is low\n\n\n  var e = 1;\n  var count = 0;\n\n  while (Math.round(val * e) / e !== val) {\n    e *= 10;\n    count++;\n  }\n\n  return count;\n}\n/**\n * @param {string|number} val\n * @return {number}\n */\n\n\nfunction getPrecisionSafe(val) {\n  var str = val.toString(); // Consider scientific notation: '3.4e-12' '3.4e+12'\n\n  var eIndex = str.indexOf('e');\n\n  if (eIndex > 0) {\n    var precision = +str.slice(eIndex + 1);\n    return precision < 0 ? -precision : 0;\n  } else {\n    var dotIndex = str.indexOf('.');\n    return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n  }\n}\n/**\n * Minimal dicernible data precisioin according to a single pixel.\n *\n * @param {Array.<number>} dataExtent\n * @param {Array.<number>} pixelExtent\n * @return {number} precision\n */\n\n\nfunction getPixelPrecision(dataExtent, pixelExtent) {\n  var log = Math.log;\n  var LN10 = Math.LN10;\n  var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n  var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10); // toFixed() digits argument must be between 0 and 20.\n\n  var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n  return !isFinite(precision) ? 20 : precision;\n}\n/**\n * Get a data of given precision, assuring the sum of percentages\n * in valueList is 1.\n * The largest remainer method is used.\n * https://en.wikipedia.org/wiki/Largest_remainder_method\n *\n * @param {Array.<number>} valueList a list of all data\n * @param {number} idx index of the data to be processed in valueList\n * @param {number} precision integer number showing digits of precision\n * @return {number} percent ranging from 0 to 100\n */\n\n\nfunction getPercentWithPrecision(valueList, idx, precision) {\n  if (!valueList[idx]) {\n    return 0;\n  }\n\n  var sum = zrUtil.reduce(valueList, function (acc, val) {\n    return acc + (isNaN(val) ? 0 : val);\n  }, 0);\n\n  if (sum === 0) {\n    return 0;\n  }\n\n  var digits = Math.pow(10, precision);\n  var votesPerQuota = zrUtil.map(valueList, function (val) {\n    return (isNaN(val) ? 0 : val) / sum * digits * 100;\n  });\n  var targetSeats = digits * 100;\n  var seats = zrUtil.map(votesPerQuota, function (votes) {\n    // Assign automatic seats.\n    return Math.floor(votes);\n  });\n  var currentSum = zrUtil.reduce(seats, function (acc, val) {\n    return acc + val;\n  }, 0);\n  var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n    return votes - seats[idx];\n  }); // Has remainding votes.\n\n  while (currentSum < targetSeats) {\n    // Find next largest remainder.\n    var max = Number.NEGATIVE_INFINITY;\n    var maxId = null;\n\n    for (var i = 0, len = remainder.length; i < len; ++i) {\n      if (remainder[i] > max) {\n        max = remainder[i];\n        maxId = i;\n      }\n    } // Add a vote to max remainder.\n\n\n    ++seats[maxId];\n    remainder[maxId] = 0;\n    ++currentSum;\n  }\n\n  return seats[idx] / digits;\n} // Number.MAX_SAFE_INTEGER, ie do not support.\n\n\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * To 0 - 2 * PI, considering negative radian.\n * @param {number} radian\n * @return {number}\n */\n\nfunction remRadian(radian) {\n  var pi2 = Math.PI * 2;\n  return (radian % pi2 + pi2) % pi2;\n}\n/**\n * @param {type} radian\n * @return {boolean}\n */\n\n\nfunction isRadianAroundZero(val) {\n  return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n}\n\nvar TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n/**\n * @param {string|Date|number} value These values can be accepted:\n *   + An instance of Date, represent a time in its own time zone.\n *   + Or string in a subset of ISO 8601, only including:\n *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n *     all of which will be treated as local time if time zone is not specified\n *     (see <https://momentjs.com/>).\n *   + Or other string format, including (all of which will be treated as loacal time):\n *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n *   + a timestamp, which represent a time in UTC.\n * @return {Date} date\n */\n\nfunction parseDate(value) {\n  if (value instanceof Date) {\n    return value;\n  } else if (typeof value === 'string') {\n    // Different browsers parse date in different way, so we parse it manually.\n    // Some other issues:\n    // new Date('1970-01-01') is UTC,\n    // new Date('1970/01/01') and new Date('1970-1-01') is local.\n    // See issue #3623\n    var match = TIME_REG.exec(value);\n\n    if (!match) {\n      // return Invalid Date.\n      return new Date(NaN);\n    } // Use local time when no timezone offset specifed.\n\n\n    if (!match[8]) {\n      // match[n] can only be string or undefined.\n      // But take care of '12' + 1 => '121'.\n      return new Date(+match[1], +(match[2] || 1) - 1, +match[3] || 1, +match[4] || 0, +(match[5] || 0), +match[6] || 0, +match[7] || 0);\n    } // Timezoneoffset of Javascript Date has considered DST (Daylight Saving Time,\n    // https://tc39.github.io/ecma262/#sec-daylight-saving-time-adjustment).\n    // For example, system timezone is set as \"Time Zone: America/Toronto\",\n    // then these code will get different result:\n    // `new Date(1478411999999).getTimezoneOffset();  // get 240`\n    // `new Date(1478412000000).getTimezoneOffset();  // get 300`\n    // So we should not use `new Date`, but use `Date.UTC`.\n    else {\n        var hour = +match[4] || 0;\n\n        if (match[8].toUpperCase() !== 'Z') {\n          hour -= match[8].slice(0, 3);\n        }\n\n        return new Date(Date.UTC(+match[1], +(match[2] || 1) - 1, +match[3] || 1, hour, +(match[5] || 0), +match[6] || 0, +match[7] || 0));\n      }\n  } else if (value == null) {\n    return new Date(NaN);\n  }\n\n  return new Date(Math.round(value));\n}\n/**\n * Quantity of a number. e.g. 0.1, 1, 10, 100\n *\n * @param  {number} val\n * @return {number}\n */\n\n\nfunction quantity(val) {\n  return Math.pow(10, quantityExponent(val));\n}\n\nfunction quantityExponent(val) {\n  return Math.floor(Math.log(val) / Math.LN10);\n}\n/**\n * find a “nice” number approximately equal to x. Round the number if round = true,\n * take ceiling if round = false. The primary observation is that the “nicest”\n * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n *\n * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n *\n * @param  {number} val Non-negative value.\n * @param  {boolean} round\n * @return {number}\n */\n\n\nfunction nice(val, round) {\n  var exponent = quantityExponent(val);\n  var exp10 = Math.pow(10, exponent);\n  var f = val / exp10; // 1 <= f < 10\n\n  var nf;\n\n  if (round) {\n    if (f < 1.5) {\n      nf = 1;\n    } else if (f < 2.5) {\n      nf = 2;\n    } else if (f < 4) {\n      nf = 3;\n    } else if (f < 7) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  } else {\n    if (f < 1) {\n      nf = 1;\n    } else if (f < 2) {\n      nf = 2;\n    } else if (f < 3) {\n      nf = 3;\n    } else if (f < 5) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  }\n\n  val = nf * exp10; // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n  // 20 is the uppper bound of toFixed.\n\n  return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n}\n/**\n * Order intervals asc, and split them when overlap.\n * expect(numberUtil.reformIntervals([\n *     {interval: [18, 62], close: [1, 1]},\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [1, 1]},\n *     {interval: [62, 150], close: [1, 1]},\n *     {interval: [106, 150], close: [1, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ])).toEqual([\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [0, 1]},\n *     {interval: [18, 62], close: [0, 1]},\n *     {interval: [62, 150], close: [0, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ]);\n * @param {Array.<Object>} list, where `close` mean open or close\n *        of the interval, and Infinity can be used.\n * @return {Array.<Object>} The origin list, which has been reformed.\n */\n\n\nfunction reformIntervals(list) {\n  list.sort(function (a, b) {\n    return littleThan(a, b, 0) ? -1 : 1;\n  });\n  var curr = -Infinity;\n  var currClose = 1;\n\n  for (var i = 0; i < list.length;) {\n    var interval = list[i].interval;\n    var close = list[i].close;\n\n    for (var lg = 0; lg < 2; lg++) {\n      if (interval[lg] <= curr) {\n        interval[lg] = curr;\n        close[lg] = !lg ? 1 - currClose : 1;\n      }\n\n      curr = interval[lg];\n      currClose = close[lg];\n    }\n\n    if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n      list.splice(i, 1);\n    } else {\n      i++;\n    }\n  }\n\n  return list;\n\n  function littleThan(a, b, lg) {\n    return a.interval[lg] < b.interval[lg] || a.interval[lg] === b.interval[lg] && (a.close[lg] - b.close[lg] === (!lg ? 1 : -1) || !lg && littleThan(a, b, 1));\n  }\n}\n/**\n * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n * subtraction forces infinities to NaN\n *\n * @param {*} v\n * @return {boolean}\n */\n\n\nfunction isNumeric(v) {\n  return v - parseFloat(v) >= 0;\n}\n\nexports.linearMap = linearMap;\nexports.parsePercent = parsePercent;\nexports.round = round;\nexports.asc = asc;\nexports.getPrecision = getPrecision;\nexports.getPrecisionSafe = getPrecisionSafe;\nexports.getPixelPrecision = getPixelPrecision;\nexports.getPercentWithPrecision = getPercentWithPrecision;\nexports.MAX_SAFE_INTEGER = MAX_SAFE_INTEGER;\nexports.remRadian = remRadian;\nexports.isRadianAroundZero = isRadianAroundZero;\nexports.parseDate = parseDate;\nexports.quantity = quantity;\nexports.nice = nice;\nexports.reformIntervals = reformIntervals;\nexports.isNumeric = isNumeric;","// (1) The code `if (__DEV__) ...` can be removed by build tool.\n// (2) If intend to use `__DEV__`, this module should be imported. Use a global\n// variable `__DEV__` may cause that miss the declaration (see #6535), or the\n// declaration is behind of the using position (for example in `Model.extent`,\n// And tools like rollup can not analysis the dependency if not import).\nvar dev; // In browser\n\nif (typeof window !== 'undefined') {\n  dev = window.__DEV__;\n} // In node\nelse if (typeof global !== 'undefined') {\n    dev = global.__DEV__;\n  }\n\nif (typeof dev === 'undefined') {\n  dev = true;\n}\n\nvar __DEV__ = dev;\nexports.__DEV__ = __DEV__;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar formatUtil = require(\"./format\");\n\nvar nubmerUtil = require(\"./number\");\n\nvar Model = require(\"../model/Model\");\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\n/**\n * If value is not array, then translate it to array.\n * @param  {*} value\n * @return {Array} [value] or value\n */\n\nfunction normalizeToArray(value) {\n  return value instanceof Array ? value : value == null ? [] : [value];\n}\n/**\n * Sync default option between normal and emphasis like `position` and `show`\n * In case some one will write code like\n *     label: {\n *         normal: {\n *             show: false,\n *             position: 'outside',\n *             fontSize: 18\n *         },\n *         emphasis: {\n *             show: true\n *         }\n *     }\n * @param {Object} opt\n * @param {Array.<string>} subOpts\n */\n\n\nfunction defaultEmphasis(opt, subOpts) {\n  if (opt) {\n    var emphasisOpt = opt.emphasis = opt.emphasis || {};\n    var normalOpt = opt.normal = opt.normal || {}; // Default emphasis option from normal\n\n    for (var i = 0, len = subOpts.length; i < len; i++) {\n      var subOptName = subOpts[i];\n\n      if (!emphasisOpt.hasOwnProperty(subOptName) && normalOpt.hasOwnProperty(subOptName)) {\n        emphasisOpt[subOptName] = normalOpt[subOptName];\n      }\n    }\n  }\n}\n\nvar TEXT_STYLE_OPTIONS = ['fontStyle', 'fontWeight', 'fontSize', 'fontFamily', 'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth', 'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY', 'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY', 'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding']; // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\n//     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\n//     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n//     // FIXME: deprecated, check and remove it.\n//     'textStyle'\n// ]);\n\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method retieves value from data.\n * @param {string|number|Date|Array|Object} dataItem\n * @return {number|string|Date|Array.<number|string|Date>}\n */\n\nfunction getDataItemValue(dataItem) {\n  // Performance sensitive.\n  return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n}\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method determine if dataItem has extra option besides value\n * @param {string|number|Date|Array|Object} dataItem\n */\n\n\nfunction isDataItemOption(dataItem) {\n  return isObject(dataItem) && !(dataItem instanceof Array); // // markLine data can be array\n  // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n}\n/**\n * This helper method convert value in data.\n * @param {string|number|Date} value\n * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n */\n\n\nfunction converDataValue(value, dimInfo) {\n  // Performance sensitive.\n  var dimType = dimInfo && dimInfo.type;\n\n  if (dimType === 'ordinal') {\n    return value;\n  }\n\n  if (dimType === 'time' // spead up when using timestamp\n  && typeof value !== 'number' && value != null && value !== '-') {\n    value = +nubmerUtil.parseDate(value);\n  } // dimType defaults 'number'.\n  // If dimType is not ordinal and value is null or undefined or NaN or '-',\n  // parse to NaN.\n\n\n  return value == null || value === '' ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n}\n/**\n * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n * @param {module:echarts/data/List} data\n * @param {Object} opt\n * @param {string} [opt.seriesIndex]\n * @param {Object} [opt.name]\n * @param {Object} [opt.mainType]\n * @param {Object} [opt.subType]\n */\n\n\nfunction createDataFormatModel(data, opt) {\n  var model = new Model();\n  zrUtil.mixin(model, dataFormatMixin);\n  model.seriesIndex = opt.seriesIndex;\n  model.name = opt.name || '';\n  model.mainType = opt.mainType;\n  model.subType = opt.subType;\n\n  model.getData = function () {\n    return data;\n  };\n\n  return model;\n} // PENDING A little ugly\n\n\nvar dataFormatMixin = {\n  /**\n   * Get params for formatter\n   * @param {number} dataIndex\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getDataParams: function (dataIndex, dataType) {\n    var data = this.getData(dataType);\n    var rawValue = this.getRawValue(dataIndex, dataType);\n    var rawDataIndex = data.getRawIndex(dataIndex);\n    var name = data.getName(dataIndex, true);\n    var itemOpt = data.getRawDataItem(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n    return {\n      componentType: this.mainType,\n      componentSubType: this.subType,\n      seriesType: this.mainType === 'series' ? this.subType : null,\n      seriesIndex: this.seriesIndex,\n      seriesId: this.id,\n      seriesName: this.name,\n      name: name,\n      dataIndex: rawDataIndex,\n      data: itemOpt,\n      dataType: dataType,\n      value: rawValue,\n      color: color,\n      marker: formatUtil.getTooltipMarker(color),\n      // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n      $vars: ['seriesName', 'name', 'value']\n    };\n  },\n\n  /**\n   * Format label\n   * @param {number} dataIndex\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @param {string} [dataType]\n   * @param {number} [dimIndex]\n   * @param {string} [labelProp='label']\n   * @return {string}\n   */\n  getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n    status = status || 'normal';\n    var data = this.getData(dataType);\n    var itemModel = data.getItemModel(dataIndex);\n    var params = this.getDataParams(dataIndex, dataType);\n\n    if (dimIndex != null && params.value instanceof Array) {\n      params.value = params.value[dimIndex];\n    }\n\n    var formatter = itemModel.get([labelProp || 'label', status, 'formatter']);\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      return formatUtil.formatTpl(formatter, params);\n    }\n  },\n\n  /**\n   * Get raw value in option\n   * @param {number} idx\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getRawValue: function (idx, dataType) {\n    var data = this.getData(dataType);\n    var dataItem = data.getRawDataItem(idx);\n\n    if (dataItem != null) {\n      return isObject(dataItem) && !(dataItem instanceof Array) ? dataItem.value : dataItem;\n    }\n  },\n\n  /**\n   * Should be implemented.\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   * @return {string} tooltip string\n   */\n  formatTooltip: zrUtil.noop\n};\n/**\n * Mapping to exists for merge.\n *\n * @public\n * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n * @param {Object|Array.<Object>} newCptOptions\n * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          index of which is the same as exists.\n */\n\nfunction mappingToExists(exists, newCptOptions) {\n  // Mapping by the order by original option (but not order of\n  // new option) in merge mode. Because we should ensure\n  // some specified index (like xAxisIndex) is consistent with\n  // original option, which is easy to understand, espatially in\n  // media query. And in most case, merge option is used to\n  // update partial option but not be expected to change order.\n  newCptOptions = (newCptOptions || []).slice();\n  var result = zrUtil.map(exists || [], function (obj, index) {\n    return {\n      exist: obj\n    };\n  }); // Mapping by id or name if specified.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    } // id has highest priority.\n\n\n    for (var i = 0; i < result.length; i++) {\n      if (!result[i].option // Consider name: two map to one.\n      && cptOption.id != null && result[i].exist.id === cptOption.id + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n\n    for (var i = 0; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Consider name: two map to one.\n      // Can not match when both ids exist but different.\n      && (exist.id == null || cptOption.id == null) && cptOption.name != null && !isIdInner(cptOption) && !isIdInner(exist) && exist.name === cptOption.name + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n  }); // Otherwise mapping by index.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    }\n\n    var i = 0;\n\n    for (; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Existing model that already has id should be able to\n      // mapped to (because after mapping performed model may\n      // be assigned with a id, whish should not affect next\n      // mapping), except those has inner id.\n      && !isIdInner(exist) // Caution:\n      // Do not overwrite id. But name can be overwritten,\n      // because axis use name as 'show label text'.\n      // 'exist' always has id and name and we dont\n      // need to check it.\n      && cptOption.id == null) {\n        result[i].option = cptOption;\n        break;\n      }\n    }\n\n    if (i >= result.length) {\n      result.push({\n        option: cptOption\n      });\n    }\n  });\n  return result;\n}\n/**\n * Make id and name for mapping result (result of mappingToExists)\n * into `keyInfo` field.\n *\n * @public\n * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          which order is the same as exists.\n * @return {Array.<Object>} The input.\n */\n\n\nfunction makeIdAndName(mapResult) {\n  // We use this id to hash component models and view instances\n  // in echarts. id can be specified by user, or auto generated.\n  // The id generation rule ensures new view instance are able\n  // to mapped to old instance when setOption are called in\n  // no-merge mode. So we generate model id by name and plus\n  // type in view id.\n  // name can be duplicated among components, which is convenient\n  // to specify multi components (like series) by one name.\n  // Ensure that each id is distinct.\n  var idMap = zrUtil.createHashMap();\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    existCpt && idMap.set(existCpt.id, item);\n  });\n  each(mapResult, function (item, index) {\n    var opt = item.option;\n    zrUtil.assert(!opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item, 'id duplicates: ' + (opt && opt.id));\n    opt && opt.id != null && idMap.set(opt.id, item);\n    !item.keyInfo && (item.keyInfo = {});\n  }); // Make name and id.\n\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    var opt = item.option;\n    var keyInfo = item.keyInfo;\n\n    if (!isObject(opt)) {\n      return;\n    } // name can be overwitten. Consider case: axis.name = '20km'.\n    // But id generated by name will not be changed, which affect\n    // only in that case: setOption with 'not merge mode' and view\n    // instance will be recreated, which can be accepted.\n\n\n    keyInfo.name = opt.name != null ? opt.name + '' : existCpt ? existCpt.name : '\\0-'; // name may be displayed on screen, so use '-'.\n\n    if (existCpt) {\n      keyInfo.id = existCpt.id;\n    } else if (opt.id != null) {\n      keyInfo.id = opt.id + '';\n    } else {\n      // Consider this situatoin:\n      //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n      //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n      // Series with the same name between optionA and optionB\n      // should be mapped.\n      var idNum = 0;\n\n      do {\n        keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n      } while (idMap.get(keyInfo.id));\n    }\n\n    idMap.set(keyInfo.id, item);\n  });\n}\n/**\n * @public\n * @param {Object} cptOption\n * @return {boolean}\n */\n\n\nfunction isIdInner(cptOption) {\n  return isObject(cptOption) && cptOption.id && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n}\n/**\n * A helper for removing duplicate items between batchA and batchB,\n * and in themselves, and categorize by series.\n *\n * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n */\n\n\nfunction compressBatches(batchA, batchB) {\n  var mapA = {};\n  var mapB = {};\n  makeMap(batchA || [], mapA);\n  makeMap(batchB || [], mapB, mapA);\n  return [mapToArray(mapA), mapToArray(mapB)];\n\n  function makeMap(sourceBatch, map, otherMap) {\n    for (var i = 0, len = sourceBatch.length; i < len; i++) {\n      var seriesId = sourceBatch[i].seriesId;\n      var dataIndices = normalizeToArray(sourceBatch[i].dataIndex);\n      var otherDataIndices = otherMap && otherMap[seriesId];\n\n      for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n        var dataIndex = dataIndices[j];\n\n        if (otherDataIndices && otherDataIndices[dataIndex]) {\n          otherDataIndices[dataIndex] = null;\n        } else {\n          (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n        }\n      }\n    }\n  }\n\n  function mapToArray(map, isData) {\n    var result = [];\n\n    for (var i in map) {\n      if (map.hasOwnProperty(i) && map[i] != null) {\n        if (isData) {\n          result.push(+i);\n        } else {\n          var dataIndices = mapToArray(map[i], true);\n          dataIndices.length && result.push({\n            seriesId: i,\n            dataIndex: dataIndices\n          });\n        }\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n *                         each of which can be Array or primary type.\n * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n */\n\n\nfunction queryDataIndex(data, payload) {\n  if (payload.dataIndexInside != null) {\n    return payload.dataIndexInside;\n  } else if (payload.dataIndex != null) {\n    return zrUtil.isArray(payload.dataIndex) ? zrUtil.map(payload.dataIndex, function (value) {\n      return data.indexOfRawIndex(value);\n    }) : data.indexOfRawIndex(payload.dataIndex);\n  } else if (payload.name != null) {\n    return zrUtil.isArray(payload.name) ? zrUtil.map(payload.name, function (value) {\n      return data.indexOfName(value);\n    }) : data.indexOfName(payload.name);\n  }\n}\n/**\n * Enable property storage to any host object.\n * Notice: Serialization is not supported.\n *\n * For example:\n * var get = modelUitl.makeGetter();\n *\n * function some(hostObj) {\n *      get(hostObj)._someProperty = 1212;\n *      ...\n * }\n *\n * @return {Function}\n */\n\n\nvar makeGetter = function () {\n  var index = 0;\n  return function () {\n    var key = '\\0__ec_prop_getter_' + index++;\n    return function (hostObj) {\n      return hostObj[key] || (hostObj[key] = {});\n    };\n  };\n}();\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex, seriesId, seriesName,\n *            geoIndex, geoId, geoName,\n *            bmapIndex, bmapId, bmapName,\n *            xAxisIndex, xAxisId, xAxisName,\n *            yAxisIndex, yAxisId, yAxisName,\n *            gridIndex, gridId, gridName,\n *            ... (can be extended)\n *        }\n *        Each properties can be number|string|Array.<number>|Array.<string>\n *        For example, a finder could be\n *        {\n *            seriesIndex: 3,\n *            geoId: ['aa', 'cc'],\n *            gridName: ['xx', 'rr']\n *        }\n *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n *        If nothing or null/undefined specified, return nothing.\n * @param {Object} [opt]\n * @param {string} [opt.defaultMainType]\n * @param {Array.<string>} [opt.includeMainTypes]\n * @return {Object} result like:\n *        {\n *            seriesModels: [seriesModel1, seriesModel2],\n *            seriesModel: seriesModel1, // The first model\n *            geoModels: [geoModel1, geoModel2],\n *            geoModel: geoModel1, // The first model\n *            ...\n *        }\n */\n\n\nfunction parseFinder(ecModel, finder, opt) {\n  if (zrUtil.isString(finder)) {\n    var obj = {};\n    obj[finder + 'Index'] = 0;\n    finder = obj;\n  }\n\n  var defaultMainType = opt && opt.defaultMainType;\n\n  if (defaultMainType && !has(finder, defaultMainType + 'Index') && !has(finder, defaultMainType + 'Id') && !has(finder, defaultMainType + 'Name')) {\n    finder[defaultMainType + 'Index'] = 0;\n  }\n\n  var result = {};\n  each(finder, function (value, key) {\n    var value = finder[key]; // Exclude 'dataIndex' and other illgal keys.\n\n    if (key === 'dataIndex' || key === 'dataIndexInside') {\n      result[key] = value;\n      return;\n    }\n\n    var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n    var mainType = parsedKey[1];\n    var queryType = (parsedKey[2] || '').toLowerCase();\n\n    if (!mainType || !queryType || value == null || queryType === 'index' && value === 'none' || opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0) {\n      return;\n    }\n\n    var queryParam = {\n      mainType: mainType\n    };\n\n    if (queryType !== 'index' || value !== 'all') {\n      queryParam[queryType] = value;\n    }\n\n    var models = ecModel.queryComponents(queryParam);\n    result[mainType + 'Models'] = models;\n    result[mainType + 'Model'] = models[0];\n  });\n  return result;\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string|number} dataDim\n * @return {string}\n */\n\n\nfunction dataDimToCoordDim(data, dataDim) {\n  var dimensions = data.dimensions;\n  dataDim = data.getDimension(dataDim);\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimItem = data.getDimensionInfo(dimensions[i]);\n\n    if (dimItem.name === dataDim) {\n      return dimItem.coordDim;\n    }\n  }\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string} coordDim\n * @return {Array.<string>} data dimensions on the coordDim.\n */\n\n\nfunction coordDimToDataDim(data, coordDim) {\n  var dataDim = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n\n    if (dimItem.coordDim === coordDim) {\n      dataDim[dimItem.coordDimIndex] = dimItem.name;\n    }\n  });\n  return dataDim;\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string} otherDim Can be `otherDims`\n *                        like 'label' or 'tooltip'.\n * @return {Array.<string>} data dimensions on the otherDim.\n */\n\n\nfunction otherDimToDataDim(data, otherDim) {\n  var dataDim = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n    var otherDims = dimItem.otherDims;\n    var dimIndex = otherDims[otherDim];\n\n    if (dimIndex != null && dimIndex !== false) {\n      dataDim[dimIndex] = dimItem.name;\n    }\n  });\n  return dataDim;\n}\n\nfunction has(obj, prop) {\n  return obj && obj.hasOwnProperty(prop);\n}\n\nexports.normalizeToArray = normalizeToArray;\nexports.defaultEmphasis = defaultEmphasis;\nexports.TEXT_STYLE_OPTIONS = TEXT_STYLE_OPTIONS;\nexports.getDataItemValue = getDataItemValue;\nexports.isDataItemOption = isDataItemOption;\nexports.converDataValue = converDataValue;\nexports.createDataFormatModel = createDataFormatModel;\nexports.dataFormatMixin = dataFormatMixin;\nexports.mappingToExists = mappingToExists;\nexports.makeIdAndName = makeIdAndName;\nexports.isIdInner = isIdInner;\nexports.compressBatches = compressBatches;\nexports.queryDataIndex = queryDataIndex;\nexports.makeGetter = makeGetter;\nexports.parseFinder = parseFinder;\nexports.dataDimToCoordDim = dataDimToCoordDim;\nexports.coordDimToDataDim = coordDimToDataDim;\nexports.otherDimToDataDim = otherDimToDataDim;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _number = require(\"./number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar formatUtil = require(\"./format\");\n\n// Layout helpers for each component positioning\nvar each = zrUtil.each;\n/**\n * @public\n */\n\nvar LOCATION_PARAMS = ['left', 'right', 'top', 'bottom', 'width', 'height'];\n/**\n * @public\n */\n\nvar HV_NAMES = [['width', 'left', 'right'], ['height', 'top', 'bottom']];\n\nfunction boxLayout(orient, group, gap, maxWidth, maxHeight) {\n  var x = 0;\n  var y = 0;\n\n  if (maxWidth == null) {\n    maxWidth = Infinity;\n  }\n\n  if (maxHeight == null) {\n    maxHeight = Infinity;\n  }\n\n  var currentLineMaxSize = 0;\n  group.eachChild(function (child, idx) {\n    var position = child.position;\n    var rect = child.getBoundingRect();\n    var nextChild = group.childAt(idx + 1);\n    var nextChildRect = nextChild && nextChild.getBoundingRect();\n    var nextX;\n    var nextY;\n\n    if (orient === 'horizontal') {\n      var moveX = rect.width + (nextChildRect ? -nextChildRect.x + rect.x : 0);\n      nextX = x + moveX; // Wrap when width exceeds maxWidth or meet a `newline` group\n      // FIXME compare before adding gap?\n\n      if (nextX > maxWidth || child.newline) {\n        x = 0;\n        nextX = moveX;\n        y += currentLineMaxSize + gap;\n        currentLineMaxSize = rect.height;\n      } else {\n        // FIXME: consider rect.y is not `0`?\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n      }\n    } else {\n      var moveY = rect.height + (nextChildRect ? -nextChildRect.y + rect.y : 0);\n      nextY = y + moveY; // Wrap when width exceeds maxHeight or meet a `newline` group\n\n      if (nextY > maxHeight || child.newline) {\n        x += currentLineMaxSize + gap;\n        y = 0;\n        nextY = moveY;\n        currentLineMaxSize = rect.width;\n      } else {\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n      }\n    }\n\n    if (child.newline) {\n      return;\n    }\n\n    position[0] = x;\n    position[1] = y;\n    orient === 'horizontal' ? x = nextX + gap : y = nextY + gap;\n  });\n}\n/**\n * VBox or HBox layouting\n * @param {string} orient\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\n\nvar box = boxLayout;\n/**\n * VBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar vbox = zrUtil.curry(boxLayout, 'vertical');\n/**\n * HBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar hbox = zrUtil.curry(boxLayout, 'horizontal');\n/**\n * If x or x2 is not specified or 'center' 'left' 'right',\n * the width would be as long as possible.\n * If y or y2 is not specified or 'middle' 'top' 'bottom',\n * the height would be as long as possible.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.x]\n * @param {number|string} [positionInfo.y]\n * @param {number|string} [positionInfo.x2]\n * @param {number|string} [positionInfo.y2]\n * @param {Object} containerRect {width, height}\n * @param {string|number} margin\n * @return {Object} {width, height}\n */\n\nfunction getAvailableSize(positionInfo, containerRect, margin) {\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var x = parsePercent(positionInfo.x, containerWidth);\n  var y = parsePercent(positionInfo.y, containerHeight);\n  var x2 = parsePercent(positionInfo.x2, containerWidth);\n  var y2 = parsePercent(positionInfo.y2, containerHeight);\n  (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n  (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n  (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n  (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  return {\n    width: Math.max(x2 - x - margin[1] - margin[3], 0),\n    height: Math.max(y2 - y - margin[0] - margin[2], 0)\n  };\n}\n/**\n * Parse position info.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width]\n * @param {number|string} [positionInfo.height]\n * @param {number|string} [positionInfo.aspect] Aspect is width / height\n * @param {Object} containerRect\n * @param {string|number} [margin]\n *\n * @return {module:zrender/core/BoundingRect}\n */\n\n\nfunction getLayoutRect(positionInfo, containerRect, margin) {\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var left = parsePercent(positionInfo.left, containerWidth);\n  var top = parsePercent(positionInfo.top, containerHeight);\n  var right = parsePercent(positionInfo.right, containerWidth);\n  var bottom = parsePercent(positionInfo.bottom, containerHeight);\n  var width = parsePercent(positionInfo.width, containerWidth);\n  var height = parsePercent(positionInfo.height, containerHeight);\n  var verticalMargin = margin[2] + margin[0];\n  var horizontalMargin = margin[1] + margin[3];\n  var aspect = positionInfo.aspect; // If width is not specified, calculate width from left and right\n\n  if (isNaN(width)) {\n    width = containerWidth - right - horizontalMargin - left;\n  }\n\n  if (isNaN(height)) {\n    height = containerHeight - bottom - verticalMargin - top;\n  }\n\n  if (aspect != null) {\n    // If width and height are not given\n    // 1. Graph should not exceeds the container\n    // 2. Aspect must be keeped\n    // 3. Graph should take the space as more as possible\n    // FIXME\n    // Margin is not considered, because there is no case that both\n    // using margin and aspect so far.\n    if (isNaN(width) && isNaN(height)) {\n      if (aspect > containerWidth / containerHeight) {\n        width = containerWidth * 0.8;\n      } else {\n        height = containerHeight * 0.8;\n      }\n    } // Calculate width or height with given aspect\n\n\n    if (isNaN(width)) {\n      width = aspect * height;\n    }\n\n    if (isNaN(height)) {\n      height = width / aspect;\n    }\n  } // If left is not specified, calculate left from right and width\n\n\n  if (isNaN(left)) {\n    left = containerWidth - right - width - horizontalMargin;\n  }\n\n  if (isNaN(top)) {\n    top = containerHeight - bottom - height - verticalMargin;\n  } // Align left and top\n\n\n  switch (positionInfo.left || positionInfo.right) {\n    case 'center':\n      left = containerWidth / 2 - width / 2 - margin[3];\n      break;\n\n    case 'right':\n      left = containerWidth - width - horizontalMargin;\n      break;\n  }\n\n  switch (positionInfo.top || positionInfo.bottom) {\n    case 'middle':\n    case 'center':\n      top = containerHeight / 2 - height / 2 - margin[0];\n      break;\n\n    case 'bottom':\n      top = containerHeight - height - verticalMargin;\n      break;\n  } // If something is wrong and left, top, width, height are calculated as NaN\n\n\n  left = left || 0;\n  top = top || 0;\n\n  if (isNaN(width)) {\n    // Width may be NaN if only one value is given except width\n    width = containerWidth - horizontalMargin - left - (right || 0);\n  }\n\n  if (isNaN(height)) {\n    // Height may be NaN if only one value is given except height\n    height = containerHeight - verticalMargin - top - (bottom || 0);\n  }\n\n  var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n  rect.margin = margin;\n  return rect;\n}\n/**\n * Position a zr element in viewport\n *  Group position is specified by either\n *  {left, top}, {right, bottom}\n *  If all properties exists, right and bottom will be igonred.\n *\n * Logic:\n *     1. Scale (against origin point in parent coord)\n *     2. Rotate (against origin point in parent coord)\n *     3. Traslate (with el.position by this method)\n * So this method only fixes the last step 'Traslate', which does not affect\n * scaling and rotating.\n *\n * If be called repeatly with the same input el, the same result will be gotten.\n *\n * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\n * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\n * @param {Object} containerRect\n * @param {string|number} margin\n * @param {Object} [opt]\n * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n * @param {Array.<number>} [opt.boundingMode='all']\n *        Specify how to calculate boundingRect when locating.\n *        'all': Position the boundingRect that is transformed and uioned\n *               both itself and its descendants.\n *               This mode simplies confine the elements in the bounding\n *               of their container (e.g., using 'right: 0').\n *        'raw': Position the boundingRect that is not transformed and only itself.\n *               This mode is useful when you want a element can overflow its\n *               container. (Consider a rotated circle needs to be located in a corner.)\n *               In this mode positionInfo.width/height can only be number.\n */\n\n\nfunction positionElement(el, positionInfo, containerRect, margin, opt) {\n  var h = !opt || !opt.hv || opt.hv[0];\n  var v = !opt || !opt.hv || opt.hv[1];\n  var boundingMode = opt && opt.boundingMode || 'all';\n\n  if (!h && !v) {\n    return;\n  }\n\n  var rect;\n\n  if (boundingMode === 'raw') {\n    rect = el.type === 'group' ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0) : el.getBoundingRect();\n  } else {\n    rect = el.getBoundingRect();\n\n    if (el.needLocalTransform()) {\n      var transform = el.getLocalTransform(); // Notice: raw rect may be inner object of el,\n      // which should not be modified.\n\n      rect = rect.clone();\n      rect.applyTransform(transform);\n    }\n  } // The real width and height can not be specified but calculated by the given el.\n\n\n  positionInfo = getLayoutRect(zrUtil.defaults({\n    width: rect.width,\n    height: rect.height\n  }, positionInfo), containerRect, margin); // Because 'tranlate' is the last step in transform\n  // (see zrender/core/Transformable#getLocalTransfrom),\n  // we can just only modify el.position to get final result.\n\n  var elPos = el.position;\n  var dx = h ? positionInfo.x - rect.x : 0;\n  var dy = v ? positionInfo.y - rect.y : 0;\n  el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n}\n/**\n * @param {Object} option Contains some of the properties in HV_NAMES.\n * @param {number} hvIdx 0: horizontal; 1: vertical.\n */\n\n\nfunction sizeCalculable(option, hvIdx) {\n  return option[HV_NAMES[hvIdx][0]] != null || option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null;\n}\n/**\n * Consider Case:\n * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n * through setOption or media query, using normal zrUtil.merge will cause\n * {right: 0} does not take effect.\n *\n * @example\n * ComponentModel.extend({\n *     init: function () {\n *         ...\n *         var inputPositionParams = layout.getLayoutParams(option);\n *         this.mergeOption(inputPositionParams);\n *     },\n *     mergeOption: function (newOption) {\n *         newOption && zrUtil.merge(thisOption, newOption, true);\n *         layout.mergeLayoutParam(thisOption, newOption);\n *     }\n * });\n *\n * @param {Object} targetOption\n * @param {Object} newOption\n * @param {Object|string} [opt]\n * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\n *  that width (or height) should not be calculated by left and right (or top and bottom).\n */\n\n\nfunction mergeLayoutParam(targetOption, newOption, opt) {\n  !zrUtil.isObject(opt) && (opt = {});\n  var ignoreSize = opt.ignoreSize;\n  !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n  var hResult = merge(HV_NAMES[0], 0);\n  var vResult = merge(HV_NAMES[1], 1);\n  copy(HV_NAMES[0], targetOption, hResult);\n  copy(HV_NAMES[1], targetOption, vResult);\n\n  function merge(names, hvIdx) {\n    var newParams = {};\n    var newValueCount = 0;\n    var merged = {};\n    var mergedValueCount = 0;\n    var enoughParamNumber = 2;\n    each(names, function (name) {\n      merged[name] = targetOption[name];\n    });\n    each(names, function (name) {\n      // Consider case: newOption.width is null, which is\n      // set by user for removing width setting.\n      hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n      hasValue(newParams, name) && newValueCount++;\n      hasValue(merged, name) && mergedValueCount++;\n    });\n\n    if (ignoreSize[hvIdx]) {\n      // Only one of left/right is premitted to exist.\n      if (hasValue(newOption, names[1])) {\n        merged[names[2]] = null;\n      } else if (hasValue(newOption, names[2])) {\n        merged[names[1]] = null;\n      }\n\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // or targetOption: {right: ...} and newOption: {width: ...},\n    // There is no conflict when merged only has params count\n    // little than enoughParamNumber.\n\n\n    if (mergedValueCount === enoughParamNumber || !newValueCount) {\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // Than we can make sure user only want those two, and ignore\n    // all origin params in targetOption.\n    else if (newValueCount >= enoughParamNumber) {\n        return newParams;\n      } else {\n        // Chose another param from targetOption by priority.\n        for (var i = 0; i < names.length; i++) {\n          var name = names[i];\n\n          if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n            newParams[name] = targetOption[name];\n            break;\n          }\n        }\n\n        return newParams;\n      }\n  }\n\n  function hasProp(obj, name) {\n    return obj.hasOwnProperty(name);\n  }\n\n  function hasValue(obj, name) {\n    return obj[name] != null && obj[name] !== 'auto';\n  }\n\n  function copy(names, target, source) {\n    each(names, function (name) {\n      target[name] = source[name];\n    });\n  }\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction getLayoutParams(source) {\n  return copyLayoutParams({}, source);\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction copyLayoutParams(target, source) {\n  source && target && each(LOCATION_PARAMS, function (name) {\n    source.hasOwnProperty(name) && (target[name] = source[name]);\n  });\n  return target;\n}\n\nexports.LOCATION_PARAMS = LOCATION_PARAMS;\nexports.HV_NAMES = HV_NAMES;\nexports.box = box;\nexports.vbox = vbox;\nexports.hbox = hbox;\nexports.getAvailableSize = getAvailableSize;\nexports.getLayoutRect = getLayoutRect;\nexports.positionElement = positionElement;\nexports.sizeCalculable = sizeCalculable;\nexports.mergeLayoutParam = mergeLayoutParam;\nexports.getLayoutParams = getLayoutParams;\nexports.copyLayoutParams = copyLayoutParams;","var ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个向量\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @return {Vector2}\n */\n\nfunction create(x, y) {\n  var out = new ArrayCtor(2);\n\n  if (x == null) {\n    x = 0;\n  }\n\n  if (y == null) {\n    y = 0;\n  }\n\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * 复制向量数据\n * @param {Vector2} out\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction copy(out, v) {\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 克隆一个向量\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction clone(v) {\n  var out = new ArrayCtor(2);\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 设置向量的两个项\n * @param {Vector2} out\n * @param {number} a\n * @param {number} b\n * @return {Vector2} 结果\n */\n\n\nfunction set(out, a, b) {\n  out[0] = a;\n  out[1] = b;\n  return out;\n}\n/**\n * 向量相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction add(out, v1, v2) {\n  out[0] = v1[0] + v2[0];\n  out[1] = v1[1] + v2[1];\n  return out;\n}\n/**\n * 向量缩放后相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} a\n */\n\n\nfunction scaleAndAdd(out, v1, v2, a) {\n  out[0] = v1[0] + v2[0] * a;\n  out[1] = v1[1] + v2[1] * a;\n  return out;\n}\n/**\n * 向量相减\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction sub(out, v1, v2) {\n  out[0] = v1[0] - v2[0];\n  out[1] = v1[1] - v2[1];\n  return out;\n}\n/**\n * 向量长度\n * @param {Vector2} v\n * @return {number}\n */\n\n\nfunction len(v) {\n  return Math.sqrt(lenSquare(v));\n}\n\nvar length = len; // jshint ignore:line\n\n/**\n * 向量长度平方\n * @param {Vector2} v\n * @return {number}\n */\n\nfunction lenSquare(v) {\n  return v[0] * v[0] + v[1] * v[1];\n}\n\nvar lengthSquare = lenSquare;\n/**\n * 向量乘法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\nfunction mul(out, v1, v2) {\n  out[0] = v1[0] * v2[0];\n  out[1] = v1[1] * v2[1];\n  return out;\n}\n/**\n * 向量除法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction div(out, v1, v2) {\n  out[0] = v1[0] / v2[0];\n  out[1] = v1[1] / v2[1];\n  return out;\n}\n/**\n * 向量点乘\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction dot(v1, v2) {\n  return v1[0] * v2[0] + v1[1] * v2[1];\n}\n/**\n * 向量缩放\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {number} s\n */\n\n\nfunction scale(out, v, s) {\n  out[0] = v[0] * s;\n  out[1] = v[1] * s;\n  return out;\n}\n/**\n * 向量归一化\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\n\nfunction normalize(out, v) {\n  var d = len(v);\n\n  if (d === 0) {\n    out[0] = 0;\n    out[1] = 0;\n  } else {\n    out[0] = v[0] / d;\n    out[1] = v[1] / d;\n  }\n\n  return out;\n}\n/**\n * 计算向量间距离\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction distance(v1, v2) {\n  return Math.sqrt((v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]));\n}\n\nvar dist = distance;\n/**\n * 向量距离平方\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\nfunction distanceSquare(v1, v2) {\n  return (v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n}\n\nvar distSquare = distanceSquare;\n/**\n * 求负向量\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\nfunction negate(out, v) {\n  out[0] = -v[0];\n  out[1] = -v[1];\n  return out;\n}\n/**\n * 插值两个点\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} t\n */\n\n\nfunction lerp(out, v1, v2, t) {\n  out[0] = v1[0] + t * (v2[0] - v1[0]);\n  out[1] = v1[1] + t * (v2[1] - v1[1]);\n  return out;\n}\n/**\n * 矩阵左乘向量\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {Vector2} m\n */\n\n\nfunction applyTransform(out, v, m) {\n  var x = v[0];\n  var y = v[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * 求两个向量最小值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction min(out, v1, v2) {\n  out[0] = Math.min(v1[0], v2[0]);\n  out[1] = Math.min(v1[1], v2[1]);\n  return out;\n}\n/**\n * 求两个向量最大值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction max(out, v1, v2) {\n  out[0] = Math.max(v1[0], v2[0]);\n  out[1] = Math.max(v1[1], v2[1]);\n  return out;\n}\n\nexports.create = create;\nexports.copy = copy;\nexports.clone = clone;\nexports.set = set;\nexports.add = add;\nexports.scaleAndAdd = scaleAndAdd;\nexports.sub = sub;\nexports.len = len;\nexports.length = length;\nexports.lenSquare = lenSquare;\nexports.lengthSquare = lengthSquare;\nexports.mul = mul;\nexports.div = div;\nexports.dot = dot;\nexports.scale = scale;\nexports.normalize = normalize;\nexports.distance = distance;\nexports.dist = dist;\nexports.distanceSquare = distanceSquare;\nexports.distSquare = distSquare;\nexports.negate = negate;\nexports.lerp = lerp;\nexports.applyTransform = applyTransform;\nexports.min = min;\nexports.max = max;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar numberUtil = require(\"./number\");\n\n/**\n * 每三位默认加,格式化\n * @param {string|number} x\n * @return {string}\n */\nfunction addCommas(x) {\n  if (isNaN(x)) {\n    return '-';\n  }\n\n  x = (x + '').split('.');\n  return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g, '$1,') + (x.length > 1 ? '.' + x[1] : '');\n}\n/**\n * @param {string} str\n * @param {boolean} [upperCaseFirst=false]\n * @return {string} str\n */\n\n\nfunction toCamelCase(str, upperCaseFirst) {\n  str = (str || '').toLowerCase().replace(/-(.)/g, function (match, group1) {\n    return group1.toUpperCase();\n  });\n\n  if (upperCaseFirst && str) {\n    str = str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  return str;\n}\n\nvar normalizeCssArray = zrUtil.normalizeCssArray;\n\nfunction encodeHTML(source) {\n  return String(source).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;');\n}\n\nvar TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\nvar wrapVar = function (varName, seriesIdx) {\n  return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n};\n/**\n * Template formatter\n * @param {string} tpl\n * @param {Array.<Object>|Object} paramsList\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTpl(tpl, paramsList, encode) {\n  if (!zrUtil.isArray(paramsList)) {\n    paramsList = [paramsList];\n  }\n\n  var seriesLen = paramsList.length;\n\n  if (!seriesLen) {\n    return '';\n  }\n\n  var $vars = paramsList[0].$vars || [];\n\n  for (var i = 0; i < $vars.length; i++) {\n    var alias = TPL_VAR_ALIAS[i];\n    var val = wrapVar(alias, 0);\n    tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n  }\n\n  for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n    for (var k = 0; k < $vars.length; k++) {\n      var val = paramsList[seriesIdx][$vars[k]];\n      tpl = tpl.replace(wrapVar(TPL_VAR_ALIAS[k], seriesIdx), encode ? encodeHTML(val) : val);\n    }\n  }\n\n  return tpl;\n}\n/**\n * simple Template formatter\n *\n * @param {string} tpl\n * @param {Object} param\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTplSimple(tpl, param, encode) {\n  zrUtil.each(param, function (value, key) {\n    tpl = tpl.replace('{' + key + '}', encode ? encodeHTML(value) : value);\n  });\n  return tpl;\n}\n/**\n * @param {string} color\n * @param {string} [extraCssText]\n * @return {string}\n */\n\n\nfunction getTooltipMarker(color, extraCssText) {\n  return color ? '<span style=\"display:inline-block;margin-right:5px;' + 'border-radius:10px;width:9px;height:9px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>' : '';\n}\n/**\n * @param {string} str\n * @return {string}\n * @inner\n */\n\n\nvar s2d = function (str) {\n  return str < 10 ? '0' + str : str;\n};\n/**\n * ISO Date format\n * @param {string} tpl\n * @param {number} value\n * @param {boolean} [isUTC=false] Default in local time.\n *           see `module:echarts/scale/Time`\n *           and `module:echarts/util/number#parseDate`.\n * @inner\n */\n\n\nfunction formatTime(tpl, value, isUTC) {\n  if (tpl === 'week' || tpl === 'month' || tpl === 'quarter' || tpl === 'half-year' || tpl === 'year') {\n    tpl = 'MM-dd\\nyyyy';\n  }\n\n  var date = numberUtil.parseDate(value);\n  var utc = isUTC ? 'UTC' : '';\n  var y = date['get' + utc + 'FullYear']();\n  var M = date['get' + utc + 'Month']() + 1;\n  var d = date['get' + utc + 'Date']();\n  var h = date['get' + utc + 'Hours']();\n  var m = date['get' + utc + 'Minutes']();\n  var s = date['get' + utc + 'Seconds']();\n  tpl = tpl.replace('MM', s2d(M)).replace('M', M).replace('yyyy', y).replace('yy', y % 100).replace('dd', s2d(d)).replace('d', d).replace('hh', s2d(h)).replace('h', h).replace('mm', s2d(m)).replace('m', m).replace('ss', s2d(s)).replace('s', s);\n  return tpl;\n}\n/**\n * Capital first\n * @param {string} str\n * @return {string}\n */\n\n\nfunction capitalFirst(str) {\n  return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n}\n\nvar truncateText = textContain.truncateText;\nvar getTextRect = textContain.getBoundingRect;\nexports.addCommas = addCommas;\nexports.toCamelCase = toCamelCase;\nexports.normalizeCssArray = normalizeCssArray;\nexports.encodeHTML = encodeHTML;\nexports.formatTpl = formatTpl;\nexports.formatTplSimple = formatTplSimple;\nexports.getTooltipMarker = getTooltipMarker;\nexports.formatTime = formatTime;\nexports.capitalFirst = capitalFirst;\nexports.truncateText = truncateText;\nexports.getTextRect = getTextRect;","var vec2 = require(\"./vector\");\n\nvar matrix = require(\"./matrix\");\n\n/**\n * @module echarts/core/BoundingRect\n */\nvar v2ApplyTransform = vec2.applyTransform;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\n/**\n * @alias module:echarts/core/BoundingRect\n */\n\nfunction BoundingRect(x, y, width, height) {\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n  /**\n   * @type {number}\n   */\n\n\n  this.x = x;\n  /**\n   * @type {number}\n   */\n\n  this.y = y;\n  /**\n   * @type {number}\n   */\n\n  this.width = width;\n  /**\n   * @type {number}\n   */\n\n  this.height = height;\n}\n\nBoundingRect.prototype = {\n  constructor: BoundingRect,\n\n  /**\n   * @param {module:echarts/core/BoundingRect} other\n   */\n  union: function (other) {\n    var x = mathMin(other.x, this.x);\n    var y = mathMin(other.y, this.y);\n    this.width = mathMax(other.x + other.width, this.x + this.width) - x;\n    this.height = mathMax(other.y + other.height, this.y + this.height) - y;\n    this.x = x;\n    this.y = y;\n  },\n\n  /**\n   * @param {Array.<number>} m\n   * @methods\n   */\n  applyTransform: function () {\n    var lt = [];\n    var rb = [];\n    var lb = [];\n    var rt = [];\n    return function (m) {\n      // In case usage like this\n      // el.getBoundingRect().applyTransform(el.transform)\n      // And element has no transform\n      if (!m) {\n        return;\n      }\n\n      lt[0] = lb[0] = this.x;\n      lt[1] = rt[1] = this.y;\n      rb[0] = rt[0] = this.x + this.width;\n      rb[1] = lb[1] = this.y + this.height;\n      v2ApplyTransform(lt, lt, m);\n      v2ApplyTransform(rb, rb, m);\n      v2ApplyTransform(lb, lb, m);\n      v2ApplyTransform(rt, rt, m);\n      this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n      this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n      var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n      var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n      this.width = maxX - this.x;\n      this.height = maxY - this.y;\n    };\n  }(),\n\n  /**\n   * Calculate matrix of transforming from self to target rect\n   * @param  {module:zrender/core/BoundingRect} b\n   * @return {Array.<number>}\n   */\n  calculateTransform: function (b) {\n    var a = this;\n    var sx = b.width / a.width;\n    var sy = b.height / a.height;\n    var m = matrix.create(); // 矩阵右乘\n\n    matrix.translate(m, m, [-a.x, -a.y]);\n    matrix.scale(m, m, [sx, sy]);\n    matrix.translate(m, m, [b.x, b.y]);\n    return m;\n  },\n\n  /**\n   * @param {(module:echarts/core/BoundingRect|Object)} b\n   * @return {boolean}\n   */\n  intersect: function (b) {\n    if (!b) {\n      return false;\n    }\n\n    if (!(b instanceof BoundingRect)) {\n      // Normalize negative width/height.\n      b = BoundingRect.create(b);\n    }\n\n    var a = this;\n    var ax0 = a.x;\n    var ax1 = a.x + a.width;\n    var ay0 = a.y;\n    var ay1 = a.y + a.height;\n    var bx0 = b.x;\n    var bx1 = b.x + b.width;\n    var by0 = b.y;\n    var by1 = b.y + b.height;\n    return !(ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n  },\n  contain: function (x, y) {\n    var rect = this;\n    return x >= rect.x && x <= rect.x + rect.width && y >= rect.y && y <= rect.y + rect.height;\n  },\n\n  /**\n   * @return {module:echarts/core/BoundingRect}\n   */\n  clone: function () {\n    return new BoundingRect(this.x, this.y, this.width, this.height);\n  },\n\n  /**\n   * Copy from another rect\n   */\n  copy: function (other) {\n    this.x = other.x;\n    this.y = other.y;\n    this.width = other.width;\n    this.height = other.height;\n  },\n  plain: function () {\n    return {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height\n    };\n  }\n};\n/**\n * @param {Object|module:zrender/core/BoundingRect} rect\n * @param {number} rect.x\n * @param {number} rect.y\n * @param {number} rect.width\n * @param {number} rect.height\n * @return {module:zrender/core/BoundingRect}\n */\n\nBoundingRect.create = function (rect) {\n  return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n};\n\nvar _default = BoundingRect;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar lineStyleMixin = require(\"./mixin/lineStyle\");\n\nvar areaStyleMixin = require(\"./mixin/areaStyle\");\n\nvar textStyleMixin = require(\"./mixin/textStyle\");\n\nvar itemStyleMixin = require(\"./mixin/itemStyle\");\n\n/**\n * @module echarts/model/Model\n */\nvar mixin = zrUtil.mixin;\n/**\n * @alias module:echarts/model/Model\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} [parentModel]\n * @param {module:echarts/model/Global} [ecModel]\n */\n\nfunction Model(option, parentModel, ecModel) {\n  /**\n   * @type {module:echarts/model/Model}\n   * @readOnly\n   */\n  this.parentModel = parentModel;\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @type {Object}\n   * @protected\n   */\n\n  this.option = option; // Simple optimization\n  // if (this.init) {\n  //     if (arguments.length <= 4) {\n  //         this.init(option, parentModel, ecModel, extraOpt);\n  //     }\n  //     else {\n  //         this.init.apply(this, arguments);\n  //     }\n  // }\n}\n\nModel.prototype = {\n  constructor: Model,\n\n  /**\n   * Model 的初始化函数\n   * @param {Object} option\n   */\n  init: null,\n\n  /**\n   * 从新的 Option merge\n   */\n  mergeOption: function (option) {\n    zrUtil.merge(this.option, option, true);\n  },\n\n  /**\n   * @param {string|Array.<string>} path\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  get: function (path, ignoreParent) {\n    if (path == null) {\n      return this.option;\n    }\n\n    return doGet(this.option, this.parsePath(path), !ignoreParent && getParent(this, path));\n  },\n\n  /**\n   * @param {string} key\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  getShallow: function (key, ignoreParent) {\n    var option = this.option;\n    var val = option == null ? option : option[key];\n    var parentModel = !ignoreParent && getParent(this, key);\n\n    if (val == null && parentModel) {\n      val = parentModel.getShallow(key);\n    }\n\n    return val;\n  },\n\n  /**\n   * @param {string|Array.<string>} [path]\n   * @param {module:echarts/model/Model} [parentModel]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path, parentModel) {\n    var obj = path == null ? this.option : doGet(this.option, path = this.parsePath(path));\n    var thisParentModel;\n    parentModel = parentModel || (thisParentModel = getParent(this, path)) && thisParentModel.getModel(path);\n    return new Model(obj, parentModel, this.ecModel);\n  },\n\n  /**\n   * If model has option\n   */\n  isEmpty: function () {\n    return this.option == null;\n  },\n  restoreData: function () {},\n  // Pending\n  clone: function () {\n    var Ctor = this.constructor;\n    return new Ctor(zrUtil.clone(this.option));\n  },\n  setReadOnly: function (properties) {\n    clazzUtil.setReadOnly(this, properties);\n  },\n  // If path is null/undefined, return null/undefined.\n  parsePath: function (path) {\n    if (typeof path === 'string') {\n      path = path.split('.');\n    }\n\n    return path;\n  },\n\n  /**\n   * @param {Function} getParentMethod\n   *        param {Array.<string>|string} path\n   *        return {module:echarts/model/Model}\n   */\n  customizeGetParent: function (getParentMethod) {\n    clazzUtil.set(this, 'getParent', getParentMethod);\n  },\n  isAnimationEnabled: function () {\n    if (!env.node) {\n      if (this.option.animation != null) {\n        return !!this.option.animation;\n      } else if (this.parentModel) {\n        return this.parentModel.isAnimationEnabled();\n      }\n    }\n  }\n};\n\nfunction doGet(obj, pathArr, parentModel) {\n  for (var i = 0; i < pathArr.length; i++) {\n    // Ignore empty\n    if (!pathArr[i]) {\n      continue;\n    } // obj could be number/string/... (like 0)\n\n\n    obj = obj && typeof obj === 'object' ? obj[pathArr[i]] : null;\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  if (obj == null && parentModel) {\n    obj = parentModel.get(pathArr);\n  }\n\n  return obj;\n} // `path` can be null/undefined\n\n\nfunction getParent(model, path) {\n  var getParentMethod = clazzUtil.get(model, 'getParent');\n  return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n} // Enable Model.extend.\n\n\nclazzUtil.enableClassExtend(Model);\nmixin(Model, lineStyleMixin);\nmixin(Model, areaStyleMixin);\nmixin(Model, textStyleMixin);\nmixin(Model, itemStyleMixin);\nvar _default = Model;\nmodule.exports = _default;","/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\nvar env = {};\n\nif (typeof navigator === 'undefined') {\n  // In node\n  env = {\n    browser: {},\n    os: {},\n    node: true,\n    // Assume canvas is supported\n    canvasSupported: true,\n    svgSupported: true\n  };\n} else {\n  env = detect(navigator.userAgent);\n}\n\nvar _default = env; // Zepto.js\n// (c) 2010-2013 Thomas Fuchs\n// Zepto.js may be freely distributed under the MIT license.\n\nfunction detect(ua) {\n  var os = {};\n  var browser = {}; // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n  // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n  // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n  // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n  // var touchpad = webos && ua.match(/TouchPad/);\n  // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n  // var silk = ua.match(/Silk\\/([\\d._]+)/);\n  // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n  // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n  // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n  // var playbook = ua.match(/PlayBook/);\n  // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n\n  var firefox = ua.match(/Firefox\\/([\\d.]+)/); // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n  // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n\n  var ie = ua.match(/MSIE\\s([\\d.]+)/) // IE 11 Trident/7.0; rv:11.0\n  || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n  var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n  var weChat = /micromessenger/i.test(ua); // Todo: clean this up with a better OS/browser seperation:\n  // - discern (more) between multiple browsers on android\n  // - decide if kindle fire in silk mode is android or not\n  // - Firefox on Android doesn't specify the Android version\n  // - possibly devide in os, device and browser hashes\n  // if (browser.webkit = !!webkit) browser.version = webkit[1];\n  // if (android) os.android = true, os.version = android[2];\n  // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n  // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n  // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n  // if (webos) os.webos = true, os.version = webos[2];\n  // if (touchpad) os.touchpad = true;\n  // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n  // if (bb10) os.bb10 = true, os.version = bb10[2];\n  // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n  // if (playbook) browser.playbook = true;\n  // if (kindle) os.kindle = true, os.version = kindle[1];\n  // if (silk) browser.silk = true, browser.version = silk[1];\n  // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n  // if (chrome) browser.chrome = true, browser.version = chrome[1];\n\n  if (firefox) {\n    browser.firefox = true;\n    browser.version = firefox[1];\n  } // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n  // if (webview) browser.webview = true;\n\n\n  if (ie) {\n    browser.ie = true;\n    browser.version = ie[1];\n  }\n\n  if (edge) {\n    browser.edge = true;\n    browser.version = edge[1];\n  } // It is difficult to detect WeChat in Win Phone precisely, because ua can\n  // not be set on win phone. So we do not consider Win Phone.\n\n\n  if (weChat) {\n    browser.weChat = true;\n  } // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n  //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n  // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n  //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n  //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n\n  return {\n    browser: browser,\n    os: os,\n    node: false,\n    // 原生canvas支持，改极端点了\n    // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n    canvasSupported: !!document.createElement('canvas').getContext,\n    svgSupported: typeof SVGRect !== 'undefined',\n    // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n    // works on most browsers\n    // IE10/11 does not support touch event, and MS Edge supports them but not by\n    // default, so we dont check navigator.maxTouchPoints for them here.\n    touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n    // <http://caniuse.com/#search=pointer%20event>.\n    pointerEventsSupported: 'onpointerdown' in window // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n    // events currently. So we dont use that on other browsers unless tested sufficiently.\n    // Although IE 10 supports pointer event, it use old style and is different from the\n    // standard. So we exclude that. (IE 10 is hardly used on touch device)\n    && (browser.edge || browser.ie && browser.version >= 11)\n  };\n}\n\nmodule.exports = _default;","var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar pathContain = require(\"../contain/path\");\n\nvar Pattern = require(\"./Pattern\");\n\nvar getCanvasPattern = Pattern.prototype.getCanvasPattern;\nvar abs = Math.abs;\nvar pathProxyForDraw = new PathProxy(true);\n/**\n * @alias module:zrender/graphic/Path\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\n\nfunction Path(opts) {\n  Displayable.call(this, opts);\n  /**\n   * @type {module:zrender/core/PathProxy}\n   * @readOnly\n   */\n\n  this.path = null;\n}\n\nPath.prototype = {\n  constructor: Path,\n  type: 'path',\n  __dirtyPath: true,\n  strokeContainThreshold: 5,\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var path = this.path || pathProxyForDraw;\n    var hasStroke = style.hasStroke();\n    var hasFill = style.hasFill();\n    var fill = style.fill;\n    var stroke = style.stroke;\n    var hasFillGradient = hasFill && !!fill.colorStops;\n    var hasStrokeGradient = hasStroke && !!stroke.colorStops;\n    var hasFillPattern = hasFill && !!fill.image;\n    var hasStrokePattern = hasStroke && !!stroke.image;\n    style.bind(ctx, this, prevEl);\n    this.setTransform(ctx);\n\n    if (this.__dirty) {\n      var rect; // Update gradient because bounding rect may changed\n\n      if (hasFillGradient) {\n        rect = rect || this.getBoundingRect();\n        this._fillGradient = style.getGradient(ctx, fill, rect);\n      }\n\n      if (hasStrokeGradient) {\n        rect = rect || this.getBoundingRect();\n        this._strokeGradient = style.getGradient(ctx, stroke, rect);\n      }\n    } // Use the gradient or pattern\n\n\n    if (hasFillGradient) {\n      // PENDING If may have affect the state\n      ctx.fillStyle = this._fillGradient;\n    } else if (hasFillPattern) {\n      ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n    }\n\n    if (hasStrokeGradient) {\n      ctx.strokeStyle = this._strokeGradient;\n    } else if (hasStrokePattern) {\n      ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n    }\n\n    var lineDash = style.lineDash;\n    var lineDashOffset = style.lineDashOffset;\n    var ctxLineDash = !!ctx.setLineDash; // Update path sx, sy\n\n    var scale = this.getGlobalScale();\n    path.setScale(scale[0], scale[1]); // Proxy context\n    // Rebuild path in following 2 cases\n    // 1. Path is dirty\n    // 2. Path needs javascript implemented lineDash stroking.\n    //    In this case, lineDash information will not be saved in PathProxy\n\n    if (this.__dirtyPath || lineDash && !ctxLineDash && hasStroke) {\n      path.beginPath(ctx); // Setting line dash before build path\n\n      if (lineDash && !ctxLineDash) {\n        path.setLineDash(lineDash);\n        path.setLineDashOffset(lineDashOffset);\n      }\n\n      this.buildPath(path, this.shape, false); // Clear path dirty flag\n\n      if (this.path) {\n        this.__dirtyPath = false;\n      }\n    } else {\n      // Replay path building\n      ctx.beginPath();\n      this.path.rebuildPath(ctx);\n    }\n\n    hasFill && path.fill(ctx);\n\n    if (lineDash && ctxLineDash) {\n      ctx.setLineDash(lineDash);\n      ctx.lineDashOffset = lineDashOffset;\n    }\n\n    hasStroke && path.stroke(ctx);\n\n    if (lineDash && ctxLineDash) {\n      // PENDING\n      // Remove lineDash\n      ctx.setLineDash([]);\n    }\n\n    this.restoreTransform(ctx); // Draw rect text\n\n    if (style.text != null) {\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n  // Like in circle\n  buildPath: function (ctx, shapeCfg, inBundle) {},\n  createPathProxy: function () {\n    this.path = new PathProxy();\n  },\n  getBoundingRect: function () {\n    var rect = this._rect;\n    var style = this.style;\n    var needsUpdateRect = !rect;\n\n    if (needsUpdateRect) {\n      var path = this.path;\n\n      if (!path) {\n        // Create path on demand.\n        path = this.path = new PathProxy();\n      }\n\n      if (this.__dirtyPath) {\n        path.beginPath();\n        this.buildPath(path, this.shape, false);\n      }\n\n      rect = path.getBoundingRect();\n    }\n\n    this._rect = rect;\n\n    if (style.hasStroke()) {\n      // Needs update rect with stroke lineWidth when\n      // 1. Element changes scale or lineWidth\n      // 2. Shape is changed\n      var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n\n      if (this.__dirty || needsUpdateRect) {\n        rectWithStroke.copy(rect); // FIXME Must after updateTransform\n\n        var w = style.lineWidth; // PENDING, Min line width is needed when line is horizontal or vertical\n\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Only add extra hover lineWidth when there are no fill\n\n        if (!style.hasFill()) {\n          w = Math.max(w, this.strokeContainThreshold || 4);\n        } // Consider line width\n        // Line scale can't be 0;\n\n\n        if (lineScale > 1e-10) {\n          rectWithStroke.width += w / lineScale;\n          rectWithStroke.height += w / lineScale;\n          rectWithStroke.x -= w / lineScale / 2;\n          rectWithStroke.y -= w / lineScale / 2;\n        }\n      } // Return rect with stroke\n\n\n      return rectWithStroke;\n    }\n\n    return rect;\n  },\n  contain: function (x, y) {\n    var localPos = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    var style = this.style;\n    x = localPos[0];\n    y = localPos[1];\n\n    if (rect.contain(x, y)) {\n      var pathData = this.path.data;\n\n      if (style.hasStroke()) {\n        var lineWidth = style.lineWidth;\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Line scale can't be 0;\n\n        if (lineScale > 1e-10) {\n          // Only add extra hover lineWidth when there are no fill\n          if (!style.hasFill()) {\n            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n          }\n\n          if (pathContain.containStroke(pathData, lineWidth / lineScale, x, y)) {\n            return true;\n          }\n        }\n      }\n\n      if (style.hasFill()) {\n        return pathContain.contain(pathData, x, y);\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @param  {boolean} dirtyPath\n   */\n  dirty: function (dirtyPath) {\n    if (dirtyPath == null) {\n      dirtyPath = true;\n    } // Only mark dirty, not mark clean\n\n\n    if (dirtyPath) {\n      this.__dirtyPath = dirtyPath;\n      this._rect = null;\n    }\n\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh(); // Used as a clipping path\n\n    if (this.__clipTarget) {\n      this.__clipTarget.dirty();\n    }\n  },\n\n  /**\n   * Alias for animate('shape')\n   * @param {boolean} loop\n   */\n  animateShape: function (loop) {\n    return this.animate('shape', loop);\n  },\n  // Overwrite attrKV\n  attrKV: function (key, value) {\n    // FIXME\n    if (key === 'shape') {\n      this.setShape(value);\n      this.__dirtyPath = true;\n      this._rect = null;\n    } else {\n      Displayable.prototype.attrKV.call(this, key, value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setShape: function (key, value) {\n    var shape = this.shape; // Path from string may not have shape\n\n    if (shape) {\n      if (zrUtil.isObject(key)) {\n        for (var name in key) {\n          if (key.hasOwnProperty(name)) {\n            shape[name] = key[name];\n          }\n        }\n      } else {\n        shape[key] = value;\n      }\n\n      this.dirty(true);\n    }\n\n    return this;\n  },\n  getLineScale: function () {\n    var m = this.transform; // Get the line scale.\n    // Determinant of `m` means how much the area is enlarged by the\n    // transformation. So its square root can be used as a scale factor\n    // for width.\n\n    return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10 ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1])) : 1;\n  }\n};\n/**\n * 扩展一个 Path element, 比如星形，圆等。\n * Extend a path element\n * @param {Object} props\n * @param {string} props.type Path type\n * @param {Function} props.init Initialize\n * @param {Function} props.buildPath Overwrite buildPath method\n * @param {Object} [props.style] Extended default style config\n * @param {Object} [props.shape] Extended default shape config\n */\n\nPath.extend = function (defaults) {\n  var Sub = function (opts) {\n    Path.call(this, opts);\n\n    if (defaults.style) {\n      // Extend default style\n      this.style.extendFrom(defaults.style, false);\n    } // Extend default shape\n\n\n    var defaultShape = defaults.shape;\n\n    if (defaultShape) {\n      this.shape = this.shape || {};\n      var thisShape = this.shape;\n\n      for (var name in defaultShape) {\n        if (!thisShape.hasOwnProperty(name) && defaultShape.hasOwnProperty(name)) {\n          thisShape[name] = defaultShape[name];\n        }\n      }\n    }\n\n    defaults.init && defaults.init.call(this, opts);\n  };\n\n  zrUtil.inherits(Sub, Path); // FIXME 不能 extend position, rotation 等引用对象\n\n  for (var name in defaults) {\n    // Extending prototype values and methods\n    if (name !== 'style' && name !== 'shape') {\n      Sub.prototype[name] = defaults[name];\n    }\n  }\n\n  return Sub;\n};\n\nzrUtil.inherits(Path, Displayable);\nvar _default = Path;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"./Model\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar layout = require(\"../util/layout\");\n\nvar boxLayoutMixin = require(\"./mixin/boxLayout\");\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\nvar arrayPush = Array.prototype.push;\n/**\n * @alias module:echarts/model/Component\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {module:echarts/model/Model} ecModel\n */\n\nvar ComponentModel = Model.extend({\n  type: 'component',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  id: '',\n\n  /**\n   * @readOnly\n   */\n  name: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  mainType: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  subType: '',\n\n  /**\n   * @readOnly\n   * @type {number}\n   */\n  componentIndex: 0,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n  ecModel: null,\n\n  /**\n   * key: componentType\n   * value:  Component model list, can not be null.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @readOnly\n   */\n  dependentModels: [],\n\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  uid: null,\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  $constructor: function (option, parentModel, ecModel, extraOpt) {\n    Model.call(this, option, parentModel, ecModel, extraOpt);\n    this.uid = componentUtil.getUID('componentModel');\n  },\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? layout.getLayoutParams(option) : {};\n    var themeModel = ecModel.getTheme();\n    zrUtil.merge(option, themeModel.get(this.mainType));\n    zrUtil.merge(option, this.getDefaultOption());\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (option, extraOpt) {\n    zrUtil.merge(this.option, option, true);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(this.option, option, layoutMode);\n    }\n  },\n  // Hooker after init or mergeOption\n  optionUpdated: function (newCptOption, isInit) {},\n  getDefaultOption: function () {\n    if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n      var optList = [];\n      var Class = this.constructor;\n\n      while (Class) {\n        var opt = Class.prototype.defaultOption;\n        opt && optList.push(opt);\n        Class = Class.superClass;\n      }\n\n      var defaultOption = {};\n\n      for (var i = optList.length - 1; i >= 0; i--) {\n        defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n      }\n\n      clazzUtil.set(this, '__defaultOption', defaultOption);\n    }\n\n    return clazzUtil.get(this, '__defaultOption');\n  },\n  getReferringComponents: function (mainType) {\n    return this.ecModel.queryComponents({\n      mainType: mainType,\n      index: this.get(mainType + 'Index', true),\n      id: this.get(mainType + 'Id', true)\n    });\n  }\n}); // Reset ComponentModel.extend, add preConstruct.\n// clazzUtil.enableClassExtend(\n//     ComponentModel,\n//     function (option, parentModel, ecModel, extraOpt) {\n//         // Set dependentModels, componentIndex, name, id, mainType, subType.\n//         zrUtil.extend(this, extraOpt);\n//         this.uid = componentUtil.getUID('componentModel');\n//         // this.setReadOnly([\n//         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n//         //     'dependentModels', 'componentIndex'\n//         // ]);\n//     }\n// );\n// Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(ComponentModel, {\n  registerWhenExtend: true\n});\ncomponentUtil.enableSubTypeDefaulter(ComponentModel); // Add capability of ComponentModel.topologicalTravel.\n\ncomponentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\nfunction getDependencies(componentType) {\n  var deps = [];\n  zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n    arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n  }); // Ensure main type\n\n  return zrUtil.map(deps, function (type) {\n    return clazzUtil.parseClassType(type).main;\n  });\n}\n\nzrUtil.mixin(ComponentModel, boxLayoutMixin);\nvar _default = ComponentModel;\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../model/Model\");\n\nvar DataDiffer = require(\"./DataDiffer\");\n\nvar modelUtil = require(\"../util/model\");\n\n/**\n * List for data storage\n * @module echarts/data/List\n */\nvar isObject = zrUtil.isObject;\nvar UNDEFINED = 'undefined';\nvar globalObj = typeof window === UNDEFINED ? global : window;\nvar dataCtors = {\n  'float': typeof globalObj.Float64Array === UNDEFINED ? Array : globalObj.Float64Array,\n  'int': typeof globalObj.Int32Array === UNDEFINED ? Array : globalObj.Int32Array,\n  // Ordinal data type can be string or int\n  'ordinal': Array,\n  'number': Array,\n  'time': Array\n};\nvar TRANSFERABLE_PROPERTIES = ['stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'];\n\nfunction transferProperties(a, b) {\n  zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n    if (b.hasOwnProperty(propName)) {\n      a[propName] = b[propName];\n    }\n  });\n  a.__wrappedMethods = b.__wrappedMethods;\n}\n\nfunction DefaultDataProvider(dataArray) {\n  this._array = dataArray || [];\n}\n\nDefaultDataProvider.prototype.pure = false;\n\nDefaultDataProvider.prototype.count = function () {\n  return this._array.length;\n};\n\nDefaultDataProvider.prototype.getItem = function (idx) {\n  return this._array[idx];\n};\n/**\n * @constructor\n * @alias module:echarts/data/List\n *\n * @param {Array.<string|Object>} dimensions\n *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n * @param {module:echarts/model/Model} hostModel\n */\n\n\nvar List = function (dimensions, hostModel) {\n  dimensions = dimensions || ['x', 'y'];\n  var dimensionInfos = {};\n  var dimensionNames = [];\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimensionName;\n    var dimensionInfo = {};\n\n    if (typeof dimensions[i] === 'string') {\n      dimensionName = dimensions[i];\n      dimensionInfo = {\n        name: dimensionName,\n        coordDim: dimensionName,\n        coordDimIndex: 0,\n        stackable: false,\n        // Type can be 'float', 'int', 'number'\n        // Default is number, Precision of float may not enough\n        type: 'number'\n      };\n    } else {\n      dimensionInfo = dimensions[i];\n      dimensionName = dimensionInfo.name;\n      dimensionInfo.type = dimensionInfo.type || 'number';\n\n      if (!dimensionInfo.coordDim) {\n        dimensionInfo.coordDim = dimensionName;\n        dimensionInfo.coordDimIndex = 0;\n      }\n    }\n\n    dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n    dimensionNames.push(dimensionName);\n    dimensionInfos[dimensionName] = dimensionInfo;\n  }\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n\n\n  this.dimensions = dimensionNames;\n  /**\n   * Infomation of each data dimension, like data type.\n   * @type {Object}\n   */\n\n  this._dimensionInfos = dimensionInfos;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.dataType;\n  /**\n   * Indices stores the indices of data subset after filtered.\n   * This data subset will be used in chart.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n\n  this.indices = [];\n  /**\n   * Data storage\n   * @type {Object.<key, TypedArray|Array>}\n   * @private\n   */\n\n  this._storage = {};\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._nameList = [];\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._idList = [];\n  /**\n   * Models of data option is stored sparse for optimizing memory cost\n   * @type {Array.<module:echarts/model/Model>}\n   * @private\n   */\n\n  this._optionModels = [];\n  /**\n   * @param {module:echarts/data/List}\n   */\n\n  this.stackedOn = null;\n  /**\n   * Global visual properties after visual coding\n   * @type {Object}\n   * @private\n   */\n\n  this._visual = {};\n  /**\n   * Globel layout properties.\n   * @type {Object}\n   * @private\n   */\n\n  this._layout = {};\n  /**\n   * Item visual properties after visual coding\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemVisuals = [];\n  /**\n   * Item layout properties after layout\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemLayouts = [];\n  /**\n   * Graphic elemnents\n   * @type {Array.<module:zrender/Element>}\n   * @private\n   */\n\n  this._graphicEls = [];\n  /**\n   * @type {Array.<Array|Object>}\n   * @private\n   */\n\n  this._rawData;\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._extent;\n};\n\nvar listProto = List.prototype;\nlistProto.type = 'list';\n/**\n * If each data item has it's own option\n * @type {boolean}\n */\n\nlistProto.hasItemOption = true;\n/**\n * Get dimension name\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n * @return {string} Concrete dim name.\n */\n\nlistProto.getDimension = function (dim) {\n  if (!isNaN(dim)) {\n    dim = this.dimensions[dim] || dim;\n  }\n\n  return dim;\n};\n/**\n * Get type and stackable info of particular dimension\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n */\n\n\nlistProto.getDimensionInfo = function (dim) {\n  return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n};\n/**\n * Initialize from data\n * @param {Array.<Object|number|Array>} data\n * @param {Array.<string>} [nameList]\n * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n */\n\n\nlistProto.initData = function (data, nameList, dimValueGetter) {\n  data = data || [];\n  var isDataArray = zrUtil.isArray(data);\n\n  if (isDataArray) {\n    data = new DefaultDataProvider(data);\n  }\n\n  this._rawData = data; // Clear\n\n  var storage = this._storage = {};\n  var indices = this.indices = [];\n  var dimensions = this.dimensions;\n  var dimensionInfoMap = this._dimensionInfos;\n  var size = data.count();\n  var idList = [];\n  var nameRepeatCount = {};\n  var nameDimIdx;\n  nameList = nameList || []; // Init storage\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimInfo = dimensionInfoMap[dimensions[i]];\n    dimInfo.otherDims.itemName === 0 && (nameDimIdx = i);\n    var DataCtor = dataCtors[dimInfo.type];\n    storage[dimensions[i]] = new DataCtor(size);\n  }\n\n  var self = this;\n\n  if (!dimValueGetter) {\n    self.hasItemOption = false;\n  } // Default dim value getter\n\n\n  dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n    var value = modelUtil.getDataItemValue(dataItem); // If any dataItem is like { value: 10 }\n\n    if (modelUtil.isDataItemOption(dataItem)) {\n      self.hasItemOption = true;\n    }\n\n    return modelUtil.converDataValue(value instanceof Array ? value[dimIndex] // If value is a single number or something else not array.\n    : value, dimensionInfoMap[dimName]);\n  };\n\n  for (var i = 0; i < size; i++) {\n    // NOTICE: Try not to write things into dataItem\n    var dataItem = data.getItem(i); // Each data item is value\n    // [1, 2]\n    // 2\n    // Bar chart, line chart which uses category axis\n    // only gives the 'y' value. 'x' value is the indices of cateogry\n    // Use a tempValue to normalize the value to be a (x, y) value\n    // Store the data by dimensions\n\n    for (var k = 0; k < dimensions.length; k++) {\n      var dim = dimensions[k];\n      var dimStorage = storage[dim]; // PENDING NULL is empty or zero\n\n      dimStorage[i] = dimValueGetter(dataItem, dim, i, k);\n    }\n\n    indices.push(i);\n  } // Use the name in option and create id\n\n\n  for (var i = 0; i < size; i++) {\n    var dataItem = data.getItem(i);\n\n    if (!nameList[i] && dataItem) {\n      if (dataItem.name != null) {\n        nameList[i] = dataItem.name;\n      } else if (nameDimIdx != null) {\n        nameList[i] = storage[dimensions[nameDimIdx]][i];\n      }\n    }\n\n    var name = nameList[i] || ''; // Try using the id in option\n\n    var id = dataItem && dataItem.id;\n\n    if (!id && name) {\n      // Use name as id and add counter to avoid same name\n      nameRepeatCount[name] = nameRepeatCount[name] || 0;\n      id = name;\n\n      if (nameRepeatCount[name] > 0) {\n        id += '__ec__' + nameRepeatCount[name];\n      }\n\n      nameRepeatCount[name]++;\n    }\n\n    id && (idList[i] = id);\n  }\n\n  this._nameList = nameList;\n  this._idList = idList;\n};\n/**\n * @return {number}\n */\n\n\nlistProto.count = function () {\n  return this.indices.length;\n};\n/**\n * Get value. Return NaN if idx is out of range.\n * @param {string} dim Dim must be concrete name.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.get = function (dim, idx, stack) {\n  var storage = this._storage;\n  var dataIndex = this.indices[idx]; // If value not exists\n\n  if (dataIndex == null || !storage[dim]) {\n    return NaN;\n  }\n\n  var value = storage[dim][dataIndex]; // FIXME ordinal data type is not stackable\n\n  if (stack) {\n    var dimensionInfo = this._dimensionInfos[dim];\n\n    if (dimensionInfo && dimensionInfo.stackable) {\n      var stackedOn = this.stackedOn;\n\n      while (stackedOn) {\n        // Get no stacked data of stacked on\n        var stackedValue = stackedOn.get(dim, idx); // Considering positive stack, negative stack and empty data\n\n        if (value >= 0 && stackedValue > 0 || // Positive stack\n        value <= 0 && stackedValue < 0 // Negative stack\n        ) {\n            value += stackedValue;\n          }\n\n        stackedOn = stackedOn.stackedOn;\n      }\n    }\n  }\n\n  return value;\n};\n/**\n * Get value for multi dimensions.\n * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.getValues = function (dimensions, idx, stack) {\n  var values = [];\n\n  if (!zrUtil.isArray(dimensions)) {\n    stack = idx;\n    idx = dimensions;\n    dimensions = this.dimensions;\n  }\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    values.push(this.get(dimensions[i], idx, stack));\n  }\n\n  return values;\n};\n/**\n * If value is NaN. Inlcuding '-'\n * @param {string} dim\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.hasValue = function (idx) {\n  var dimensions = this.dimensions;\n  var dimensionInfos = this._dimensionInfos;\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    if ( // Ordinal type can be string or number\n    dimensionInfos[dimensions[i]].type !== 'ordinal' && isNaN(this.get(dimensions[i], idx))) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Get extent of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n * @param {Function} filter\n */\n\n\nlistProto.getDataExtent = function (dim, stack, filter) {\n  dim = this.getDimension(dim);\n  var dimData = this._storage[dim];\n  var dimInfo = this.getDimensionInfo(dim);\n  stack = dimInfo && dimInfo.stackable && stack;\n  var dimExtent = (this._extent || (this._extent = {}))[dim + !!stack];\n  var value;\n\n  if (dimExtent) {\n    return dimExtent;\n  } // var dimInfo = this._dimensionInfos[dim];\n\n\n  if (dimData) {\n    var min = Infinity;\n    var max = -Infinity; // var isOrdinal = dimInfo.type === 'ordinal';\n\n    for (var i = 0, len = this.count(); i < len; i++) {\n      value = this.get(dim, i, stack); // FIXME\n      // if (isOrdinal && typeof value === 'string') {\n      //     value = zrUtil.indexOf(dimData, value);\n      // }\n\n      if (!filter || filter(value, dim, i)) {\n        value < min && (min = value);\n        value > max && (max = value);\n      }\n    }\n\n    return this._extent[dim + !!stack] = [min, max];\n  } else {\n    return [Infinity, -Infinity];\n  }\n};\n/**\n * Get sum of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n */\n\n\nlistProto.getSum = function (dim, stack) {\n  var dimData = this._storage[dim];\n  var sum = 0;\n\n  if (dimData) {\n    for (var i = 0, len = this.count(); i < len; i++) {\n      var value = this.get(dim, i, stack);\n\n      if (!isNaN(value)) {\n        sum += value;\n      }\n    }\n  }\n\n  return sum;\n};\n/**\n * Retreive the index with given value\n * @param {number} idx\n * @param {number} value\n * @return {number}\n */\n// FIXME Precision of float value\n\n\nlistProto.indexOf = function (dim, value) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var indices = this.indices;\n\n  if (dimData) {\n    for (var i = 0, len = indices.length; i < len; i++) {\n      var rawIndex = indices[i];\n\n      if (dimData[rawIndex] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given name\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfName = function (name) {\n  var indices = this.indices;\n  var nameList = this._nameList;\n\n  for (var i = 0, len = indices.length; i < len; i++) {\n    var rawIndex = indices[i];\n\n    if (nameList[rawIndex] === name) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given raw data index\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfRawIndex = function (rawIndex) {\n  // Indices are ascending\n  var indices = this.indices; // If rawIndex === dataIndex\n\n  var rawDataIndex = indices[rawIndex];\n\n  if (rawDataIndex != null && rawDataIndex === rawIndex) {\n    return rawIndex;\n  }\n\n  var left = 0;\n  var right = indices.length - 1;\n\n  while (left <= right) {\n    var mid = (left + right) / 2 | 0;\n\n    if (indices[mid] < rawIndex) {\n      left = mid + 1;\n    } else if (indices[mid] > rawIndex) {\n      right = mid - 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index of nearest value\n * @param {string} dim\n * @param {number} value\n * @param {boolean} stack If given value is after stacked\n * @param {number} [maxDistance=Infinity]\n * @return {Array.<number>} Considere multiple points has the same value.\n */\n\n\nlistProto.indicesOfNearest = function (dim, value, stack, maxDistance) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var nearestIndices = [];\n\n  if (!dimData) {\n    return nearestIndices;\n  }\n\n  if (maxDistance == null) {\n    maxDistance = Infinity;\n  }\n\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n\n  for (var i = 0, len = this.count(); i < len; i++) {\n    var diff = value - this.get(dim, i, stack);\n    var dist = Math.abs(diff);\n\n    if (diff <= maxDistance && dist <= minDist) {\n      // For the case of two data are same on xAxis, which has sequence data.\n      // Show the nearest index\n      // https://github.com/ecomfe/echarts/issues/2869\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        nearestIndices.length = 0;\n      }\n\n      nearestIndices.push(i);\n    }\n  }\n\n  return nearestIndices;\n};\n/**\n * Get raw data index\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawIndex = function (idx) {\n  var rawIdx = this.indices[idx];\n  return rawIdx == null ? -1 : rawIdx;\n};\n/**\n * Get raw data item\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawDataItem = function (idx) {\n  return this._rawData.getItem(this.getRawIndex(idx));\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getName = function (idx) {\n  return this._nameList[this.indices[idx]] || '';\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getId = function (idx) {\n  return this._idList[this.indices[idx]] || this.getRawIndex(idx) + '';\n};\n\nfunction normalizeDimensions(dimensions) {\n  if (!zrUtil.isArray(dimensions)) {\n    dimensions = [dimensions];\n  }\n\n  return dimensions;\n}\n/**\n * Data iteration\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n *\n * @example\n *  list.each('x', function (x, idx) {});\n *  list.each(['x', 'y'], function (x, y, idx) {});\n *  list.each(function (idx) {})\n */\n\n\nlistProto.each = function (dims, cb, stack, context) {\n  if (typeof dims === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dims;\n    dims = [];\n  }\n\n  dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n  var value = [];\n  var dimSize = dims.length;\n  var indices = this.indices;\n  context = context || this;\n\n  for (var i = 0; i < indices.length; i++) {\n    // Simple optimization\n    switch (dimSize) {\n      case 0:\n        cb.call(context, i);\n        break;\n\n      case 1:\n        cb.call(context, this.get(dims[0], i, stack), i);\n        break;\n\n      case 2:\n        cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n        break;\n\n      default:\n        for (var k = 0; k < dimSize; k++) {\n          value[k] = this.get(dims[k], i, stack);\n        } // Index\n\n\n        value[k] = i;\n        cb.apply(context, value);\n    }\n  }\n};\n/**\n * Data filter\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n */\n\n\nlistProto.filterSelf = function (dimensions, cb, stack, context) {\n  if (typeof dimensions === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dimensions;\n    dimensions = [];\n  }\n\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var newIndices = [];\n  var value = [];\n  var dimSize = dimensions.length;\n  var indices = this.indices;\n  context = context || this;\n\n  for (var i = 0; i < indices.length; i++) {\n    var keep; // Simple optimization\n\n    if (!dimSize) {\n      keep = cb.call(context, i);\n    } else if (dimSize === 1) {\n      keep = cb.call(context, this.get(dimensions[0], i, stack), i);\n    } else {\n      for (var k = 0; k < dimSize; k++) {\n        value[k] = this.get(dimensions[k], i, stack);\n      }\n\n      value[k] = i;\n      keep = cb.apply(context, value);\n    }\n\n    if (keep) {\n      newIndices.push(indices[i]);\n    }\n  }\n\n  this.indices = newIndices; // Reset data extent\n\n  this._extent = {};\n  return this;\n};\n/**\n * Data mapping to a plain array\n * @param {string|Array.<string>} [dimensions]\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.mapArray = function (dimensions, cb, stack, context) {\n  if (typeof dimensions === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dimensions;\n    dimensions = [];\n  }\n\n  var result = [];\n  this.each(dimensions, function () {\n    result.push(cb && cb.apply(this, arguments));\n  }, stack, context);\n  return result;\n};\n\nfunction cloneListForMapAndSample(original, excludeDimensions) {\n  var allDimensions = original.dimensions;\n  var list = new List(zrUtil.map(allDimensions, original.getDimensionInfo, original), original.hostModel); // FIXME If needs stackedOn, value may already been stacked\n\n  transferProperties(list, original);\n  var storage = list._storage = {};\n  var originalStorage = original._storage; // Init storage\n\n  for (var i = 0; i < allDimensions.length; i++) {\n    var dim = allDimensions[i];\n    var dimStore = originalStorage[dim];\n\n    if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n      storage[dim] = new dimStore.constructor(originalStorage[dim].length);\n    } else {\n      // Direct reference for other dimensions\n      storage[dim] = originalStorage[dim];\n    }\n  }\n\n  return list;\n}\n/**\n * Data mapping to a new List with given dimensions\n * @param {string|Array.<string>} dimensions\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.map = function (dimensions, cb, stack, context) {\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var list = cloneListForMapAndSample(this, dimensions); // Following properties are all immutable.\n  // So we can reference to the same value\n\n  var indices = list.indices = this.indices;\n  var storage = list._storage;\n  var tmpRetValue = [];\n  this.each(dimensions, function () {\n    var idx = arguments[arguments.length - 1];\n    var retValue = cb && cb.apply(this, arguments);\n\n    if (retValue != null) {\n      // a number\n      if (typeof retValue === 'number') {\n        tmpRetValue[0] = retValue;\n        retValue = tmpRetValue;\n      }\n\n      for (var i = 0; i < retValue.length; i++) {\n        var dim = dimensions[i];\n        var dimStore = storage[dim];\n        var rawIdx = indices[idx];\n\n        if (dimStore) {\n          dimStore[rawIdx] = retValue[i];\n        }\n      }\n    }\n  }, stack, context);\n  return list;\n};\n/**\n * Large data down sampling on given dimension\n * @param {string} dimension\n * @param {number} rate\n * @param {Function} sampleValue\n * @param {Function} sampleIndex Sample index for name and id\n */\n\n\nlistProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n  var list = cloneListForMapAndSample(this, [dimension]);\n  var storage = this._storage;\n  var targetStorage = list._storage;\n  var originalIndices = this.indices;\n  var indices = list.indices = [];\n  var frameValues = [];\n  var frameIndices = [];\n  var frameSize = Math.floor(1 / rate);\n  var dimStore = targetStorage[dimension];\n  var len = this.count(); // Copy data from original data\n\n  for (var i = 0; i < storage[dimension].length; i++) {\n    targetStorage[dimension][i] = storage[dimension][i];\n  }\n\n  for (var i = 0; i < len; i += frameSize) {\n    // Last frame\n    if (frameSize > len - i) {\n      frameSize = len - i;\n      frameValues.length = frameSize;\n    }\n\n    for (var k = 0; k < frameSize; k++) {\n      var idx = originalIndices[i + k];\n      frameValues[k] = dimStore[idx];\n      frameIndices[k] = idx;\n    }\n\n    var value = sampleValue(frameValues);\n    var idx = frameIndices[sampleIndex(frameValues, value) || 0]; // Only write value on the filtered data\n\n    dimStore[idx] = value;\n    indices.push(idx);\n  }\n\n  return list;\n};\n/**\n * Get model of one data item.\n *\n * @param {number} idx\n */\n// FIXME Model proxy ?\n\n\nlistProto.getItemModel = function (idx) {\n  var hostModel = this.hostModel;\n  idx = this.indices[idx];\n  return new Model(this._rawData.getItem(idx), hostModel, hostModel && hostModel.ecModel);\n};\n/**\n * Create a data differ\n * @param {module:echarts/data/List} otherList\n * @return {module:echarts/data/DataDiffer}\n */\n\n\nlistProto.diff = function (otherList) {\n  var idList = this._idList;\n  var otherIdList = otherList && otherList._idList;\n  var val; // Use prefix to avoid index to be the same as otherIdList[idx],\n  // which will cause weird udpate animation.\n\n  var prefix = 'e\\0\\0';\n  return new DataDiffer(otherList ? otherList.indices : [], this.indices, function (idx) {\n    return (val = otherIdList[idx]) != null ? val : prefix + idx;\n  }, function (idx) {\n    return (val = idList[idx]) != null ? val : prefix + idx;\n  });\n};\n/**\n * Get visual property.\n * @param {string} key\n */\n\n\nlistProto.getVisual = function (key) {\n  var visual = this._visual;\n  return visual && visual[key];\n};\n/**\n * Set visual property\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setVisual('color', color);\n *  setVisual({\n *      'color': color\n *  });\n */\n\n\nlistProto.setVisual = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setVisual(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._visual = this._visual || {};\n  this._visual[key] = val;\n};\n/**\n * Set layout property.\n * @param {string|Object} key\n * @param {*} [val]\n */\n\n\nlistProto.setLayout = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setLayout(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._layout[key] = val;\n};\n/**\n * Get layout property.\n * @param  {string} key.\n * @return {*}\n */\n\n\nlistProto.getLayout = function (key) {\n  return this._layout[key];\n};\n/**\n * Get layout of single data item\n * @param {number} idx\n */\n\n\nlistProto.getItemLayout = function (idx) {\n  return this._itemLayouts[idx];\n};\n/**\n * Set layout of single data item\n * @param {number} idx\n * @param {Object} layout\n * @param {boolean=} [merge=false]\n */\n\n\nlistProto.setItemLayout = function (idx, layout, merge) {\n  this._itemLayouts[idx] = merge ? zrUtil.extend(this._itemLayouts[idx] || {}, layout) : layout;\n};\n/**\n * Clear all layout of single data item\n */\n\n\nlistProto.clearItemLayouts = function () {\n  this._itemLayouts.length = 0;\n};\n/**\n * Get visual property of single data item\n * @param {number} idx\n * @param {string} key\n * @param {boolean} [ignoreParent=false]\n */\n\n\nlistProto.getItemVisual = function (idx, key, ignoreParent) {\n  var itemVisual = this._itemVisuals[idx];\n  var val = itemVisual && itemVisual[key];\n\n  if (val == null && !ignoreParent) {\n    // Use global visual property\n    return this.getVisual(key);\n  }\n\n  return val;\n};\n/**\n * Set visual property of single data item\n *\n * @param {number} idx\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setItemVisual(0, 'color', color);\n *  setItemVisual(0, {\n *      'color': color\n *  });\n */\n\n\nlistProto.setItemVisual = function (idx, key, value) {\n  var itemVisual = this._itemVisuals[idx] || {};\n  this._itemVisuals[idx] = itemVisual;\n\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        itemVisual[name] = key[name];\n      }\n    }\n\n    return;\n  }\n\n  itemVisual[key] = value;\n};\n/**\n * Clear itemVisuals and list visual.\n */\n\n\nlistProto.clearAllVisual = function () {\n  this._visual = {};\n  this._itemVisuals = [];\n};\n\nvar setItemDataAndSeriesIndex = function (child) {\n  child.seriesIndex = this.seriesIndex;\n  child.dataIndex = this.dataIndex;\n  child.dataType = this.dataType;\n};\n/**\n * Set graphic element relative to data. It can be set as null\n * @param {number} idx\n * @param {module:zrender/Element} [el]\n */\n\n\nlistProto.setItemGraphicEl = function (idx, el) {\n  var hostModel = this.hostModel;\n\n  if (el) {\n    // Add data index and series index for indexing the data by element\n    // Useful in tooltip\n    el.dataIndex = idx;\n    el.dataType = this.dataType;\n    el.seriesIndex = hostModel && hostModel.seriesIndex;\n\n    if (el.type === 'group') {\n      el.traverse(setItemDataAndSeriesIndex, el);\n    }\n  }\n\n  this._graphicEls[idx] = el;\n};\n/**\n * @param {number} idx\n * @return {module:zrender/Element}\n */\n\n\nlistProto.getItemGraphicEl = function (idx) {\n  return this._graphicEls[idx];\n};\n/**\n * @param {Function} cb\n * @param {*} context\n */\n\n\nlistProto.eachItemGraphicEl = function (cb, context) {\n  zrUtil.each(this._graphicEls, function (el, idx) {\n    if (el) {\n      cb && cb.call(context, el, idx);\n    }\n  });\n};\n/**\n * Shallow clone a new list except visual and layout properties, and graph elements.\n * New list only change the indices.\n */\n\n\nlistProto.cloneShallow = function () {\n  var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n  var list = new List(dimensionInfoList, this.hostModel); // FIXME\n\n  list._storage = this._storage;\n  transferProperties(list, this); // Clone will not change the data extent and indices\n\n  list.indices = this.indices.slice();\n\n  if (this._extent) {\n    list._extent = zrUtil.extend({}, this._extent);\n  }\n\n  return list;\n};\n/**\n * Wrap some method to add more feature\n * @param {string} methodName\n * @param {Function} injectFunction\n */\n\n\nlistProto.wrapMethod = function (methodName, injectFunction) {\n  var originalMethod = this[methodName];\n\n  if (typeof originalMethod !== 'function') {\n    return;\n  }\n\n  this.__wrappedMethods = this.__wrappedMethods || [];\n\n  this.__wrappedMethods.push(methodName);\n\n  this[methodName] = function () {\n    var res = originalMethod.apply(this, arguments);\n    return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n  };\n}; // Methods that create a new list based on this list should be listed here.\n// Notice that those method should `RETURN` the new list.\n\n\nlistProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map']; // Methods that change indices of this list should be listed here.\n\nlistProto.CHANGABLE_METHODS = ['filterSelf'];\nvar _default = List;\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _format = require(\"../util/format\");\n\nvar formatTime = _format.formatTime;\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\nvar getTooltipMarker = _format.getTooltipMarker;\n\nvar _clazz = require(\"../util/clazz\");\n\nvar set = _clazz.set;\nvar get = _clazz.get;\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar colorPaletteMixin = require(\"./mixin/colorPalette\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar SeriesModel = ComponentModel.extend({\n  type: 'series.__base__',\n\n  /**\n   * @readOnly\n   */\n  seriesIndex: 0,\n  // coodinateSystem will be injected in the echarts/CoordinateSystem\n  coordinateSystem: null,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * Data provided for legend\n   * @type {Function}\n   */\n  // PENDING\n  legendDataProvider: null,\n\n  /**\n   * Access path of color for visual\n   */\n  visualColorAccessPath: 'itemStyle.normal.color',\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  init: function (option, parentModel, ecModel, extraOpt) {\n    /**\n     * @type {number}\n     * @readOnly\n     */\n    this.seriesIndex = this.componentIndex;\n    this.mergeDefaultAndTheme(option, ecModel);\n    var data = this.getInitialData(option, ecModel);\n\n    /**\n     * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n     * @private\n     */\n    set(this, 'dataBeforeProcessed', data); // If we reverse the order (make data firstly, and then make\n    // dataBeforeProcessed by cloneShallow), cloneShallow will\n    // cause data.graph.data !== data when using\n    // module:echarts/data/Graph or module:echarts/data/Tree.\n    // See module:echarts/data/helper/linkList\n\n    this.restoreData();\n  },\n\n  /**\n   * Util for merge default and theme to option\n   * @param  {Object} option\n   * @param  {module:echarts/model/Global} ecModel\n   */\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? getLayoutParams(option) : {}; // Backward compat: using subType on theme.\n    // But if name duplicate between series subType\n    // (for example: parallel) add component mainType,\n    // add suffix 'Series'.\n\n    var themeSubType = this.subType;\n\n    if (ComponentModel.hasClass(themeSubType)) {\n      themeSubType += 'Series';\n    }\n\n    zrUtil.merge(option, ecModel.getTheme().get(this.subType));\n    zrUtil.merge(option, this.getDefaultOption()); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option.label, ['show']);\n    this.fillDataTextStyle(option.data);\n\n    if (layoutMode) {\n      mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (newSeriesOption, ecModel) {\n    newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n    this.fillDataTextStyle(newSeriesOption.data);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n    }\n\n    var data = this.getInitialData(newSeriesOption, ecModel); // TODO Merge data?\n\n    if (data) {\n      set(this, 'data', data);\n      set(this, 'dataBeforeProcessed', data.cloneShallow());\n    }\n  },\n  fillDataTextStyle: function (data) {\n    // Default data label emphasis `show`\n    // FIXME Tree structure data ?\n    // FIXME Performance ?\n    if (data) {\n      var props = ['show'];\n\n      for (var i = 0; i < data.length; i++) {\n        if (data[i] && data[i].label) {\n          modelUtil.defaultEmphasis(data[i].label, props);\n        }\n      }\n    }\n  },\n\n  /**\n   * Init a data structure from data related option in series\n   * Must be overwritten\n   */\n  getInitialData: function () {},\n\n  /**\n   * @param {string} [dataType]\n   * @return {module:echarts/data/List}\n   */\n  getData: function (dataType) {\n    var data = get(this, 'data');\n    return dataType == null ? data : data.getLinkedData(dataType);\n  },\n\n  /**\n   * @param {module:echarts/data/List} data\n   */\n  setData: function (data) {\n    set(this, 'data', data);\n  },\n\n  /**\n   * Get data before processed\n   * @return {module:echarts/data/List}\n   */\n  getRawData: function () {\n    return get(this, 'dataBeforeProcessed');\n  },\n\n  /**\n   * Coord dimension to data dimension.\n   *\n   * By default the result is the same as dimensions of series data.\n   * But in some series data dimensions are different from coord dimensions (i.e.\n   * candlestick and boxplot). Override this method to handle those cases.\n   *\n   * Coord dimension to data dimension can be one-to-many\n   *\n   * @param {string} coordDim\n   * @return {Array.<string>} dimensions on the axis.\n   */\n  coordDimToDataDim: function (coordDim) {\n    return modelUtil.coordDimToDataDim(this.getData(), coordDim);\n  },\n\n  /**\n   * Convert data dimension to coord dimension.\n   *\n   * @param {string|number} dataDim\n   * @return {string}\n   */\n  dataDimToCoordDim: function (dataDim) {\n    return modelUtil.dataDimToCoordDim(this.getData(), dataDim);\n  },\n\n  /**\n   * Get base axis if has coordinate system and has axis.\n   * By default use coordSys.getBaseAxis();\n   * Can be overrided for some chart.\n   * @return {type} description\n   */\n  getBaseAxis: function () {\n    var coordSys = this.coordinateSystem;\n    return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n  },\n  // FIXME\n\n  /**\n   * Default tooltip formatter\n   *\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    function formatArrayValue(value) {\n      var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n        var dimItem = data.getDimensionInfo(idx);\n        return vertially |= dimItem && dimItem.tooltip !== false && dimItem.tooltipName != null;\n      }, 0);\n      var result = [];\n      var tooltipDims = modelUtil.otherDimToDataDim(data, 'tooltip');\n      tooltipDims.length ? zrUtil.each(tooltipDims, function (dimIdx) {\n        setEachItem(data.get(dimIdx, dataIndex), dimIdx);\n      }) // By default, all dims is used on tooltip.\n      : zrUtil.each(value, setEachItem);\n\n      function setEachItem(val, dimIdx) {\n        var dimInfo = data.getDimensionInfo(dimIdx); // If `dimInfo.tooltip` is not set, show tooltip.\n\n        if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n          return;\n        }\n\n        var dimType = dimInfo.type;\n        var valStr = (vertially ? '- ' + (dimInfo.tooltipName || dimInfo.name) + ': ' : '') + (dimType === 'ordinal' ? val + '' : dimType === 'time' ? multipleSeries ? '' : formatTime('yyyy/MM/dd hh:mm:ss', val) : addCommas(val));\n        valStr && result.push(encodeHTML(valStr));\n      }\n\n      return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n    }\n\n    var data = get(this, 'data');\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? formatArrayValue(value) : encodeHTML(addCommas(value));\n    var name = data.getName(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n\n    if (zrUtil.isObject(color) && color.colorStops) {\n      color = (color.colorStops[0] || {}).color;\n    }\n\n    color = color || 'transparent';\n    var colorEl = getTooltipMarker(color);\n    var seriesName = this.name; // FIXME\n\n    if (seriesName === '\\0-') {\n      // Not show '-'\n      seriesName = '';\n    }\n\n    seriesName = seriesName ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ') : '';\n    return !multipleSeries ? seriesName + colorEl + (name ? encodeHTML(name) + ': ' + formattedValue : formattedValue) : colorEl + seriesName + formattedValue;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var animationEnabled = this.getShallow('animation');\n\n    if (animationEnabled) {\n      if (this.getData().count() > this.getShallow('animationThreshold')) {\n        animationEnabled = false;\n      }\n    }\n\n    return animationEnabled;\n  },\n  restoreData: function () {\n    set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n  },\n  getColorFromPalette: function (name, scope) {\n    var ecModel = this.ecModel; // PENDING\n\n    var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n\n    if (!color) {\n      color = ecModel.getColorFromPalette(name, scope);\n    }\n\n    return color;\n  },\n\n  /**\n   * Get data indices for show tooltip content. See tooltip.\n   * @abstract\n   * @param {Array.<string>|string} dim\n   * @param {Array.<number>} value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis\n   * @return {Object} {dataIndices, nestestValue}.\n   */\n  getAxisTooltipData: null,\n\n  /**\n   * See tooltip.\n   * @abstract\n   * @param {number} dataIndex\n   * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n   */\n  getTooltipPosition: null\n});\nzrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\nzrUtil.mixin(SeriesModel, colorPaletteMixin);\nvar _default = SeriesModel;\nmodule.exports = _default;","/**\n * 3x2矩阵操作类\n * @exports zrender/tool/matrix\n */\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个单位矩阵\n * @return {Float32Array|Array.<number>}\n */\n\nfunction create() {\n  var out = new ArrayCtor(6);\n  identity(out);\n  return out;\n}\n/**\n * 设置矩阵为单位矩阵\n * @param {Float32Array|Array.<number>} out\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * 复制矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m\n */\n\n\nfunction copy(out, m) {\n  out[0] = m[0];\n  out[1] = m[1];\n  out[2] = m[2];\n  out[3] = m[3];\n  out[4] = m[4];\n  out[5] = m[5];\n  return out;\n}\n/**\n * 矩阵相乘\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m1\n * @param {Float32Array|Array.<number>} m2\n */\n\n\nfunction mul(out, m1, m2) {\n  // Consider matrix.mul(m, m2, m);\n  // where out is the same as m2.\n  // So use temp variable to escape error.\n  var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n  var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n  var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n  var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n  var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n  var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = out3;\n  out[4] = out4;\n  out[5] = out5;\n  return out;\n}\n/**\n * 平移变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction translate(out, a, v) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4] + v[0];\n  out[5] = a[5] + v[1];\n  return out;\n}\n/**\n * 旋转变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {number} rad\n */\n\n\nfunction rotate(out, a, rad) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var st = Math.sin(rad);\n  var ct = Math.cos(rad);\n  out[0] = aa * ct + ab * st;\n  out[1] = -aa * st + ab * ct;\n  out[2] = ac * ct + ad * st;\n  out[3] = -ac * st + ct * ad;\n  out[4] = ct * atx + st * aty;\n  out[5] = ct * aty - st * atx;\n  return out;\n}\n/**\n * 缩放变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction scale(out, a, v) {\n  var vx = v[0];\n  var vy = v[1];\n  out[0] = a[0] * vx;\n  out[1] = a[1] * vy;\n  out[2] = a[2] * vx;\n  out[3] = a[3] * vy;\n  out[4] = a[4] * vx;\n  out[5] = a[5] * vy;\n  return out;\n}\n/**\n * 求逆矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction invert(out, a) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n\nexports.create = create;\nexports.identity = identity;\nexports.copy = copy;\nexports.mul = mul;\nexports.translate = translate;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.invert = invert;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar OrdinalScale = require(\"../scale/Ordinal\");\n\nvar IntervalScale = require(\"../scale/Interval\");\n\nvar Scale = require(\"../scale/Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nrequire(\"../scale/Time\");\n\nrequire(\"../scale/Log\");\n\n/**\n * Get axis scale extent before niced.\n * Item of returned array can only be number (including Infinity and NaN).\n */\nfunction getScaleExtent(scale, model) {\n  var scaleType = scale.type;\n  var min = model.getMin();\n  var max = model.getMax();\n  var fixMin = min != null;\n  var fixMax = max != null;\n  var originalExtent = scale.getExtent();\n  var axisDataLen;\n  var boundaryGap;\n  var span;\n\n  if (scaleType === 'ordinal') {\n    axisDataLen = (model.get('data') || []).length;\n  } else {\n    boundaryGap = model.get('boundaryGap');\n\n    if (!zrUtil.isArray(boundaryGap)) {\n      boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n    }\n\n    if (typeof boundaryGap[0] === 'boolean') {\n      boundaryGap = [0, 0];\n    }\n\n    boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n    boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n    span = originalExtent[1] - originalExtent[0] || Math.abs(originalExtent[0]);\n  } // Notice: When min/max is not set (that is, when there are null/undefined,\n  // which is the most common case), these cases should be ensured:\n  // (1) For 'ordinal', show all axis.data.\n  // (2) For others:\n  //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n  //      disabled).\n  //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n  //      be the result that originalExtent enlarged by boundaryGap.\n  // (3) If no data, it should be ensured that `scale.setBlank` is set.\n  // FIXME\n  // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n  // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n  // that the results processed by boundaryGap are positive/negative?\n\n\n  if (min == null) {\n    min = scaleType === 'ordinal' ? axisDataLen ? 0 : NaN : originalExtent[0] - boundaryGap[0] * span;\n  }\n\n  if (max == null) {\n    max = scaleType === 'ordinal' ? axisDataLen ? axisDataLen - 1 : NaN : originalExtent[1] + boundaryGap[1] * span;\n  }\n\n  if (min === 'dataMin') {\n    min = originalExtent[0];\n  } else if (typeof min === 'function') {\n    min = min({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  if (max === 'dataMax') {\n    max = originalExtent[1];\n  } else if (typeof max === 'function') {\n    max = max({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  (min == null || !isFinite(min)) && (min = NaN);\n  (max == null || !isFinite(max)) && (max = NaN);\n  scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max)); // Evaluate if axis needs cross zero\n\n  if (model.getNeedCrossZero()) {\n    // Axis is over zero and min is not set\n    if (min > 0 && max > 0 && !fixMin) {\n      min = 0;\n    } // Axis is under zero and max is not set\n\n\n    if (min < 0 && max < 0 && !fixMax) {\n      max = 0;\n    }\n  }\n\n  return [min, max];\n}\n\nfunction niceScaleExtent(scale, model) {\n  var extent = getScaleExtent(scale, model);\n  var fixMin = model.getMin() != null;\n  var fixMax = model.getMax() != null;\n  var splitNumber = model.get('splitNumber');\n\n  if (scale.type === 'log') {\n    scale.base = model.get('logBase');\n  }\n\n  var scaleType = scale.type;\n  scale.setExtent(extent[0], extent[1]);\n  scale.niceExtent({\n    splitNumber: splitNumber,\n    fixMin: fixMin,\n    fixMax: fixMax,\n    minInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('minInterval') : null,\n    maxInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('maxInterval') : null\n  }); // If some one specified the min, max. And the default calculated interval\n  // is not good enough. He can specify the interval. It is often appeared\n  // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n  // to be 60.\n  // FIXME\n\n  var interval = model.get('interval');\n\n  if (interval != null) {\n    scale.setInterval && scale.setInterval(interval);\n  }\n}\n/**\n * @param {module:echarts/model/Model} model\n * @param {string} [axisType] Default retrieve from model.type\n * @return {module:echarts/scale/*}\n */\n\n\nfunction createScaleByModel(model, axisType) {\n  axisType = axisType || model.get('type');\n\n  if (axisType) {\n    switch (axisType) {\n      // Buildin scale\n      case 'category':\n        return new OrdinalScale(model.getCategories(), [Infinity, -Infinity]);\n\n      case 'value':\n        return new IntervalScale();\n      // Extended scale, like time and log\n\n      default:\n        return (Scale.getClass(axisType) || IntervalScale).create(model);\n    }\n  }\n}\n/**\n * Check if the axis corss 0\n */\n\n\nfunction ifAxisCrossZero(axis) {\n  var dataExtent = axis.scale.getExtent();\n  var min = dataExtent[0];\n  var max = dataExtent[1];\n  return !(min > 0 && max > 0 || min < 0 && max < 0);\n}\n/**\n * @param {Array.<number>} tickCoords In axis self coordinate.\n * @param {Array.<string>} labels\n * @param {string} font\n * @param {number} axisRotate 0: towards right horizontally, clock-wise is negative.\n * @param {number} [labelRotate=0] 0: towards right horizontally, clock-wise is negative.\n * @return {number}\n */\n\n\nfunction getAxisLabelInterval(tickCoords, labels, font, axisRotate, labelRotate) {\n  var textSpaceTakenRect;\n  var autoLabelInterval = 0;\n  var accumulatedLabelInterval = 0;\n  var rotation = (axisRotate - labelRotate) / 180 * Math.PI;\n  var step = 1;\n\n  if (labels.length > 40) {\n    // Simple optimization for large amount of labels\n    step = Math.floor(labels.length / 40);\n  }\n\n  for (var i = 0; i < tickCoords.length; i += step) {\n    var tickCoord = tickCoords[i]; // Not precise, do not consider align and vertical align\n    // and each distance from axis line yet.\n\n    var rect = textContain.getBoundingRect(labels[i], font, 'center', 'top');\n    rect.x += tickCoord * Math.cos(rotation);\n    rect.y += tickCoord * Math.sin(rotation); // Magic number\n\n    rect.width *= 1.3;\n    rect.height *= 1.3;\n\n    if (!textSpaceTakenRect) {\n      textSpaceTakenRect = rect.clone();\n    } // There is no space for current label;\n    else if (textSpaceTakenRect.intersect(rect)) {\n        accumulatedLabelInterval++;\n        autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n      } else {\n        textSpaceTakenRect.union(rect); // Reset\n\n        accumulatedLabelInterval = 0;\n      }\n  }\n\n  if (autoLabelInterval === 0 && step > 1) {\n    return step;\n  }\n\n  return (autoLabelInterval + 1) * step - 1;\n}\n/**\n * @param {Object} axis\n * @param {Function} labelFormatter\n * @return {Array.<string>}\n */\n\n\nfunction getFormattedLabels(axis, labelFormatter) {\n  var scale = axis.scale;\n  var labels = scale.getTicksLabels();\n  var ticks = scale.getTicks();\n\n  if (typeof labelFormatter === 'string') {\n    labelFormatter = function (tpl) {\n      return function (val) {\n        return tpl.replace('{value}', val != null ? val : '');\n      };\n    }(labelFormatter); // Consider empty array\n\n\n    return zrUtil.map(labels, labelFormatter);\n  } else if (typeof labelFormatter === 'function') {\n    return zrUtil.map(ticks, function (tick, idx) {\n      return labelFormatter(getAxisRawValue(axis, tick), idx);\n    }, this);\n  } else {\n    return labels;\n  }\n}\n\nfunction getAxisRawValue(axis, value) {\n  // In category axis with data zoom, tick is not the original\n  // index of axis.data. So tick should not be exposed to user\n  // in category axis.\n  return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n}\n\nexports.getScaleExtent = getScaleExtent;\nexports.niceScaleExtent = niceScaleExtent;\nexports.createScaleByModel = createScaleByModel;\nexports.ifAxisCrossZero = ifAxisCrossZero;\nexports.getAxisLabelInterval = getAxisLabelInterval;\nexports.getFormattedLabels = getFormattedLabels;\nexports.getAxisRawValue = getAxisRawValue;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"./graphic\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\n// Symbol factory\n\n/**\n * Triangle shape\n * @inner\n */\nvar Triangle = graphic.extendShape({\n  type: 'triangle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy + height);\n    path.lineTo(cx - width, cy + height);\n    path.closePath();\n  }\n});\n/**\n * Diamond shape\n * @inner\n */\n\nvar Diamond = graphic.extendShape({\n  type: 'diamond',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy);\n    path.lineTo(cx, cy + height);\n    path.lineTo(cx - width, cy);\n    path.closePath();\n  }\n});\n/**\n * Pin shape\n * @inner\n */\n\nvar Pin = graphic.extendShape({\n  type: 'pin',\n  shape: {\n    // x, y on the cusp\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var w = shape.width / 5 * 3; // Height must be larger than width\n\n    var h = Math.max(w, shape.height);\n    var r = w / 2; // Dist on y with tangent point and circle center\n\n    var dy = r * r / (h - r);\n    var cy = y - h + r + dy;\n    var angle = Math.asin(dy / r); // Dist on x with tangent point and circle center\n\n    var dx = Math.cos(angle) * r;\n    var tanX = Math.sin(angle);\n    var tanY = Math.cos(angle);\n    var cpLen = r * 0.6;\n    var cpLen2 = r * 0.7;\n    path.moveTo(x - dx, cy + dy);\n    path.arc(x, cy, r, Math.PI - angle, Math.PI * 2 + angle);\n    path.bezierCurveTo(x + dx - tanX * cpLen, cy + dy + tanY * cpLen, x, y - cpLen2, x, y);\n    path.bezierCurveTo(x, y - cpLen2, x - dx + tanX * cpLen, cy + dy + tanY * cpLen, x - dx, cy + dy);\n    path.closePath();\n  }\n});\n/**\n * Arrow shape\n * @inner\n */\n\nvar Arrow = graphic.extendShape({\n  type: 'arrow',\n  shape: {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var height = shape.height;\n    var width = shape.width;\n    var x = shape.x;\n    var y = shape.y;\n    var dx = width / 3 * 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + dx, y + height);\n    ctx.lineTo(x, y + height / 4 * 3);\n    ctx.lineTo(x - dx, y + height);\n    ctx.lineTo(x, y);\n    ctx.closePath();\n  }\n});\n/**\n * Map of path contructors\n * @type {Object.<string, module:zrender/graphic/Path>}\n */\n\nvar symbolCtors = {\n  line: graphic.Line,\n  rect: graphic.Rect,\n  roundRect: graphic.Rect,\n  square: graphic.Rect,\n  circle: graphic.Circle,\n  diamond: Diamond,\n  pin: Pin,\n  arrow: Arrow,\n  triangle: Triangle\n};\nvar symbolShapeMakers = {\n  line: function (x, y, w, h, shape) {\n    // FIXME\n    shape.x1 = x;\n    shape.y1 = y + h / 2;\n    shape.x2 = x + w;\n    shape.y2 = y + h / 2;\n  },\n  rect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n  },\n  roundRect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n    shape.r = Math.min(w, h) / 4;\n  },\n  square: function (x, y, w, h, shape) {\n    var size = Math.min(w, h);\n    shape.x = x;\n    shape.y = y;\n    shape.width = size;\n    shape.height = size;\n  },\n  circle: function (x, y, w, h, shape) {\n    // Put circle in the center of square\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.r = Math.min(w, h) / 2;\n  },\n  diamond: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  pin: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  arrow: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  triangle: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  }\n};\nvar symbolBuildProxies = {};\nzrUtil.each(symbolCtors, function (Ctor, name) {\n  symbolBuildProxies[name] = new Ctor();\n});\nvar SymbolClz = graphic.extendShape({\n  type: 'symbol',\n  shape: {\n    symbolType: '',\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  beforeBrush: function () {\n    var style = this.style;\n    var shape = this.shape; // FIXME\n\n    if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n      style.textPosition = ['50%', '40%'];\n      style.textAlign = 'center';\n      style.textVerticalAlign = 'middle';\n    }\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    var symbolType = shape.symbolType;\n    var proxySymbol = symbolBuildProxies[symbolType];\n\n    if (shape.symbolType !== 'none') {\n      if (!proxySymbol) {\n        // Default rect\n        symbolType = 'rect';\n        proxySymbol = symbolBuildProxies[symbolType];\n      }\n\n      symbolShapeMakers[symbolType](shape.x, shape.y, shape.width, shape.height, proxySymbol.shape);\n      proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n    }\n  }\n}); // Provide setColor helper method to avoid determine if set the fill or stroke outside\n\nfunction symbolPathSetColor(color, innerColor) {\n  if (this.type !== 'image') {\n    var symbolStyle = this.style;\n    var symbolShape = this.shape;\n\n    if (symbolShape && symbolShape.symbolType === 'line') {\n      symbolStyle.stroke = color;\n    } else if (this.__isEmptyBrush) {\n      symbolStyle.stroke = color;\n      symbolStyle.fill = innerColor || '#fff';\n    } else {\n      // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n      symbolStyle.fill && (symbolStyle.fill = color);\n      symbolStyle.stroke && (symbolStyle.stroke = color);\n    }\n\n    this.dirty(false);\n  }\n}\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @param {string} symbolType\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n * @param {boolean} [keepAspect=false] whether to keep the ratio of w/h,\n *                            for path and image only.\n */\n\n\nfunction createSymbol(symbolType, x, y, w, h, color, keepAspect) {\n  // TODO Support image object, DynamicImage.\n  var isEmpty = symbolType.indexOf('empty') === 0;\n\n  if (isEmpty) {\n    symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n  }\n\n  var symbolPath;\n\n  if (symbolType.indexOf('image://') === 0) {\n    symbolPath = graphic.makeImage(symbolType.slice(8), new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else if (symbolType.indexOf('path://') === 0) {\n    symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else {\n    symbolPath = new SymbolClz({\n      shape: {\n        symbolType: symbolType,\n        x: x,\n        y: y,\n        width: w,\n        height: h\n      }\n    });\n  }\n\n  symbolPath.__isEmptyBrush = isEmpty;\n  symbolPath.setColor = symbolPathSetColor;\n  symbolPath.setColor(color);\n  return symbolPath;\n}\n\nexports.createSymbol = createSymbol;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\n/**\n * Complete dimensions by data (guess dimension).\n */\nvar each = zrUtil.each;\nvar isString = zrUtil.isString;\nvar defaults = zrUtil.defaults;\nvar OTHER_DIMS = {\n  tooltip: 1,\n  label: 1,\n  itemName: 1\n};\n/**\n * Complete the dimensions array, by user defined `dimension` and `encode`,\n * and guessing from the data structure.\n * If no 'value' dimension specified, the first no-named dimension will be\n * named as 'value'.\n *\n * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n *      provides not only dim template, but also default order.\n *      `name` of each item provides default coord name.\n *      [{dimsDef: []}, ...] can be specified to give names.\n * @param {Array} data Data list. [[1, 2, 3], [2, 3, 4]].\n * @param {Object} [opt]\n * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n *      For example: ['asdf', {name, type}, ...].\n * @param {Object} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n * @param {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n * @param {string} [opt.extraFromZero] If specified, extra dim names will be:\n *                      extraPrefix + 0, extraPrefix + extraBaseIndex + 1 ...\n *                      If not specified, extra dim names will be:\n *                      extraPrefix, extraPrefix + 0, extraPrefix + 1 ...\n * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n * @return {Array.<Object>} [{\n *      name: string mandatory,\n *      coordDim: string mandatory,\n *      coordDimIndex: number mandatory,\n *      type: string optional,\n *      tooltipName: string optional,\n *      otherDims: {\n *          tooltip: number optional,\n *          label: number optional\n *      },\n *      isExtraCoord: boolean true or undefined.\n *      other props ...\n * }]\n */\n\nfunction completeDimensions(sysDims, data, opt) {\n  data = data || [];\n  opt = opt || {};\n  sysDims = (sysDims || []).slice();\n  var dimsDef = (opt.dimsDef || []).slice();\n  var encodeDef = zrUtil.createHashMap(opt.encodeDef);\n  var dataDimNameMap = zrUtil.createHashMap();\n  var coordDimNameMap = zrUtil.createHashMap(); // var valueCandidate;\n\n  var result = [];\n  var dimCount = opt.dimCount;\n\n  if (dimCount == null) {\n    var value0 = retrieveValue(data[0]);\n    dimCount = Math.max(zrUtil.isArray(value0) && value0.length || 1, sysDims.length, dimsDef.length);\n    each(sysDims, function (sysDimItem) {\n      var sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n    });\n  } // Apply user defined dims (`name` and `type`) and init result.\n\n\n  for (var i = 0; i < dimCount; i++) {\n    var dimDefItem = isString(dimsDef[i]) ? {\n      name: dimsDef[i]\n    } : dimsDef[i] || {};\n    var userDimName = dimDefItem.name;\n    var resultItem = result[i] = {\n      otherDims: {}\n    }; // Name will be applied later for avoiding duplication.\n\n    if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n      // Only if `series.dimensions` is defined in option, tooltipName\n      // will be set, and dimension will be diplayed vertically in\n      // tooltip by default.\n      resultItem.name = resultItem.tooltipName = userDimName;\n      dataDimNameMap.set(userDimName, i);\n    }\n\n    dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n  } // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n\n\n  encodeDef.each(function (dataDims, coordDim) {\n    dataDims = encodeDef.set(coordDim, normalizeToArray(dataDims).slice());\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      // The input resultDimIdx can be dim name or index.\n      isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n\n      if (resultDimIdx != null && resultDimIdx < dimCount) {\n        dataDims[coordDimIndex] = resultDimIdx;\n        applyDim(result[resultDimIdx], coordDim, coordDimIndex);\n      }\n    });\n  }); // Apply templetes and default order from `sysDims`.\n\n  var availDimIdx = 0;\n  each(sysDims, function (sysDimItem, sysDimIndex) {\n    var coordDim;\n    var sysDimItem;\n    var sysDimItemDimsDef;\n    var sysDimItemOtherDims;\n\n    if (isString(sysDimItem)) {\n      coordDim = sysDimItem;\n      sysDimItem = {};\n    } else {\n      coordDim = sysDimItem.name;\n      sysDimItem = zrUtil.clone(sysDimItem); // `coordDimIndex` should not be set directly.\n\n      sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemOtherDims = sysDimItem.otherDims;\n      sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n    }\n\n    var dataDims = normalizeToArray(encodeDef.get(coordDim)); // dimensions provides default dim sequences.\n\n    if (!dataDims.length) {\n      for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n        while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n          availDimIdx++;\n        }\n\n        availDimIdx < result.length && dataDims.push(availDimIdx++);\n      }\n    } // Apply templates.\n\n\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      var resultItem = result[resultDimIdx];\n      applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n\n      if (resultItem.name == null && sysDimItemDimsDef) {\n        resultItem.name = resultItem.tooltipName = sysDimItemDimsDef[coordDimIndex];\n      }\n\n      sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n    });\n  }); // Make sure the first extra dim is 'value'.\n\n  var extra = opt.extraPrefix || 'value'; // Set dim `name` and other `coordDim` and other props.\n\n  for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n    var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n    var coordDim = resultItem.coordDim;\n    coordDim == null && (resultItem.coordDim = genName(extra, coordDimNameMap, opt.extraFromZero), resultItem.coordDimIndex = 0, resultItem.isExtraCoord = true);\n    resultItem.name == null && (resultItem.name = genName(resultItem.coordDim, dataDimNameMap));\n    resultItem.type == null && guessOrdinal(data, resultDimIdx) && (resultItem.type = 'ordinal');\n  }\n\n  return result;\n\n  function applyDim(resultItem, coordDim, coordDimIndex) {\n    if (OTHER_DIMS[coordDim]) {\n      resultItem.otherDims[coordDim] = coordDimIndex;\n    } else {\n      resultItem.coordDim = coordDim;\n      resultItem.coordDimIndex = coordDimIndex;\n      coordDimNameMap.set(coordDim, true);\n    }\n  }\n\n  function genName(name, map, fromZero) {\n    if (fromZero || map.get(name) != null) {\n      var i = 0;\n\n      while (map.get(name + i) != null) {\n        i++;\n      }\n\n      name += i;\n    }\n\n    map.set(name, true);\n    return name;\n  }\n} // The rule should not be complex, otherwise user might not\n// be able to known where the data is wrong.\n\n\nvar guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n  for (var i = 0, len = data.length; i < len; i++) {\n    var value = retrieveValue(data[i]);\n\n    if (!zrUtil.isArray(value)) {\n      return false;\n    }\n\n    var value = value[dimIndex]; // Consider usage convenience, '1', '2' will be treated as \"number\".\n    // `isFinit('')` get `true`.\n\n    if (value != null && isFinite(value) && value !== '') {\n      return false;\n    } else if (isString(value) && value !== '-') {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nfunction retrieveValue(o) {\n  return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value : o;\n}\n\nvar _default = completeDimensions;\nmodule.exports = _default;","var BoundingRect = require(\"../core/BoundingRect\");\n\nvar imageHelper = require(\"../graphic/helper/image\");\n\nvar _util = require(\"../core/util\");\n\nvar getContext = _util.getContext;\nvar extend = _util.extend;\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar textWidthCache = {};\nvar textWidthCacheCounter = 0;\nvar TEXT_CACHE_MAX = 5000;\nvar STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\nvar DEFAULT_FONT = '12px sans-serif'; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {number} width\n */\n\n\nfunction getWidth(text, font) {\n  font = font || DEFAULT_FONT;\n  var key = text + ':' + font;\n\n  if (textWidthCache[key]) {\n    return textWidthCache[key];\n  }\n\n  var textLines = (text + '').split('\\n');\n  var width = 0;\n\n  for (var i = 0, l = textLines.length; i < l; i++) {\n    // textContain.measureText may be overrided in SVG or VML\n    width = Math.max(measureText(textLines[i], font).width, width);\n  }\n\n  if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n    textWidthCacheCounter = 0;\n    textWidthCache = {};\n  }\n\n  textWidthCacheCounter++;\n  textWidthCache[key] = width;\n  return width;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {string} [textAlign='left']\n * @param {string} [textVerticalAlign='top']\n * @param {Array.<number>} [textPadding]\n * @param {Object} [rich]\n * @param {Object} [truncate]\n * @return {Object} {x, y, width, height, lineHeight}\n */\n\n\nfunction getBoundingRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  return rich ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\n}\n\nfunction getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\n  var contentBlock = parsePlainText(text, font, textPadding, truncate);\n  var outerWidth = getWidth(text, font);\n\n  if (textPadding) {\n    outerWidth += textPadding[1] + textPadding[3];\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  var rect = new BoundingRect(x, y, outerWidth, outerHeight);\n  rect.lineHeight = contentBlock.lineHeight;\n  return rect;\n}\n\nfunction getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  var contentBlock = parseRichText(text, {\n    rich: rich,\n    truncate: truncate,\n    font: font,\n    textAlign: textAlign,\n    textPadding: textPadding\n  });\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  return new BoundingRect(x, y, outerWidth, outerHeight);\n}\n/**\n * @public\n * @param {number} x\n * @param {number} width\n * @param {string} [textAlign='left']\n * @return {number} Adjusted x.\n */\n\n\nfunction adjustTextX(x, width, textAlign) {\n  // FIXME Right to left language\n  if (textAlign === 'right') {\n    x -= width;\n  } else if (textAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n/**\n * @public\n * @param {number} y\n * @param {number} height\n * @param {string} [textVerticalAlign='top']\n * @return {number} Adjusted y.\n */\n\n\nfunction adjustTextY(y, height, textVerticalAlign) {\n  if (textVerticalAlign === 'middle') {\n    y -= height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y -= height;\n  }\n\n  return y;\n}\n/**\n * @public\n * @param {stirng} textPosition\n * @param {Object} rect {x, y, width, height}\n * @param {number} distance\n * @return {Object} {x, y, textAlign, textVerticalAlign}\n */\n\n\nfunction adjustTextPositionOnRect(textPosition, rect, distance) {\n  var x = rect.x;\n  var y = rect.y;\n  var height = rect.height;\n  var width = rect.width;\n  var halfHeight = height / 2;\n  var textAlign = 'left';\n  var textVerticalAlign = 'top';\n\n  switch (textPosition) {\n    case 'left':\n      x -= distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'right':\n      x += distance + width;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'top':\n      x += width / 2;\n      y -= distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'bottom':\n      x += width / 2;\n      y += height + distance;\n      textAlign = 'center';\n      break;\n\n    case 'inside':\n      x += width / 2;\n      y += halfHeight;\n      textAlign = 'center';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideLeft':\n      x += distance;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideRight':\n      x += width - distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideTop':\n      x += width / 2;\n      y += distance;\n      textAlign = 'center';\n      break;\n\n    case 'insideBottom':\n      x += width / 2;\n      y += height - distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideTopLeft':\n      x += distance;\n      y += distance;\n      break;\n\n    case 'insideTopRight':\n      x += width - distance;\n      y += distance;\n      textAlign = 'right';\n      break;\n\n    case 'insideBottomLeft':\n      x += distance;\n      y += height - distance;\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideBottomRight':\n      x += width - distance;\n      y += height - distance;\n      textAlign = 'right';\n      textVerticalAlign = 'bottom';\n      break;\n  }\n\n  return {\n    x: x,\n    y: y,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n/**\n * Show ellipsis if overflow.\n *\n * @public\n * @param  {string} text\n * @param  {string} containerWidth\n * @param  {string} font\n * @param  {number} [ellipsis='...']\n * @param  {Object} [options]\n * @param  {number} [options.maxIterations=3]\n * @param  {number} [options.minChar=0] If truncate result are less\n *                  then minChar, ellipsis will not show, which is\n *                  better for user hint in some cases.\n * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n * @return {string}\n */\n\n\nfunction truncateText(text, containerWidth, font, ellipsis, options) {\n  if (!containerWidth) {\n    return '';\n  }\n\n  var textLines = (text + '').split('\\n');\n  options = prepareTruncateOptions(containerWidth, font, ellipsis, options); // FIXME\n  // It is not appropriate that every line has '...' when truncate multiple lines.\n\n  for (var i = 0, len = textLines.length; i < len; i++) {\n    textLines[i] = truncateSingleLine(textLines[i], options);\n  }\n\n  return textLines.join('\\n');\n}\n\nfunction prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n  options = extend({}, options);\n  options.font = font;\n  var ellipsis = retrieve2(ellipsis, '...');\n  options.maxIterations = retrieve2(options.maxIterations, 2);\n  var minChar = options.minChar = retrieve2(options.minChar, 0); // FIXME\n  // Other languages?\n\n  options.cnCharWidth = getWidth('国', font); // FIXME\n  // Consider proportional font?\n\n  var ascCharWidth = options.ascCharWidth = getWidth('a', font);\n  options.placeholder = retrieve2(options.placeholder, ''); // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n  // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n\n  var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n\n  for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n    contentWidth -= ascCharWidth;\n  }\n\n  var ellipsisWidth = getWidth(ellipsis);\n\n  if (ellipsisWidth > contentWidth) {\n    ellipsis = '';\n    ellipsisWidth = 0;\n  }\n\n  contentWidth = containerWidth - ellipsisWidth;\n  options.ellipsis = ellipsis;\n  options.ellipsisWidth = ellipsisWidth;\n  options.contentWidth = contentWidth;\n  options.containerWidth = containerWidth;\n  return options;\n}\n\nfunction truncateSingleLine(textLine, options) {\n  var containerWidth = options.containerWidth;\n  var font = options.font;\n  var contentWidth = options.contentWidth;\n\n  if (!containerWidth) {\n    return '';\n  }\n\n  var lineWidth = getWidth(textLine, font);\n\n  if (lineWidth <= containerWidth) {\n    return textLine;\n  }\n\n  for (var j = 0;; j++) {\n    if (lineWidth <= contentWidth || j >= options.maxIterations) {\n      textLine += options.ellipsis;\n      break;\n    }\n\n    var subLength = j === 0 ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth) : lineWidth > 0 ? Math.floor(textLine.length * contentWidth / lineWidth) : 0;\n    textLine = textLine.substr(0, subLength);\n    lineWidth = getWidth(textLine, font);\n  }\n\n  if (textLine === '') {\n    textLine = options.placeholder;\n  }\n\n  return textLine;\n}\n\nfunction estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n  var width = 0;\n  var i = 0;\n\n  for (var len = text.length; i < len && width < contentWidth; i++) {\n    var charCode = text.charCodeAt(i);\n    width += 0 <= charCode && charCode <= 127 ? ascCharWidth : cnCharWidth;\n  }\n\n  return i;\n}\n/**\n * @public\n * @param {string} font\n * @return {number} line height\n */\n\n\nfunction getLineHeight(font) {\n  // FIXME A rough approach.\n  return getWidth('国', font);\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {Object} width\n */\n\n\nfunction measureText(text, font) {\n  return methods.measureText(text, font);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nmethods.measureText = function (text, font) {\n  var ctx = getContext();\n  ctx.font = font || DEFAULT_FONT;\n  return ctx.measureText(text);\n};\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {Object} [truncate]\n * @return {Object} block: {lineHeight, lines, height, outerHeight}\n *  Notice: for performance, do not calculate outerWidth util needed.\n */\n\n\nfunction parsePlainText(text, font, padding, truncate) {\n  text != null && (text += '');\n  var lineHeight = getLineHeight(font);\n  var lines = text ? text.split('\\n') : [];\n  var height = lines.length * lineHeight;\n  var outerHeight = height;\n\n  if (padding) {\n    outerHeight += padding[0] + padding[2];\n  }\n\n  if (text && truncate) {\n    var truncOuterHeight = truncate.outerHeight;\n    var truncOuterWidth = truncate.outerWidth;\n\n    if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\n      text = '';\n      lines = [];\n    } else if (truncOuterWidth != null) {\n      var options = prepareTruncateOptions(truncOuterWidth - (padding ? padding[1] + padding[3] : 0), font, truncate.ellipsis, {\n        minChar: truncate.minChar,\n        placeholder: truncate.placeholder\n      }); // FIXME\n      // It is not appropriate that every line has '...' when truncate multiple lines.\n\n      for (var i = 0, len = lines.length; i < len; i++) {\n        lines[i] = truncateSingleLine(lines[i], options);\n      }\n    }\n  }\n\n  return {\n    lines: lines,\n    height: height,\n    outerHeight: outerHeight,\n    lineHeight: lineHeight\n  };\n}\n/**\n * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\n * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\n *\n * @public\n * @param {string} text\n * @param {Object} style\n * @return {Object} block\n * {\n *      width,\n *      height,\n *      lines: [{\n *          lineHeight,\n *          width,\n *          tokens: [[{\n *              styleName,\n *              text,\n *              width,      // include textPadding\n *              height,     // include textPadding\n *              textWidth, // pure text width\n *              textHeight, // pure text height\n *              lineHeihgt,\n *              font,\n *              textAlign,\n *              textVerticalAlign\n *          }], [...], ...]\n *      }, ...]\n * }\n * If styleName is undefined, it is plain text.\n */\n\n\nfunction parseRichText(text, style) {\n  var contentBlock = {\n    lines: [],\n    width: 0,\n    height: 0\n  };\n  text != null && (text += '');\n\n  if (!text) {\n    return contentBlock;\n  }\n\n  var lastIndex = STYLE_REG.lastIndex = 0;\n  var result;\n\n  while ((result = STYLE_REG.exec(text)) != null) {\n    var matchedIndex = result.index;\n\n    if (matchedIndex > lastIndex) {\n      pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\n    }\n\n    pushTokens(contentBlock, result[2], result[1]);\n    lastIndex = STYLE_REG.lastIndex;\n  }\n\n  if (lastIndex < text.length) {\n    pushTokens(contentBlock, text.substring(lastIndex, text.length));\n  }\n\n  var lines = contentBlock.lines;\n  var contentHeight = 0;\n  var contentWidth = 0; // For `textWidth: 100%`\n\n  var pendingList = [];\n  var stlPadding = style.textPadding;\n  var truncate = style.truncate;\n  var truncateWidth = truncate && truncate.outerWidth;\n  var truncateHeight = truncate && truncate.outerHeight;\n\n  if (stlPadding) {\n    truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\n    truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\n  } // Calculate layout info of tokens.\n\n\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i];\n    var lineHeight = 0;\n    var lineWidth = 0;\n\n    for (var j = 0; j < line.tokens.length; j++) {\n      var token = line.tokens[j];\n      var tokenStyle = token.styleName && style.rich[token.styleName] || {}; // textPadding should not inherit from style.\n\n      var textPadding = token.textPadding = tokenStyle.textPadding; // textFont has been asigned to font by `normalizeStyle`.\n\n      var font = token.font = tokenStyle.font || style.font; // textHeight can be used when textVerticalAlign is specified in token.\n\n      var tokenHeight = token.textHeight = retrieve2( // textHeight should not be inherited, consider it can be specified\n      // as box height of the block.\n      tokenStyle.textHeight, getLineHeight(font));\n      textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n      token.height = tokenHeight;\n      token.lineHeight = retrieve3(tokenStyle.textLineHeight, style.textLineHeight, tokenHeight);\n      token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\n      token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\n\n      if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\n        return {\n          lines: [],\n          width: 0,\n          height: 0\n        };\n      }\n\n      token.textWidth = getWidth(token.text, font);\n      var tokenWidth = tokenStyle.textWidth;\n      var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto'; // Percent width, can be `100%`, can be used in drawing separate\n      // line when box width is needed to be auto.\n\n      if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\n        token.percentWidth = tokenWidth;\n        pendingList.push(token);\n        tokenWidth = 0; // Do not truncate in this case, because there is no user case\n        // and it is too complicated.\n      } else {\n        if (tokenWidthNotSpecified) {\n          tokenWidth = token.textWidth; // FIXME: If image is not loaded and textWidth is not specified, calling\n          // `getBoundingRect()` will not get correct result.\n\n          var textBackgroundColor = tokenStyle.textBackgroundColor;\n          var bgImg = textBackgroundColor && textBackgroundColor.image; // Use cases:\n          // (1) If image is not loaded, it will be loaded at render phase and call\n          // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\n          // image, and then the right size will be calculated here at the next tick.\n          // See `graphic/helper/text.js`.\n          // (2) If image loaded, and `textBackgroundColor.image` is image src string,\n          // use `imageHelper.findExistImage` to find cached image.\n          // `imageHelper.findExistImage` will always be called here before\n          // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\n          // which ensures that image will not be rendered before correct size calcualted.\n\n          if (bgImg) {\n            bgImg = imageHelper.findExistImage(bgImg);\n\n            if (imageHelper.isImageReady(bgImg)) {\n              tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\n            }\n          }\n        }\n\n        var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\n        tokenWidth += paddingW;\n        var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\n\n        if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\n          if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\n            token.text = '';\n            token.textWidth = tokenWidth = 0;\n          } else {\n            token.text = truncateText(token.text, remianTruncWidth - paddingW, font, truncate.ellipsis, {\n              minChar: truncate.minChar\n            });\n            token.textWidth = getWidth(token.text, font);\n            tokenWidth = token.textWidth + paddingW;\n          }\n        }\n      }\n\n      lineWidth += token.width = tokenWidth;\n      tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n    }\n\n    line.width = lineWidth;\n    line.lineHeight = lineHeight;\n    contentHeight += lineHeight;\n    contentWidth = Math.max(contentWidth, lineWidth);\n  }\n\n  contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\n  contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\n\n  if (stlPadding) {\n    contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n    contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n  }\n\n  for (var i = 0; i < pendingList.length; i++) {\n    var token = pendingList[i];\n    var percentWidth = token.percentWidth; // Should not base on outerWidth, because token can not be placed out of padding.\n\n    token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\n  }\n\n  return contentBlock;\n}\n\nfunction pushTokens(block, str, styleName) {\n  var isEmptyStr = str === '';\n  var strs = str.split('\\n');\n  var lines = block.lines;\n\n  for (var i = 0; i < strs.length; i++) {\n    var text = strs[i];\n    var token = {\n      styleName: styleName,\n      text: text,\n      isLineHolder: !text && !isEmptyStr\n    }; // The first token should be appended to the last line.\n\n    if (!i) {\n      var tokens = (lines[lines.length - 1] || (lines[0] = {\n        tokens: []\n      })).tokens; // Consider cases:\n      // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\n      // (which is a placeholder) should be replaced by new token.\n      // (2) A image backage, where token likes {a|}.\n      // (3) A redundant '' will affect textAlign in line.\n      // (4) tokens with the same tplName should not be merged, because\n      // they should be displayed in different box (with border and padding).\n\n      var tokensLen = tokens.length;\n      tokensLen === 1 && tokens[0].isLineHolder ? tokens[0] = token : // Consider text is '', only insert when it is the \"lineHolder\" or\n      // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\n      (text || !tokensLen || isEmptyStr) && tokens.push(token);\n    } // Other tokens always start a new line.\n    else {\n        // If there is '', insert it as a placeholder.\n        lines.push({\n          tokens: [token]\n        });\n      }\n  }\n}\n\nfunction makeFont(style) {\n  // FIXME in node-canvas fontWeight is before fontStyle\n  // Use `fontSize` `fontFamily` to check whether font properties are defined.\n  return (style.fontSize || style.fontFamily) && [style.fontStyle, style.fontWeight, (style.fontSize || 12) + 'px', // If font properties are defined, `fontFamily` should not be ignored.\n  style.fontFamily || 'sans-serif'].join(' ') || style.textFont || style.font;\n}\n\nexports.DEFAULT_FONT = DEFAULT_FONT;\nexports.$override = $override;\nexports.getWidth = getWidth;\nexports.getBoundingRect = getBoundingRect;\nexports.adjustTextX = adjustTextX;\nexports.adjustTextY = adjustTextY;\nexports.adjustTextPositionOnRect = adjustTextPositionOnRect;\nexports.truncateText = truncateText;\nexports.getLineHeight = getLineHeight;\nexports.measureText = measureText;\nexports.parsePlainText = parsePlainText;\nexports.parseRichText = parseRichText;\nexports.makeFont = makeFont;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar coordinateSystemCreators = {};\n\nfunction CoordinateSystemManager() {\n  this._coordinateSystems = [];\n}\n\nCoordinateSystemManager.prototype = {\n  constructor: CoordinateSystemManager,\n  create: function (ecModel, api) {\n    var coordinateSystems = [];\n    zrUtil.each(coordinateSystemCreators, function (creater, type) {\n      var list = creater.create(ecModel, api);\n      coordinateSystems = coordinateSystems.concat(list || []);\n    });\n    this._coordinateSystems = coordinateSystems;\n  },\n  update: function (ecModel, api) {\n    zrUtil.each(this._coordinateSystems, function (coordSys) {\n      // FIXME MUST have\n      coordSys.update && coordSys.update(ecModel, api);\n    });\n  },\n  getCoordinateSystems: function () {\n    return this._coordinateSystems.slice();\n  }\n};\n\nCoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n  coordinateSystemCreators[type] = coordinateSystemCreator;\n};\n\nCoordinateSystemManager.get = function (type) {\n  return coordinateSystemCreators[type];\n};\n\nvar _default = CoordinateSystemManager;\nmodule.exports = _default;","var LRU = require(\"../core/LRU\");\n\nvar kCSSColorTable = {\n  'transparent': [0, 0, 0, 0],\n  'aliceblue': [240, 248, 255, 1],\n  'antiquewhite': [250, 235, 215, 1],\n  'aqua': [0, 255, 255, 1],\n  'aquamarine': [127, 255, 212, 1],\n  'azure': [240, 255, 255, 1],\n  'beige': [245, 245, 220, 1],\n  'bisque': [255, 228, 196, 1],\n  'black': [0, 0, 0, 1],\n  'blanchedalmond': [255, 235, 205, 1],\n  'blue': [0, 0, 255, 1],\n  'blueviolet': [138, 43, 226, 1],\n  'brown': [165, 42, 42, 1],\n  'burlywood': [222, 184, 135, 1],\n  'cadetblue': [95, 158, 160, 1],\n  'chartreuse': [127, 255, 0, 1],\n  'chocolate': [210, 105, 30, 1],\n  'coral': [255, 127, 80, 1],\n  'cornflowerblue': [100, 149, 237, 1],\n  'cornsilk': [255, 248, 220, 1],\n  'crimson': [220, 20, 60, 1],\n  'cyan': [0, 255, 255, 1],\n  'darkblue': [0, 0, 139, 1],\n  'darkcyan': [0, 139, 139, 1],\n  'darkgoldenrod': [184, 134, 11, 1],\n  'darkgray': [169, 169, 169, 1],\n  'darkgreen': [0, 100, 0, 1],\n  'darkgrey': [169, 169, 169, 1],\n  'darkkhaki': [189, 183, 107, 1],\n  'darkmagenta': [139, 0, 139, 1],\n  'darkolivegreen': [85, 107, 47, 1],\n  'darkorange': [255, 140, 0, 1],\n  'darkorchid': [153, 50, 204, 1],\n  'darkred': [139, 0, 0, 1],\n  'darksalmon': [233, 150, 122, 1],\n  'darkseagreen': [143, 188, 143, 1],\n  'darkslateblue': [72, 61, 139, 1],\n  'darkslategray': [47, 79, 79, 1],\n  'darkslategrey': [47, 79, 79, 1],\n  'darkturquoise': [0, 206, 209, 1],\n  'darkviolet': [148, 0, 211, 1],\n  'deeppink': [255, 20, 147, 1],\n  'deepskyblue': [0, 191, 255, 1],\n  'dimgray': [105, 105, 105, 1],\n  'dimgrey': [105, 105, 105, 1],\n  'dodgerblue': [30, 144, 255, 1],\n  'firebrick': [178, 34, 34, 1],\n  'floralwhite': [255, 250, 240, 1],\n  'forestgreen': [34, 139, 34, 1],\n  'fuchsia': [255, 0, 255, 1],\n  'gainsboro': [220, 220, 220, 1],\n  'ghostwhite': [248, 248, 255, 1],\n  'gold': [255, 215, 0, 1],\n  'goldenrod': [218, 165, 32, 1],\n  'gray': [128, 128, 128, 1],\n  'green': [0, 128, 0, 1],\n  'greenyellow': [173, 255, 47, 1],\n  'grey': [128, 128, 128, 1],\n  'honeydew': [240, 255, 240, 1],\n  'hotpink': [255, 105, 180, 1],\n  'indianred': [205, 92, 92, 1],\n  'indigo': [75, 0, 130, 1],\n  'ivory': [255, 255, 240, 1],\n  'khaki': [240, 230, 140, 1],\n  'lavender': [230, 230, 250, 1],\n  'lavenderblush': [255, 240, 245, 1],\n  'lawngreen': [124, 252, 0, 1],\n  'lemonchiffon': [255, 250, 205, 1],\n  'lightblue': [173, 216, 230, 1],\n  'lightcoral': [240, 128, 128, 1],\n  'lightcyan': [224, 255, 255, 1],\n  'lightgoldenrodyellow': [250, 250, 210, 1],\n  'lightgray': [211, 211, 211, 1],\n  'lightgreen': [144, 238, 144, 1],\n  'lightgrey': [211, 211, 211, 1],\n  'lightpink': [255, 182, 193, 1],\n  'lightsalmon': [255, 160, 122, 1],\n  'lightseagreen': [32, 178, 170, 1],\n  'lightskyblue': [135, 206, 250, 1],\n  'lightslategray': [119, 136, 153, 1],\n  'lightslategrey': [119, 136, 153, 1],\n  'lightsteelblue': [176, 196, 222, 1],\n  'lightyellow': [255, 255, 224, 1],\n  'lime': [0, 255, 0, 1],\n  'limegreen': [50, 205, 50, 1],\n  'linen': [250, 240, 230, 1],\n  'magenta': [255, 0, 255, 1],\n  'maroon': [128, 0, 0, 1],\n  'mediumaquamarine': [102, 205, 170, 1],\n  'mediumblue': [0, 0, 205, 1],\n  'mediumorchid': [186, 85, 211, 1],\n  'mediumpurple': [147, 112, 219, 1],\n  'mediumseagreen': [60, 179, 113, 1],\n  'mediumslateblue': [123, 104, 238, 1],\n  'mediumspringgreen': [0, 250, 154, 1],\n  'mediumturquoise': [72, 209, 204, 1],\n  'mediumvioletred': [199, 21, 133, 1],\n  'midnightblue': [25, 25, 112, 1],\n  'mintcream': [245, 255, 250, 1],\n  'mistyrose': [255, 228, 225, 1],\n  'moccasin': [255, 228, 181, 1],\n  'navajowhite': [255, 222, 173, 1],\n  'navy': [0, 0, 128, 1],\n  'oldlace': [253, 245, 230, 1],\n  'olive': [128, 128, 0, 1],\n  'olivedrab': [107, 142, 35, 1],\n  'orange': [255, 165, 0, 1],\n  'orangered': [255, 69, 0, 1],\n  'orchid': [218, 112, 214, 1],\n  'palegoldenrod': [238, 232, 170, 1],\n  'palegreen': [152, 251, 152, 1],\n  'paleturquoise': [175, 238, 238, 1],\n  'palevioletred': [219, 112, 147, 1],\n  'papayawhip': [255, 239, 213, 1],\n  'peachpuff': [255, 218, 185, 1],\n  'peru': [205, 133, 63, 1],\n  'pink': [255, 192, 203, 1],\n  'plum': [221, 160, 221, 1],\n  'powderblue': [176, 224, 230, 1],\n  'purple': [128, 0, 128, 1],\n  'red': [255, 0, 0, 1],\n  'rosybrown': [188, 143, 143, 1],\n  'royalblue': [65, 105, 225, 1],\n  'saddlebrown': [139, 69, 19, 1],\n  'salmon': [250, 128, 114, 1],\n  'sandybrown': [244, 164, 96, 1],\n  'seagreen': [46, 139, 87, 1],\n  'seashell': [255, 245, 238, 1],\n  'sienna': [160, 82, 45, 1],\n  'silver': [192, 192, 192, 1],\n  'skyblue': [135, 206, 235, 1],\n  'slateblue': [106, 90, 205, 1],\n  'slategray': [112, 128, 144, 1],\n  'slategrey': [112, 128, 144, 1],\n  'snow': [255, 250, 250, 1],\n  'springgreen': [0, 255, 127, 1],\n  'steelblue': [70, 130, 180, 1],\n  'tan': [210, 180, 140, 1],\n  'teal': [0, 128, 128, 1],\n  'thistle': [216, 191, 216, 1],\n  'tomato': [255, 99, 71, 1],\n  'turquoise': [64, 224, 208, 1],\n  'violet': [238, 130, 238, 1],\n  'wheat': [245, 222, 179, 1],\n  'white': [255, 255, 255, 1],\n  'whitesmoke': [245, 245, 245, 1],\n  'yellow': [255, 255, 0, 1],\n  'yellowgreen': [154, 205, 50, 1]\n};\n\nfunction clampCssByte(i) {\n  // Clamp to integer 0 .. 255.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clampCssAngle(i) {\n  // Clamp to integer 0 .. 360.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 360 ? 360 : i;\n}\n\nfunction clampCssFloat(f) {\n  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parseCssInt(str) {\n  // int or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssByte(parseFloat(str) / 100 * 255);\n  }\n\n  return clampCssByte(parseInt(str, 10));\n}\n\nfunction parseCssFloat(str) {\n  // float or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssFloat(parseFloat(str) / 100);\n  }\n\n  return clampCssFloat(parseFloat(str));\n}\n\nfunction cssHueToRgb(m1, m2, h) {\n  if (h < 0) {\n    h += 1;\n  } else if (h > 1) {\n    h -= 1;\n  }\n\n  if (h * 6 < 1) {\n    return m1 + (m2 - m1) * h * 6;\n  }\n\n  if (h * 2 < 1) {\n    return m2;\n  }\n\n  if (h * 3 < 2) {\n    return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n  }\n\n  return m1;\n}\n\nfunction lerpNumber(a, b, p) {\n  return a + (b - a) * p;\n}\n\nfunction setRgba(out, r, g, b, a) {\n  out[0] = r;\n  out[1] = g;\n  out[2] = b;\n  out[3] = a;\n  return out;\n}\n\nfunction copyRgba(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\nvar colorCache = new LRU(20);\nvar lastRemovedArr = null;\n\nfunction putToCache(colorStr, rgbaArr) {\n  // Reuse removed array\n  if (lastRemovedArr) {\n    copyRgba(lastRemovedArr, rgbaArr);\n  }\n\n  lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || rgbaArr.slice());\n}\n/**\n * @param {string} colorStr\n * @param {Array.<number>} out\n * @return {Array.<number>}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction parse(colorStr, rgbaArr) {\n  if (!colorStr) {\n    return;\n  }\n\n  rgbaArr = rgbaArr || [];\n  var cached = colorCache.get(colorStr);\n\n  if (cached) {\n    return copyRgba(rgbaArr, cached);\n  } // colorStr may be not string\n\n\n  colorStr = colorStr + ''; // Remove all whitespace, not compliant, but should just be more accepting.\n\n  var str = colorStr.replace(/ /g, '').toLowerCase(); // Color keywords (and transparent) lookup.\n\n  if (str in kCSSColorTable) {\n    copyRgba(rgbaArr, kCSSColorTable[str]);\n    putToCache(colorStr, rgbaArr);\n    return rgbaArr;\n  } // #abc and #abc123 syntax.\n\n\n  if (str.charAt(0) === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xfff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xf00) >> 4 | (iv & 0xf00) >> 8, iv & 0xf0 | (iv & 0xf0) >> 4, iv & 0xf | (iv & 0xf) << 4, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xffffff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xff0000) >> 16, (iv & 0xff00) >> 8, iv & 0xff, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    }\n\n    return;\n  }\n\n  var op = str.indexOf('('),\n      ep = str.indexOf(')');\n\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op + 1, ep - (op + 1)).split(',');\n    var alpha = 1; // To allow case fallthrough.\n\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        alpha = parseCssFloat(params.pop());\n      // jshint ignore:line\n      // Fall through.\n\n      case 'rgb':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        setRgba(rgbaArr, parseCssInt(params[0]), parseCssInt(params[1]), parseCssInt(params[2]), alpha);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsla':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        params[3] = parseCssFloat(params[3]);\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsl':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      default:\n        return;\n    }\n  }\n\n  setRgba(rgbaArr, 0, 0, 0, 1);\n  return;\n}\n/**\n * @param {Array.<number>} hsla\n * @param {Array.<number>} rgba\n * @return {Array.<number>} rgba\n */\n\n\nfunction hsla2rgba(hsla, rgba) {\n  var h = (parseFloat(hsla[0]) % 360 + 360) % 360 / 360; // 0 .. 1\n  // NOTE(deanm): According to the CSS spec s/l should only be\n  // percentages, but we don't bother and let float or percentage.\n\n  var s = parseCssFloat(hsla[1]);\n  var l = parseCssFloat(hsla[2]);\n  var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n  var m1 = l * 2 - m2;\n  rgba = rgba || [];\n  setRgba(rgba, clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255), clampCssByte(cssHueToRgb(m1, m2, h) * 255), clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255), 1);\n\n  if (hsla.length === 4) {\n    rgba[3] = hsla[3];\n  }\n\n  return rgba;\n}\n/**\n * @param {Array.<number>} rgba\n * @return {Array.<number>} hsla\n */\n\n\nfunction rgba2hsla(rgba) {\n  if (!rgba) {\n    return;\n  } // RGB from 0 to 255\n\n\n  var R = rgba[0] / 255;\n  var G = rgba[1] / 255;\n  var B = rgba[2] / 255;\n  var vMin = Math.min(R, G, B); // Min. value of RGB\n\n  var vMax = Math.max(R, G, B); // Max. value of RGB\n\n  var delta = vMax - vMin; // Delta RGB value\n\n  var L = (vMax + vMin) / 2;\n  var H;\n  var S; // HSL results from 0 to 1\n\n  if (delta === 0) {\n    H = 0;\n    S = 0;\n  } else {\n    if (L < 0.5) {\n      S = delta / (vMax + vMin);\n    } else {\n      S = delta / (2 - vMax - vMin);\n    }\n\n    var deltaR = ((vMax - R) / 6 + delta / 2) / delta;\n    var deltaG = ((vMax - G) / 6 + delta / 2) / delta;\n    var deltaB = ((vMax - B) / 6 + delta / 2) / delta;\n\n    if (R === vMax) {\n      H = deltaB - deltaG;\n    } else if (G === vMax) {\n      H = 1 / 3 + deltaR - deltaB;\n    } else if (B === vMax) {\n      H = 2 / 3 + deltaG - deltaR;\n    }\n\n    if (H < 0) {\n      H += 1;\n    }\n\n    if (H > 1) {\n      H -= 1;\n    }\n  }\n\n  var hsla = [H * 360, S, L];\n\n  if (rgba[3] != null) {\n    hsla.push(rgba[3]);\n  }\n\n  return hsla;\n}\n/**\n * @param {string} color\n * @param {number} level\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction lift(color, level) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    for (var i = 0; i < 3; i++) {\n      if (level < 0) {\n        colorArr[i] = colorArr[i] * (1 - level) | 0;\n      } else {\n        colorArr[i] = (255 - colorArr[i]) * level + colorArr[i] | 0;\n      }\n    }\n\n    return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n  }\n}\n/**\n * @param {string} color\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction toHex(color) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + +colorArr[2]).toString(16).slice(1);\n  }\n}\n/**\n * Map value to color. Faster than lerp methods because color is represented by rgba array.\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<Array.<number>>} colors List of rgba color array\n * @param {Array.<number>} [out] Mapped gba color array\n * @return {Array.<number>} will be null/undefined if input illegal.\n */\n\n\nfunction fastLerp(normalizedValue, colors, out) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  out = out || [];\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = colors[leftIndex];\n  var rightColor = colors[rightIndex];\n  var dv = value - leftIndex;\n  out[0] = clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv));\n  out[1] = clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv));\n  out[2] = clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv));\n  out[3] = clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv));\n  return out;\n}\n/**\n * @deprecated\n */\n\n\nvar fastMapToColor = fastLerp;\n/**\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<string>} colors Color list.\n * @param {boolean=} fullOutput Default false.\n * @return {(string|Object)} Result color. If fullOutput,\n *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n * @memberOf module:zrender/util/color\n */\n\nfunction lerp(normalizedValue, colors, fullOutput) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = parse(colors[leftIndex]);\n  var rightColor = parse(colors[rightIndex]);\n  var dv = value - leftIndex;\n  var color = stringify([clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv)), clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv)), clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv)), clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv))], 'rgba');\n  return fullOutput ? {\n    color: color,\n    leftIndex: leftIndex,\n    rightIndex: rightIndex,\n    value: value\n  } : color;\n}\n/**\n * @deprecated\n */\n\n\nvar mapToColor = lerp;\n/**\n * @param {string} color\n * @param {number=} h 0 ~ 360, ignore when null.\n * @param {number=} s 0 ~ 1, ignore when null.\n * @param {number=} l 0 ~ 1, ignore when null.\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\nfunction modifyHSL(color, h, s, l) {\n  color = parse(color);\n\n  if (color) {\n    color = rgba2hsla(color);\n    h != null && (color[0] = clampCssAngle(h));\n    s != null && (color[1] = parseCssFloat(s));\n    l != null && (color[2] = parseCssFloat(l));\n    return stringify(hsla2rgba(color), 'rgba');\n  }\n}\n/**\n * @param {string} color\n * @param {number=} alpha 0 ~ 1\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\n\nfunction modifyAlpha(color, alpha) {\n  color = parse(color);\n\n  if (color && alpha != null) {\n    color[3] = clampCssFloat(alpha);\n    return stringify(color, 'rgba');\n  }\n}\n/**\n * @param {Array.<number>} arrColor like [12,33,44,0.4]\n * @param {string} type 'rgba', 'hsva', ...\n * @return {string} Result color. (If input illegal, return undefined).\n */\n\n\nfunction stringify(arrColor, type) {\n  if (!arrColor || !arrColor.length) {\n    return;\n  }\n\n  var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n\n  if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n    colorStr += ',' + arrColor[3];\n  }\n\n  return type + '(' + colorStr + ')';\n}\n\nexports.parse = parse;\nexports.lift = lift;\nexports.toHex = toHex;\nexports.fastLerp = fastLerp;\nexports.fastMapToColor = fastMapToColor;\nexports.lerp = lerp;\nexports.mapToColor = mapToColor;\nexports.modifyHSL = modifyHSL;\nexports.modifyAlpha = modifyAlpha;\nexports.stringify = stringify;","var Eventful = require(\"../mixin/Eventful\");\n\nexports.Dispatcher = Eventful;\n\nvar env = require(\"./env\");\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\nvar isDomLevel2 = typeof window !== 'undefined' && !!window.addEventListener;\nvar MOUSE_EVENT_REG = /^(?:mouse|pointer|contextmenu|drag|drop)|click/;\n\nfunction getBoundingClientRect(el) {\n  // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n  return el.getBoundingClientRect ? el.getBoundingClientRect() : {\n    left: 0,\n    top: 0\n  };\n} // `calculate` is optional, default false\n\n\nfunction clientToLocal(el, e, out, calculate) {\n  out = out || {}; // According to the W3C Working Draft, offsetX and offsetY should be relative\n  // to the padding edge of the target element. The only browser using this convention\n  // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n  // not support the properties.\n  // (see http://www.jacklmoore.com/notes/mouse-position/)\n  // In zr painter.dom, padding edge equals to border edge.\n  // FIXME\n  // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n  // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n  // is too complex. So css-transfrom dont support in this case temporarily.\n\n  if (calculate || !env.canvasSupported) {\n    defaultGetZrXY(el, e, out);\n  } // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n  // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n  // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n  // zoom-factor, overflow / opacity layers, transforms ...)\n  // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n  // <https://bugs.jquery.com/ticket/8523#comment:14>\n  // BTW3, In ff, offsetX/offsetY is always 0.\n  else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n      out.zrX = e.layerX;\n      out.zrY = e.layerY;\n    } // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n    else if (e.offsetX != null) {\n        out.zrX = e.offsetX;\n        out.zrY = e.offsetY;\n      } // For some other device, e.g., IOS safari.\n      else {\n          defaultGetZrXY(el, e, out);\n        }\n\n  return out;\n}\n\nfunction defaultGetZrXY(el, e, out) {\n  // This well-known method below does not support css transform.\n  var box = getBoundingClientRect(el);\n  out.zrX = e.clientX - box.left;\n  out.zrY = e.clientY - box.top;\n}\n/**\n * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n * `calculate` is optional, default false.\n */\n\n\nfunction normalizeEvent(el, e, calculate) {\n  e = e || window.event;\n\n  if (e.zrX != null) {\n    return e;\n  }\n\n  var eventType = e.type;\n  var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n  if (!isTouch) {\n    clientToLocal(el, e, e, calculate);\n    e.zrDelta = e.wheelDelta ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n  } else {\n    var touch = eventType != 'touchend' ? e.targetTouches[0] : e.changedTouches[0];\n    touch && clientToLocal(el, touch, e, calculate);\n  } // Add which for click: 1 === left; 2 === middle; 3 === right; otherwise: 0;\n  // See jQuery: https://github.com/jquery/jquery/blob/master/src/event.js\n  // If e.which has been defined, if may be readonly,\n  // see: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which\n\n\n  var button = e.button;\n\n  if (e.which == null && button !== undefined && MOUSE_EVENT_REG.test(e.type)) {\n    e.which = button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;\n  }\n\n  return e;\n}\n\nfunction addEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.addEventListener(name, handler);\n  } else {\n    el.attachEvent('on' + name, handler);\n  }\n}\n\nfunction removeEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.removeEventListener(name, handler);\n  } else {\n    el.detachEvent('on' + name, handler);\n  }\n}\n/**\n * preventDefault and stopPropagation.\n * Notice: do not do that in zrender. Upper application\n * do that if necessary.\n *\n * @memberOf module:zrender/core/event\n * @method\n * @param {Event} e : event对象\n */\n\n\nvar stop = isDomLevel2 ? function (e) {\n  e.preventDefault();\n  e.stopPropagation();\n  e.cancelBubble = true;\n} : function (e) {\n  e.returnValue = false;\n  e.cancelBubble = true;\n};\n\nfunction notLeftMouse(e) {\n  // If e.which is undefined, considered as left mouse event.\n  return e.which > 1;\n} // 做向上兼容\n\n\nexports.clientToLocal = clientToLocal;\nexports.normalizeEvent = normalizeEvent;\nexports.addEventListener = addEventListener;\nexports.removeEventListener = removeEventListener;\nexports.stop = stop;\nexports.notLeftMouse = notLeftMouse;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar TYPE_DELIMITER = '.';\nvar IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\nvar MEMBER_PRIFIX = '\\0ec_\\0';\n/**\n * Hide private class member.\n * The same behavior as `host[name] = value;` (can be right-value)\n * @public\n */\n\nfunction set(host, name, value) {\n  return host[MEMBER_PRIFIX + name] = value;\n}\n/**\n * Hide private class member.\n * The same behavior as `host[name];`\n * @public\n */\n\n\nfunction get(host, name) {\n  return host[MEMBER_PRIFIX + name];\n}\n/**\n * For hidden private class member.\n * The same behavior as `host.hasOwnProperty(name);`\n * @public\n */\n\n\nfunction hasOwn(host, name) {\n  return host.hasOwnProperty(MEMBER_PRIFIX + name);\n}\n/**\n * Notice, parseClassType('') should returns {main: '', sub: ''}\n * @public\n */\n\n\nfunction parseClassType(componentType) {\n  var ret = {\n    main: '',\n    sub: ''\n  };\n\n  if (componentType) {\n    componentType = componentType.split(TYPE_DELIMITER);\n    ret.main = componentType[0] || '';\n    ret.sub = componentType[1] || '';\n  }\n\n  return ret;\n}\n/**\n * @public\n */\n\n\nfunction checkClassType(componentType) {\n  zrUtil.assert(/^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType), 'componentType \"' + componentType + '\" illegal');\n}\n/**\n * @public\n */\n\n\nfunction enableClassExtend(RootClass, mandatoryMethods) {\n  RootClass.$constructor = RootClass;\n\n  RootClass.extend = function (proto) {\n    var superClass = this;\n\n    var ExtendedClass = function () {\n      if (!proto.$constructor) {\n        superClass.apply(this, arguments);\n      } else {\n        proto.$constructor.apply(this, arguments);\n      }\n    };\n\n    zrUtil.extend(ExtendedClass.prototype, proto);\n    ExtendedClass.extend = this.extend;\n    ExtendedClass.superCall = superCall;\n    ExtendedClass.superApply = superApply;\n    zrUtil.inherits(ExtendedClass, this);\n    ExtendedClass.superClass = superClass;\n    return ExtendedClass;\n  };\n} // superCall should have class info, which can not be fetch from 'this'.\n// Consider this case:\n// class A has method f,\n// class B inherits class A, overrides method f, f call superApply('f'),\n// class C inherits class B, do not overrides method f,\n// then when method of class C is called, dead loop occured.\n\n\nfunction superCall(context, methodName) {\n  var args = zrUtil.slice(arguments, 2);\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n\nfunction superApply(context, methodName, args) {\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n/**\n * @param {Object} entity\n * @param {Object} options\n * @param {boolean} [options.registerWhenExtend]\n * @public\n */\n\n\nfunction enableClassManagement(entity, options) {\n  options = options || {};\n  /**\n   * Component model classes\n   * key: componentType,\n   * value:\n   *     componentClass, when componentType is 'xxx'\n   *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n   * @type {Object}\n   */\n\n  var storage = {};\n\n  entity.registerClass = function (Clazz, componentType) {\n    if (componentType) {\n      checkClassType(componentType);\n      componentType = parseClassType(componentType);\n\n      if (!componentType.sub) {\n        storage[componentType.main] = Clazz;\n      } else if (componentType.sub !== IS_CONTAINER) {\n        var container = makeContainer(componentType);\n        container[componentType.sub] = Clazz;\n      }\n    }\n\n    return Clazz;\n  };\n\n  entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n    var Clazz = storage[componentMainType];\n\n    if (Clazz && Clazz[IS_CONTAINER]) {\n      Clazz = subType ? Clazz[subType] : null;\n    }\n\n    if (throwWhenNotFound && !Clazz) {\n      throw new Error(!subType ? componentMainType + '.' + 'type should be specified.' : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.');\n    }\n\n    return Clazz;\n  };\n\n  entity.getClassesByMainType = function (componentType) {\n    componentType = parseClassType(componentType);\n    var result = [];\n    var obj = storage[componentType.main];\n\n    if (obj && obj[IS_CONTAINER]) {\n      zrUtil.each(obj, function (o, type) {\n        type !== IS_CONTAINER && result.push(o);\n      });\n    } else {\n      result.push(obj);\n    }\n\n    return result;\n  };\n\n  entity.hasClass = function (componentType) {\n    // Just consider componentType.main.\n    componentType = parseClassType(componentType);\n    return !!storage[componentType.main];\n  };\n  /**\n   * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n   */\n\n\n  entity.getAllClassMainTypes = function () {\n    var types = [];\n    zrUtil.each(storage, function (obj, type) {\n      types.push(type);\n    });\n    return types;\n  };\n  /**\n   * If a main type is container and has sub types\n   * @param  {string}  mainType\n   * @return {boolean}\n   */\n\n\n  entity.hasSubTypes = function (componentType) {\n    componentType = parseClassType(componentType);\n    var obj = storage[componentType.main];\n    return obj && obj[IS_CONTAINER];\n  };\n\n  entity.parseClassType = parseClassType;\n\n  function makeContainer(componentType) {\n    var container = storage[componentType.main];\n\n    if (!container || !container[IS_CONTAINER]) {\n      container = storage[componentType.main] = {};\n      container[IS_CONTAINER] = true;\n    }\n\n    return container;\n  }\n\n  if (options.registerWhenExtend) {\n    var originalExtend = entity.extend;\n\n    if (originalExtend) {\n      entity.extend = function (proto) {\n        var ExtendedClass = originalExtend.call(this, proto);\n        return entity.registerClass(ExtendedClass, proto.type);\n      };\n    }\n  }\n\n  return entity;\n}\n/**\n * @param {string|Array.<string>} properties\n */\n\n\nfunction setReadOnly(obj, properties) {// FIXME It seems broken in IE8 simulation of IE11\n  // if (!zrUtil.isArray(properties)) {\n  //     properties = properties != null ? [properties] : [];\n  // }\n  // zrUtil.each(properties, function (prop) {\n  //     var value = obj[prop];\n  //     Object.defineProperty\n  //         && Object.defineProperty(obj, prop, {\n  //             value: value, writable: false\n  //         });\n  //     zrUtil.isArray(obj[prop])\n  //         && Object.freeze\n  //         && Object.freeze(obj[prop]);\n  // });\n}\n\nexports.set = set;\nexports.get = get;\nexports.hasOwn = hasOwn;\nexports.parseClassType = parseClassType;\nexports.enableClassExtend = enableClassExtend;\nexports.enableClassManagement = enableClassManagement;\nexports.setReadOnly = setReadOnly;","var _vector = require(\"./vector\");\n\nvar v2Create = _vector.create;\nvar v2DistSquare = _vector.distSquare;\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\nvar mathPow = Math.pow;\nvar mathSqrt = Math.sqrt;\nvar EPSILON = 1e-8;\nvar EPSILON_NUMERIC = 1e-4;\nvar THREE_SQRT = mathSqrt(3);\nvar ONE_THIRD = 1 / 3; // 临时变量\n\nvar _v0 = v2Create();\n\nvar _v1 = v2Create();\n\nvar _v2 = v2Create();\n\nfunction isAroundZero(val) {\n  return val > -EPSILON && val < EPSILON;\n}\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * 计算三次贝塞尔值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return onet * onet * (onet * p0 + 3 * t * p1) + t * t * (t * p3 + 3 * onet * p2);\n}\n/**\n * 计算三次贝塞尔导数值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicDerivativeAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return 3 * (((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet + (p3 - p2) * t * t);\n}\n/**\n * 计算三次贝塞尔方程根，使用盛金公式\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} val\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction cubicRootAt(p0, p1, p2, p3, val, roots) {\n  // Evaluate roots of cubic functions\n  var a = p3 + 3 * (p1 - p2) - p0;\n  var b = 3 * (p2 - p1 * 2 + p0);\n  var c = 3 * (p1 - p0);\n  var d = p0 - val;\n  var A = b * b - 3 * a * c;\n  var B = b * c - 9 * a * d;\n  var C = c * c - 3 * b * d;\n  var n = 0;\n\n  if (isAroundZero(A) && isAroundZero(B)) {\n    if (isAroundZero(b)) {\n      roots[0] = 0;\n    } else {\n      var t1 = -c / b; //t1, t2, t3, b is not zero\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = B * B - 4 * A * C;\n\n    if (isAroundZero(disc)) {\n      var K = B / A;\n      var t1 = -b / a + K; // t1, a is not zero\n\n      var t2 = -K / 2; // t2, t3\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n      var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n\n      if (Y1 < 0) {\n        Y1 = -mathPow(-Y1, ONE_THIRD);\n      } else {\n        Y1 = mathPow(Y1, ONE_THIRD);\n      }\n\n      if (Y2 < 0) {\n        Y2 = -mathPow(-Y2, ONE_THIRD);\n      } else {\n        Y2 = mathPow(Y2, ONE_THIRD);\n      }\n\n      var t1 = (-b - (Y1 + Y2)) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else {\n      var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n      var theta = Math.acos(T) / 3;\n      var ASqrt = mathSqrt(A);\n      var tmp = Math.cos(theta);\n      var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n      var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n      var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n\n      if (t3 >= 0 && t3 <= 1) {\n        roots[n++] = t3;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算三次贝塞尔方程极限值的位置\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {Array.<number>} extrema\n * @return {number} 有效数目\n */\n\n\nfunction cubicExtrema(p0, p1, p2, p3, extrema) {\n  var b = 6 * p2 - 12 * p1 + 6 * p0;\n  var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n  var c = 3 * p1 - 3 * p0;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      extrema[0] = -b / (2 * a);\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        extrema[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 细分三次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction cubicSubdivide(p0, p1, p2, p3, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p23 = (p3 - p2) * t + p2;\n  var p012 = (p12 - p01) * t + p01;\n  var p123 = (p23 - p12) * t + p12;\n  var p0123 = (p123 - p012) * t + p012; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012;\n  out[3] = p0123; // Seg1\n\n  out[4] = p0123;\n  out[5] = p123;\n  out[6] = p23;\n  out[7] = p3;\n}\n/**\n * 投射点到三次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} [out] 投射点\n * @return {number}\n */\n\n\nfunction cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  var prev;\n  var next;\n  var d1;\n  var d2;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n    _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n    d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    prev = t - interval;\n    next = t + interval; // t - interval\n\n    _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n    _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n    d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = cubicAt(x0, x1, x2, x3, next);\n      _v2[1] = cubicAt(y0, y1, y2, y3, next);\n      d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = cubicAt(x0, x1, x2, x3, t);\n    out[1] = cubicAt(y0, y1, y2, y3, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n/**\n * 计算二次方贝塞尔值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticAt(p0, p1, p2, t) {\n  var onet = 1 - t;\n  return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n}\n/**\n * 计算二次方贝塞尔导数值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticDerivativeAt(p0, p1, p2, t) {\n  return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n}\n/**\n * 计算二次方贝塞尔方程根\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction quadraticRootAt(p0, p1, p2, val, roots) {\n  var a = p0 - 2 * p1 + p2;\n  var b = 2 * (p1 - p0);\n  var c = p0 - val;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      var t1 = -b / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算二次贝塞尔方程极限值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @return {number}\n */\n\n\nfunction quadraticExtremum(p0, p1, p2) {\n  var divider = p0 + p2 - 2 * p1;\n\n  if (divider === 0) {\n    // p1 is center of p0 and p2\n    return 0.5;\n  } else {\n    return (p0 - p1) / divider;\n  }\n}\n/**\n * 细分二次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction quadraticSubdivide(p0, p1, p2, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p012 = (p12 - p01) * t + p01; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012; // Seg1\n\n  out[3] = p012;\n  out[4] = p12;\n  out[5] = p2;\n}\n/**\n * 投射点到二次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} out 投射点\n * @return {number}\n */\n\n\nfunction quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = quadraticAt(x0, x1, x2, _t);\n    _v1[1] = quadraticAt(y0, y1, y2, _t);\n    var d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    var prev = t - interval;\n    var next = t + interval; // t - interval\n\n    _v1[0] = quadraticAt(x0, x1, x2, prev);\n    _v1[1] = quadraticAt(y0, y1, y2, prev);\n    var d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = quadraticAt(x0, x1, x2, next);\n      _v2[1] = quadraticAt(y0, y1, y2, next);\n      var d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = quadraticAt(x0, x1, x2, t);\n    out[1] = quadraticAt(y0, y1, y2, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n\nexports.cubicAt = cubicAt;\nexports.cubicDerivativeAt = cubicDerivativeAt;\nexports.cubicRootAt = cubicRootAt;\nexports.cubicExtrema = cubicExtrema;\nexports.cubicSubdivide = cubicSubdivide;\nexports.cubicProjectPoint = cubicProjectPoint;\nexports.quadraticAt = quadraticAt;\nexports.quadraticDerivativeAt = quadraticDerivativeAt;\nexports.quadraticRootAt = quadraticRootAt;\nexports.quadraticExtremum = quadraticExtremum;\nexports.quadraticSubdivide = quadraticSubdivide;\nexports.quadraticProjectPoint = quadraticProjectPoint;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar modelUtil = require(\"../util/model\");\n\nfunction Chart() {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewChart');\n}\n\nChart.prototype = {\n  type: 'chart',\n\n  /**\n   * Init the chart\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {},\n\n  /**\n   * Render the chart\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  render: function (seriesModel, ecModel, api, payload) {},\n\n  /**\n   * Highlight series or specified data item\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  highlight: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n  },\n\n  /**\n   * Downplay series or specified data item\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  downplay: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'normal');\n  },\n\n  /**\n   * Remove self\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  remove: function (ecModel, api) {\n    this.group.removeAll();\n  },\n\n  /**\n   * Dispose self\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  dispose: function () {}\n  /**\n   * The view contains the given point.\n   * @interface\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  // containPoint: function () {}\n\n};\nvar chartProto = Chart.prototype;\n\nchartProto.updateView = chartProto.updateLayout = chartProto.updateVisual = function (seriesModel, ecModel, api, payload) {\n  this.render(seriesModel, ecModel, api, payload);\n};\n/**\n * Set state of single element\n * @param  {module:zrender/Element} el\n * @param  {string} state\n */\n\n\nfunction elSetState(el, state) {\n  if (el) {\n    el.trigger(state);\n\n    if (el.type === 'group') {\n      for (var i = 0; i < el.childCount(); i++) {\n        elSetState(el.childAt(i), state);\n      }\n    }\n  }\n}\n/**\n * @param  {module:echarts/data/List} data\n * @param  {Object} payload\n * @param  {string} state 'normal'|'emphasis'\n * @inner\n */\n\n\nfunction toggleHighlight(data, payload, state) {\n  var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n  if (dataIndex != null) {\n    zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n      elSetState(data.getItemGraphicEl(dataIdx), state);\n    });\n  } else {\n    data.eachItemGraphicEl(function (el) {\n      elSetState(el, state);\n    });\n  }\n} // Enable Chart.extend.\n\n\nclazzUtil.enableClassExtend(Chart, ['dispose']); // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Chart, {\n  registerWhenExtend: true\n});\nvar _default = Chart;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar completeDimensions = require(\"../../data/helper/completeDimensions\");\n\nvar _model = require(\"../../util/model\");\n\nvar getDataItemValue = _model.getDataItemValue;\nvar converDataValue = _model.converDataValue;\nvar isDataItemOption = _model.isDataItemOption;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nfunction firstDataNotNull(data) {\n  var i = 0;\n\n  while (i < data.length && data[i] == null) {\n    i++;\n  }\n\n  return data[i];\n}\n\nfunction ifNeedCompleteOrdinalData(data) {\n  var sampleItem = firstDataNotNull(data);\n  return sampleItem != null && !zrUtil.isArray(getDataItemValue(sampleItem));\n}\n/**\n * Helper function to create a list from option data\n */\n\n\nfunction createListFromArray(data, seriesModel, ecModel) {\n  // If data is undefined\n  data = data || [];\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var creator = creators[coordSysName];\n  var registeredCoordSys = CoordinateSystem.get(coordSysName);\n  var completeDimOpt = {\n    encodeDef: seriesModel.get('encode'),\n    dimsDef: seriesModel.get('dimensions')\n  }; // FIXME\n\n  var axesInfo = creator && creator(data, seriesModel, ecModel, completeDimOpt);\n  var dimensions = axesInfo && axesInfo.dimensions;\n\n  if (!dimensions) {\n    // Get dimensions from registered coordinate system\n    dimensions = registeredCoordSys && (registeredCoordSys.getDimensionsInfo ? registeredCoordSys.getDimensionsInfo() : registeredCoordSys.dimensions.slice()) || ['x', 'y'];\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n  }\n\n  var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n  var list = new List(dimensions, seriesModel);\n  var nameList = createNameList(axesInfo, data);\n  var categories = {};\n  var dimValueGetter = categoryIndex >= 0 && ifNeedCompleteOrdinalData(data) ? function (itemOpt, dimName, dataIndex, dimIndex) {\n    // If any dataItem is like { value: 10 }\n    if (isDataItemOption(itemOpt)) {\n      list.hasItemOption = true;\n    } // Use dataIndex as ordinal value in categoryAxis\n\n\n    return dimIndex === categoryIndex ? dataIndex : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n  } : function (itemOpt, dimName, dataIndex, dimIndex) {\n    var value = getDataItemValue(itemOpt);\n    var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]); // If any dataItem is like { value: 10 }\n\n    if (isDataItemOption(itemOpt)) {\n      list.hasItemOption = true;\n    }\n\n    var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n\n    if (categoryAxesModels && categoryAxesModels[dimName]) {\n      // If given value is a category string\n      if (typeof val === 'string') {\n        // Lazy get categories\n        categories[dimName] = categories[dimName] || categoryAxesModels[dimName].getCategories();\n        val = zrUtil.indexOf(categories[dimName], val);\n\n        if (val < 0 && !isNaN(val)) {\n          // In case some one write '1', '2' istead of 1, 2\n          val = +val;\n        }\n      }\n    }\n\n    return val;\n  };\n  list.hasItemOption = false;\n  list.initData(data, nameList, dimValueGetter);\n  return list;\n}\n\nfunction isStackable(axisType) {\n  return axisType !== 'category' && axisType !== 'time';\n}\n\nfunction getDimTypeByAxis(axisType) {\n  return axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float';\n}\n/**\n * Creaters for each coord system.\n */\n\n\nvar creators = {\n  cartesian2d: function (data, seriesModel, ecModel, completeDimOpt) {\n    var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n      return ecModel.queryComponents({\n        mainType: name,\n        index: seriesModel.get(name + 'Index'),\n        id: seriesModel.get(name + 'Id')\n      })[0];\n    });\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var xAxisType = xAxisModel.get('type');\n    var yAxisType = yAxisModel.get('type');\n    var dimensions = [{\n      name: 'x',\n      type: getDimTypeByAxis(xAxisType),\n      stackable: isStackable(xAxisType)\n    }, {\n      name: 'y',\n      // If two category axes\n      type: getDimTypeByAxis(yAxisType),\n      stackable: isStackable(yAxisType)\n    }];\n    var isXAxisCateogry = xAxisType === 'category';\n    var isYAxisCategory = yAxisType === 'category';\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isXAxisCateogry) {\n      categoryAxesModels.x = xAxisModel;\n    }\n\n    if (isYAxisCategory) {\n      categoryAxesModels.y = yAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isXAxisCateogry ? 0 : isYAxisCategory ? 1 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  singleAxis: function (data, seriesModel, ecModel, completeDimOpt) {\n    var singleAxisModel = ecModel.queryComponents({\n      mainType: 'singleAxis',\n      index: seriesModel.get('singleAxisIndex'),\n      id: seriesModel.get('singleAxisId')\n    })[0];\n    var singleAxisType = singleAxisModel.get('type');\n    var isCategory = singleAxisType === 'category';\n    var dimensions = [{\n      name: 'single',\n      type: getDimTypeByAxis(singleAxisType),\n      stackable: isStackable(singleAxisType)\n    }];\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isCategory) {\n      categoryAxesModels.single = singleAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isCategory ? 0 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  polar: function (data, seriesModel, ecModel, completeDimOpt) {\n    var polarModel = ecModel.queryComponents({\n      mainType: 'polar',\n      index: seriesModel.get('polarIndex'),\n      id: seriesModel.get('polarId')\n    })[0];\n    var angleAxisModel = polarModel.findAxisModel('angleAxis');\n    var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n    var radiusAxisType = radiusAxisModel.get('type');\n    var angleAxisType = angleAxisModel.get('type');\n    var dimensions = [{\n      name: 'radius',\n      type: getDimTypeByAxis(radiusAxisType),\n      stackable: isStackable(radiusAxisType)\n    }, {\n      name: 'angle',\n      type: getDimTypeByAxis(angleAxisType),\n      stackable: isStackable(angleAxisType)\n    }];\n    var isAngleAxisCateogry = angleAxisType === 'category';\n    var isRadiusAxisCateogry = radiusAxisType === 'category';\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isRadiusAxisCateogry) {\n      categoryAxesModels.radius = radiusAxisModel;\n    }\n\n    if (isAngleAxisCateogry) {\n      categoryAxesModels.angle = angleAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isAngleAxisCateogry ? 1 : isRadiusAxisCateogry ? 0 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  geo: function (data, seriesModel, ecModel, completeDimOpt) {\n    // TODO Region\n    // 多个散点图系列在同一个地区的时候\n    return {\n      dimensions: completeDimensions([{\n        name: 'lng'\n      }, {\n        name: 'lat'\n      }], data, completeDimOpt)\n    };\n  }\n};\n\nfunction createNameList(result, data) {\n  var nameList = [];\n  var categoryDim = result && result.dimensions[result.categoryIndex];\n  var categoryAxisModel;\n\n  if (categoryDim) {\n    categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n  }\n\n  if (categoryAxisModel) {\n    // FIXME Two category axis\n    var categories = categoryAxisModel.getCategories();\n\n    if (categories) {\n      var dataLen = data.length; // Ordered data is given explicitly like\n      // [[3, 0.2], [1, 0.3], [2, 0.15]]\n      // or given scatter data,\n      // pick the category\n\n      if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n        nameList = [];\n\n        for (var i = 0; i < dataLen; i++) {\n          nameList[i] = categories[data[i][result.categoryIndex || 0]];\n        }\n      } else {\n        nameList = categories.slice(0);\n      }\n    }\n  }\n\n  return nameList;\n}\n\nvar _default = createListFromArray;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar axisHelper = require(\"./axisHelper\");\n\nvar linearMap = numberUtil.linearMap;\n\nfunction fixExtentWithBands(extent, nTick) {\n  var size = extent[1] - extent[0];\n  var len = nTick;\n  var margin = size / len / 2;\n  extent[0] += margin;\n  extent[1] -= margin;\n}\n\nvar normalizedExtent = [0, 1];\n/**\n * @name module:echarts/coord/CartesianAxis\n * @constructor\n */\n\nvar Axis = function (dim, scale, extent) {\n  /**\n   * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n   * @type {string}\n   */\n  this.dim = dim;\n  /**\n   * Axis scale\n   * @type {module:echarts/coord/scale/*}\n   */\n\n  this.scale = scale;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  this._extent = extent || [0, 0];\n  /**\n   * @type {boolean}\n   */\n\n  this.inverse = false;\n  /**\n   * Usually true when axis has a ordinal scale\n   * @type {boolean}\n   */\n\n  this.onBand = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._labelInterval;\n};\n\nAxis.prototype = {\n  constructor: Axis,\n\n  /**\n   * If axis extent contain given coord\n   * @param {number} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var extent = this._extent;\n    var min = Math.min(extent[0], extent[1]);\n    var max = Math.max(extent[0], extent[1]);\n    return coord >= min && coord <= max;\n  },\n\n  /**\n   * If axis extent contain given data\n   * @param {number} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.contain(this.dataToCoord(data));\n  },\n\n  /**\n   * Get coord extent.\n   * @return {Array.<number>}\n   */\n  getExtent: function () {\n    return this._extent.slice();\n  },\n\n  /**\n   * Get precision used for formatting\n   * @param {Array.<number>} [dataExtent]\n   * @return {number}\n   */\n  getPixelPrecision: function (dataExtent) {\n    return numberUtil.getPixelPrecision(dataExtent || this.scale.getExtent(), this._extent);\n  },\n\n  /**\n   * Set coord extent\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var extent = this._extent;\n    extent[0] = start;\n    extent[1] = end;\n  },\n\n  /**\n   * Convert data to coord. Data is the rank if it has a ordinal scale\n   * @param {number} data\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  dataToCoord: function (data, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n    data = scale.normalize(data);\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    return linearMap(data, normalizedExtent, extent, clamp);\n  },\n\n  /**\n   * Convert coord to data. Data is the rank if it has a ordinal scale\n   * @param {number} coord\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  coordToData: function (coord, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    var t = linearMap(coord, extent, normalizedExtent, clamp);\n    return this.scale.scale(t);\n  },\n\n  /**\n   * Convert pixel point to data in axis\n   * @param {Array.<number>} point\n   * @param  {boolean} clamp\n   * @return {number} data\n   */\n  pointToData: function (point, clamp) {// Should be implemented in derived class if necessary.\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicksCoords: function (alignWithLabel) {\n    if (this.onBand && !alignWithLabel) {\n      var bands = this.getBands();\n      var coords = [];\n\n      for (var i = 0; i < bands.length; i++) {\n        coords.push(bands[i][0]);\n      }\n\n      if (bands[i - 1]) {\n        coords.push(bands[i - 1][1]);\n      }\n\n      return coords;\n    } else {\n      return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n    }\n  },\n\n  /**\n   * Coords of labels are on the ticks or on the middle of bands\n   * @return {Array.<number>}\n   */\n  getLabelsCoords: function () {\n    return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n  },\n\n  /**\n   * Get bands.\n   *\n   * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n   * |---1---|---2---|---3---|---4---|.\n   *\n   * @return {Array}\n   */\n  // FIXME Situation when labels is on ticks\n  getBands: function () {\n    var extent = this.getExtent();\n    var bands = [];\n    var len = this.scale.count();\n    var start = extent[0];\n    var end = extent[1];\n    var span = end - start;\n\n    for (var i = 0; i < len; i++) {\n      bands.push([span * i / len + start, span * (i + 1) / len + start]);\n    }\n\n    return bands;\n  },\n\n  /**\n   * Get width of band\n   * @return {number}\n   */\n  getBandWidth: function () {\n    var axisExtent = this._extent;\n    var dataExtent = this.scale.getExtent();\n    var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0); // Fix #2728, avoid NaN when only one data.\n\n    len === 0 && (len = 1);\n    var size = Math.abs(axisExtent[1] - axisExtent[0]);\n    return Math.abs(size) / len;\n  },\n\n  /**\n   * @abstract\n   * @return {boolean} Is horizontal\n   */\n  isHorizontal: null,\n\n  /**\n   * @abstract\n   * @return {number} Get axis rotate, by degree.\n   */\n  getRotate: null,\n\n  /**\n   * Get interval of the axis label.\n   * To get precise result, at least one of `getRotate` and `isHorizontal`\n   * should be implemented.\n   * @return {number}\n   */\n  getLabelInterval: function () {\n    var labelInterval = this._labelInterval;\n\n    if (!labelInterval) {\n      var axisModel = this.model;\n      var labelModel = axisModel.getModel('axisLabel');\n      labelInterval = labelModel.get('interval');\n\n      if (this.type === 'category' && (labelInterval == null || labelInterval === 'auto')) {\n        labelInterval = axisHelper.getAxisLabelInterval(zrUtil.map(this.scale.getTicks(), this.dataToCoord, this), axisModel.getFormattedLabels(), labelModel.getFont(), this.getRotate ? this.getRotate() : this.isHorizontal && !this.isHorizontal() ? 90 : 0, labelModel.get('rotate'));\n      }\n\n      this._labelInterval = labelInterval;\n    }\n\n    return labelInterval;\n  }\n};\nvar _default = Axis;\nmodule.exports = _default;","var features = {};\n\nfunction register(name, ctor) {\n  features[name] = ctor;\n}\n\nfunction get(name) {\n  return features[name];\n}\n\nexports.register = register;\nexports.get = get;","/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\nvar arrySlice = Array.prototype.slice;\n/**\n * 事件分发器\n * @alias module:zrender/mixin/Eventful\n * @constructor\n */\n\nvar Eventful = function () {\n  this._$handlers = {};\n};\n\nEventful.prototype = {\n  constructor: Eventful,\n\n  /**\n   * 单次触发绑定，trigger后销毁\n   *\n   * @param {string} event 事件名\n   * @param {Function} handler 响应函数\n   * @param {Object} context\n   */\n  one: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: true,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 绑定事件\n   * @param {string} event 事件名\n   * @param {Function} handler 事件处理函数\n   * @param {Object} [context]\n   */\n  on: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: false,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 是否绑定了事件\n   * @param  {string}  event\n   * @return {boolean}\n   */\n  isSilent: function (event) {\n    var _h = this._$handlers;\n    return _h[event] && _h[event].length;\n  },\n\n  /**\n   * 解绑事件\n   * @param {string} event 事件名\n   * @param {Function} [handler] 事件处理函数\n   */\n  off: function (event, handler) {\n    var _h = this._$handlers;\n\n    if (!event) {\n      this._$handlers = {};\n      return this;\n    }\n\n    if (handler) {\n      if (_h[event]) {\n        var newList = [];\n\n        for (var i = 0, l = _h[event].length; i < l; i++) {\n          if (_h[event][i]['h'] != handler) {\n            newList.push(_h[event][i]);\n          }\n        }\n\n        _h[event] = newList;\n      }\n\n      if (_h[event] && _h[event].length === 0) {\n        delete _h[event];\n      }\n    } else {\n      delete _h[event];\n    }\n\n    return this;\n  },\n\n  /**\n   * 事件分发\n   *\n   * @param {string} type 事件类型\n   */\n  trigger: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 3) {\n        args = arrySlice.call(args, 1);\n      }\n\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(_h[i]['ctx']);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(_h[i]['ctx'], args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * 带有context的事件分发, 最后一个参数是事件回调的context\n   * @param {string} type 事件类型\n   */\n  triggerWithContext: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 4) {\n        args = arrySlice.call(args, 1, args.length - 1);\n      }\n\n      var ctx = args[args.length - 1];\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(ctx);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(ctx, args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(ctx, args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(ctx, args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  }\n}; // 对象可以通过 onxxxx 绑定事件\n\n/**\n * @event module:zrender/mixin/Eventful#onclick\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseout\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousemove\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousewheel\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousedown\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseup\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrag\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragstart\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragend\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragenter\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragleave\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrop\n * @type {Function}\n * @default null\n */\n\nvar _default = Eventful;\nmodule.exports = _default;","var ORIGIN_METHOD = '\\0__throttleOriginMethod';\nvar RATE = '\\0__throttleRate';\nvar THROTTLE_TYPE = '\\0__throttleType';\n/**\n * @public\n * @param {(Function)} fn\n * @param {number} [delay=0] Unit: ms.\n * @param {boolean} [debounce=false]\n *        true: If call interval less than `delay`, only the last call works.\n *        false: If call interval less than `delay, call works on fixed rate.\n * @return {(Function)} throttled fn.\n */\n\nfunction throttle(fn, delay, debounce) {\n  var currCall;\n  var lastCall = 0;\n  var lastExec = 0;\n  var timer = null;\n  var diff;\n  var scope;\n  var args;\n  var debounceNextCall;\n  delay = delay || 0;\n\n  function exec() {\n    lastExec = new Date().getTime();\n    timer = null;\n    fn.apply(scope, args || []);\n  }\n\n  var cb = function () {\n    currCall = new Date().getTime();\n    scope = this;\n    args = arguments;\n    var thisDelay = debounceNextCall || delay;\n    var thisDebounce = debounceNextCall || debounce;\n    debounceNextCall = null;\n    diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n    clearTimeout(timer);\n\n    if (thisDebounce) {\n      timer = setTimeout(exec, thisDelay);\n    } else {\n      if (diff >= 0) {\n        exec();\n      } else {\n        timer = setTimeout(exec, -diff);\n      }\n    }\n\n    lastCall = currCall;\n  };\n  /**\n   * Clear throttle.\n   * @public\n   */\n\n\n  cb.clear = function () {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  };\n  /**\n   * Enable debounce once.\n   */\n\n\n  cb.debounceNextCall = function (debounceDelay) {\n    debounceNextCall = debounceDelay;\n  };\n\n  return cb;\n}\n/**\n * Create throttle method or update throttle rate.\n *\n * @example\n * ComponentView.prototype.render = function () {\n *     ...\n *     throttle.createOrUpdate(\n *         this,\n *         '_dispatchAction',\n *         this.model.get('throttle'),\n *         'fixRate'\n *     );\n * };\n * ComponentView.prototype.remove = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n * ComponentView.prototype.dispose = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n * @param {number} [rate]\n * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n * @return {Function} throttled function.\n */\n\n\nfunction createOrUpdate(obj, fnAttr, rate, throttleType) {\n  var fn = obj[fnAttr];\n\n  if (!fn) {\n    return;\n  }\n\n  var originFn = fn[ORIGIN_METHOD] || fn;\n  var lastThrottleType = fn[THROTTLE_TYPE];\n  var lastRate = fn[RATE];\n\n  if (lastRate !== rate || lastThrottleType !== throttleType) {\n    if (rate == null || !throttleType) {\n      return obj[fnAttr] = originFn;\n    }\n\n    fn = obj[fnAttr] = throttle(originFn, rate, throttleType === 'debounce');\n    fn[ORIGIN_METHOD] = originFn;\n    fn[THROTTLE_TYPE] = throttleType;\n    fn[RATE] = rate;\n  }\n\n  return fn;\n}\n/**\n * Clear throttle. Example see throttle.createOrUpdate.\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n */\n\n\nfunction clear(obj, fnAttr) {\n  var fn = obj[fnAttr];\n\n  if (fn && fn[ORIGIN_METHOD]) {\n    obj[fnAttr] = fn[ORIGIN_METHOD];\n  }\n}\n\nexports.throttle = throttle;\nexports.createOrUpdate = createOrUpdate;\nexports.clear = clear;","function _default(seriesType, defaultSymbolType, legendSymbol, ecModel, api) {\n  // Encoding visual for all series include which is filtered for legend drawing\n  ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n    var symbolSize = seriesModel.get('symbolSize');\n    data.setVisual({\n      legendSymbol: legendSymbol || symbolType,\n      symbol: symbolType,\n      symbolSize: symbolSize\n    }); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof symbolSize === 'function') {\n        data.each(function (idx) {\n          var rawValue = seriesModel.getRawValue(idx); // FIXME\n\n          var params = seriesModel.getDataParams(idx);\n          data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n        });\n      }\n\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        var itemSymbolType = itemModel.getShallow('symbol', true);\n        var itemSymbolSize = itemModel.getShallow('symbolSize', true); // If has item symbol\n\n        if (itemSymbolType != null) {\n          data.setItemVisual(idx, 'symbol', itemSymbolType);\n        }\n\n        if (itemSymbolSize != null) {\n          // PENDING Transform symbolSize ?\n          data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n        }\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar retrieve = _util.retrieve;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar each = _util.each;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _number = require(\"../../util/number\");\n\nvar isRadianAroundZero = _number.isRadianAroundZero;\nvar remRadian = _number.remRadian;\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar matrixUtil = require(\"zrender/lib/core/matrix\");\n\nvar _vector = require(\"zrender/lib/core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar PI = Math.PI;\n\nfunction makeAxisEventDataBase(axisModel) {\n  var eventData = {\n    componentType: axisModel.mainType\n  };\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n  return eventData;\n}\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n *\n * @param {module:zrender/container/Group} group\n * @param {Object} axisModel\n * @param {Object} opt Standard axis parameters.\n * @param {Array.<number>} opt.position [x, y]\n * @param {number} opt.rotation by radian\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n * @param {number} [opt.tickDirection=1] 1 or -1\n * @param {number} [opt.labelDirection=1] 1 or -1\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\n * @param {string} [opt.axisLabelShow] default get from axisModel.\n * @param {string} [opt.axisName] default get from axisModel.\n * @param {number} [opt.axisNameAvailableWidth]\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n * @param {number} [opt.labelInterval] Default label interval when label\n *                                     interval from model is null or 'auto'.\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\n * @param {number} [opt.nameTruncateMaxWidth]\n */\n\n\nvar AxisBuilder = function (axisModel, opt) {\n  /**\n   * @readOnly\n   */\n  this.opt = opt;\n  /**\n   * @readOnly\n   */\n\n  this.axisModel = axisModel; // Default value\n\n  defaults(opt, {\n    labelOffset: 0,\n    nameDirection: 1,\n    tickDirection: 1,\n    labelDirection: 1,\n    silent: true\n  });\n  /**\n   * @readOnly\n   */\n\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\n\n  var dumbGroup = new graphic.Group({\n    position: opt.position.slice(),\n    rotation: opt.rotation\n  }); // this.group.add(dumbGroup);\n  // this._dumbGroup = dumbGroup;\n\n  dumbGroup.updateTransform();\n  this._transform = dumbGroup.transform;\n  this._dumbGroup = dumbGroup;\n};\n\nAxisBuilder.prototype = {\n  constructor: AxisBuilder,\n  hasBuilder: function (name) {\n    return !!builders[name];\n  },\n  add: function (name) {\n    builders[name].call(this);\n  },\n  getGroup: function () {\n    return this.group;\n  }\n};\nvar builders = {\n  /**\n   * @private\n   */\n  axisLine: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n\n    if (!axisModel.get('axisLine.show')) {\n      return;\n    }\n\n    var extent = this.axisModel.axis.getExtent();\n    var matrix = this._transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\n    this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'line',\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    })));\n    var arrows = axisModel.get('axisLine.symbol');\n    var arrowSize = axisModel.get('axisLine.symbolSize');\n\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var symbolWidth = arrowSize[0];\n      var symbolHeight = arrowSize[1];\n      each([[opt.rotation + Math.PI / 2, pt1], [opt.rotation - Math.PI / 2, pt2]], function (item, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true);\n          symbol.attr({\n            rotation: item[0],\n            position: item[1],\n            silent: true\n          });\n          this.group.add(symbol);\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  axisTickLabel: function () {\n    var axisModel = this.axisModel;\n    var opt = this.opt;\n    var tickEls = buildAxisTick(this, axisModel, opt);\n    var labelEls = buildAxisLabel(this, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, tickEls);\n  },\n\n  /**\n   * @private\n   */\n  axisName: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = this.axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\n    // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\n    // truncate rich text? (consider performance)\n\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\n      minChar: 2,\n      placeholder: truncateOpt.placeholder\n    }) : name;\n    var tooltipOpt = axisModel.get('tooltip', true);\n    var mainType = axisModel.mainType;\n    var formatterParams = {\n      componentType: mainType,\n      name: name,\n      $vars: ['name']\n    };\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'name',\n      __fullText: name,\n      __truncatedText: truncatedText,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: isSilent(axisModel),\n      z2: 1,\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\n        content: name,\n        formatter: function () {\n          return name;\n        },\n        formatterParams: formatterParams\n      }, tooltipOpt) : null\n    });\n    graphic.setTextStyle(textEl.style, textStyleModel, {\n      text: truncatedText,\n      textFont: textFont,\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\n      textAlign: labelLayout.textAlign,\n      textVerticalAlign: labelLayout.textVerticalAlign\n    });\n\n    if (axisModel.get('triggerEvent')) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisName';\n      textEl.eventData.name = name;\n    } // FIXME\n\n\n    this._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    this.group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n/**\n * @public\n * @static\n * @param {Object} opt\n * @param {number} axisRotation in radian\n * @param {number} textRotation in radian\n * @param {number} direction\n * @return {Object} {\n *  rotation, // according to axis\n *  textAlign,\n *  textVerticalAlign\n * }\n */\n\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n  var rotationDiff = remRadian(textRotation - axisRotation);\n  var textAlign;\n  var textVerticalAlign;\n\n  if (isRadianAroundZero(rotationDiff)) {\n    // Label is parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\n    // Label is inverse parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff > 0 && rotationDiff < PI) {\n      textAlign = direction > 0 ? 'right' : 'left';\n    } else {\n      textAlign = direction > 0 ? 'left' : 'right';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n};\n\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - opt.rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction isSilent(axisModel) {\n  var tooltipOpt = axisModel.get('tooltip');\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n}\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n/**\n * @static\n */\n\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval, ticksCnt, showMinLabel, showMaxLabel) {\n  if (i === 0 && showMinLabel || i === ticksCnt - 1 && showMaxLabel) {\n    return false;\n  } // FIXME\n  // Have not consider label overlap (if label is too long) yet.\n\n\n  var rawTick;\n  var scale = axis.scale;\n  return scale.type === 'ordinal' && (typeof interval === 'function' ? (rawTick = scale.getTicks()[i], !interval(rawTick, scale.getLabel(rawTick))) : i % (interval + 1));\n};\n/**\n * @static\n */\n\n\nvar getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n  var interval = model.get('interval');\n\n  if (interval == null || interval == 'auto') {\n    interval = labelInterval;\n  }\n\n  return interval;\n};\n\nfunction buildAxisTick(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n\n  if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var tickModel = axisModel.getModel('axisTick');\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickLen = tickModel.get('length');\n  var tickInterval = getInterval(tickModel, opt.labelInterval);\n  var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel')); // FIXME\n  // Corresponds to ticksCoords ?\n\n  var ticks = axis.scale.getTicks();\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  var pt1 = [];\n  var pt2 = [];\n  var matrix = axisBuilder._transform;\n  var tickEls = [];\n  var ticksCnt = ticksCoords.length;\n\n  for (var i = 0; i < ticksCnt; i++) {\n    // Only ordinal scale support tick interval\n    if (ifIgnoreOnTick(axis, i, tickInterval, ticksCnt, showMinLabel, showMaxLabel)) {\n      continue;\n    }\n\n    var tickCoord = ticksCoords[i];\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = opt.tickDirection * tickLen;\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'tick_' + ticks[i],\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: defaults(lineStyleModel.getLineStyle(), {\n        stroke: axisModel.get('axisLine.lineStyle.color')\n      }),\n      z2: 2,\n      silent: true\n    }));\n    axisBuilder.group.add(tickEl);\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var ticks = axis.scale.getTicks();\n  var labels = axisModel.getFormattedLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var categoryData = axisModel.get('data');\n  var labelEls = [];\n  var silent = isSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  each(ticks, function (tickVal, index) {\n    if (ifIgnoreOnTick(axis, index, opt.labelInterval, ticks.length, showMinLabel, showMaxLabel)) {\n      return;\n    }\n\n    var itemLabelModel = labelModel;\n\n    if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n      itemLabelModel = new Model(categoryData[tickVal].textStyle, labelModel, axisModel.ecModel);\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\n    var tickCoord = axis.dataToCoord(tickVal);\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\n    var labelStr = axis.scale.getLabel(tickVal);\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'label_' + tickVal,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10\n    });\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\n      text: labels[index],\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n      // index of axis.data. So tick should not be exposed to user\n      // in category axis.\n      // (2) Compatible with previous version, which always returns labelStr.\n      // But in interval scale labelStr is like '223,445', which maked\n      // user repalce ','. So we modify it to return original val but remain\n      // it as 'string' to avoid error in replacing.\n      axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal, index) : textColor\n    }); // Pack data for mouse event\n\n    if (triggerEvent) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisLabel';\n      textEl.eventData.value = labelStr;\n    } // FIXME\n\n\n    axisBuilder._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    axisBuilder.group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nvar _default = AxisBuilder;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar axisPointerModelHelper = require(\"../axisPointer/modelHelper\");\n\n/**\n * Base class of AxisView.\n */\nvar AxisView = echarts.extendComponentView({\n  type: 'axis',\n\n  /**\n   * @private\n   */\n  _axisPointer: null,\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  axisPointerClass: null,\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    // FIXME\n    // This process should proformed after coordinate systems updated\n    // (axis scale updated), and should be performed each time update.\n    // So put it here temporarily, although it is not appropriate to\n    // put a model-writing procedure in `view`.\n    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n    AxisView.superApply(this, 'render', arguments);\n    updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n  },\n\n  /**\n   * Action handler.\n   * @public\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/model/Global} ecModel\n   * @param {module:echarts/ExtensionAPI} api\n   * @param {Object} payload\n   */\n  updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n    updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    var axisPointer = this._axisPointer;\n    axisPointer && axisPointer.remove(api);\n    AxisView.superApply(this, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    disposeAxisPointer(this, api);\n    AxisView.superApply(this, 'dispose', arguments);\n  }\n});\n\nfunction updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n  var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n\n  if (!Clazz) {\n    return;\n  }\n\n  var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n  axisPointerModel ? (axisView._axisPointer || (axisView._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : disposeAxisPointer(axisView, api);\n}\n\nfunction disposeAxisPointer(axisView, ecModel, api) {\n  var axisPointer = axisView._axisPointer;\n  axisPointer && axisPointer.dispose(ecModel, api);\n  axisView._axisPointer = null;\n}\n\nvar axisPointerClazz = [];\n\nAxisView.registerAxisPointerClass = function (type, clazz) {\n  axisPointerClazz[type] = clazz;\n};\n\nAxisView.getAxisPointerClass = function (type) {\n  return type && axisPointerClazz[type];\n};\n\nvar _default = AxisView;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar _number = require(\"../util/number\");\n\nvar linearMap = _number.linearMap;\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar CATEGORY_DEFAULT_VISUAL_INDEX = -1;\n/**\n * @param {Object} option\n * @param {string} [option.type] See visualHandlers.\n * @param {string} [option.mappingMethod] 'linear' or 'piecewise' or 'category' or 'fixed'\n * @param {Array.<number>=} [option.dataExtent] [minExtent, maxExtent],\n *                                              required when mappingMethod is 'linear'\n * @param {Array.<Object>=} [option.pieceList] [\n *                                             {value: someValue},\n *                                             {interval: [min1, max1], visual: {...}},\n *                                             {interval: [min2, max2]}\n *                                             ],\n *                                            required when mappingMethod is 'piecewise'.\n *                                            Visual for only each piece can be specified.\n * @param {Array.<string|Object>=} [option.categories] ['cate1', 'cate2']\n *                                            required when mappingMethod is 'category'.\n *                                            If no option.categories, categories is set\n *                                            as [0, 1, 2, ...].\n * @param {boolean} [option.loop=false] Whether loop mapping when mappingMethod is 'category'.\n * @param {(Array|Object|*)} [option.visual]  Visual data.\n *                                            when mappingMethod is 'category',\n *                                            visual data can be array or object\n *                                            (like: {cate1: '#222', none: '#fff'})\n *                                            or primary types (which represents\n *                                            defualt category visual), otherwise visual\n *                                            can be array or primary (which will be\n *                                            normalized to array).\n *\n */\n\nvar VisualMapping = function (option) {\n  var mappingMethod = option.mappingMethod;\n  var visualType = option.type;\n  /**\n   * @readOnly\n   * @type {Object}\n   */\n\n  var thisOption = this.option = zrUtil.clone(option);\n  /**\n   * @readOnly\n   * @type {string}\n   */\n\n  this.type = visualType;\n  /**\n   * @readOnly\n   * @type {string}\n   */\n\n  this.mappingMethod = mappingMethod;\n  /**\n   * @private\n   * @type {Function}\n   */\n\n  this._normalizeData = normalizers[mappingMethod];\n  var visualHandler = visualHandlers[visualType];\n  /**\n   * @public\n   * @type {Function}\n   */\n\n  this.applyVisual = visualHandler.applyVisual;\n  /**\n   * @public\n   * @type {Function}\n   */\n\n  this.getColorMapper = visualHandler.getColorMapper;\n  /**\n   * @private\n   * @type {Function}\n   */\n\n  this._doMap = visualHandler._doMap[mappingMethod];\n\n  if (mappingMethod === 'piecewise') {\n    normalizeVisualRange(thisOption);\n    preprocessForPiecewise(thisOption);\n  } else if (mappingMethod === 'category') {\n    thisOption.categories ? preprocessForSpecifiedCategory(thisOption) // categories is ordinal when thisOption.categories not specified,\n    // which need no more preprocess except normalize visual.\n    : normalizeVisualRange(thisOption, true);\n  } else {\n    // mappingMethod === 'linear' or 'fixed'\n    zrUtil.assert(mappingMethod !== 'linear' || thisOption.dataExtent);\n    normalizeVisualRange(thisOption);\n  }\n};\n\nVisualMapping.prototype = {\n  constructor: VisualMapping,\n  mapValueToVisual: function (value) {\n    var normalized = this._normalizeData(value);\n\n    return this._doMap(normalized, value);\n  },\n  getNormalizer: function () {\n    return zrUtil.bind(this._normalizeData, this);\n  }\n};\nvar visualHandlers = VisualMapping.visualHandlers = {\n  color: {\n    applyVisual: makeApplyVisual('color'),\n\n    /**\n     * Create a mapper function\n     * @return {Function}\n     */\n    getColorMapper: function () {\n      var thisOption = this.option;\n      return zrUtil.bind(thisOption.mappingMethod === 'category' ? function (value, isNormalized) {\n        !isNormalized && (value = this._normalizeData(value));\n        return doMapCategory.call(this, value);\n      } : function (value, isNormalized, out) {\n        // If output rgb array\n        // which will be much faster and useful in pixel manipulation\n        var returnRGBArray = !!out;\n        !isNormalized && (value = this._normalizeData(value));\n        out = zrColor.fastLerp(value, thisOption.parsedVisual, out);\n        return returnRGBArray ? out : zrColor.stringify(out, 'rgba');\n      }, this);\n    },\n    _doMap: {\n      linear: function (normalized) {\n        return zrColor.stringify(zrColor.fastLerp(normalized, this.option.parsedVisual), 'rgba');\n      },\n      category: doMapCategory,\n      piecewise: function (normalized, value) {\n        var result = getSpecifiedVisual.call(this, value);\n\n        if (result == null) {\n          result = zrColor.stringify(zrColor.fastLerp(normalized, this.option.parsedVisual), 'rgba');\n        }\n\n        return result;\n      },\n      fixed: doMapFixed\n    }\n  },\n  colorHue: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyHSL(color, value);\n  }),\n  colorSaturation: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyHSL(color, null, value);\n  }),\n  colorLightness: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyHSL(color, null, null, value);\n  }),\n  colorAlpha: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyAlpha(color, value);\n  }),\n  opacity: {\n    applyVisual: makeApplyVisual('opacity'),\n    _doMap: makeDoMap([0, 1])\n  },\n  symbol: {\n    applyVisual: function (value, getter, setter) {\n      var symbolCfg = this.mapValueToVisual(value);\n\n      if (zrUtil.isString(symbolCfg)) {\n        setter('symbol', symbolCfg);\n      } else if (isObject(symbolCfg)) {\n        for (var name in symbolCfg) {\n          if (symbolCfg.hasOwnProperty(name)) {\n            setter(name, symbolCfg[name]);\n          }\n        }\n      }\n    },\n    _doMap: {\n      linear: doMapToArray,\n      category: doMapCategory,\n      piecewise: function (normalized, value) {\n        var result = getSpecifiedVisual.call(this, value);\n\n        if (result == null) {\n          result = doMapToArray.call(this, normalized);\n        }\n\n        return result;\n      },\n      fixed: doMapFixed\n    }\n  },\n  symbolSize: {\n    applyVisual: makeApplyVisual('symbolSize'),\n    _doMap: makeDoMap([0, 1])\n  }\n};\n\nfunction preprocessForPiecewise(thisOption) {\n  var pieceList = thisOption.pieceList;\n  thisOption.hasSpecialVisual = false;\n  zrUtil.each(pieceList, function (piece, index) {\n    piece.originIndex = index; // piece.visual is \"result visual value\" but not\n    // a visual range, so it does not need to be normalized.\n\n    if (piece.visual != null) {\n      thisOption.hasSpecialVisual = true;\n    }\n  });\n}\n\nfunction preprocessForSpecifiedCategory(thisOption) {\n  // Hash categories.\n  var categories = thisOption.categories;\n  var visual = thisOption.visual;\n  var categoryMap = thisOption.categoryMap = {};\n  each(categories, function (cate, index) {\n    categoryMap[cate] = index;\n  }); // Process visual map input.\n\n  if (!zrUtil.isArray(visual)) {\n    var visualArr = [];\n\n    if (zrUtil.isObject(visual)) {\n      each(visual, function (v, cate) {\n        var index = categoryMap[cate];\n        visualArr[index != null ? index : CATEGORY_DEFAULT_VISUAL_INDEX] = v;\n      });\n    } else {\n      // Is primary type, represents default visual.\n      visualArr[CATEGORY_DEFAULT_VISUAL_INDEX] = visual;\n    }\n\n    visual = setVisualToOption(thisOption, visualArr);\n  } // Remove categories that has no visual,\n  // then we can mapping them to CATEGORY_DEFAULT_VISUAL_INDEX.\n\n\n  for (var i = categories.length - 1; i >= 0; i--) {\n    if (visual[i] == null) {\n      delete categoryMap[categories[i]];\n      categories.pop();\n    }\n  }\n}\n\nfunction normalizeVisualRange(thisOption, isCategory) {\n  var visual = thisOption.visual;\n  var visualArr = [];\n\n  if (zrUtil.isObject(visual)) {\n    each(visual, function (v) {\n      visualArr.push(v);\n    });\n  } else if (visual != null) {\n    visualArr.push(visual);\n  }\n\n  var doNotNeedPair = {\n    color: 1,\n    symbol: 1\n  };\n\n  if (!isCategory && visualArr.length === 1 && !doNotNeedPair.hasOwnProperty(thisOption.type)) {\n    // Do not care visualArr.length === 0, which is illegal.\n    visualArr[1] = visualArr[0];\n  }\n\n  setVisualToOption(thisOption, visualArr);\n}\n\nfunction makePartialColorVisualHandler(applyValue) {\n  return {\n    applyVisual: function (value, getter, setter) {\n      value = this.mapValueToVisual(value); // Must not be array value\n\n      setter('color', applyValue(getter('color'), value));\n    },\n    _doMap: makeDoMap([0, 1])\n  };\n}\n\nfunction doMapToArray(normalized) {\n  var visual = this.option.visual;\n  return visual[Math.round(linearMap(normalized, [0, 1], [0, visual.length - 1], true))] || {};\n}\n\nfunction makeApplyVisual(visualType) {\n  return function (value, getter, setter) {\n    setter(visualType, this.mapValueToVisual(value));\n  };\n}\n\nfunction doMapCategory(normalized) {\n  var visual = this.option.visual;\n  return visual[this.option.loop && normalized !== CATEGORY_DEFAULT_VISUAL_INDEX ? normalized % visual.length : normalized];\n}\n\nfunction doMapFixed() {\n  return this.option.visual[0];\n}\n\nfunction makeDoMap(sourceExtent) {\n  return {\n    linear: function (normalized) {\n      return linearMap(normalized, sourceExtent, this.option.visual, true);\n    },\n    category: doMapCategory,\n    piecewise: function (normalized, value) {\n      var result = getSpecifiedVisual.call(this, value);\n\n      if (result == null) {\n        result = linearMap(normalized, sourceExtent, this.option.visual, true);\n      }\n\n      return result;\n    },\n    fixed: doMapFixed\n  };\n}\n\nfunction getSpecifiedVisual(value) {\n  var thisOption = this.option;\n  var pieceList = thisOption.pieceList;\n\n  if (thisOption.hasSpecialVisual) {\n    var pieceIndex = VisualMapping.findPieceIndex(value, pieceList);\n    var piece = pieceList[pieceIndex];\n\n    if (piece && piece.visual) {\n      return piece.visual[this.type];\n    }\n  }\n}\n\nfunction setVisualToOption(thisOption, visualArr) {\n  thisOption.visual = visualArr;\n\n  if (thisOption.type === 'color') {\n    thisOption.parsedVisual = zrUtil.map(visualArr, function (item) {\n      return zrColor.parse(item);\n    });\n  }\n\n  return visualArr;\n}\n/**\n * Normalizers by mapping methods.\n */\n\n\nvar normalizers = {\n  linear: function (value) {\n    return linearMap(value, this.option.dataExtent, [0, 1], true);\n  },\n  piecewise: function (value) {\n    var pieceList = this.option.pieceList;\n    var pieceIndex = VisualMapping.findPieceIndex(value, pieceList, true);\n\n    if (pieceIndex != null) {\n      return linearMap(pieceIndex, [0, pieceList.length - 1], [0, 1], true);\n    }\n  },\n  category: function (value) {\n    var index = this.option.categories ? this.option.categoryMap[value] : value; // ordinal\n\n    return index == null ? CATEGORY_DEFAULT_VISUAL_INDEX : index;\n  },\n  fixed: zrUtil.noop\n};\n/**\n * List available visual types.\n *\n * @public\n * @return {Array.<string>}\n */\n\nVisualMapping.listVisualTypes = function () {\n  var visualTypes = [];\n  zrUtil.each(visualHandlers, function (handler, key) {\n    visualTypes.push(key);\n  });\n  return visualTypes;\n};\n/**\n * @public\n */\n\n\nVisualMapping.addVisualHandler = function (name, handler) {\n  visualHandlers[name] = handler;\n};\n/**\n * @public\n */\n\n\nVisualMapping.isValidType = function (visualType) {\n  return visualHandlers.hasOwnProperty(visualType);\n};\n/**\n * Convinent method.\n * Visual can be Object or Array or primary type.\n *\n * @public\n */\n\n\nVisualMapping.eachVisual = function (visual, callback, context) {\n  if (zrUtil.isObject(visual)) {\n    zrUtil.each(visual, callback, context);\n  } else {\n    callback.call(context, visual);\n  }\n};\n\nVisualMapping.mapVisual = function (visual, callback, context) {\n  var isPrimary;\n  var newVisual = zrUtil.isArray(visual) ? [] : zrUtil.isObject(visual) ? {} : (isPrimary = true, null);\n  VisualMapping.eachVisual(visual, function (v, key) {\n    var newVal = callback.call(context, v, key);\n    isPrimary ? newVisual = newVal : newVisual[key] = newVal;\n  });\n  return newVisual;\n};\n/**\n * @public\n * @param {Object} obj\n * @return {Object} new object containers visual values.\n *                 If no visuals, return null.\n */\n\n\nVisualMapping.retrieveVisuals = function (obj) {\n  var ret = {};\n  var hasVisual;\n  obj && each(visualHandlers, function (h, visualType) {\n    if (obj.hasOwnProperty(visualType)) {\n      ret[visualType] = obj[visualType];\n      hasVisual = true;\n    }\n  });\n  return hasVisual ? ret : null;\n};\n/**\n * Give order to visual types, considering colorSaturation, colorAlpha depends on color.\n *\n * @public\n * @param {(Object|Array)} visualTypes If Object, like: {color: ..., colorSaturation: ...}\n *                                     IF Array, like: ['color', 'symbol', 'colorSaturation']\n * @return {Array.<string>} Sorted visual types.\n */\n\n\nVisualMapping.prepareVisualTypes = function (visualTypes) {\n  if (isObject(visualTypes)) {\n    var types = [];\n    each(visualTypes, function (item, type) {\n      types.push(type);\n    });\n    visualTypes = types;\n  } else if (zrUtil.isArray(visualTypes)) {\n    visualTypes = visualTypes.slice();\n  } else {\n    return [];\n  }\n\n  visualTypes.sort(function (type1, type2) {\n    // color should be front of colorSaturation, colorAlpha, ...\n    // symbol and symbolSize do not matter.\n    return type2 === 'color' && type1 !== 'color' && type1.indexOf('color') === 0 ? 1 : -1;\n  });\n  return visualTypes;\n};\n/**\n * 'color', 'colorSaturation', 'colorAlpha', ... are depends on 'color'.\n * Other visuals are only depends on themself.\n *\n * @public\n * @param {string} visualType1\n * @param {string} visualType2\n * @return {boolean}\n */\n\n\nVisualMapping.dependsOn = function (visualType1, visualType2) {\n  return visualType2 === 'color' ? !!(visualType1 && visualType1.indexOf(visualType2) === 0) : visualType1 === visualType2;\n};\n/**\n * @param {number} value\n * @param {Array.<Object>} pieceList [{value: ..., interval: [min, max]}, ...]\n *                         Always from small to big.\n * @param {boolean} [findClosestWhenOutside=false]\n * @return {number} index\n */\n\n\nVisualMapping.findPieceIndex = function (value, pieceList, findClosestWhenOutside) {\n  var possibleI;\n  var abs = Infinity; // value has the higher priority.\n\n  for (var i = 0, len = pieceList.length; i < len; i++) {\n    var pieceValue = pieceList[i].value;\n\n    if (pieceValue != null) {\n      if (pieceValue === value // FIXME\n      // It is supposed to compare value according to value type of dimension,\n      // but currently value type can exactly be string or number.\n      // Compromise for numeric-like string (like '12'), especially\n      // in the case that visualMap.categories is ['22', '33'].\n      || typeof pieceValue === 'string' && pieceValue === value + '') {\n        return i;\n      }\n\n      findClosestWhenOutside && updatePossible(pieceValue, i);\n    }\n  }\n\n  for (var i = 0, len = pieceList.length; i < len; i++) {\n    var piece = pieceList[i];\n    var interval = piece.interval;\n    var close = piece.close;\n\n    if (interval) {\n      if (interval[0] === -Infinity) {\n        if (littleThan(close[1], value, interval[1])) {\n          return i;\n        }\n      } else if (interval[1] === Infinity) {\n        if (littleThan(close[0], interval[0], value)) {\n          return i;\n        }\n      } else if (littleThan(close[0], interval[0], value) && littleThan(close[1], value, interval[1])) {\n        return i;\n      }\n\n      findClosestWhenOutside && updatePossible(interval[0], i);\n      findClosestWhenOutside && updatePossible(interval[1], i);\n    }\n  }\n\n  if (findClosestWhenOutside) {\n    return value === Infinity ? pieceList.length - 1 : value === -Infinity ? 0 : possibleI;\n  }\n\n  function updatePossible(val, index) {\n    var newAbs = Math.abs(val - value);\n\n    if (newAbs < abs) {\n      abs = newAbs;\n      possibleI = index;\n    }\n  }\n};\n\nfunction littleThan(close, a, b) {\n  return close ? a <= b : a < b;\n}\n\nvar _default = VisualMapping;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n// TODO Parse shadow style\n// TODO Only shallow path support\nfunction _default(properties) {\n  // Normalize\n  for (var i = 0; i < properties.length; i++) {\n    if (!properties[i][1]) {\n      properties[i][1] = properties[i][0];\n    }\n  }\n\n  return function (model, excludes, includes) {\n    var style = {};\n\n    for (var i = 0; i < properties.length; i++) {\n      var propName = properties[i][1];\n\n      if (excludes && zrUtil.indexOf(excludes, propName) >= 0 || includes && zrUtil.indexOf(includes, propName) < 0) {\n        continue;\n      }\n\n      var val = model.getShallow(propName);\n\n      if (val != null) {\n        style[properties[i][0]] = val;\n      }\n    }\n\n    return style;\n  };\n}\n\nmodule.exports = _default;","var curve = require(\"./curve\");\n\nvar vec2 = require(\"./vector\");\n\nvar bbox = require(\"./bbox\");\n\nvar BoundingRect = require(\"./BoundingRect\");\n\nvar _config = require(\"../config\");\n\nvar dpr = _config.devicePixelRatio;\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n// TODO getTotalLength, getPointAtLength\nvar CMD = {\n  M: 1,\n  L: 2,\n  C: 3,\n  Q: 4,\n  A: 5,\n  Z: 6,\n  // Rect\n  R: 7\n}; // var CMD_MEM_SIZE = {\n//     M: 3,\n//     L: 3,\n//     C: 7,\n//     Q: 5,\n//     A: 9,\n//     R: 5,\n//     Z: 1\n// };\n\nvar min = [];\nvar max = [];\nvar min2 = [];\nvar max2 = [];\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathCos = Math.cos;\nvar mathSin = Math.sin;\nvar mathSqrt = Math.sqrt;\nvar mathAbs = Math.abs;\nvar hasTypedArray = typeof Float32Array != 'undefined';\n/**\n * @alias module:zrender/core/PathProxy\n * @constructor\n */\n\nvar PathProxy = function (notSaveData) {\n  this._saveData = !(notSaveData || false);\n\n  if (this._saveData) {\n    /**\n     * Path data. Stored as flat array\n     * @type {Array.<Object>}\n     */\n    this.data = [];\n  }\n\n  this._ctx = null;\n};\n/**\n * 快速计算Path包围盒（并不是最小包围盒）\n * @return {Object}\n */\n\n\nPathProxy.prototype = {\n  constructor: PathProxy,\n  _xi: 0,\n  _yi: 0,\n  _x0: 0,\n  _y0: 0,\n  // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n  _ux: 0,\n  _uy: 0,\n  _len: 0,\n  _lineDash: null,\n  _dashOffset: 0,\n  _dashIdx: 0,\n  _dashSum: 0,\n\n  /**\n   * @readOnly\n   */\n  setScale: function (sx, sy) {\n    this._ux = mathAbs(1 / dpr / sx) || 0;\n    this._uy = mathAbs(1 / dpr / sy) || 0;\n  },\n  getContext: function () {\n    return this._ctx;\n  },\n\n  /**\n   * @param  {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  beginPath: function (ctx) {\n    this._ctx = ctx;\n    ctx && ctx.beginPath();\n    ctx && (this.dpr = ctx.dpr); // Reset\n\n    if (this._saveData) {\n      this._len = 0;\n    }\n\n    if (this._lineDash) {\n      this._lineDash = null;\n      this._dashOffset = 0;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  moveTo: function (x, y) {\n    this.addData(CMD.M, x, y);\n    this._ctx && this._ctx.moveTo(x, y); // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n    // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n    // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n    // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n\n    this._x0 = x;\n    this._y0 = y;\n    this._xi = x;\n    this._yi = y;\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  lineTo: function (x, y) {\n    var exceedUnit = mathAbs(x - this._xi) > this._ux || mathAbs(y - this._yi) > this._uy // Force draw the first segment\n    || this._len < 5;\n    this.addData(CMD.L, x, y);\n\n    if (this._ctx && exceedUnit) {\n      this._needsDash() ? this._dashedLineTo(x, y) : this._ctx.lineTo(x, y);\n    }\n\n    if (exceedUnit) {\n      this._xi = x;\n      this._yi = y;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @param  {number} x3\n   * @param  {number} y3\n   * @return {module:zrender/core/PathProxy}\n   */\n  bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n    this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3) : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n    }\n\n    this._xi = x3;\n    this._yi = y3;\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @return {module:zrender/core/PathProxy}\n   */\n  quadraticCurveTo: function (x1, y1, x2, y2) {\n    this.addData(CMD.Q, x1, y1, x2, y2);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2) : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n    }\n\n    this._xi = x2;\n    this._yi = y2;\n    return this;\n  },\n\n  /**\n   * @param  {number} cx\n   * @param  {number} cy\n   * @param  {number} r\n   * @param  {number} startAngle\n   * @param  {number} endAngle\n   * @param  {boolean} anticlockwise\n   * @return {module:zrender/core/PathProxy}\n   */\n  arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n    this.addData(CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1);\n    this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n    this._xi = mathCos(endAngle) * r + cx;\n    this._yi = mathSin(endAngle) * r + cx;\n    return this;\n  },\n  // TODO\n  arcTo: function (x1, y1, x2, y2, radius) {\n    if (this._ctx) {\n      this._ctx.arcTo(x1, y1, x2, y2, radius);\n    }\n\n    return this;\n  },\n  // TODO\n  rect: function (x, y, w, h) {\n    this._ctx && this._ctx.rect(x, y, w, h);\n    this.addData(CMD.R, x, y, w, h);\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/PathProxy}\n   */\n  closePath: function () {\n    this.addData(CMD.Z);\n    var ctx = this._ctx;\n    var x0 = this._x0;\n    var y0 = this._y0;\n\n    if (ctx) {\n      this._needsDash() && this._dashedLineTo(x0, y0);\n      ctx.closePath();\n    }\n\n    this._xi = x0;\n    this._yi = y0;\n    return this;\n  },\n\n  /**\n   * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n   * stroke 同样\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  fill: function (ctx) {\n    ctx && ctx.fill();\n    this.toStatic();\n  },\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  stroke: function (ctx) {\n    ctx && ctx.stroke();\n    this.toStatic();\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDash: function (lineDash) {\n    if (lineDash instanceof Array) {\n      this._lineDash = lineDash;\n      this._dashIdx = 0;\n      var lineDashSum = 0;\n\n      for (var i = 0; i < lineDash.length; i++) {\n        lineDashSum += lineDash[i];\n      }\n\n      this._dashSum = lineDashSum;\n    }\n\n    return this;\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDashOffset: function (offset) {\n    this._dashOffset = offset;\n    return this;\n  },\n\n  /**\n   *\n   * @return {boolean}\n   */\n  len: function () {\n    return this._len;\n  },\n\n  /**\n   * 直接设置 Path 数据\n   */\n  setData: function (data) {\n    var len = data.length;\n\n    if (!(this.data && this.data.length == len) && hasTypedArray) {\n      this.data = new Float32Array(len);\n    }\n\n    for (var i = 0; i < len; i++) {\n      this.data[i] = data[i];\n    }\n\n    this._len = len;\n  },\n\n  /**\n   * 添加子路径\n   * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n   */\n  appendPath: function (path) {\n    if (!(path instanceof Array)) {\n      path = [path];\n    }\n\n    var len = path.length;\n    var appendSize = 0;\n    var offset = this._len;\n\n    for (var i = 0; i < len; i++) {\n      appendSize += path[i].len();\n    }\n\n    if (hasTypedArray && this.data instanceof Float32Array) {\n      this.data = new Float32Array(offset + appendSize);\n    }\n\n    for (var i = 0; i < len; i++) {\n      var appendPathData = path[i].data;\n\n      for (var k = 0; k < appendPathData.length; k++) {\n        this.data[offset++] = appendPathData[k];\n      }\n    }\n\n    this._len = offset;\n  },\n\n  /**\n   * 填充 Path 数据。\n   * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n   */\n  addData: function (cmd) {\n    if (!this._saveData) {\n      return;\n    }\n\n    var data = this.data;\n\n    if (this._len + arguments.length > data.length) {\n      // 因为之前的数组已经转换成静态的 Float32Array\n      // 所以不够用时需要扩展一个新的动态数组\n      this._expandData();\n\n      data = this.data;\n    }\n\n    for (var i = 0; i < arguments.length; i++) {\n      data[this._len++] = arguments[i];\n    }\n\n    this._prevCmd = cmd;\n  },\n  _expandData: function () {\n    // Only if data is Float32Array\n    if (!(this.data instanceof Array)) {\n      var newData = [];\n\n      for (var i = 0; i < this._len; i++) {\n        newData[i] = this.data[i];\n      }\n\n      this.data = newData;\n    }\n  },\n\n  /**\n   * If needs js implemented dashed line\n   * @return {boolean}\n   * @private\n   */\n  _needsDash: function () {\n    return this._lineDash;\n  },\n  _dashedLineTo: function (x1, y1) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    var dist = mathSqrt(dx * dx + dy * dy);\n    var x = x0;\n    var y = y0;\n    var dash;\n    var nDash = lineDash.length;\n    var idx;\n    dx /= dist;\n    dy /= dist;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum;\n    x -= offset * dx;\n    y -= offset * dy;\n\n    while (dx > 0 && x <= x1 || dx < 0 && x >= x1 || dx == 0 && (dy > 0 && y <= y1 || dy < 0 && y >= y1)) {\n      idx = this._dashIdx;\n      dash = lineDash[idx];\n      x += dx * dash;\n      y += dy * dash;\n      this._dashIdx = (idx + 1) % nDash; // Skip positive offset\n\n      if (dx > 0 && x < x0 || dx < 0 && x > x0 || dy > 0 && y < y0 || dy < 0 && y > y0) {\n        continue;\n      }\n\n      ctx[idx % 2 ? 'moveTo' : 'lineTo'](dx >= 0 ? mathMin(x, x1) : mathMax(x, x1), dy >= 0 ? mathMin(y, y1) : mathMax(y, y1));\n    } // Offset for next lineTo\n\n\n    dx = x - x1;\n    dy = y - y1;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  // Not accurate dashed line to\n  _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var t;\n    var dx;\n    var dy;\n    var cubicAt = curve.cubicAt;\n    var bezierLen = 0;\n    var idx = this._dashIdx;\n    var nDash = lineDash.length;\n    var x;\n    var y;\n    var tmpLen = 0;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum; // Bezier approx length\n\n    for (t = 0; t < 1; t += 0.1) {\n      dx = cubicAt(x0, x1, x2, x3, t + 0.1) - cubicAt(x0, x1, x2, x3, t);\n      dy = cubicAt(y0, y1, y2, y3, t + 0.1) - cubicAt(y0, y1, y2, y3, t);\n      bezierLen += mathSqrt(dx * dx + dy * dy);\n    } // Find idx after add offset\n\n\n    for (; idx < nDash; idx++) {\n      tmpLen += lineDash[idx];\n\n      if (tmpLen > offset) {\n        break;\n      }\n    }\n\n    t = (tmpLen - offset) / bezierLen;\n\n    while (t <= 1) {\n      x = cubicAt(x0, x1, x2, x3, t);\n      y = cubicAt(y0, y1, y2, y3, t); // Use line to approximate dashed bezier\n      // Bad result if dash is long\n\n      idx % 2 ? ctx.moveTo(x, y) : ctx.lineTo(x, y);\n      t += lineDash[idx] / bezierLen;\n      idx = (idx + 1) % nDash;\n    } // Finish the last segment and calculate the new offset\n\n\n    idx % 2 !== 0 && ctx.lineTo(x3, y3);\n    dx = x3 - x;\n    dy = y3 - y;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  _dashedQuadraticTo: function (x1, y1, x2, y2) {\n    // Convert quadratic to cubic using degree elevation\n    var x3 = x2;\n    var y3 = y2;\n    x2 = (x2 + 2 * x1) / 3;\n    y2 = (y2 + 2 * y1) / 3;\n    x1 = (this._xi + 2 * x1) / 3;\n    y1 = (this._yi + 2 * y1) / 3;\n\n    this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n  },\n\n  /**\n   * 转成静态的 Float32Array 减少堆内存占用\n   * Convert dynamic array to static Float32Array\n   */\n  toStatic: function () {\n    var data = this.data;\n\n    if (data instanceof Array) {\n      data.length = this._len;\n\n      if (hasTypedArray) {\n        this.data = new Float32Array(data);\n      }\n    }\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n    max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n    var data = this.data;\n    var xi = 0;\n    var yi = 0;\n    var x0 = 0;\n    var y0 = 0;\n\n    for (var i = 0; i < data.length;) {\n      var cmd = data[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = data[i];\n        yi = data[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n          // 在 closePath 的时候使用\n          x0 = data[i++];\n          y0 = data[i++];\n          xi = x0;\n          yi = y0;\n          min2[0] = x0;\n          min2[1] = y0;\n          max2[0] = x0;\n          max2[1] = y0;\n          break;\n\n        case CMD.L:\n          bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.C:\n          bbox.fromCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.Q:\n          bbox.fromQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.A:\n          // TODO Arc 判断的开销比较大\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++];\n          var endAngle = data[i++] + startAngle; // TODO Arc 旋转\n\n          var psi = data[i++];\n          var anticlockwise = 1 - data[i++];\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(startAngle) * rx + cx;\n            y0 = mathSin(startAngle) * ry + cy;\n          }\n\n          bbox.fromArc(cx, cy, rx, ry, startAngle, endAngle, anticlockwise, min2, max2);\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = data[i++];\n          y0 = yi = data[i++];\n          var width = data[i++];\n          var height = data[i++]; // Use fromLine\n\n          bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n          break;\n\n        case CMD.Z:\n          xi = x0;\n          yi = y0;\n          break;\n      } // Union\n\n\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * Rebuild path from current data\n   * Rebuild path will not consider javascript implemented line dash.\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  rebuildPath: function (ctx) {\n    var d = this.data;\n    var x0, y0;\n    var xi, yi;\n    var x, y;\n    var ux = this._ux;\n    var uy = this._uy;\n    var len = this._len;\n\n    for (var i = 0; i < len;) {\n      var cmd = d[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = d[i];\n        yi = d[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          x0 = xi = d[i++];\n          y0 = yi = d[i++];\n          ctx.moveTo(xi, yi);\n          break;\n\n        case CMD.L:\n          x = d[i++];\n          y = d[i++]; // Not draw too small seg between\n\n          if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n            ctx.lineTo(x, y);\n            xi = x;\n            yi = y;\n          }\n\n          break;\n\n        case CMD.C:\n          ctx.bezierCurveTo(d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.Q:\n          ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.A:\n          var cx = d[i++];\n          var cy = d[i++];\n          var rx = d[i++];\n          var ry = d[i++];\n          var theta = d[i++];\n          var dTheta = d[i++];\n          var psi = d[i++];\n          var fs = d[i++];\n          var r = rx > ry ? rx : ry;\n          var scaleX = rx > ry ? 1 : rx / ry;\n          var scaleY = rx > ry ? ry / rx : 1;\n          var isEllipse = Math.abs(rx - ry) > 1e-3;\n          var endAngle = theta + dTheta;\n\n          if (isEllipse) {\n            ctx.translate(cx, cy);\n            ctx.rotate(psi);\n            ctx.scale(scaleX, scaleY);\n            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n            ctx.scale(1 / scaleX, 1 / scaleY);\n            ctx.rotate(-psi);\n            ctx.translate(-cx, -cy);\n          } else {\n            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n          }\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(theta) * rx + cx;\n            y0 = mathSin(theta) * ry + cy;\n          }\n\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = d[i];\n          y0 = yi = d[i + 1];\n          ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n          break;\n\n        case CMD.Z:\n          ctx.closePath();\n          xi = x0;\n          yi = y0;\n      }\n    }\n  }\n};\nPathProxy.CMD = CMD;\nvar _default = PathProxy;\nmodule.exports = _default;","function defaultKeyGetter(item) {\n  return item;\n}\n/**\n * @param {Array} oldArr\n * @param {Array} newArr\n * @param {Function} oldKeyGetter\n * @param {Function} newKeyGetter\n * @param {Object} [context] Can be visited by this.context in callback.\n */\n\n\nfunction DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n  this._old = oldArr;\n  this._new = newArr;\n  this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n  this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n  this.context = context;\n}\n\nDataDiffer.prototype = {\n  constructor: DataDiffer,\n\n  /**\n   * Callback function when add a data\n   */\n  add: function (func) {\n    this._add = func;\n    return this;\n  },\n\n  /**\n   * Callback function when update a data\n   */\n  update: function (func) {\n    this._update = func;\n    return this;\n  },\n\n  /**\n   * Callback function when remove a data\n   */\n  remove: function (func) {\n    this._remove = func;\n    return this;\n  },\n  execute: function () {\n    var oldArr = this._old;\n    var newArr = this._new;\n    var oldDataIndexMap = {};\n    var newDataIndexMap = {};\n    var oldDataKeyArr = [];\n    var newDataKeyArr = [];\n    var i;\n    initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n    initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this); // Travel by inverted order to make sure order consistency\n    // when duplicate keys exists (consider newDataIndex.pop() below).\n    // For performance consideration, these code below do not look neat.\n\n    for (i = 0; i < oldArr.length; i++) {\n      var key = oldDataKeyArr[i];\n      var idx = newDataIndexMap[key]; // idx can never be empty array here. see 'set null' logic below.\n\n      if (idx != null) {\n        // Consider there is duplicate key (for example, use dataItem.name as key).\n        // We should make sure every item in newArr and oldArr can be visited.\n        var len = idx.length;\n\n        if (len) {\n          len === 1 && (newDataIndexMap[key] = null);\n          idx = idx.unshift();\n        } else {\n          newDataIndexMap[key] = null;\n        }\n\n        this._update && this._update(idx, i);\n      } else {\n        this._remove && this._remove(i);\n      }\n    }\n\n    for (var i = 0; i < newDataKeyArr.length; i++) {\n      var key = newDataKeyArr[i];\n\n      if (newDataIndexMap.hasOwnProperty(key)) {\n        var idx = newDataIndexMap[key];\n\n        if (idx == null) {\n          continue;\n        } // idx can never be empty array here. see 'set null' logic above.\n\n\n        if (!idx.length) {\n          this._add && this._add(idx);\n        } else {\n          for (var j = 0, len = idx.length; j < len; j++) {\n            this._add && this._add(idx[j]);\n          }\n        }\n      }\n    }\n  }\n};\n\nfunction initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n  for (var i = 0; i < arr.length; i++) {\n    // Add prefix to avoid conflict with Object.prototype.\n    var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n    var existence = map[key];\n\n    if (existence == null) {\n      keyArr.push(key);\n      map[key] = i;\n    } else {\n      if (!existence.length) {\n        map[key] = existence = [existence];\n      }\n\n      existence.push(i);\n    }\n  }\n}\n\nvar _default = DataDiffer;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisHelper = require(\"./axisHelper\");\n\nfunction getName(obj) {\n  if (zrUtil.isObject(obj) && obj.value != null) {\n    return obj.value;\n  } else {\n    return obj + '';\n  }\n}\n\nvar _default = {\n  /**\n   * Format labels\n   * @return {Array.<string>}\n   */\n  getFormattedLabels: function () {\n    return axisHelper.getFormattedLabels(this.axis, this.get('axisLabel.formatter'));\n  },\n\n  /**\n   * Get categories\n   */\n  getCategories: function () {\n    return this.get('type') === 'category' && zrUtil.map(this.get('data'), getName);\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n   */\n  getMin: function (origin) {\n    var option = this.option;\n    var min = !origin && option.rangeStart != null ? option.rangeStart : option.min;\n\n    if (this.axis && min != null && min !== 'dataMin' && typeof min !== 'function' && !zrUtil.eqNaN(min)) {\n      min = this.axis.scale.parse(min);\n    }\n\n    return min;\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n   */\n  getMax: function (origin) {\n    var option = this.option;\n    var max = !origin && option.rangeEnd != null ? option.rangeEnd : option.max;\n\n    if (this.axis && max != null && max !== 'dataMax' && typeof max !== 'function' && !zrUtil.eqNaN(max)) {\n      max = this.axis.scale.parse(max);\n    }\n\n    return max;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  getNeedCrossZero: function () {\n    var option = this.option;\n    return option.rangeStart != null || option.rangeEnd != null ? false : !option.scale;\n  },\n\n  /**\n   * Should be implemented by each axis model if necessary.\n   * @return {module:echarts/model/Component} coordinate system model\n   */\n  getCoordSysModel: zrUtil.noop,\n\n  /**\n   * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n   * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n   */\n  setRange: function (rangeStart, rangeEnd) {\n    this.option.rangeStart = rangeStart;\n    this.option.rangeEnd = rangeEnd;\n  },\n\n  /**\n   * Reset range\n   */\n  resetRange: function () {\n    // rangeStart and rangeEnd is readonly.\n    this.option.rangeStart = this.option.rangeEnd = null;\n  }\n};\nmodule.exports = _default;","var _default = {\n  toolbox: {\n    brush: {\n      title: {\n        rect: '矩形选择',\n        polygon: '圈选',\n        lineX: '横向选择',\n        lineY: '纵向选择',\n        keep: '保持选择',\n        clear: '清除选择'\n      }\n    },\n    dataView: {\n      title: '数据视图',\n      lang: ['数据视图', '关闭', '刷新']\n    },\n    dataZoom: {\n      title: {\n        zoom: '区域缩放',\n        back: '区域缩放还原'\n      }\n    },\n    magicType: {\n      title: {\n        line: '切换为折线图',\n        bar: '切换为柱状图',\n        stack: '切换为堆叠',\n        tiled: '切换为平铺'\n      }\n    },\n    restore: {\n      title: '还原'\n    },\n    saveAsImage: {\n      title: '保存为图片',\n      lang: ['右键另存为图片']\n    }\n  }\n};\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar debugMode = _config.debugMode;\n\nvar log = function () {};\n\nif (debugMode === 1) {\n  log = function () {\n    for (var k in arguments) {\n      throw new Error(arguments[k]);\n    }\n  };\n} else if (debugMode > 1) {\n  log = function () {\n    for (var k in arguments) {\n      console.log(arguments[k]);\n    }\n  };\n}\n\nvar _default = log;\nmodule.exports = _default;","var Displayable = require(\"./Displayable\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar imageHelper = require(\"./helper/image\");\n\n/**\n * @alias zrender/graphic/Image\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nfunction ZImage(opts) {\n  Displayable.call(this, opts);\n}\n\nZImage.prototype = {\n  constructor: ZImage,\n  type: 'image',\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var src = style.image; // Must bind each time\n\n    style.bind(ctx, this, prevEl);\n    var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this, this.onload);\n\n    if (!image || !imageHelper.isImageReady(image)) {\n      return;\n    } // 图片已经加载完成\n    // if (image.nodeName.toUpperCase() == 'IMG') {\n    //     if (!image.complete) {\n    //         return;\n    //     }\n    // }\n    // Else is canvas\n\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var width = style.width;\n    var height = style.height;\n    var aspect = image.width / image.height;\n\n    if (width == null && height != null) {\n      // Keep image/height ratio\n      width = height * aspect;\n    } else if (height == null && width != null) {\n      height = width / aspect;\n    } else if (width == null && height == null) {\n      width = image.width;\n      height = image.height;\n    } // 设置transform\n\n\n    this.setTransform(ctx);\n\n    if (style.sWidth && style.sHeight) {\n      var sx = style.sx || 0;\n      var sy = style.sy || 0;\n      ctx.drawImage(image, sx, sy, style.sWidth, style.sHeight, x, y, width, height);\n    } else if (style.sx && style.sy) {\n      var sx = style.sx;\n      var sy = style.sy;\n      var sWidth = width - sx;\n      var sHeight = height - sy;\n      ctx.drawImage(image, sx, sy, sWidth, sHeight, x, y, width, height);\n    } else {\n      ctx.drawImage(image, x, y, width, height);\n    }\n\n    this.restoreTransform(ctx); // Draw rect text\n\n    if (style.text != null) {\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  getBoundingRect: function () {\n    var style = this.style;\n\n    if (!this._rect) {\n      this._rect = new BoundingRect(style.x || 0, style.y || 0, style.width || 0, style.height || 0);\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(ZImage, Displayable);\nvar _default = ZImage;\nmodule.exports = _default;","var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"./helper/text\");\n\n/**\n * @alias zrender/graphic/Text\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nvar Text = function (opts) {\n  // jshint ignore:line\n  Displayable.call(this, opts);\n};\n\nText.prototype = {\n  constructor: Text,\n  type: 'text',\n  brush: function (ctx, prevEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true); // Use props with prefix 'text'.\n\n    style.fill = style.stroke = style.shadowBlur = style.shadowColor = style.shadowOffsetX = style.shadowOffsetY = null;\n    var text = style.text; // Convert to string\n\n    text != null && (text += ''); // Always bind style\n\n    style.bind(ctx, this, prevEl);\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    }\n\n    this.setTransform(ctx);\n    textHelper.renderText(this, ctx, text, style);\n    this.restoreTransform(ctx);\n  },\n  getBoundingRect: function () {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n    if (!this._rect) {\n      var text = style.text;\n      text != null ? text += '' : text = '';\n      var rect = textContain.getBoundingRect(style.text + '', style.font, style.textAlign, style.textVerticalAlign, style.textPadding, style.rich);\n      rect.x += style.x || 0;\n      rect.y += style.y || 0;\n\n      if (textHelper.getStroke(style.textStroke, style.textStrokeWidth)) {\n        var w = style.textStrokeWidth;\n        rect.x -= w / 2;\n        rect.y -= w / 2;\n        rect.width += w;\n        rect.height += w;\n      }\n\n      this._rect = rect;\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(Text, Displayable);\nvar _default = Text;\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar SymbolClz = require(\"./Symbol\");\n\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n/**\n * @constructor\n * @alias module:echarts/chart/helper/SymbolDraw\n * @param {module:zrender/graphic/Group} [symbolCtor]\n */\nfunction SymbolDraw(symbolCtor) {\n  this.group = new graphic.Group();\n  this._symbolCtor = symbolCtor || SymbolClz;\n}\n\nvar symbolDrawProto = SymbolDraw.prototype;\n\nfunction symbolNeedsDraw(data, idx, isIgnore) {\n  var point = data.getItemLayout(idx); // Is an object\n  // if (point && point.hasOwnProperty('point')) {\n  //     point = point.point;\n  // }\n\n  return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx)) && data.getItemVisual(idx, 'symbol') !== 'none';\n}\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Array.<boolean>} [isIgnore]\n */\n\n\nsymbolDrawProto.updateData = function (data, isIgnore) {\n  var group = this.group;\n  var seriesModel = data.hostModel;\n  var oldData = this._data;\n  var SymbolCtor = this._symbolCtor;\n  var seriesScope = {\n    itemStyle: seriesModel.getModel('itemStyle.normal').getItemStyle(['color']),\n    hoverItemStyle: seriesModel.getModel('itemStyle.emphasis').getItemStyle(),\n    symbolRotate: seriesModel.get('symbolRotate'),\n    symbolOffset: seriesModel.get('symbolOffset'),\n    hoverAnimation: seriesModel.get('hoverAnimation'),\n    labelModel: seriesModel.getModel('label.normal'),\n    hoverLabelModel: seriesModel.getModel('label.emphasis'),\n    cursorStyle: seriesModel.get('cursor')\n  };\n  data.diff(oldData).add(function (newIdx) {\n    var point = data.getItemLayout(newIdx);\n\n    if (symbolNeedsDraw(data, newIdx, isIgnore)) {\n      var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n      symbolEl.attr('position', point);\n      data.setItemGraphicEl(newIdx, symbolEl);\n      group.add(symbolEl);\n    }\n  }).update(function (newIdx, oldIdx) {\n    var symbolEl = oldData.getItemGraphicEl(oldIdx);\n    var point = data.getItemLayout(newIdx);\n\n    if (!symbolNeedsDraw(data, newIdx, isIgnore)) {\n      group.remove(symbolEl);\n      return;\n    }\n\n    if (!symbolEl) {\n      symbolEl = new SymbolCtor(data, newIdx);\n      symbolEl.attr('position', point);\n    } else {\n      symbolEl.updateData(data, newIdx, seriesScope);\n      graphic.updateProps(symbolEl, {\n        position: point\n      }, seriesModel);\n    } // Add back\n\n\n    group.add(symbolEl);\n    data.setItemGraphicEl(newIdx, symbolEl);\n  }).remove(function (oldIdx) {\n    var el = oldData.getItemGraphicEl(oldIdx);\n    el && el.fadeOut(function () {\n      group.remove(el);\n    });\n  }).execute();\n  this._data = data;\n};\n\nsymbolDrawProto.updateLayout = function () {\n  var data = this._data;\n\n  if (data) {\n    // Not use animation\n    data.eachItemGraphicEl(function (el, idx) {\n      var point = data.getItemLayout(idx);\n      el.attr('position', point);\n    });\n  }\n};\n\nsymbolDrawProto.remove = function (enableAnimation) {\n  var group = this.group;\n  var data = this._data;\n\n  if (data) {\n    if (enableAnimation) {\n      data.eachItemGraphicEl(function (el) {\n        el.fadeOut(function () {\n          group.remove(el);\n        });\n      });\n    } else {\n      group.removeAll();\n    }\n  }\n};\n\nvar _default = SymbolDraw;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./axis\");\n\n// Grid view\necharts.extendComponentView({\n  type: 'grid',\n  render: function (gridModel, ecModel) {\n    this.group.removeAll();\n\n    if (gridModel.get('show')) {\n      this.group.add(new graphic.Rect({\n        shape: gridModel.coordinateSystem.getRect(),\n        style: zrUtil.defaults({\n          fill: gridModel.get('backgroundColor')\n        }, gridModel.getItemStyle()),\n        silent: true,\n        z2: -1\n      }));\n    }\n  }\n});\necharts.registerPreprocessor(function (option) {\n  // Only create grid when need\n  if (option.xAxis && option.yAxis && !option.grid) {\n    option.grid = {};\n  }\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction retrieveTargetInfo(payload, seriesModel) {\n  if (payload && (payload.type === 'treemapZoomToNode' || payload.type === 'treemapRootToNode')) {\n    var root = seriesModel.getData().tree.root;\n    var targetNode = payload.targetNode;\n\n    if (targetNode && root.contains(targetNode)) {\n      return {\n        node: targetNode\n      };\n    }\n\n    var targetNodeId = payload.targetNodeId;\n\n    if (targetNodeId != null && (targetNode = root.getNodeById(targetNodeId))) {\n      return {\n        node: targetNode\n      };\n    }\n  }\n} // Not includes the given node at the last item.\n\n\nfunction getPathToRoot(node) {\n  var path = [];\n\n  while (node) {\n    node = node.parentNode;\n    node && path.push(node);\n  }\n\n  return path.reverse();\n}\n\nfunction aboveViewRoot(viewRoot, node) {\n  var viewPath = getPathToRoot(viewRoot);\n  return zrUtil.indexOf(viewPath, node) >= 0;\n} // From root to the input node (the input node will be included).\n\n\nfunction wrapTreePathInfo(node, seriesModel) {\n  var treePathInfo = [];\n\n  while (node) {\n    var nodeDataIndex = node.dataIndex;\n    treePathInfo.push({\n      name: node.name,\n      dataIndex: nodeDataIndex,\n      value: seriesModel.getRawValue(nodeDataIndex)\n    });\n    node = node.parentNode;\n  }\n\n  treePathInfo.reverse();\n  return treePathInfo;\n}\n\nexports.retrieveTargetInfo = retrieveTargetInfo;\nexports.getPathToRoot = getPathToRoot;\nexports.aboveViewRoot = aboveViewRoot;\nexports.wrapTreePathInfo = wrapTreePathInfo;","/**\n * Calculate slider move result.\n * Usage:\n * (1) If both handle0 and handle1 are needed to be moved, set minSpan the same as\n * maxSpan and the same as `Math.abs(handleEnd[1] - handleEnds[0])`.\n * (2) If handle0 is forbidden to cross handle1, set minSpan as `0`.\n *\n * @param {number} delta Move length.\n * @param {Array.<number>} handleEnds handleEnds[0] can be bigger then handleEnds[1].\n *              handleEnds will be modified in this method.\n * @param {Array.<number>} extent handleEnds is restricted by extent.\n *              extent[0] should less or equals than extent[1].\n * @param {number|string} handleIndex Can be 'all', means that both move the two handleEnds,\n *              where the input minSpan and maxSpan will not work.\n * @param {number} [minSpan] The range of dataZoom can not be smaller than that.\n *              If not set, handle0 and cross handle1. If set as a non-negative\n *              number (including `0`), handles will push each other when reaching\n *              the minSpan.\n * @param {number} [maxSpan] The range of dataZoom can not be larger than that.\n * @return {Array.<number>} The input handleEnds.\n */\nfunction _default(delta, handleEnds, extent, handleIndex, minSpan, maxSpan) {\n  // Normalize firstly.\n  handleEnds[0] = restrict(handleEnds[0], extent);\n  handleEnds[1] = restrict(handleEnds[1], extent);\n  delta = delta || 0;\n  var extentSpan = extent[1] - extent[0]; // Notice maxSpan and minSpan can be null/undefined.\n\n  if (minSpan != null) {\n    minSpan = restrict(minSpan, [0, extentSpan]);\n  }\n\n  if (maxSpan != null) {\n    maxSpan = Math.max(maxSpan, minSpan != null ? minSpan : 0);\n  }\n\n  if (handleIndex === 'all') {\n    minSpan = maxSpan = Math.abs(handleEnds[1] - handleEnds[0]);\n    handleIndex = 0;\n  }\n\n  var originalDistSign = getSpanSign(handleEnds, handleIndex);\n  handleEnds[handleIndex] += delta; // Restrict in extent.\n\n  var extentMinSpan = minSpan || 0;\n  var realExtent = extent.slice();\n  originalDistSign.sign < 0 ? realExtent[0] += extentMinSpan : realExtent[1] -= extentMinSpan;\n  handleEnds[handleIndex] = restrict(handleEnds[handleIndex], realExtent); // Expand span.\n\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\n\n  if (minSpan != null && (currDistSign.sign !== originalDistSign.sign || currDistSign.span < minSpan)) {\n    // If minSpan exists, 'cross' is forbinden.\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + originalDistSign.sign * minSpan;\n  } // Shrink span.\n\n\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\n\n  if (maxSpan != null && currDistSign.span > maxSpan) {\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + currDistSign.sign * maxSpan;\n  }\n\n  return handleEnds;\n}\n\nfunction getSpanSign(handleEnds, handleIndex) {\n  var dist = handleEnds[handleIndex] - handleEnds[1 - handleIndex]; // If `handleEnds[0] === handleEnds[1]`, always believe that handleEnd[0]\n  // is at left of handleEnds[1] for non-cross case.\n\n  return {\n    span: Math.abs(dist),\n    sign: dist > 0 ? -1 : dist < 0 ? 1 : handleIndex ? -1 : 1\n  };\n}\n\nfunction restrict(value, extend) {\n  return Math.min(extend[1], Math.max(extend[0], value));\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisPointerModelHelper = require(\"./axisPointer/modelHelper\");\n\nvar axisTrigger = require(\"./axisPointer/axisTrigger\");\n\nrequire(\"./axisPointer/AxisPointerModel\");\n\nrequire(\"./axisPointer/AxisPointerView\");\n\nrequire(\"./axisPointer/CartesianAxisPointer\");\n\n// CartesianAxisPointer is not supposed to be required here. But consider\n// echarts.simple.js and online build tooltip, which only require gridSimple,\n// CartesianAxisPointer should be able to required somewhere.\necharts.registerPreprocessor(function (option) {\n  // Always has a global axisPointerModel for default setting.\n  if (option) {\n    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n    var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\n    // is not set, remain null/undefined, otherwise it will\n    // override existent link setting.\n\n    if (link && !zrUtil.isArray(link)) {\n      option.axisPointer.link = [link];\n    }\n  }\n}); // This process should proformed after coordinate systems created\n// and series data processed. So put it on statistic processing stage.\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n  // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n  // allAxesInfo should be updated when setOption performed.\n  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\n}); // Broadcast to all views.\n\necharts.registerAction({\n  type: 'updateAxisPointer',\n  event: 'updateAxisPointer',\n  update: ':updateAxisPointer'\n}, axisTrigger);","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar helper = require(\"./helper\");\n\nvar AxisProxy = require(\"./AxisProxy\");\n\nvar each = zrUtil.each;\nvar eachAxisDim = helper.eachAxisDim;\nvar DataZoomModel = echarts.extendComponentModel({\n  type: 'dataZoom',\n  dependencies: ['xAxis', 'yAxis', 'zAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'series'],\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    zlevel: 0,\n    z: 4,\n    // Higher than normal component (z: 2).\n    orient: null,\n    // Default auto by axisIndex. Possible value: 'horizontal', 'vertical'.\n    xAxisIndex: null,\n    // Default the first horizontal category axis.\n    yAxisIndex: null,\n    // Default the first vertical category axis.\n    filterMode: 'filter',\n    // Possible values: 'filter' or 'empty' or 'weakFilter'.\n    // 'filter': data items which are out of window will be removed. This option is\n    //          applicable when filtering outliers. For each data item, it will be\n    //          filtered if one of the relevant dimensions is out of the window.\n    // 'weakFilter': data items which are out of window will be removed. This option\n    //          is applicable when filtering outliers. For each data item, it will be\n    //          filtered only if all  of the relevant dimensions are out of the same\n    //          side of the window.\n    // 'empty': data items which are out of window will be set to empty.\n    //          This option is applicable when user should not neglect\n    //          that there are some data items out of window.\n    // 'none': Do not filter.\n    // Taking line chart as an example, line will be broken in\n    // the filtered points when filterModel is set to 'empty', but\n    // be connected when set to 'filter'.\n    throttle: null,\n    // Dispatch action by the fixed rate, avoid frequency.\n    // default 100. Do not throttle when use null/undefined.\n    // If animation === true and animationDurationUpdate > 0,\n    // default value is 100, otherwise 20.\n    start: 0,\n    // Start percent. 0 ~ 100\n    end: 100,\n    // End percent. 0 ~ 100\n    startValue: null,\n    // Start value. If startValue specified, start is ignored.\n    endValue: null,\n    // End value. If endValue specified, end is ignored.\n    minSpan: null,\n    // 0 ~ 100\n    maxSpan: null,\n    // 0 ~ 100\n    minValueSpan: null,\n    // The range of dataZoom can not be smaller than that.\n    maxValueSpan: null,\n    // The range of dataZoom can not be larger than that.\n    rangeMode: null // Array, can be 'value' or 'percent'.\n\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * key like x_0, y_1\n     * @private\n     * @type {Object}\n     */\n    this._dataIntervalByAxis = {};\n    /**\n     * @private\n     */\n\n    this._dataInfo = {};\n    /**\n     * key like x_0, y_1\n     * @private\n     */\n\n    this._axisProxies = {};\n    /**\n     * @readOnly\n     */\n\n    this.textStyleModel;\n    /**\n     * @private\n     */\n\n    this._autoThrottle = true;\n    /**\n     * 'percent' or 'value'\n     * @private\n     */\n\n    this._rangePropMode = ['percent', 'percent'];\n    var rawOption = retrieveRaw(option);\n    this.mergeDefaultAndTheme(option, ecModel);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (newOption) {\n    var rawOption = retrieveRaw(newOption); //FIX #2591\n\n    zrUtil.merge(this.option, newOption, true);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @protected\n   */\n  doInit: function (rawOption) {\n    var thisOption = this.option; // Disable realtime view update if canvas is not supported.\n\n    if (!env.canvasSupported) {\n      thisOption.realtime = false;\n    }\n\n    this._setDefaultThrottle(rawOption);\n\n    updateRangeUse(this, rawOption);\n    each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n      // start/end has higher priority over startValue/endValue if they\n      // both set, but we should make chart.setOption({endValue: 1000})\n      // effective, rather than chart.setOption({endValue: 1000, end: null}).\n      if (this._rangePropMode[index] === 'value') {\n        thisOption[names[0]] = null;\n      } // Otherwise do nothing and use the merge result.\n\n    }, this);\n    this.textStyleModel = this.getModel('textStyle');\n\n    this._resetTarget();\n\n    this._giveAxisProxies();\n  },\n\n  /**\n   * @private\n   */\n  _giveAxisProxies: function () {\n    var axisProxies = this._axisProxies;\n    this.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel, ecModel) {\n      var axisModel = this.dependentModels[dimNames.axis][axisIndex]; // If exists, share axisProxy with other dataZoomModels.\n\n      var axisProxy = axisModel.__dzAxisProxy || ( // Use the first dataZoomModel as the main model of axisProxy.\n      axisModel.__dzAxisProxy = new AxisProxy(dimNames.name, axisIndex, this, ecModel)); // FIXME\n      // dispose __dzAxisProxy\n\n      axisProxies[dimNames.name + '_' + axisIndex] = axisProxy;\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _resetTarget: function () {\n    var thisOption = this.option;\n\n    var autoMode = this._judgeAutoMode();\n\n    eachAxisDim(function (dimNames) {\n      var axisIndexName = dimNames.axisIndex;\n      thisOption[axisIndexName] = modelUtil.normalizeToArray(thisOption[axisIndexName]);\n    }, this);\n\n    if (autoMode === 'axisIndex') {\n      this._autoSetAxisIndex();\n    } else if (autoMode === 'orient') {\n      this._autoSetOrient();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _judgeAutoMode: function () {\n    // Auto set only works for setOption at the first time.\n    // The following is user's reponsibility. So using merged\n    // option is OK.\n    var thisOption = this.option;\n    var hasIndexSpecified = false;\n    eachAxisDim(function (dimNames) {\n      // When user set axisIndex as a empty array, we think that user specify axisIndex\n      // but do not want use auto mode. Because empty array may be encountered when\n      // some error occured.\n      if (thisOption[dimNames.axisIndex] != null) {\n        hasIndexSpecified = true;\n      }\n    }, this);\n    var orient = thisOption.orient;\n\n    if (orient == null && hasIndexSpecified) {\n      return 'orient';\n    } else if (!hasIndexSpecified) {\n      if (orient == null) {\n        thisOption.orient = 'horizontal';\n      }\n\n      return 'axisIndex';\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetAxisIndex: function () {\n    var autoAxisIndex = true;\n    var orient = this.get('orient', true);\n    var thisOption = this.option;\n    var dependentModels = this.dependentModels;\n\n    if (autoAxisIndex) {\n      // Find axis that parallel to dataZoom as default.\n      var dimName = orient === 'vertical' ? 'y' : 'x';\n\n      if (dependentModels[dimName + 'Axis'].length) {\n        thisOption[dimName + 'AxisIndex'] = [0];\n        autoAxisIndex = false;\n      } else {\n        each(dependentModels.singleAxis, function (singleAxisModel) {\n          if (autoAxisIndex && singleAxisModel.get('orient', true) === orient) {\n            thisOption.singleAxisIndex = [singleAxisModel.componentIndex];\n            autoAxisIndex = false;\n          }\n        });\n      }\n    }\n\n    if (autoAxisIndex) {\n      // Find the first category axis as default. (consider polar)\n      eachAxisDim(function (dimNames) {\n        if (!autoAxisIndex) {\n          return;\n        }\n\n        var axisIndices = [];\n        var axisModels = this.dependentModels[dimNames.axis];\n\n        if (axisModels.length && !axisIndices.length) {\n          for (var i = 0, len = axisModels.length; i < len; i++) {\n            if (axisModels[i].get('type') === 'category') {\n              axisIndices.push(i);\n            }\n          }\n        }\n\n        thisOption[dimNames.axisIndex] = axisIndices;\n\n        if (axisIndices.length) {\n          autoAxisIndex = false;\n        }\n      }, this);\n    }\n\n    if (autoAxisIndex) {\n      // FIXME\n      // 这里是兼容ec2的写法（没指定xAxisIndex和yAxisIndex时把scatter和双数值轴折柱纳入dataZoom控制），\n      // 但是实际是否需要Grid.js#getScaleByOption来判断（考虑time，log等axis type）？\n      // If both dataZoom.xAxisIndex and dataZoom.yAxisIndex is not specified,\n      // dataZoom component auto adopts series that reference to\n      // both xAxis and yAxis which type is 'value'.\n      this.ecModel.eachSeries(function (seriesModel) {\n        if (this._isSeriesHasAllAxesTypeOf(seriesModel, 'value')) {\n          eachAxisDim(function (dimNames) {\n            var axisIndices = thisOption[dimNames.axisIndex];\n            var axisIndex = seriesModel.get(dimNames.axisIndex);\n            var axisId = seriesModel.get(dimNames.axisId);\n            var axisModel = seriesModel.ecModel.queryComponents({\n              mainType: dimNames.axis,\n              index: axisIndex,\n              id: axisId\n            })[0];\n            axisIndex = axisModel.componentIndex;\n\n            if (zrUtil.indexOf(axisIndices, axisIndex) < 0) {\n              axisIndices.push(axisIndex);\n            }\n          });\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetOrient: function () {\n    var dim; // Find the first axis\n\n    this.eachTargetAxis(function (dimNames) {\n      !dim && (dim = dimNames.name);\n    }, this);\n    this.option.orient = dim === 'y' ? 'vertical' : 'horizontal';\n  },\n\n  /**\n   * @private\n   */\n  _isSeriesHasAllAxesTypeOf: function (seriesModel, axisType) {\n    // FIXME\n    // 需要series的xAxisIndex和yAxisIndex都首先自动设置上。\n    // 例如series.type === scatter时。\n    var is = true;\n    eachAxisDim(function (dimNames) {\n      var seriesAxisIndex = seriesModel.get(dimNames.axisIndex);\n      var axisModel = this.dependentModels[dimNames.axis][seriesAxisIndex];\n\n      if (!axisModel || axisModel.get('type') !== axisType) {\n        is = false;\n      }\n    }, this);\n    return is;\n  },\n\n  /**\n   * @private\n   */\n  _setDefaultThrottle: function (rawOption) {\n    // When first time user set throttle, auto throttle ends.\n    if (rawOption.hasOwnProperty('throttle')) {\n      this._autoThrottle = false;\n    }\n\n    if (this._autoThrottle) {\n      var globalOption = this.ecModel.option;\n      this.option.throttle = globalOption.animation && globalOption.animationDurationUpdate > 0 ? 100 : 20;\n    }\n  },\n\n  /**\n   * @public\n   */\n  getFirstTargetAxisModel: function () {\n    var firstAxisModel;\n    eachAxisDim(function (dimNames) {\n      if (firstAxisModel == null) {\n        var indices = this.get(dimNames.axisIndex);\n\n        if (indices.length) {\n          firstAxisModel = this.dependentModels[dimNames.axis][indices[0]];\n        }\n      }\n    }, this);\n    return firstAxisModel;\n  },\n\n  /**\n   * @public\n   * @param {Function} callback param: axisModel, dimNames, axisIndex, dataZoomModel, ecModel\n   */\n  eachTargetAxis: function (callback, context) {\n    var ecModel = this.ecModel;\n    eachAxisDim(function (dimNames) {\n      each(this.get(dimNames.axisIndex), function (axisIndex) {\n        callback.call(context, dimNames, axisIndex, this, ecModel);\n      }, this);\n    }, this);\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/component/dataZoom/AxisProxy} If not found, return null/undefined.\n   */\n  getAxisProxy: function (dimName, axisIndex) {\n    return this._axisProxies[dimName + '_' + axisIndex];\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/model/Model} If not found, return null/undefined.\n   */\n  getAxisModel: function (dimName, axisIndex) {\n    var axisProxy = this.getAxisProxy(dimName, axisIndex);\n    return axisProxy && axisProxy.getAxisModel();\n  },\n\n  /**\n   * If not specified, set to undefined.\n   *\n   * @public\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   * @param {boolean} [ignoreUpdateRangeUsg=false]\n   */\n  setRawRange: function (opt, ignoreUpdateRangeUsg) {\n    var option = this.option;\n    each([['start', 'startValue'], ['end', 'endValue']], function (names) {\n      // If only one of 'start' and 'startValue' is not null/undefined, the other\n      // should be cleared, which enable clear the option.\n      // If both of them are not set, keep option with the original value, which\n      // enable use only set start but not set end when calling `dispatchAction`.\n      // The same as 'end' and 'endValue'.\n      if (opt[names[0]] != null || opt[names[1]] != null) {\n        option[names[0]] = opt[names[0]];\n        option[names[1]] = opt[names[1]];\n      }\n    }, this);\n    !ignoreUpdateRangeUsg && updateRangeUse(this, opt);\n  },\n\n  /**\n   * @public\n   * @return {Array.<number>} [startPercent, endPercent]\n   */\n  getPercentRange: function () {\n    var axisProxy = this.findRepresentativeAxisProxy();\n\n    if (axisProxy) {\n      return axisProxy.getDataPercentWindow();\n    }\n  },\n\n  /**\n   * @public\n   * For example, chart.getModel().getComponent('dataZoom').getValueRange('y', 0);\n   *\n   * @param {string} [axisDimName]\n   * @param {number} [axisIndex]\n   * @return {Array.<number>} [startValue, endValue] value can only be '-' or finite number.\n   */\n  getValueRange: function (axisDimName, axisIndex) {\n    if (axisDimName == null && axisIndex == null) {\n      var axisProxy = this.findRepresentativeAxisProxy();\n\n      if (axisProxy) {\n        return axisProxy.getDataValueWindow();\n      }\n    } else {\n      return this.getAxisProxy(axisDimName, axisIndex).getDataValueWindow();\n    }\n  },\n\n  /**\n   * @public\n   * @param {module:echarts/model/Model} [axisModel] If axisModel given, find axisProxy\n   *      corresponding to the axisModel\n   * @return {module:echarts/component/dataZoom/AxisProxy}\n   */\n  findRepresentativeAxisProxy: function (axisModel) {\n    if (axisModel) {\n      return axisModel.__dzAxisProxy;\n    } // Find the first hosted axisProxy\n\n\n    var axisProxies = this._axisProxies;\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    } // If no hosted axis find not hosted axisProxy.\n    // Consider this case: dataZoomModel1 and dataZoomModel2 control the same axis,\n    // and the option.start or option.end settings are different. The percentRange\n    // should follow axisProxy.\n    // (We encounter this problem in toolbox data zoom.)\n\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && !axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    }\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getRangePropMode: function () {\n    return this._rangePropMode.slice();\n  }\n});\n\nfunction retrieveRaw(option) {\n  var ret = {};\n  each(['start', 'end', 'startValue', 'endValue', 'throttle'], function (name) {\n    option.hasOwnProperty(name) && (ret[name] = option[name]);\n  });\n  return ret;\n}\n\nfunction updateRangeUse(dataZoomModel, rawOption) {\n  var rangePropMode = dataZoomModel._rangePropMode;\n  var rangeModeInOption = dataZoomModel.get('rangeMode');\n  each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n    var percentSpecified = rawOption[names[0]] != null;\n    var valueSpecified = rawOption[names[1]] != null;\n\n    if (percentSpecified && !valueSpecified) {\n      rangePropMode[index] = 'percent';\n    } else if (!percentSpecified && valueSpecified) {\n      rangePropMode[index] = 'value';\n    } else if (rangeModeInOption) {\n      rangePropMode[index] = rangeModeInOption[index];\n    } else if (percentSpecified) {\n      // percentSpecified && valueSpecified\n      rangePropMode[index] = 'percent';\n    } // else remain its original setting.\n\n  });\n}\n\nvar _default = DataZoomModel;\nmodule.exports = _default;","var ComponentView = require(\"../../view/Component\");\n\nvar _default = ComponentView.extend({\n  type: 'dataZoom',\n  render: function (dataZoomModel, ecModel, api, payload) {\n    this.dataZoomModel = dataZoomModel;\n    this.ecModel = ecModel;\n    this.api = api;\n  },\n\n  /**\n   * Find the first target coordinate system.\n   *\n   * @protected\n   * @return {Object} {\n   *                   grid: [\n   *                       {model: coord0, axisModels: [axis1, axis3], coordIndex: 1},\n   *                       {model: coord1, axisModels: [axis0, axis2], coordIndex: 0},\n   *                       ...\n   *                   ],  // cartesians must not be null/undefined.\n   *                   polar: [\n   *                       {model: coord0, axisModels: [axis4], coordIndex: 0},\n   *                       ...\n   *                   ],  // polars must not be null/undefined.\n   *                   singleAxis: [\n   *                       {model: coord0, axisModels: [], coordIndex: 0}\n   *                   ]\n   */\n  getTargetCoordInfo: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var ecModel = this.ecModel;\n    var coordSysLists = {};\n    dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n      var axisModel = ecModel.getComponent(dimNames.axis, axisIndex);\n\n      if (axisModel) {\n        var coordModel = axisModel.getCoordSysModel();\n        coordModel && save(coordModel, axisModel, coordSysLists[coordModel.mainType] || (coordSysLists[coordModel.mainType] = []), coordModel.componentIndex);\n      }\n    }, this);\n\n    function save(coordModel, axisModel, store, coordIndex) {\n      var item;\n\n      for (var i = 0; i < store.length; i++) {\n        if (store[i].model === coordModel) {\n          item = store[i];\n          break;\n        }\n      }\n\n      if (!item) {\n        store.push(item = {\n          model: coordModel,\n          axisModels: [],\n          coordIndex: coordIndex\n        });\n      }\n\n      item.axisModels.push(axisModel);\n    }\n\n    return coordSysLists;\n  }\n});\n\nmodule.exports = _default;","var guid = require(\"./core/guid\");\n\nvar env = require(\"./core/env\");\n\nvar zrUtil = require(\"./core/util\");\n\nvar Handler = require(\"./Handler\");\n\nvar Storage = require(\"./Storage\");\n\nvar Painter = require(\"./Painter\");\n\nvar Animation = require(\"./animation/Animation\");\n\nvar HandlerProxy = require(\"./dom/HandlerProxy\");\n\n/*!\n* ZRender, a high performance 2d drawing library.\n*\n* Copyright (c) 2013, Baidu Inc.\n* All rights reserved.\n*\n* LICENSE\n* https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n*/\nvar useVML = !env.canvasSupported;\nvar painterCtors = {\n  canvas: Painter\n};\nvar instances = {}; // ZRender实例map索引\n\n/**\n * @type {string}\n */\n\nvar version = '3.7.4';\n/**\n * Initializing a zrender instance\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n * @return {module:zrender/ZRender}\n */\n\nfunction init(dom, opts) {\n  var zr = new ZRender(guid(), dom, opts);\n  instances[zr.id] = zr;\n  return zr;\n}\n/**\n * Dispose zrender instance\n * @param {module:zrender/ZRender} zr\n */\n\n\nfunction dispose(zr) {\n  if (zr) {\n    zr.dispose();\n  } else {\n    for (var key in instances) {\n      if (instances.hasOwnProperty(key)) {\n        instances[key].dispose();\n      }\n    }\n\n    instances = {};\n  }\n\n  return this;\n}\n/**\n * Get zrender instance by id\n * @param {string} id zrender instance id\n * @return {module:zrender/ZRender}\n */\n\n\nfunction getInstance(id) {\n  return instances[id];\n}\n\nfunction registerPainter(name, Ctor) {\n  painterCtors[name] = Ctor;\n}\n\nfunction delInstance(id) {\n  delete instances[id];\n}\n/**\n * @module zrender/ZRender\n */\n\n/**\n * @constructor\n * @alias module:zrender/ZRender\n * @param {string} id\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n */\n\n\nvar ZRender = function (id, dom, opts) {\n  opts = opts || {};\n  /**\n   * @type {HTMLDomElement}\n   */\n\n  this.dom = dom;\n  /**\n   * @type {string}\n   */\n\n  this.id = id;\n  var self = this;\n  var storage = new Storage();\n  var rendererType = opts.renderer; // TODO WebGL\n\n  if (useVML) {\n    if (!painterCtors.vml) {\n      throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n    }\n\n    rendererType = 'vml';\n  } else if (!rendererType || !painterCtors[rendererType]) {\n    rendererType = 'canvas';\n  }\n\n  var painter = new painterCtors[rendererType](dom, storage, opts);\n  this.storage = storage;\n  this.painter = painter;\n  var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n  this.handler = new Handler(storage, painter, handerProxy, painter.root);\n  /**\n   * @type {module:zrender/animation/Animation}\n   */\n\n  this.animation = new Animation({\n    stage: {\n      update: zrUtil.bind(this.flush, this)\n    }\n  });\n  this.animation.start();\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._needsRefresh; // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n  // FIXME 有点ugly\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n    el && el.removeSelfFromZr(self);\n  };\n\n  storage.addToStorage = function (el) {\n    oldAddToStorage.call(storage, el);\n    el.addSelfToZr(self);\n  };\n};\n\nZRender.prototype = {\n  constructor: ZRender,\n\n  /**\n   * 获取实例唯一标识\n   * @return {string}\n   */\n  getId: function () {\n    return this.id;\n  },\n\n  /**\n   * 添加元素\n   * @param  {module:zrender/Element} el\n   */\n  add: function (el) {\n    this.storage.addRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * 删除元素\n   * @param  {module:zrender/Element} el\n   */\n  remove: function (el) {\n    this.storage.delRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Change configuration of layer\n   * @param {string} zLevel\n   * @param {Object} config\n   * @param {string} [config.clearColor=0] Clear color\n   * @param {string} [config.motionBlur=false] If enable motion blur\n   * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n  */\n  configLayer: function (zLevel, config) {\n    this.painter.configLayer(zLevel, config);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Repaint the canvas immediately\n   */\n  refreshImmediately: function () {\n    // var start = new Date();\n    // Clear needsRefresh ahead to avoid something wrong happens in refresh\n    // Or it will cause zrender refreshes again and again.\n    this._needsRefresh = false;\n    this.painter.refresh();\n    /**\n     * Avoid trigger zr.refresh in Element#beforeUpdate hook\n     */\n\n    this._needsRefresh = false; // var end = new Date();\n    // var log = document.getElementById('log');\n    // if (log) {\n    //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n    // }\n  },\n\n  /**\n   * Mark and repaint the canvas in the next frame of browser\n   */\n  refresh: function () {\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Perform all refresh\n   */\n  flush: function () {\n    if (this._needsRefresh) {\n      this.refreshImmediately();\n    }\n\n    if (this._needsRefreshHover) {\n      this.refreshHoverImmediately();\n    }\n  },\n\n  /**\n   * Add element to hover layer\n   * @param  {module:zrender/Element} el\n   * @param {Object} style\n   */\n  addHover: function (el, style) {\n    if (this.painter.addHover) {\n      this.painter.addHover(el, style);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Add element from hover layer\n   * @param  {module:zrender/Element} el\n   */\n  removeHover: function (el) {\n    if (this.painter.removeHover) {\n      this.painter.removeHover(el);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Clear all hover elements in hover layer\n   * @param  {module:zrender/Element} el\n   */\n  clearHover: function () {\n    if (this.painter.clearHover) {\n      this.painter.clearHover();\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Refresh hover in next frame\n   */\n  refreshHover: function () {\n    this._needsRefreshHover = true;\n  },\n\n  /**\n   * Refresh hover immediately\n   */\n  refreshHoverImmediately: function () {\n    this._needsRefreshHover = false;\n    this.painter.refreshHover && this.painter.refreshHover();\n  },\n\n  /**\n   * Resize the canvas.\n   * Should be invoked when container size is changed\n   * @param {Object} [opts]\n   * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n   * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n   */\n  resize: function (opts) {\n    opts = opts || {};\n    this.painter.resize(opts.width, opts.height);\n    this.handler.resize();\n  },\n\n  /**\n   * Stop and clear all animation immediately\n   */\n  clearAnimation: function () {\n    this.animation.clear();\n  },\n\n  /**\n   * Get container width\n   */\n  getWidth: function () {\n    return this.painter.getWidth();\n  },\n\n  /**\n   * Get container height\n   */\n  getHeight: function () {\n    return this.painter.getHeight();\n  },\n\n  /**\n   * Export the canvas as Base64 URL\n   * @param {string} type\n   * @param {string} [backgroundColor='#fff']\n   * @return {string} Base64 URL\n   */\n  // toDataURL: function(type, backgroundColor) {\n  //     return this.painter.getRenderedCanvas({\n  //         backgroundColor: backgroundColor\n  //     }).toDataURL(type);\n  // },\n\n  /**\n   * Converting a path to image.\n   * It has much better performance of drawing image rather than drawing a vector path.\n   * @param {module:zrender/graphic/Path} e\n   * @param {number} width\n   * @param {number} height\n   */\n  pathToImage: function (e, dpr) {\n    return this.painter.pathToImage(e, dpr);\n  },\n\n  /**\n   * Set default cursor\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    this.handler.setCursorStyle(cursorStyle);\n  },\n\n  /**\n   * Find hovered element\n   * @param {number} x\n   * @param {number} y\n   * @return {Object} {target, topTarget}\n   */\n  findHover: function (x, y) {\n    return this.handler.findHover(x, y);\n  },\n\n  /**\n   * Bind event\n   *\n   * @param {string} eventName Event name\n   * @param {Function} eventHandler Handler function\n   * @param {Object} [context] Context object\n   */\n  on: function (eventName, eventHandler, context) {\n    this.handler.on(eventName, eventHandler, context);\n  },\n\n  /**\n   * Unbind event\n   * @param {string} eventName Event name\n   * @param {Function} [eventHandler] Handler function\n   */\n  off: function (eventName, eventHandler) {\n    this.handler.off(eventName, eventHandler);\n  },\n\n  /**\n   * Trigger event manually\n   *\n   * @param {string} eventName Event name\n   * @param {event=} event Event object\n   */\n  trigger: function (eventName, event) {\n    this.handler.trigger(eventName, event);\n  },\n\n  /**\n   * Clear all objects and the canvas.\n   */\n  clear: function () {\n    this.storage.delRoot();\n    this.painter.clear();\n  },\n\n  /**\n   * Dispose self.\n   */\n  dispose: function () {\n    this.animation.stop();\n    this.clear();\n    this.storage.dispose();\n    this.painter.dispose();\n    this.handler.dispose();\n    this.animation = this.storage = this.painter = this.handler = null;\n    delInstance(this.id);\n  }\n};\nexports.version = version;\nexports.init = init;\nexports.dispose = dispose;\nexports.getInstance = getInstance;\nexports.registerPainter = registerPainter;","var zrUtil = require(\"../core/util\");\n\nvar Element = require(\"../Element\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/container/Group');\n *     var Circle = require('zrender/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n/**\n * @alias module:zrender/graphic/Group\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @extends module:zrender/mixin/Eventful\n */\nvar Group = function (opts) {\n  opts = opts || {};\n  Element.call(this, opts);\n\n  for (var key in opts) {\n    if (opts.hasOwnProperty(key)) {\n      this[key] = opts[key];\n    }\n  }\n\n  this._children = [];\n  this.__storage = null;\n  this.__dirty = true;\n};\n\nGroup.prototype = {\n  constructor: Group,\n  isGroup: true,\n\n  /**\n   * @type {string}\n   */\n  type: 'group',\n\n  /**\n   * 所有子孙元素是否响应鼠标事件\n   * @name module:/zrender/container/Group#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * @return {Array.<module:zrender/Element>}\n   */\n  children: function () {\n    return this._children.slice();\n  },\n\n  /**\n   * 获取指定 index 的儿子节点\n   * @param  {number} idx\n   * @return {module:zrender/Element}\n   */\n  childAt: function (idx) {\n    return this._children[idx];\n  },\n\n  /**\n   * 获取指定名字的儿子节点\n   * @param  {string} name\n   * @return {module:zrender/Element}\n   */\n  childOfName: function (name) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      if (children[i].name === name) {\n        return children[i];\n      }\n    }\n  },\n\n  /**\n   * @return {number}\n   */\n  childCount: function () {\n    return this._children.length;\n  },\n\n  /**\n   * 添加子节点到最后\n   * @param {module:zrender/Element} child\n   */\n  add: function (child) {\n    if (child && child !== this && child.parent !== this) {\n      this._children.push(child);\n\n      this._doAdd(child);\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加子节点在 nextSibling 之前\n   * @param {module:zrender/Element} child\n   * @param {module:zrender/Element} nextSibling\n   */\n  addBefore: function (child, nextSibling) {\n    if (child && child !== this && child.parent !== this && nextSibling && nextSibling.parent === this) {\n      var children = this._children;\n      var idx = children.indexOf(nextSibling);\n\n      if (idx >= 0) {\n        children.splice(idx, 0, child);\n\n        this._doAdd(child);\n      }\n    }\n\n    return this;\n  },\n  _doAdd: function (child) {\n    if (child.parent) {\n      child.parent.remove(child);\n    }\n\n    child.parent = this;\n    var storage = this.__storage;\n    var zr = this.__zr;\n\n    if (storage && storage !== child.__storage) {\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n  },\n\n  /**\n   * 移除子节点\n   * @param {module:zrender/Element} child\n   */\n  remove: function (child) {\n    var zr = this.__zr;\n    var storage = this.__storage;\n    var children = this._children;\n    var idx = zrUtil.indexOf(children, child);\n\n    if (idx < 0) {\n      return this;\n    }\n\n    children.splice(idx, 1);\n    child.parent = null;\n\n    if (storage) {\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n    return this;\n  },\n\n  /**\n   * 移除所有子节点\n   */\n  removeAll: function () {\n    var children = this._children;\n    var storage = this.__storage;\n    var child;\n    var i;\n\n    for (i = 0; i < children.length; i++) {\n      child = children[i];\n\n      if (storage) {\n        storage.delFromStorage(child);\n\n        if (child instanceof Group) {\n          child.delChildrenFromStorage(storage);\n        }\n      }\n\n      child.parent = null;\n    }\n\n    children.length = 0;\n    return this;\n  },\n\n  /**\n   * 遍历所有子节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  eachChild: function (cb, context) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n      cb.call(context, child, i);\n    }\n\n    return this;\n  },\n\n  /**\n   * 深度优先遍历所有子孙节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      cb.call(context, child);\n\n      if (child.type === 'group') {\n        child.traverse(cb, context);\n      }\n    }\n\n    return this;\n  },\n  addChildrenToStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n  },\n  delChildrenFromStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n  },\n  dirty: function () {\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh();\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function (includeChildren) {\n    // TODO Caching\n    var rect = null;\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var children = includeChildren || this._children;\n    var tmpMat = [];\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n\n      if (child.ignore || child.invisible) {\n        continue;\n      }\n\n      var childRect = child.getBoundingRect();\n      var transform = child.getLocalTransform(tmpMat); // TODO\n      // The boundingRect cacluated by transforming original\n      // rect may be bigger than the actual bundingRect when rotation\n      // is used. (Consider a circle rotated aginst its center, where\n      // the actual boundingRect should be the same as that not be\n      // rotated.) But we can not find better approach to calculate\n      // actual boundingRect yet, considering performance.\n\n      if (transform) {\n        tmpRect.copy(childRect);\n        tmpRect.applyTransform(transform);\n        rect = rect || tmpRect.clone();\n        rect.union(tmpRect);\n      } else {\n        rect = rect || childRect.clone();\n        rect.union(childRect);\n      }\n    }\n\n    return rect || tmpRect;\n  }\n};\nzrUtil.inherits(Group, Element);\nvar _default = Group;\nmodule.exports = _default;","var dpr = 1; // If in browser environment\n\nif (typeof window !== 'undefined') {\n  dpr = Math.max(window.devicePixelRatio || 1, 1);\n}\n/**\n * config默认配置项\n * @exports zrender/config\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n/**\n * debug日志选项：catchBrushException为true下有效\n * 0 : 不生成debug数据，发布用\n * 1 : 异常抛出，调试用\n * 2 : 控制台输出，调试用\n */\n\n\nvar debugMode = 0; // retina 屏幕优化\n\nvar devicePixelRatio = dpr;\nexports.debugMode = debugMode;\nexports.devicePixelRatio = devicePixelRatio;","var zrUtil = require(\"../core/util\");\n\nvar Style = require(\"./Style\");\n\nvar Element = require(\"../Element\");\n\nvar RectText = require(\"./mixin/RectText\");\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n/**\n * @alias module:zrender/graphic/Displayable\n * @extends module:zrender/Element\n * @extends module:zrender/graphic/mixin/RectText\n */\nfunction Displayable(opts) {\n  opts = opts || {};\n  Element.call(this, opts); // Extend properties\n\n  for (var name in opts) {\n    if (opts.hasOwnProperty(name) && name !== 'style') {\n      this[name] = opts[name];\n    }\n  }\n  /**\n   * @type {module:zrender/graphic/Style}\n   */\n\n\n  this.style = new Style(opts.style, this);\n  this._rect = null; // Shapes for cascade clipping.\n\n  this.__clipPaths = []; // FIXME Stateful must be mixined after style is setted\n  // Stateful.call(this, opts);\n}\n\nDisplayable.prototype = {\n  constructor: Displayable,\n  type: 'displayable',\n\n  /**\n   * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n   * Dirty flag. From which painter will determine if this displayable object needs brush\n   * @name module:zrender/graphic/Displayable#__dirty\n   * @type {boolean}\n   */\n  __dirty: true,\n\n  /**\n   * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n   * If ignore drawing of the displayable object. Mouse event will still be triggered\n   * @name module:/zrender/graphic/Displayable#invisible\n   * @type {boolean}\n   * @default false\n   */\n  invisible: false,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z: 0,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z2: 0,\n\n  /**\n   * z层level，决定绘画在哪层canvas中\n   * @name module:/zrender/graphic/Displayable#zlevel\n   * @type {number}\n   * @default 0\n   */\n  zlevel: 0,\n\n  /**\n   * 是否可拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  draggable: false,\n\n  /**\n   * 是否正在拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  dragging: false,\n\n  /**\n   * 是否相应鼠标事件\n   * @name module:/zrender/graphic/Displayable#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * If enable culling\n   * @type {boolean}\n   * @default false\n   */\n  culling: false,\n\n  /**\n   * Mouse cursor when hovered\n   * @name module:/zrender/graphic/Displayable#cursor\n   * @type {string}\n   */\n  cursor: 'pointer',\n\n  /**\n   * If hover area is bounding rect\n   * @name module:/zrender/graphic/Displayable#rectHover\n   * @type {string}\n   */\n  rectHover: false,\n\n  /**\n   * Render the element progressively when the value >= 0,\n   * usefull for large data.\n   * @type {number}\n   */\n  progressive: -1,\n  beforeBrush: function (ctx) {},\n  afterBrush: function (ctx) {},\n\n  /**\n   * 图形绘制方法\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  // Interface\n  brush: function (ctx, prevEl) {},\n\n  /**\n   * 获取最小包围盒\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // Interface\n  getBoundingRect: function () {},\n\n  /**\n   * 判断坐标 x, y 是否在图形上\n   * If displayable element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  contain: function (x, y) {\n    return this.rectContain(x, y);\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    cb.call(context, this);\n  },\n\n  /**\n   * 判断坐标 x, y 是否在图形的包围盒上\n   * If bounding rect of element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  rectContain: function (x, y) {\n    var coord = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    return rect.contain(coord[0], coord[1]);\n  },\n\n  /**\n   * 标记图形元素为脏，并且在下一帧重绘\n   * Mark displayable element dirty and refresh next frame\n   */\n  dirty: function () {\n    this.__dirty = true;\n    this._rect = null;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * 图形是否会触发事件\n   * If displayable object binded any event\n   * @return {boolean}\n   */\n  // TODO, 通过 bind 绑定的事件\n  // isSilent: function () {\n  //     return !(\n  //         this.hoverable || this.draggable\n  //         || this.onmousemove || this.onmouseover || this.onmouseout\n  //         || this.onmousedown || this.onmouseup || this.onclick\n  //         || this.ondragenter || this.ondragover || this.ondragleave\n  //         || this.ondrop\n  //     );\n  // },\n\n  /**\n   * Alias for animate('style')\n   * @param {boolean} loop\n   */\n  animateStyle: function (loop) {\n    return this.animate('style', loop);\n  },\n  attrKV: function (key, value) {\n    if (key !== 'style') {\n      Element.prototype.attrKV.call(this, key, value);\n    } else {\n      this.style.set(value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setStyle: function (key, value) {\n    this.style.set(key, value);\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * Use given style object\n   * @param  {Object} obj\n   */\n  useStyle: function (obj) {\n    this.style = new Style(obj, this);\n    this.dirty(false);\n    return this;\n  }\n};\nzrUtil.inherits(Displayable, Element);\nzrUtil.mixin(Displayable, RectText); // zrUtil.mixin(Displayable, Stateful);\n\nvar _default = Displayable;\nmodule.exports = _default;","var _util = require(\"../../core/util\");\n\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar each = _util.each;\nvar normalizeCssArray = _util.normalizeCssArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\n\nvar textContain = require(\"../../contain/text\");\n\nvar roundRectHelper = require(\"./roundRect\");\n\nvar imageHelper = require(\"./image\");\n\n// TODO: Have not support 'start', 'end' yet.\nvar VALID_TEXT_ALIGN = {\n  left: 1,\n  right: 1,\n  center: 1\n};\nvar VALID_TEXT_VERTICAL_ALIGN = {\n  top: 1,\n  bottom: 1,\n  middle: 1\n};\n/**\n * @param {module:zrender/graphic/Style} style\n * @return {module:zrender/graphic/Style} The input style.\n */\n\nfunction normalizeTextStyle(style) {\n  normalizeStyle(style);\n  each(style.rich, normalizeStyle);\n  return style;\n}\n\nfunction normalizeStyle(style) {\n  if (style) {\n    style.font = textContain.makeFont(style);\n    var textAlign = style.textAlign;\n    textAlign === 'middle' && (textAlign = 'center');\n    style.textAlign = textAlign == null || VALID_TEXT_ALIGN[textAlign] ? textAlign : 'left'; // Compatible with textBaseline.\n\n    var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\n    textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\n    style.textVerticalAlign = textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign] ? textVerticalAlign : 'top';\n    var textPadding = style.textPadding;\n\n    if (textPadding) {\n      style.textPadding = normalizeCssArray(style.textPadding);\n    }\n  }\n}\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {string} text\n * @param {module:zrender/graphic/Style} style\n * @param {Object|boolean} [rect] {x, y, width, height}\n *                  If set false, rect text is not used.\n */\n\n\nfunction renderText(hostEl, ctx, text, style, rect) {\n  style.rich ? renderRichText(hostEl, ctx, text, style, rect) : renderPlainText(hostEl, ctx, text, style, rect);\n}\n\nfunction renderPlainText(hostEl, ctx, text, style, rect) {\n  var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);\n  var textPadding = style.textPadding;\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(text, font, textPadding, style.truncate);\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var textLines = contentBlock.lines;\n  var lineHeight = contentBlock.lineHeight;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var textX = baseX;\n  var textY = boxY;\n  var needDrawBg = needDrawBackground(style);\n\n  if (needDrawBg || textPadding) {\n    // Consider performance, do not call getTextWidth util necessary.\n    var textWidth = textContain.getWidth(text, font);\n    var outerWidth = textWidth;\n    textPadding && (outerWidth += textPadding[1] + textPadding[3]);\n    var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n    needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n    if (textPadding) {\n      textX = getTextXForPadding(baseX, textAlign, textPadding);\n      textY += textPadding[0];\n    }\n  }\n\n  setCtx(ctx, 'textAlign', textAlign || 'left'); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle'); // Always set shadowBlur and shadowOffset to avoid leak from displayable.\n\n  setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0); // `textBaseline` is set as 'middle'.\n\n  textY += lineHeight / 2;\n  var textStrokeWidth = style.textStrokeWidth;\n  var textStroke = getStroke(style.textStroke, textStrokeWidth);\n  var textFill = getFill(style.textFill);\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n  }\n\n  for (var i = 0; i < textLines.length; i++) {\n    // Fill after stroke so the outline will not cover the main part.\n    textStroke && ctx.strokeText(textLines[i], textX, textY);\n    textFill && ctx.fillText(textLines[i], textX, textY);\n    textY += lineHeight;\n  }\n}\n\nfunction renderRichText(hostEl, ctx, text, style, rect) {\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\n  }\n\n  drawRichText(hostEl, ctx, contentBlock, style, rect);\n}\n\nfunction drawRichText(hostEl, ctx, contentBlock, style, rect) {\n  var contentWidth = contentBlock.width;\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var textPadding = style.textPadding;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var xLeft = boxX;\n  var lineTop = boxY;\n\n  if (textPadding) {\n    xLeft += textPadding[3];\n    lineTop += textPadding[0];\n  }\n\n  var xRight = xLeft + contentWidth;\n  needDrawBackground(style) && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n  for (var i = 0; i < contentBlock.lines.length; i++) {\n    var line = contentBlock.lines[i];\n    var tokens = line.tokens;\n    var tokenCount = tokens.length;\n    var lineHeight = line.lineHeight;\n    var usedWidth = line.width;\n    var leftIndex = 0;\n    var lineXLeft = xLeft;\n    var lineXRight = xRight;\n    var rightIndex = tokenCount - 1;\n    var token;\n\n    while (leftIndex < tokenCount && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\n      usedWidth -= token.width;\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    while (rightIndex >= 0 && (token = tokens[rightIndex], token.textAlign === 'right')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\n      usedWidth -= token.width;\n      lineXRight -= token.width;\n      rightIndex--;\n    } // The other tokens are placed as textAlign 'center' if there is enough space.\n\n\n    lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\n\n    while (leftIndex <= rightIndex) {\n      token = tokens[leftIndex]; // Consider width specified by user, use 'center' rather than 'left'.\n\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    lineTop += lineHeight;\n  }\n}\n\nfunction applyTextRotation(ctx, style, rect, x, y) {\n  // textRotation only apply in RectText.\n  if (rect && style.textRotation) {\n    var origin = style.textOrigin;\n\n    if (origin === 'center') {\n      x = rect.width / 2 + rect.x;\n      y = rect.height / 2 + rect.y;\n    } else if (origin) {\n      x = origin[0] + rect.x;\n      y = origin[1] + rect.y;\n    }\n\n    ctx.translate(x, y); // Positive: anticlockwise\n\n    ctx.rotate(-style.textRotation);\n    ctx.translate(-x, -y);\n  }\n}\n\nfunction placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\n  var tokenStyle = style.rich[token.styleName] || {}; // 'ctx.textBaseline' is always set as 'middle', for sake of\n  // the bias of \"Microsoft YaHei\".\n\n  var textVerticalAlign = token.textVerticalAlign;\n  var y = lineTop + lineHeight / 2;\n\n  if (textVerticalAlign === 'top') {\n    y = lineTop + token.height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y = lineTop + lineHeight - token.height / 2;\n  }\n\n  !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(hostEl, ctx, tokenStyle, textAlign === 'right' ? x - token.width : textAlign === 'center' ? x - token.width / 2 : x, y - token.height / 2, token.width, token.height);\n  var textPadding = token.textPadding;\n\n  if (textPadding) {\n    x = getTextXForPadding(x, textAlign, textPadding);\n    y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\n  }\n\n  setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\n  setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\n  setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\n  setCtx(ctx, 'textAlign', textAlign); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle');\n  setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\n  var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textStrokeWidth);\n  var textFill = getFill(tokenStyle.textFill || style.textFill);\n  var textStrokeWidth = retrieve2(tokenStyle.textStrokeWidth, style.textStrokeWidth); // Fill after stroke so the outline will not cover the main part.\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n    ctx.strokeText(token.text, x, y);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n    ctx.fillText(token.text, x, y);\n  }\n}\n\nfunction needDrawBackground(style) {\n  return style.textBackgroundColor || style.textBorderWidth && style.textBorderColor;\n} // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}\n// shape: {x, y, width, height}\n\n\nfunction drawBackground(hostEl, ctx, style, x, y, width, height) {\n  var textBackgroundColor = style.textBackgroundColor;\n  var textBorderWidth = style.textBorderWidth;\n  var textBorderColor = style.textBorderColor;\n  var isPlainBg = isString(textBackgroundColor);\n  setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\n\n  if (isPlainBg || textBorderWidth && textBorderColor) {\n    ctx.beginPath();\n    var textBorderRadius = style.textBorderRadius;\n\n    if (!textBorderRadius) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        r: textBorderRadius\n      });\n    }\n\n    ctx.closePath();\n  }\n\n  if (isPlainBg) {\n    setCtx(ctx, 'fillStyle', textBackgroundColor);\n    ctx.fill();\n  } else if (isObject(textBackgroundColor)) {\n    var image = textBackgroundColor.image;\n    image = imageHelper.createOrUpdateImage(image, null, hostEl, onBgImageLoaded, textBackgroundColor);\n\n    if (image && imageHelper.isImageReady(image)) {\n      ctx.drawImage(image, x, y, width, height);\n    }\n  }\n\n  if (textBorderWidth && textBorderColor) {\n    setCtx(ctx, 'lineWidth', textBorderWidth);\n    setCtx(ctx, 'strokeStyle', textBorderColor);\n    ctx.stroke();\n  }\n}\n\nfunction onBgImageLoaded(image, textBackgroundColor) {\n  // Replace image, so that `contain/text.js#parseRichText`\n  // will get correct result in next tick.\n  textBackgroundColor.image = image;\n}\n\nfunction getBoxPosition(blockHeiht, style, rect) {\n  var baseX = style.x || 0;\n  var baseY = style.y || 0;\n  var textAlign = style.textAlign;\n  var textVerticalAlign = style.textVerticalAlign; // Text position represented by coord\n\n  if (rect) {\n    var textPosition = style.textPosition;\n\n    if (textPosition instanceof Array) {\n      // Percent\n      baseX = rect.x + parsePercent(textPosition[0], rect.width);\n      baseY = rect.y + parsePercent(textPosition[1], rect.height);\n    } else {\n      var res = textContain.adjustTextPositionOnRect(textPosition, rect, style.textDistance);\n      baseX = res.x;\n      baseY = res.y; // Default align and baseline when has textPosition\n\n      textAlign = textAlign || res.textAlign;\n      textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\n    } // textOffset is only support in RectText, otherwise\n    // we have to adjust boundingRect for textOffset.\n\n\n    var textOffset = style.textOffset;\n\n    if (textOffset) {\n      baseX += textOffset[0];\n      baseY += textOffset[1];\n    }\n  }\n\n  return {\n    baseX: baseX,\n    baseY: baseY,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction setCtx(ctx, prop, value) {\n  // FIXME ??? performance try\n  // if (ctx.__currentValues[prop] !== value) {\n  // ctx[prop] = ctx.__currentValues[prop] = value;\n  ctx[prop] = value; // }\n\n  return ctx[prop];\n}\n/**\n * @param {string} [stroke] If specified, do not check style.textStroke.\n * @param {string} [lineWidth] If specified, do not check style.textStroke.\n * @param {number} style\n */\n\n\nfunction getStroke(stroke, lineWidth) {\n  return stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none' ? null // TODO pattern and gradient?\n  : stroke.image || stroke.colorStops ? '#000' : stroke;\n}\n\nfunction getFill(fill) {\n  return fill == null || fill === 'none' ? null // TODO pattern and gradient?\n  : fill.image || fill.colorStops ? '#000' : fill;\n}\n\nfunction parsePercent(value, maxValue) {\n  if (typeof value === 'string') {\n    if (value.lastIndexOf('%') >= 0) {\n      return parseFloat(value) / 100 * maxValue;\n    }\n\n    return parseFloat(value);\n  }\n\n  return value;\n}\n\nfunction getTextXForPadding(x, textAlign, textPadding) {\n  return textAlign === 'right' ? x - textPadding[1] : textAlign === 'center' ? x + textPadding[3] / 2 - textPadding[1] / 2 : x + textPadding[3];\n}\n/**\n * @param {string} text\n * @param {module:zrender/Style} style\n * @return {boolean}\n */\n\n\nfunction needDrawText(text, style) {\n  return text != null && (text || style.textBackgroundColor || style.textBorderWidth && style.textBorderColor || style.textPadding);\n}\n\nexports.normalizeTextStyle = normalizeTextStyle;\nexports.renderText = renderText;\nexports.getStroke = getStroke;\nexports.getFill = getFill;\nexports.needDrawText = needDrawText;","/**\n * @param {Array.<Object>} colorStops\n */\nvar Gradient = function (colorStops) {\n  this.colorStops = colorStops || [];\n};\n\nGradient.prototype = {\n  constructor: Gradient,\n  addColorStop: function (offset, color) {\n    this.colorStops.push({\n      offset: offset,\n      color: color\n    });\n  }\n};\nvar _default = Gradient;\nmodule.exports = _default;","var clazzUtil = require(\"../util/clazz\");\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n/**\n * @param {Object} [setting]\n */\nfunction Scale(setting) {\n  this._setting = setting || {};\n  /**\n   * Extent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._extent = [Infinity, -Infinity];\n  /**\n   * Step is calculated in adjustExtent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._interval = 0;\n  this.init && this.init.apply(this, arguments);\n}\n/**\n * Parse input val to valid inner number.\n * @param {*} val\n * @return {number}\n */\n\n\nScale.prototype.parse = function (val) {\n  // Notice: This would be a trap here, If the implementation\n  // of this method depends on extent, and this method is used\n  // before extent set (like in dataZoom), it would be wrong.\n  // Nevertheless, parse does not depend on extent generally.\n  return val;\n};\n\nScale.prototype.getSetting = function (name) {\n  return this._setting[name];\n};\n\nScale.prototype.contain = function (val) {\n  var extent = this._extent;\n  return val >= extent[0] && val <= extent[1];\n};\n/**\n * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.normalize = function (val) {\n  var extent = this._extent;\n\n  if (extent[1] === extent[0]) {\n    return 0.5;\n  }\n\n  return (val - extent[0]) / (extent[1] - extent[0]);\n};\n/**\n * Scale normalized value\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.scale = function (val) {\n  var extent = this._extent;\n  return val * (extent[1] - extent[0]) + extent[0];\n};\n/**\n * Set extent from data\n * @param {Array.<number>} other\n */\n\n\nScale.prototype.unionExtent = function (other) {\n  var extent = this._extent;\n  other[0] < extent[0] && (extent[0] = other[0]);\n  other[1] > extent[1] && (extent[1] = other[1]); // not setExtent because in log axis it may transformed to power\n  // this.setExtent(extent[0], extent[1]);\n};\n/**\n * Set extent from data\n * @param {module:echarts/data/List} data\n * @param {string} dim\n */\n\n\nScale.prototype.unionExtentFromData = function (data, dim) {\n  this.unionExtent(data.getDataExtent(dim, true));\n};\n/**\n * Get extent\n * @return {Array.<number>}\n */\n\n\nScale.prototype.getExtent = function () {\n  return this._extent.slice();\n};\n/**\n * Set extent\n * @param {number} start\n * @param {number} end\n */\n\n\nScale.prototype.setExtent = function (start, end) {\n  var thisExtent = this._extent;\n\n  if (!isNaN(start)) {\n    thisExtent[0] = start;\n  }\n\n  if (!isNaN(end)) {\n    thisExtent[1] = end;\n  }\n};\n/**\n * @return {Array.<string>}\n */\n\n\nScale.prototype.getTicksLabels = function () {\n  var labels = [];\n  var ticks = this.getTicks();\n\n  for (var i = 0; i < ticks.length; i++) {\n    labels.push(this.getLabel(ticks[i]));\n  }\n\n  return labels;\n};\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\n\n\nScale.prototype.isBlank = function () {\n  return this._isBlank;\n},\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\nScale.prototype.setBlank = function (isBlank) {\n  this._isBlank = isBlank;\n};\nclazzUtil.enableClassExtend(Scale);\nclazzUtil.enableClassManagement(Scale, {\n  registerWhenExtend: true\n});\nvar _default = Scale;\nmodule.exports = _default;","var numberUtil = require(\"../util/number\");\n\nvar formatUtil = require(\"../util/format\");\n\nvar Scale = require(\"./Scale\");\n\nvar helper = require(\"./helper\");\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\nvar roundNumber = numberUtil.round;\n/**\n * @alias module:echarts/coord/scale/Interval\n * @constructor\n */\n\nvar IntervalScale = Scale.extend({\n  type: 'interval',\n  _interval: 0,\n  _intervalPrecision: 2,\n  setExtent: function (start, end) {\n    var thisExtent = this._extent; //start,end may be a Number like '25',so...\n\n    if (!isNaN(start)) {\n      thisExtent[0] = parseFloat(start);\n    }\n\n    if (!isNaN(end)) {\n      thisExtent[1] = parseFloat(end);\n    }\n  },\n  unionExtent: function (other) {\n    var extent = this._extent;\n    other[0] < extent[0] && (extent[0] = other[0]);\n    other[1] > extent[1] && (extent[1] = other[1]); // unionExtent may called by it's sub classes\n\n    IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n  },\n\n  /**\n   * Get interval\n   */\n  getInterval: function () {\n    return this._interval;\n  },\n\n  /**\n   * Set interval\n   */\n  setInterval: function (interval) {\n    this._interval = interval; // Dropped auto calculated niceExtent and use user setted extent\n    // We assume user wan't to set both interval, min, max to get a better result\n\n    this._niceExtent = this._extent.slice();\n    this._intervalPrecision = helper.getIntervalPrecision(interval);\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    return helper.intervalScaleGetTicks(this._interval, this._extent, this._niceExtent, this._intervalPrecision);\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getTicksLabels: function () {\n    var labels = [];\n    var ticks = this.getTicks();\n\n    for (var i = 0; i < ticks.length; i++) {\n      labels.push(this.getLabel(ticks[i]));\n    }\n\n    return labels;\n  },\n\n  /**\n   * @param {number} data\n   * @param {Object} [opt]\n   * @param {number|string} [opt.precision] If 'auto', use nice presision.\n   * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n   * @return {string}\n   */\n  getLabel: function (data, opt) {\n    if (data == null) {\n      return '';\n    }\n\n    var precision = opt && opt.precision;\n\n    if (precision == null) {\n      precision = numberUtil.getPrecisionSafe(data) || 0;\n    } else if (precision === 'auto') {\n      // Should be more precise then tick.\n      precision = this._intervalPrecision;\n    } // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n    // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n\n\n    data = roundNumber(data, precision, true);\n    return formatUtil.addCommas(data);\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   *\n   * @param {number} [splitNumber = 5] Desired number of ticks\n   * @param {number} [minInterval]\n   * @param {number} [maxInterval]\n   */\n  niceTicks: function (splitNumber, minInterval, maxInterval) {\n    splitNumber = splitNumber || 5;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (!isFinite(span)) {\n      return;\n    } // User may set axis min 0 and data are all negative\n    // FIXME If it needs to reverse ?\n\n\n    if (span < 0) {\n      span = -span;\n      extent.reverse();\n    }\n\n    var result = helper.intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval);\n    this._intervalPrecision = result.intervalPrecision;\n    this._interval = result.interval;\n    this._niceExtent = result.niceTickExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @param {Object} opt\n   * @param {number} [opt.splitNumber = 5] Given approx tick number\n   * @param {boolean} [opt.fixMin=false]\n   * @param {boolean} [opt.fixMax=false]\n   * @param {boolean} [opt.minInterval]\n   * @param {boolean} [opt.maxInterval]\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      if (extent[0] !== 0) {\n        // Expand extent\n        var expandSize = extent[0]; // In the fowllowing case\n        //      Axis has been fixed max 100\n        //      Plus data are all 100 and axis extent are [100, 100].\n        // Extend to the both side will cause expanded max is larger than fixed max.\n        // So only expand to the smaller side.\n\n        if (!opt.fixMax) {\n          extent[1] += expandSize / 2;\n          extent[0] -= expandSize / 2;\n        } else {\n          extent[0] -= expandSize / 2;\n        }\n      } else {\n        extent[1] = 1;\n      }\n    }\n\n    var span = extent[1] - extent[0]; // If there are no data and extent are [Infinity, -Infinity]\n\n    if (!isFinite(span)) {\n      extent[0] = 0;\n      extent[1] = 1;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n    }\n  }\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nIntervalScale.create = function () {\n  return new IntervalScale();\n};\n\nvar _default = IntervalScale;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _labelHelper = require(\"./labelHelper\");\n\nvar findLabelValueDim = _labelHelper.findLabelValueDim;\n\n/**\n * @module echarts/chart/helper/Symbol\n */\nfunction getSymbolSize(data, idx) {\n  var symbolSize = data.getItemVisual(idx, 'symbolSize');\n  return symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\n}\n\nfunction getScale(symbolSize) {\n  return [symbolSize[0] / 2, symbolSize[1] / 2];\n}\n/**\n * @constructor\n * @alias {module:echarts/chart/helper/Symbol}\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction SymbolClz(data, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.updateData(data, idx, seriesScope);\n}\n\nvar symbolProto = SymbolClz.prototype;\n\nfunction driftSymbol(dx, dy) {\n  this.parent.drift(dx, dy);\n}\n\nsymbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n  // Remove paths created before\n  this.removeAll();\n  var color = data.getItemVisual(idx, 'color'); // var symbolPath = createSymbol(\n  //     symbolType, -0.5, -0.5, 1, 1, color\n  // );\n  // If width/height are set too small (e.g., set to 1) on ios10\n  // and macOS Sierra, a circle stroke become a rect, no matter what\n  // the scale is set. So we set width/height as 2. See #4150.\n\n  var symbolPath = createSymbol(symbolType, -1, -1, 2, 2, color);\n  symbolPath.attr({\n    z2: 100,\n    culling: true,\n    scale: getScale(symbolSize)\n  }); // Rewrite drift method\n\n  symbolPath.drift = driftSymbol;\n  this._symbolType = symbolType;\n  this.add(symbolPath);\n};\n/**\n * Stop animation\n * @param {boolean} toLastFrame\n */\n\n\nsymbolProto.stopSymbolAnimation = function (toLastFrame) {\n  this.childAt(0).stopAnimation(toLastFrame);\n};\n/**\n * FIXME:\n * Caution: This method breaks the encapsulation of this module,\n * but it indeed brings convenience. So do not use the method\n * unless you detailedly know all the implements of `Symbol`,\n * especially animation.\n *\n * Get symbol path element.\n */\n\n\nsymbolProto.getSymbolPath = function () {\n  return this.childAt(0);\n};\n/**\n * Get scale(aka, current symbol size).\n * Including the change caused by animation\n */\n\n\nsymbolProto.getScale = function () {\n  return this.childAt(0).scale;\n};\n/**\n * Highlight symbol\n */\n\n\nsymbolProto.highlight = function () {\n  this.childAt(0).trigger('emphasis');\n};\n/**\n * Downplay symbol\n */\n\n\nsymbolProto.downplay = function () {\n  this.childAt(0).trigger('normal');\n};\n/**\n * @param {number} zlevel\n * @param {number} z\n */\n\n\nsymbolProto.setZ = function (zlevel, z) {\n  var symbolPath = this.childAt(0);\n  symbolPath.zlevel = zlevel;\n  symbolPath.z = z;\n};\n\nsymbolProto.setDraggable = function (draggable) {\n  var symbolPath = this.childAt(0);\n  symbolPath.draggable = draggable;\n  symbolPath.cursor = draggable ? 'move' : 'pointer';\n};\n/**\n * Update symbol properties\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Object} [seriesScope]\n * @param {Object} [seriesScope.itemStyle]\n * @param {Object} [seriesScope.hoverItemStyle]\n * @param {Object} [seriesScope.symbolRotate]\n * @param {Object} [seriesScope.symbolOffset]\n * @param {module:echarts/model/Model} [seriesScope.labelModel]\n * @param {module:echarts/model/Model} [seriesScope.hoverLabelModel]\n * @param {boolean} [seriesScope.hoverAnimation]\n * @param {Object} [seriesScope.cursorStyle]\n * @param {module:echarts/model/Model} [seriesScope.itemModel]\n * @param {string} [seriesScope.symbolInnerColor]\n * @param {Object} [seriesScope.fadeIn=false]\n */\n\n\nsymbolProto.updateData = function (data, idx, seriesScope) {\n  this.silent = false;\n  var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n  var seriesModel = data.hostModel;\n  var symbolSize = getSymbolSize(data, idx);\n  var isInit = symbolType !== this._symbolType;\n\n  if (isInit) {\n    this._createSymbol(symbolType, data, idx, symbolSize);\n  } else {\n    var symbolPath = this.childAt(0);\n    symbolPath.silent = false;\n    graphic.updateProps(symbolPath, {\n      scale: getScale(symbolSize)\n    }, seriesModel, idx);\n  }\n\n  this._updateCommon(data, idx, symbolSize, seriesScope);\n\n  if (isInit) {\n    var symbolPath = this.childAt(0);\n    var fadeIn = seriesScope && seriesScope.fadeIn;\n    var target = {\n      scale: symbolPath.scale.slice()\n    };\n    fadeIn && (target.style = {\n      opacity: symbolPath.style.opacity\n    });\n    symbolPath.scale = [0, 0];\n    fadeIn && (symbolPath.style.opacity = 0);\n    graphic.initProps(symbolPath, target, seriesModel, idx);\n  }\n\n  this._seriesModel = seriesModel;\n}; // Update common properties\n\n\nvar normalStyleAccessPath = ['itemStyle', 'normal'];\nvar emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\nvar normalLabelAccessPath = ['label', 'normal'];\nvar emphasisLabelAccessPath = ['label', 'emphasis'];\n/**\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Array.<number>} symbolSize\n * @param {Object} [seriesScope]\n */\n\nsymbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n  var symbolPath = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var color = data.getItemVisual(idx, 'color'); // Reset style\n\n  if (symbolPath.type !== 'image') {\n    symbolPath.useStyle({\n      strokeNoScale: true\n    });\n  }\n\n  var itemStyle = seriesScope && seriesScope.itemStyle;\n  var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n  var symbolRotate = seriesScope && seriesScope.symbolRotate;\n  var symbolOffset = seriesScope && seriesScope.symbolOffset;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n  var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n  var cursorStyle = seriesScope && seriesScope.cursorStyle;\n\n  if (!seriesScope || data.hasItemOption) {\n    var itemModel = seriesScope && seriesScope.itemModel ? seriesScope.itemModel : data.getItemModel(idx); // Color must be excluded.\n    // Because symbol provide setColor individually to set fill and stroke\n\n    itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n    hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n    symbolRotate = itemModel.getShallow('symbolRotate');\n    symbolOffset = itemModel.getShallow('symbolOffset');\n    labelModel = itemModel.getModel(normalLabelAccessPath);\n    hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n    hoverAnimation = itemModel.getShallow('hoverAnimation');\n    cursorStyle = itemModel.getShallow('cursor');\n  } else {\n    hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n  }\n\n  var elStyle = symbolPath.style;\n  symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n  if (symbolOffset) {\n    symbolPath.attr('position', [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])]);\n  }\n\n  cursorStyle && symbolPath.attr('cursor', cursorStyle); // PENDING setColor before setStyle!!!\n\n  symbolPath.setColor(color, seriesScope && seriesScope.symbolInnerColor);\n  symbolPath.setStyle(itemStyle);\n  var opacity = data.getItemVisual(idx, 'opacity');\n\n  if (opacity != null) {\n    elStyle.opacity = opacity;\n  }\n\n  var useNameLabel = seriesScope && seriesScope.useNameLabel;\n  var valueDim = !useNameLabel && findLabelValueDim(data);\n\n  if (useNameLabel || valueDim != null) {\n    graphic.setLabelStyle(elStyle, hoverItemStyle, labelModel, hoverLabelModel, {\n      labelFetcher: seriesModel,\n      labelDataIndex: idx,\n      defaultText: useNameLabel ? data.getName(idx) : data.get(valueDim, idx),\n      isRectText: true,\n      autoColor: color\n    });\n  }\n\n  symbolPath.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  symbolPath.hoverStyle = hoverItemStyle; // FIXME\n  // Do not use symbol.trigger('emphasis'), but use symbol.highlight() instead.\n\n  graphic.setHoverStyle(symbolPath);\n  var scale = getScale(symbolSize);\n\n  if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n    var onEmphasis = function () {\n      var ratio = scale[1] / scale[0];\n      this.animateTo({\n        scale: [Math.max(scale[0] * 1.1, scale[0] + 3), Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)]\n      }, 400, 'elasticOut');\n    };\n\n    var onNormal = function () {\n      this.animateTo({\n        scale: scale\n      }, 400, 'elasticOut');\n    };\n\n    symbolPath.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n};\n/**\n * @param {Function} cb\n * @param {Object} [opt]\n * @param {Object} [opt.keepLabel=true]\n */\n\n\nsymbolProto.fadeOut = function (cb, opt) {\n  var symbolPath = this.childAt(0); // Avoid mistaken hover when fading out\n\n  this.silent = symbolPath.silent = true; // Not show text when animating\n\n  !(opt && opt.keepLabel) && (symbolPath.style.text = null);\n  graphic.updateProps(symbolPath, {\n    style: {\n      opacity: 0\n    },\n    scale: [0, 0]\n  }, this._seriesModel, this.dataIndex, cb);\n};\n\nzrUtil.inherits(SymbolClz, graphic.Group);\nvar _default = SymbolClz;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisDefault = require(\"./axisDefault\");\n\nvar ComponentModel = require(\"../model/Component\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n// FIXME axisType is fixed ?\nvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\n/**\n * Generate sub axis model class\n * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n * @param {module:echarts/model/Component} BaseAxisModelClass\n * @param {Function} axisTypeDefaulter\n * @param {Object} [extraDefaultOption]\n */\n\nfunction _default(axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n  zrUtil.each(AXIS_TYPES, function (axisType) {\n    BaseAxisModelClass.extend({\n      type: axisName + 'Axis.' + axisType,\n      mergeDefaultAndTheme: function (option, ecModel) {\n        var layoutMode = this.layoutMode;\n        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\n        var themeModel = ecModel.getTheme();\n        zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n        zrUtil.merge(option, this.getDefaultOption());\n        option.type = axisTypeDefaulter(axisName, option);\n\n        if (layoutMode) {\n          mergeLayoutParam(option, inputPositionParams, layoutMode);\n        }\n      },\n      defaultOption: zrUtil.mergeAll([{}, axisDefault[axisType + 'Axis'], extraDefaultOption], true)\n    });\n  });\n  ComponentModel.registerSubTypeDefaulter(axisName + 'Axis', zrUtil.curry(axisTypeDefaulter, axisName));\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry; // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n// allAxesInfo should be updated when setOption performed.\n\nfunction collect(ecModel, api) {\n  var result = {\n    /**\n     * key: makeKey(axis.model)\n     * value: {\n     *      axis,\n     *      coordSys,\n     *      axisPointerModel,\n     *      triggerTooltip,\n     *      involveSeries,\n     *      snap,\n     *      seriesModels,\n     *      seriesDataCount\n     * }\n     */\n    axesInfo: {},\n    seriesInvolved: false,\n\n    /**\n     * key: makeKey(coordSys.model)\n     * value: Object: key makeKey(axis.model), value: axisInfo\n     */\n    coordSysAxesInfo: {},\n    coordSysMap: {}\n  };\n  collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.\n\n  result.seriesInvolved && collectSeriesInfo(result, ecModel);\n  return result;\n}\n\nfunction collectAxesInfo(result, ecModel, api) {\n  var globalTooltipModel = ecModel.getComponent('tooltip');\n  var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.\n\n  var linksOption = globalAxisPointerModel.get('link', true) || [];\n  var linkGroups = []; // Collect axes info.\n\n  each(api.getCoordinateSystems(), function (coordSys) {\n    // Some coordinate system do not support axes, like geo.\n    if (!coordSys.axisPointerEnabled) {\n      return;\n    }\n\n    var coordSysKey = makeKey(coordSys.model);\n    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n    result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convienent way to show axisPointer\n    // for user. So we enable seting tooltip on coordSys model.\n\n    var coordSysModel = coordSys.model;\n    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n    each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.\n    // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n\n    if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not\n    // show but axisPointer will show as normal.\n    && baseTooltipModel.get('show')) {\n      // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n      // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n      var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n\n      if (triggerAxis || cross) {\n        each(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\n      }\n\n      if (cross) {\n        each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n      }\n    } // fromTooltip: true | false | 'cross'\n    // triggerTooltip: true | false | null\n\n\n    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n      var axisPointerShow = axisPointerModel.get('show');\n\n      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\n        return;\n      }\n\n      if (triggerTooltip == null) {\n        triggerTooltip = axisPointerModel.get('triggerTooltip');\n      }\n\n      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\n      var snap = axisPointerModel.get('snap');\n      var key = makeKey(axis.model);\n      var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n\n      var axisInfo = result.axesInfo[key] = {\n        key: key,\n        axis: axis,\n        coordSys: coordSys,\n        axisPointerModel: axisPointerModel,\n        triggerTooltip: triggerTooltip,\n        involveSeries: involveSeries,\n        snap: snap,\n        useHandle: isHandleTrigger(axisPointerModel),\n        seriesModels: []\n      };\n      axesInfoInCoordSys[key] = axisInfo;\n      result.seriesInvolved |= involveSeries;\n      var groupIndex = getLinkGroupIndex(linksOption, axis);\n\n      if (groupIndex != null) {\n        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\n          axesInfo: {}\n        });\n        linkGroup.axesInfo[key] = axisInfo;\n        linkGroup.mapper = linksOption[groupIndex].mapper;\n        axisInfo.linkGroup = linkGroup;\n      }\n    }\n  });\n}\n\nfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\n  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n  var volatileOption = {};\n  each(['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'], function (field) {\n    volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n  }); // category axis do not auto snap, otherwise some tick that do not\n  // has value can not be hovered. value/time/log axis default snap if\n  // triggered from tooltip and trigger tooltip.\n\n  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatibel with previous behavior, tooltip axis do not show label by default.\n  // Only these properties can be overrided from tooltip to axisPointer.\n\n  if (tooltipAxisPointerModel.get('type') === 'cross') {\n    volatileOption.type = 'line';\n  }\n\n  var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.\n\n  labelOption.show == null && (labelOption.show = false);\n\n  if (fromTooltip === 'cross') {\n    // When 'cross', both axes show labels.\n    labelOption.show = true; // If triggerTooltip, this is a base axis, which should better not use cross style\n    // (cross style is dashed by default)\n\n    if (!triggerTooltip) {\n      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n      crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n    }\n  }\n\n  return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));\n}\n\nfunction collectSeriesInfo(result, ecModel) {\n  // Prepare data for axis trigger\n  ecModel.eachSeries(function (seriesModel) {\n    // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n    var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n\n    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get('axisPointer.show', true) === false) {\n      return;\n    }\n\n    each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n      var axis = axisInfo.axis;\n\n      if (coordSys.getAxis(axis.dim) === axis) {\n        axisInfo.seriesModels.push(seriesModel);\n        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n        axisInfo.seriesDataCount += seriesModel.getData().count();\n      }\n    });\n  }, this);\n}\n/**\n * For example:\n * {\n *     axisPointer: {\n *         links: [{\n *             xAxisIndex: [2, 4],\n *             yAxisIndex: 'all'\n *         }, {\n *             xAxisId: ['a5', 'a7'],\n *             xAxisName: 'xxx'\n *         }]\n *     }\n * }\n */\n\n\nfunction getLinkGroupIndex(linksOption, axis) {\n  var axisModel = axis.model;\n  var dim = axis.dim;\n\n  for (var i = 0; i < linksOption.length; i++) {\n    var linkOption = linksOption[i] || {};\n\n    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\n      return i;\n    }\n  }\n}\n\nfunction checkPropInLink(linkPropValue, axisPropValue) {\n  return linkPropValue === 'all' || zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\n}\n\nfunction fixValue(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n\n  if (!axisInfo) {\n    return;\n  }\n\n  var axisPointerModel = axisInfo.axisPointerModel;\n  var scale = axisInfo.axis.scale;\n  var option = axisPointerModel.option;\n  var status = axisPointerModel.get('status');\n  var value = axisPointerModel.get('value'); // Parse init value for category and time axis.\n\n  if (value != null) {\n    value = scale.parse(value);\n  }\n\n  var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value\n  // and status should be initialized.\n\n  if (status == null) {\n    option.status = useHandle ? 'show' : 'hide';\n  }\n\n  var extent = scale.getExtent().slice();\n  extent[0] > extent[1] && extent.reverse();\n\n  if ( // Pick a value on axis when initializing.\n  value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n  // where we should re-pick a value to keep `handle` displaying normally.\n  || value > extent[1]) {\n    // Make handle displayed on the end of the axis when init, which looks better.\n    value = extent[1];\n  }\n\n  if (value < extent[0]) {\n    value = extent[0];\n  }\n\n  option.value = value;\n\n  if (useHandle) {\n    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n  }\n}\n\nfunction getAxisInfo(axisModel) {\n  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n}\n\nfunction getAxisPointerModel(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n  return axisInfo && axisInfo.axisPointerModel;\n}\n\nfunction isHandleTrigger(axisPointerModel) {\n  return !!axisPointerModel.get('handle.show');\n}\n/**\n * @param {module:echarts/model/Model} model\n * @return {string} unique key\n */\n\n\nfunction makeKey(model) {\n  return model.type + '||' + model.id;\n}\n\nexports.collect = collect;\nexports.fixValue = fixValue;\nexports.getAxisInfo = getAxisInfo;\nexports.getAxisPointerModel = getAxisPointerModel;\nexports.makeKey = makeKey;","function _default(seriesType, ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (!legendModels || !legendModels.length) {\n    return;\n  }\n\n  ecModel.eachSeriesByType(seriesType, function (series) {\n    var data = series.getData();\n    data.filterSelf(function (idx) {\n      var name = data.getName(idx); // If in any legend component the status is not selected.\n\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(name)) {\n          return false;\n        }\n      }\n\n      return true;\n    }, this);\n  }, this);\n}\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Geo = require(\"./Geo\");\n\nvar layout = require(\"../../util/layout\");\n\nvar numberUtil = require(\"../../util/number\");\n\n/**\n * Resize method bound to the geo\n * @param {module:echarts/coord/geo/GeoModel|module:echarts/chart/map/MapModel} geoModel\n * @param {module:echarts/ExtensionAPI} api\n */\nfunction resizeGeo(geoModel, api) {\n  var boundingCoords = geoModel.get('boundingCoords');\n\n  if (boundingCoords != null) {\n    var leftTop = boundingCoords[0];\n    var rightBottom = boundingCoords[1];\n\n    if (isNaN(leftTop[0]) || isNaN(leftTop[1]) || isNaN(rightBottom[0]) || isNaN(rightBottom[1])) {} else {\n      this.setBoundingRect(leftTop[0], leftTop[1], rightBottom[0] - leftTop[0], rightBottom[1] - leftTop[1]);\n    }\n  }\n\n  var rect = this.getBoundingRect();\n  var boxLayoutOption;\n  var center = geoModel.get('layoutCenter');\n  var size = geoModel.get('layoutSize');\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  var aspectScale = geoModel.get('aspectScale') || 0.75;\n  var aspect = rect.width / rect.height * aspectScale;\n  var useCenterAndSize = false;\n\n  if (center && size) {\n    center = [numberUtil.parsePercent(center[0], viewWidth), numberUtil.parsePercent(center[1], viewHeight)];\n    size = numberUtil.parsePercent(size, Math.min(viewWidth, viewHeight));\n\n    if (!isNaN(center[0]) && !isNaN(center[1]) && !isNaN(size)) {\n      useCenterAndSize = true;\n    } else {}\n  }\n\n  var viewRect;\n\n  if (useCenterAndSize) {\n    var viewRect = {};\n\n    if (aspect > 1) {\n      // Width is same with size\n      viewRect.width = size;\n      viewRect.height = size / aspect;\n    } else {\n      viewRect.height = size;\n      viewRect.width = size * aspect;\n    }\n\n    viewRect.y = center[1] - viewRect.height / 2;\n    viewRect.x = center[0] - viewRect.width / 2;\n  } else {\n    // Use left/top/width/height\n    boxLayoutOption = geoModel.getBoxLayoutParams(); // 0.75 rate\n\n    boxLayoutOption.aspect = aspect;\n    viewRect = layout.getLayoutRect(boxLayoutOption, {\n      width: viewWidth,\n      height: viewHeight\n    });\n  }\n\n  this.setViewRect(viewRect.x, viewRect.y, viewRect.width, viewRect.height);\n  this.setCenter(geoModel.get('center'));\n  this.setZoom(geoModel.get('zoom'));\n}\n/**\n * @param {module:echarts/coord/Geo} geo\n * @param {module:echarts/model/Model} model\n * @inner\n */\n\n\nfunction setGeoCoords(geo, model) {\n  zrUtil.each(model.get('geoCoord'), function (geoCoord, name) {\n    geo.addGeoCoord(name, geoCoord);\n  });\n}\n\nvar geoCreator = {\n  // For deciding which dimensions to use when creating list data\n  dimensions: Geo.prototype.dimensions,\n  create: function (ecModel, api) {\n    var geoList = []; // FIXME Create each time may be slow\n\n    ecModel.eachComponent('geo', function (geoModel, idx) {\n      var name = geoModel.get('map');\n      var mapData = echarts.getMap(name);\n      var geo = new Geo(name + idx, name, mapData && mapData.geoJson, mapData && mapData.specialAreas, geoModel.get('nameMap'));\n      geo.zoomLimit = geoModel.get('scaleLimit');\n      geoList.push(geo);\n      setGeoCoords(geo, geoModel);\n      geoModel.coordinateSystem = geo;\n      geo.model = geoModel; // Inject resize method\n\n      geo.resize = resizeGeo;\n      geo.resize(geoModel, api);\n    });\n    ecModel.eachSeries(function (seriesModel) {\n      var coordSys = seriesModel.get('coordinateSystem');\n\n      if (coordSys === 'geo') {\n        var geoIndex = seriesModel.get('geoIndex') || 0;\n        seriesModel.coordinateSystem = geoList[geoIndex];\n      }\n    }); // If has map series\n\n    var mapModelGroupBySeries = {};\n    ecModel.eachSeriesByType('map', function (seriesModel) {\n      if (!seriesModel.getHostGeoModel()) {\n        var mapType = seriesModel.getMapType();\n        mapModelGroupBySeries[mapType] = mapModelGroupBySeries[mapType] || [];\n        mapModelGroupBySeries[mapType].push(seriesModel);\n      }\n    });\n    zrUtil.each(mapModelGroupBySeries, function (mapSeries, mapType) {\n      var mapData = echarts.getMap(mapType);\n      var nameMapList = zrUtil.map(mapSeries, function (singleMapSeries) {\n        return singleMapSeries.get('nameMap');\n      });\n      var geo = new Geo(mapType, mapType, mapData && mapData.geoJson, mapData && mapData.specialAreas, zrUtil.mergeAll(nameMapList));\n      geo.zoomLimit = zrUtil.retrieve.apply(null, zrUtil.map(mapSeries, function (singleMapSeries) {\n        return singleMapSeries.get('scaleLimit');\n      }));\n      geoList.push(geo); // Inject resize method\n\n      geo.resize = resizeGeo;\n      geo.resize(mapSeries[0], api);\n      zrUtil.each(mapSeries, function (singleMapSeries) {\n        singleMapSeries.coordinateSystem = geo;\n        setGeoCoords(geo, singleMapSeries);\n      });\n    });\n    return geoList;\n  },\n\n  /**\n   * Fill given regions array\n   * @param  {Array.<Object>} originRegionArr\n   * @param  {string} mapName\n   * @param  {Object} [nameMap]\n   * @return {Array}\n   */\n  getFilledRegions: function (originRegionArr, mapName, nameMap) {\n    // Not use the original\n    var regionsArr = (originRegionArr || []).slice();\n    nameMap = nameMap || {};\n    var map = echarts.getMap(mapName);\n    var geoJson = map && map.geoJson;\n\n    if (!geoJson) {\n      return originRegionArr;\n    }\n\n    var dataNameMap = zrUtil.createHashMap();\n    var features = geoJson.features;\n\n    for (var i = 0; i < regionsArr.length; i++) {\n      dataNameMap.set(regionsArr[i].name, regionsArr[i]);\n    }\n\n    for (var i = 0; i < features.length; i++) {\n      var name = features[i].properties.name;\n\n      if (!dataNameMap.get(name)) {\n        if (nameMap.hasOwnProperty(name)) {\n          name = nameMap[name];\n        }\n\n        regionsArr.push({\n          name: name\n        });\n      }\n    }\n\n    return regionsArr;\n  }\n};\necharts.registerCoordinateSystem('geo', geoCreator);\nvar _default = geoCreator;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar interactionMutex = require(\"./interactionMutex\");\n\n/**\n * @alias module:echarts/component/helper/RoamController\n * @constructor\n * @mixin {module:zrender/mixin/Eventful}\n *\n * @param {module:zrender/zrender~ZRender} zr\n */\nfunction RoamController(zr) {\n  /**\n   * @type {Function}\n   */\n  this.pointerChecker;\n  /**\n   * @type {module:zrender}\n   */\n\n  this._zr = zr;\n  /**\n   * @type {Object}\n   */\n\n  this._opt = {}; // Avoid two roamController bind the same handler\n\n  var bind = zrUtil.bind;\n  var mousedownHandler = bind(mousedown, this);\n  var mousemoveHandler = bind(mousemove, this);\n  var mouseupHandler = bind(mouseup, this);\n  var mousewheelHandler = bind(mousewheel, this);\n  var pinchHandler = bind(pinch, this);\n  Eventful.call(this);\n  /**\n   * @param {Function} pointerChecker\n   *                   input: x, y\n   *                   output: boolean\n   */\n\n  this.setPointerChecker = function (pointerChecker) {\n    this.pointerChecker = pointerChecker;\n  };\n  /**\n   * Notice: only enable needed types. For example, if 'zoom'\n   * is not needed, 'zoom' should not be enabled, otherwise\n   * default mousewheel behaviour (scroll page) will be disabled.\n   *\n   * @param  {boolean|string} [controlType=true] Specify the control type,\n   *                          which can be null/undefined or true/false\n   *                          or 'pan/move' or 'zoom'/'scale'\n   * @param {Object} [opt]\n   * @param {Object} [opt.zoomOnMouseWheel=true]\n   * @param {Object} [opt.moveOnMouseMove=true]\n   * @param {Object} [opt.preventDefaultMouseMove=true] When pan.\n   */\n\n\n  this.enable = function (controlType, opt) {\n    // Disable previous first\n    this.disable();\n    this._opt = zrUtil.defaults(zrUtil.clone(opt) || {}, {\n      zoomOnMouseWheel: true,\n      moveOnMouseMove: true,\n      preventDefaultMouseMove: true\n    });\n\n    if (controlType == null) {\n      controlType = true;\n    }\n\n    if (controlType === true || controlType === 'move' || controlType === 'pan') {\n      zr.on('mousedown', mousedownHandler);\n      zr.on('mousemove', mousemoveHandler);\n      zr.on('mouseup', mouseupHandler);\n    }\n\n    if (controlType === true || controlType === 'scale' || controlType === 'zoom') {\n      zr.on('mousewheel', mousewheelHandler);\n      zr.on('pinch', pinchHandler);\n    }\n  };\n\n  this.disable = function () {\n    zr.off('mousedown', mousedownHandler);\n    zr.off('mousemove', mousemoveHandler);\n    zr.off('mouseup', mouseupHandler);\n    zr.off('mousewheel', mousewheelHandler);\n    zr.off('pinch', pinchHandler);\n  };\n\n  this.dispose = this.disable;\n\n  this.isDragging = function () {\n    return this._dragging;\n  };\n\n  this.isPinching = function () {\n    return this._pinching;\n  };\n}\n\nzrUtil.mixin(RoamController, Eventful);\n\nfunction mousedown(e) {\n  if (eventTool.notLeftMouse(e) || e.target && e.target.draggable) {\n    return;\n  }\n\n  var x = e.offsetX;\n  var y = e.offsetY; // Only check on mosedown, but not mousemove.\n  // Mouse can be out of target when mouse moving.\n\n  if (this.pointerChecker && this.pointerChecker(e, x, y)) {\n    this._x = x;\n    this._y = y;\n    this._dragging = true;\n  }\n}\n\nfunction mousemove(e) {\n  if (eventTool.notLeftMouse(e) || !checkKeyBinding(this, 'moveOnMouseMove', e) || !this._dragging || e.gestureEvent === 'pinch' || interactionMutex.isTaken(this._zr, 'globalPan')) {\n    return;\n  }\n\n  var x = e.offsetX;\n  var y = e.offsetY;\n  var oldX = this._x;\n  var oldY = this._y;\n  var dx = x - oldX;\n  var dy = y - oldY;\n  this._x = x;\n  this._y = y;\n  this._opt.preventDefaultMouseMove && eventTool.stop(e.event);\n  this.trigger('pan', dx, dy, oldX, oldY, x, y);\n}\n\nfunction mouseup(e) {\n  if (!eventTool.notLeftMouse(e)) {\n    this._dragging = false;\n  }\n}\n\nfunction mousewheel(e) {\n  // wheelDelta maybe -0 in chrome mac.\n  if (!checkKeyBinding(this, 'zoomOnMouseWheel', e) || e.wheelDelta === 0) {\n    return;\n  } // Convenience:\n  // Mac and VM Windows on Mac: scroll up: zoom out.\n  // Windows: scroll up: zoom in.\n\n\n  var zoomDelta = e.wheelDelta > 0 ? 1.1 : 1 / 1.1;\n  zoom.call(this, e, zoomDelta, e.offsetX, e.offsetY);\n}\n\nfunction pinch(e) {\n  if (interactionMutex.isTaken(this._zr, 'globalPan')) {\n    return;\n  }\n\n  var zoomDelta = e.pinchScale > 1 ? 1.1 : 1 / 1.1;\n  zoom.call(this, e, zoomDelta, e.pinchX, e.pinchY);\n}\n\nfunction zoom(e, zoomDelta, zoomX, zoomY) {\n  if (this.pointerChecker && this.pointerChecker(e, zoomX, zoomY)) {\n    // When mouse is out of roamController rect,\n    // default befavoius should not be be disabled, otherwise\n    // page sliding is disabled, contrary to expectation.\n    eventTool.stop(e.event);\n    this.trigger('zoom', zoomDelta, zoomX, zoomY);\n  }\n}\n\nfunction checkKeyBinding(roamController, prop, e) {\n  var setting = roamController._opt[prop];\n  return setting && (!zrUtil.isString(setting) || e.event[setting + 'Key']);\n}\n\nvar _default = RoamController;\nmodule.exports = _default;","var List = require(\"../../data/List\");\n\nvar completeDimensions = require(\"../../data/helper/completeDimensions\");\n\nvar WhiskerBoxDraw = require(\"../helper/WhiskerBoxDraw\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar seriesModelMixin = {\n  /**\n   * @private\n   * @type {string}\n   */\n  _baseAxisDim: null,\n\n  /**\n   * @override\n   */\n  getInitialData: function (option, ecModel) {\n    // When both types of xAxis and yAxis are 'value', layout is\n    // needed to be specified by user. Otherwise, layout can be\n    // judged by which axis is category.\n    var categories;\n    var xAxisModel = ecModel.getComponent('xAxis', this.get('xAxisIndex'));\n    var yAxisModel = ecModel.getComponent('yAxis', this.get('yAxisIndex'));\n    var xAxisType = xAxisModel.get('type');\n    var yAxisType = yAxisModel.get('type');\n    var addOrdinal; // FIXME\n    // 考虑时间轴\n\n    if (xAxisType === 'category') {\n      option.layout = 'horizontal';\n      categories = xAxisModel.getCategories();\n      addOrdinal = true;\n    } else if (yAxisType === 'category') {\n      option.layout = 'vertical';\n      categories = yAxisModel.getCategories();\n      addOrdinal = true;\n    } else {\n      option.layout = option.layout || 'horizontal';\n    }\n\n    var coordDims = ['x', 'y'];\n    var baseAxisDimIndex = option.layout === 'horizontal' ? 0 : 1;\n    var baseAxisDim = this._baseAxisDim = coordDims[baseAxisDimIndex];\n    var otherAxisDim = coordDims[1 - baseAxisDimIndex];\n    var data = option.data;\n    addOrdinal && zrUtil.each(data, function (item, index) {\n      if (item.value && zrUtil.isArray(item.value)) {\n        item.value.unshift(index);\n      } else {\n        zrUtil.isArray(item) && item.unshift(index);\n      }\n    });\n    var defaultValueDimensions = this.defaultValueDimensions;\n    var dimensions = [{\n      name: baseAxisDim,\n      otherDims: {\n        tooltip: false\n      },\n      dimsDef: ['base']\n    }, {\n      name: otherAxisDim,\n      dimsDef: defaultValueDimensions.slice()\n    }];\n    dimensions = completeDimensions(dimensions, data, {\n      encodeDef: this.get('encode'),\n      dimsDef: this.get('dimensions'),\n      // Consider empty data entry.\n      dimCount: defaultValueDimensions.length + 1\n    });\n    var list = new List(dimensions, this);\n    list.initData(data, categories ? categories.slice() : null);\n    return list;\n  },\n\n  /**\n   * If horizontal, base axis is x, otherwise y.\n   * @override\n   */\n  getBaseAxis: function () {\n    var dim = this._baseAxisDim;\n    return this.ecModel.getComponent(dim + 'Axis', this.get(dim + 'AxisIndex')).axis;\n  }\n};\nvar viewMixin = {\n  init: function () {\n    /**\n     * Old data.\n     * @private\n     * @type {module:echarts/chart/helper/WhiskerBoxDraw}\n     */\n    var whiskerBoxDraw = this._whiskerBoxDraw = new WhiskerBoxDraw(this.getStyleUpdater());\n    this.group.add(whiskerBoxDraw.group);\n  },\n  render: function (seriesModel, ecModel, api) {\n    this._whiskerBoxDraw.updateData(seriesModel.getData());\n  },\n  remove: function (ecModel) {\n    this._whiskerBoxDraw.remove();\n  }\n};\nexports.seriesModelMixin = seriesModelMixin;\nexports.viewMixin = viewMixin;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\n/**\n * @param {module:echarts/model/Model} axisPointerModel\n */\nfunction buildElStyle(axisPointerModel) {\n  var axisPointerType = axisPointerModel.get('type');\n  var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n  var style;\n\n  if (axisPointerType === 'line') {\n    style = styleModel.getLineStyle();\n    style.fill = null;\n  } else if (axisPointerType === 'shadow') {\n    style = styleModel.getAreaStyle();\n    style.stroke = null;\n  }\n\n  return style;\n}\n/**\n * @param {Function} labelPos {align, verticalAlign, position}\n */\n\n\nfunction buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {\n  var value = axisPointerModel.get('value');\n  var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {\n    precision: axisPointerModel.get('label.precision'),\n    formatter: axisPointerModel.get('label.formatter')\n  });\n  var labelModel = axisPointerModel.getModel('label');\n  var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n  var font = labelModel.getFont();\n  var textRect = textContain.getBoundingRect(text, font);\n  var position = labelPos.position;\n  var width = textRect.width + paddings[1] + paddings[3];\n  var height = textRect.height + paddings[0] + paddings[2]; // Adjust by align.\n\n  var align = labelPos.align;\n  align === 'right' && (position[0] -= width);\n  align === 'center' && (position[0] -= width / 2);\n  var verticalAlign = labelPos.verticalAlign;\n  verticalAlign === 'bottom' && (position[1] -= height);\n  verticalAlign === 'middle' && (position[1] -= height / 2); // Not overflow ec container\n\n  confineInContainer(position, width, height, api);\n  var bgColor = labelModel.get('backgroundColor');\n\n  if (!bgColor || bgColor === 'auto') {\n    bgColor = axisModel.get('axisLine.lineStyle.color');\n  }\n\n  elOption.label = {\n    shape: {\n      x: 0,\n      y: 0,\n      width: width,\n      height: height,\n      r: labelModel.get('borderRadius')\n    },\n    position: position.slice(),\n    // TODO: rich\n    style: {\n      text: text,\n      textFont: font,\n      textFill: labelModel.getTextColor(),\n      textPosition: 'inside',\n      fill: bgColor,\n      stroke: labelModel.get('borderColor') || 'transparent',\n      lineWidth: labelModel.get('borderWidth') || 0,\n      shadowBlur: labelModel.get('shadowBlur'),\n      shadowColor: labelModel.get('shadowColor'),\n      shadowOffsetX: labelModel.get('shadowOffsetX'),\n      shadowOffsetY: labelModel.get('shadowOffsetY')\n    },\n    // Lable should be over axisPointer.\n    z2: 10\n  };\n} // Do not overflow ec container\n\n\nfunction confineInContainer(position, width, height, api) {\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  position[0] = Math.min(position[0] + width, viewWidth) - width;\n  position[1] = Math.min(position[1] + height, viewHeight) - height;\n  position[0] = Math.max(position[0], 0);\n  position[1] = Math.max(position[1], 0);\n}\n/**\n * @param {number} value\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} opt\n * @param {Array.<Object>} seriesDataIndices\n * @param {number|string} opt.precision 'auto' or a number\n * @param {string|Function} opt.formatter label formatter\n */\n\n\nfunction getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {\n  var text = axis.scale.getLabel( // If `precision` is set, width can be fixed (like '12.00500'), which\n  // helps to debounce when when moving label.\n  value, {\n    precision: opt.precision\n  });\n  var formatter = opt.formatter;\n\n  if (formatter) {\n    var params = {\n      value: axisHelper.getAxisRawValue(axis, value),\n      seriesData: []\n    };\n    zrUtil.each(seriesDataIndices, function (idxItem) {\n      var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n      var dataIndex = idxItem.dataIndexInside;\n      var dataParams = series && series.getDataParams(dataIndex);\n      dataParams && params.seriesData.push(dataParams);\n    });\n\n    if (zrUtil.isString(formatter)) {\n      text = formatter.replace('{value}', text);\n    } else if (zrUtil.isFunction(formatter)) {\n      text = formatter(params);\n    }\n  }\n\n  return text;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @param {number} value\n * @param {Object} layoutInfo {\n *  rotation, position, labelOffset, labelDirection, labelMargin\n * }\n */\n\n\nfunction getTransformedPosition(axis, value, layoutInfo) {\n  var transform = matrix.create();\n  matrix.rotate(transform, transform, layoutInfo.rotation);\n  matrix.translate(transform, transform, layoutInfo.position);\n  return graphic.applyTransform([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);\n}\n\nfunction buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {\n  var textLayout = AxisBuilder.innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);\n  layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n  buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n    position: getTransformedPosition(axisModel.axis, value, layoutInfo),\n    align: textLayout.textAlign,\n    verticalAlign: textLayout.textVerticalAlign\n  });\n}\n/**\n * @param {Array.<number>} p1\n * @param {Array.<number>} p2\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeLineShape(p1, p2, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x1: p1[xDimIndex],\n    y1: p1[1 - xDimIndex],\n    x2: p2[xDimIndex],\n    y2: p2[1 - xDimIndex]\n  };\n}\n/**\n * @param {Array.<number>} xy\n * @param {Array.<number>} wh\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeRectShape(xy, wh, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x: xy[xDimIndex],\n    y: xy[1 - xDimIndex],\n    width: wh[xDimIndex],\n    height: wh[1 - xDimIndex]\n  };\n}\n\nfunction makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n  return {\n    cx: cx,\n    cy: cy,\n    r0: r0,\n    r: r,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    clockwise: true\n  };\n}\n\nexports.buildElStyle = buildElStyle;\nexports.buildLabelElOption = buildLabelElOption;\nexports.getValueLabel = getValueLabel;\nexports.getTransformedPosition = getTransformedPosition;\nexports.buildCartesianSingleLabelElOption = buildCartesianSingleLabelElOption;\nexports.makeLineShape = makeLineShape;\nexports.makeRectShape = makeRectShape;\nexports.makeSectorShape = makeSectorShape;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapping = require(\"./VisualMapping\");\n\n/**\n * @file Visual solution, for consistent option specification.\n */\nvar each = zrUtil.each;\n\nfunction hasKeys(obj) {\n  if (obj) {\n    for (var name in obj) {\n      if (obj.hasOwnProperty(name)) {\n        return true;\n      }\n    }\n  }\n}\n/**\n * @param {Object} option\n * @param {Array.<string>} stateList\n * @param {Function} [supplementVisualOption]\n * @return {Object} visualMappings <state, <visualType, module:echarts/visual/VisualMapping>>\n */\n\n\nfunction createVisualMappings(option, stateList, supplementVisualOption) {\n  var visualMappings = {};\n  each(stateList, function (state) {\n    var mappings = visualMappings[state] = createMappings();\n    each(option[state], function (visualData, visualType) {\n      if (!VisualMapping.isValidType(visualType)) {\n        return;\n      }\n\n      var mappingOption = {\n        type: visualType,\n        visual: visualData\n      };\n      supplementVisualOption && supplementVisualOption(mappingOption, state);\n      mappings[visualType] = new VisualMapping(mappingOption); // Prepare a alpha for opacity, for some case that opacity\n      // is not supported, such as rendering using gradient color.\n\n      if (visualType === 'opacity') {\n        mappingOption = zrUtil.clone(mappingOption);\n        mappingOption.type = 'colorAlpha';\n        mappings.__hidden.__alphaForOpacity = new VisualMapping(mappingOption);\n      }\n    });\n  });\n  return visualMappings;\n\n  function createMappings() {\n    var Creater = function () {}; // Make sure hidden fields will not be visited by\n    // object iteration (with hasOwnProperty checking).\n\n\n    Creater.prototype.__hidden = Creater.prototype;\n    var obj = new Creater();\n    return obj;\n  }\n}\n/**\n * @param {Object} thisOption\n * @param {Object} newOption\n * @param {Array.<string>} keys\n */\n\n\nfunction replaceVisualOption(thisOption, newOption, keys) {\n  // Visual attributes merge is not supported, otherwise it\n  // brings overcomplicated merge logic. See #2853. So if\n  // newOption has anyone of these keys, all of these keys\n  // will be reset. Otherwise, all keys remain.\n  var has;\n  zrUtil.each(keys, function (key) {\n    if (newOption.hasOwnProperty(key) && hasKeys(newOption[key])) {\n      has = true;\n    }\n  });\n  has && zrUtil.each(keys, function (key) {\n    if (newOption.hasOwnProperty(key) && hasKeys(newOption[key])) {\n      thisOption[key] = zrUtil.clone(newOption[key]);\n    } else {\n      delete thisOption[key];\n    }\n  });\n}\n/**\n * @param {Array.<string>} stateList\n * @param {Object} visualMappings <state, Object.<visualType, module:echarts/visual/VisualMapping>>\n * @param {module:echarts/data/List} list\n * @param {Function} getValueState param: valueOrIndex, return: state.\n * @param {object} [scope] Scope for getValueState\n * @param {string} [dimension] Concrete dimension, if used.\n */\n\n\nfunction applyVisual(stateList, visualMappings, data, getValueState, scope, dimension) {\n  var visualTypesMap = {};\n  zrUtil.each(stateList, function (state) {\n    var visualTypes = VisualMapping.prepareVisualTypes(visualMappings[state]);\n    visualTypesMap[state] = visualTypes;\n  });\n  var dataIndex;\n\n  function getVisual(key) {\n    return data.getItemVisual(dataIndex, key);\n  }\n\n  function setVisual(key, value) {\n    data.setItemVisual(dataIndex, key, value);\n  }\n\n  if (dimension == null) {\n    data.each(eachItem, true);\n  } else {\n    data.each([dimension], eachItem, true);\n  }\n\n  function eachItem(valueOrIndex, index) {\n    dataIndex = dimension == null ? valueOrIndex : index;\n    var rawDataItem = data.getRawDataItem(dataIndex); // Consider performance\n\n    if (rawDataItem && rawDataItem.visualMap === false) {\n      return;\n    }\n\n    var valueState = getValueState.call(scope, valueOrIndex);\n    var mappings = visualMappings[valueState];\n    var visualTypes = visualTypesMap[valueState];\n\n    for (var i = 0, len = visualTypes.length; i < len; i++) {\n      var type = visualTypes[i];\n      mappings[type] && mappings[type].applyVisual(valueOrIndex, getVisual, setVisual);\n    }\n  }\n}\n\nexports.createVisualMappings = createVisualMappings;\nexports.replaceVisualOption = replaceVisualOption;\nexports.applyVisual = applyVisual;","var matrix = require(\"../core/matrix\");\n\nvar vector = require(\"../core/vector\");\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\nvar mIdentity = matrix.identity;\nvar EPSILON = 5e-5;\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * @alias module:zrender/mixin/Transformable\n * @constructor\n */\n\n\nvar Transformable = function (opts) {\n  opts = opts || {}; // If there are no given position, rotation, scale\n\n  if (!opts.position) {\n    /**\n     * 平移\n     * @type {Array.<number>}\n     * @default [0, 0]\n     */\n    this.position = [0, 0];\n  }\n\n  if (opts.rotation == null) {\n    /**\n     * 旋转\n     * @type {Array.<number>}\n     * @default 0\n     */\n    this.rotation = 0;\n  }\n\n  if (!opts.scale) {\n    /**\n     * 缩放\n     * @type {Array.<number>}\n     * @default [1, 1]\n     */\n    this.scale = [1, 1];\n  }\n  /**\n   * 旋转和缩放的原点\n   * @type {Array.<number>}\n   * @default null\n   */\n\n\n  this.origin = this.origin || null;\n};\n\nvar transformableProto = Transformable.prototype;\ntransformableProto.transform = null;\n/**\n * 判断是否需要有坐标变换\n * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n */\n\ntransformableProto.needLocalTransform = function () {\n  return isNotAroundZero(this.rotation) || isNotAroundZero(this.position[0]) || isNotAroundZero(this.position[1]) || isNotAroundZero(this.scale[0] - 1) || isNotAroundZero(this.scale[1] - 1);\n};\n\ntransformableProto.updateTransform = function () {\n  var parent = this.parent;\n  var parentHasTransform = parent && parent.transform;\n  var needLocalTransform = this.needLocalTransform();\n  var m = this.transform;\n\n  if (!(needLocalTransform || parentHasTransform)) {\n    m && mIdentity(m);\n    return;\n  }\n\n  m = m || matrix.create();\n\n  if (needLocalTransform) {\n    this.getLocalTransform(m);\n  } else {\n    mIdentity(m);\n  } // 应用父节点变换\n\n\n  if (parentHasTransform) {\n    if (needLocalTransform) {\n      matrix.mul(m, parent.transform, m);\n    } else {\n      matrix.copy(m, parent.transform);\n    }\n  } // 保存这个变换矩阵\n\n\n  this.transform = m;\n  this.invTransform = this.invTransform || matrix.create();\n  matrix.invert(this.invTransform, m);\n};\n\ntransformableProto.getLocalTransform = function (m) {\n  return Transformable.getLocalTransform(this, m);\n};\n/**\n * 将自己的transform应用到context上\n * @param {CanvasRenderingContext2D} ctx\n */\n\n\ntransformableProto.setTransform = function (ctx) {\n  var m = this.transform;\n  var dpr = ctx.dpr || 1;\n\n  if (m) {\n    ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n  } else {\n    ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n  }\n};\n\ntransformableProto.restoreTransform = function (ctx) {\n  var dpr = ctx.dpr || 1;\n  ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n};\n\nvar tmpTransform = [];\n/**\n * 分解`transform`矩阵到`position`, `rotation`, `scale`\n */\n\ntransformableProto.decomposeTransform = function () {\n  if (!this.transform) {\n    return;\n  }\n\n  var parent = this.parent;\n  var m = this.transform;\n\n  if (parent && parent.transform) {\n    // Get local transform and decompose them to position, scale, rotation\n    matrix.mul(tmpTransform, parent.invTransform, m);\n    m = tmpTransform;\n  }\n\n  var sx = m[0] * m[0] + m[1] * m[1];\n  var sy = m[2] * m[2] + m[3] * m[3];\n  var position = this.position;\n  var scale = this.scale;\n\n  if (isNotAroundZero(sx - 1)) {\n    sx = Math.sqrt(sx);\n  }\n\n  if (isNotAroundZero(sy - 1)) {\n    sy = Math.sqrt(sy);\n  }\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  position[0] = m[4];\n  position[1] = m[5];\n  scale[0] = sx;\n  scale[1] = sy;\n  this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n};\n/**\n * Get global scale\n * @return {Array.<number>}\n */\n\n\ntransformableProto.getGlobalScale = function () {\n  var m = this.transform;\n\n  if (!m) {\n    return [1, 1];\n  }\n\n  var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n  var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  return [sx, sy];\n};\n/**\n * 变换坐标位置到 shape 的局部坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToLocal = function (x, y) {\n  var v2 = [x, y];\n  var invTransform = this.invTransform;\n\n  if (invTransform) {\n    vector.applyTransform(v2, v2, invTransform);\n  }\n\n  return v2;\n};\n/**\n * 变换局部坐标位置到全局坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToGlobal = function (x, y) {\n  var v2 = [x, y];\n  var transform = this.transform;\n\n  if (transform) {\n    vector.applyTransform(v2, v2, transform);\n  }\n\n  return v2;\n};\n/**\n * @static\n * @param {Object} target\n * @param {Array.<number>} target.origin\n * @param {number} target.rotation\n * @param {Array.<number>} target.position\n * @param {Array.<number>} [m]\n */\n\n\nTransformable.getLocalTransform = function (target, m) {\n  m = m || [];\n  mIdentity(m);\n  var origin = target.origin;\n  var scale = target.scale || [1, 1];\n  var rotation = target.rotation || 0;\n  var position = target.position || [0, 0];\n\n  if (origin) {\n    // Translate to origin\n    m[4] -= origin[0];\n    m[5] -= origin[1];\n  }\n\n  matrix.scale(m, m, scale);\n\n  if (rotation) {\n    matrix.rotate(m, m, rotation);\n  }\n\n  if (origin) {\n    // Translate back from origin\n    m[4] += origin[0];\n    m[5] += origin[1];\n  }\n\n  m[4] += position[0];\n  m[5] += position[1];\n  return m;\n};\n\nvar _default = Transformable;\nmodule.exports = _default;","// https://github.com/mziccard/node-timsort\nvar DEFAULT_MIN_MERGE = 32;\nvar DEFAULT_MIN_GALLOPING = 7;\nvar DEFAULT_TMP_STORAGE_LENGTH = 256;\n\nfunction minRunLength(n) {\n  var r = 0;\n\n  while (n >= DEFAULT_MIN_MERGE) {\n    r |= n & 1;\n    n >>= 1;\n  }\n\n  return n + r;\n}\n\nfunction makeAscendingRun(array, lo, hi, compare) {\n  var runHi = lo + 1;\n\n  if (runHi === hi) {\n    return 1;\n  }\n\n  if (compare(array[runHi++], array[lo]) < 0) {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n      runHi++;\n    }\n\n    reverseRun(array, lo, runHi);\n  } else {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n      runHi++;\n    }\n  }\n\n  return runHi - lo;\n}\n\nfunction reverseRun(array, lo, hi) {\n  hi--;\n\n  while (lo < hi) {\n    var t = array[lo];\n    array[lo++] = array[hi];\n    array[hi--] = t;\n  }\n}\n\nfunction binaryInsertionSort(array, lo, hi, start, compare) {\n  if (start === lo) {\n    start++;\n  }\n\n  for (; start < hi; start++) {\n    var pivot = array[start];\n    var left = lo;\n    var right = start;\n    var mid;\n\n    while (left < right) {\n      mid = left + right >>> 1;\n\n      if (compare(pivot, array[mid]) < 0) {\n        right = mid;\n      } else {\n        left = mid + 1;\n      }\n    }\n\n    var n = start - left;\n\n    switch (n) {\n      case 3:\n        array[left + 3] = array[left + 2];\n\n      case 2:\n        array[left + 2] = array[left + 1];\n\n      case 1:\n        array[left + 1] = array[left];\n        break;\n\n      default:\n        while (n > 0) {\n          array[left + n] = array[left + n - 1];\n          n--;\n        }\n\n    }\n\n    array[left] = pivot;\n  }\n}\n\nfunction gallopLeft(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) > 0) {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  } else {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) > 0) {\n      lastOffset = m + 1;\n    } else {\n      offset = m;\n    }\n  }\n\n  return offset;\n}\n\nfunction gallopRight(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) < 0) {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  } else {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) < 0) {\n      offset = m;\n    } else {\n      lastOffset = m + 1;\n    }\n  }\n\n  return offset;\n}\n\nfunction TimSort(array, compare) {\n  var minGallop = DEFAULT_MIN_GALLOPING;\n  var length = 0;\n  var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n  var stackLength = 0;\n  var runStart;\n  var runLength;\n  var stackSize = 0;\n  length = array.length;\n\n  if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n    tmpStorageLength = length >>> 1;\n  }\n\n  var tmp = [];\n  stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n  runStart = [];\n  runLength = [];\n\n  function pushRun(_runStart, _runLength) {\n    runStart[stackSize] = _runStart;\n    runLength[stackSize] = _runLength;\n    stackSize += 1;\n  }\n\n  function mergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n        if (runLength[n - 1] < runLength[n + 1]) {\n          n--;\n        }\n      } else if (runLength[n] > runLength[n + 1]) {\n        break;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function forceMergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n        n--;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function mergeAt(i) {\n    var start1 = runStart[i];\n    var length1 = runLength[i];\n    var start2 = runStart[i + 1];\n    var length2 = runLength[i + 1];\n    runLength[i] = length1 + length2;\n\n    if (i === stackSize - 3) {\n      runStart[i + 1] = runStart[i + 2];\n      runLength[i + 1] = runLength[i + 2];\n    }\n\n    stackSize--;\n    var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n    start1 += k;\n    length1 -= k;\n\n    if (length1 === 0) {\n      return;\n    }\n\n    length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n    if (length2 === 0) {\n      return;\n    }\n\n    if (length1 <= length2) {\n      mergeLow(start1, length1, start2, length2);\n    } else {\n      mergeHigh(start1, length1, start2, length2);\n    }\n  }\n\n  function mergeLow(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length1; i++) {\n      tmp[i] = array[start1 + i];\n    }\n\n    var cursor1 = 0;\n    var cursor2 = start2;\n    var dest = start1;\n    array[dest++] = array[cursor2++];\n\n    if (--length2 === 0) {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n\n      return;\n    }\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n      return;\n    }\n\n    var _minGallop = minGallop;\n    var count1, count2, exit;\n\n    while (1) {\n      count1 = 0;\n      count2 = 0;\n      exit = false;\n\n      do {\n        if (compare(array[cursor2], tmp[cursor1]) < 0) {\n          array[dest++] = array[cursor2++];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest++] = tmp[cursor1++];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n        if (count1 !== 0) {\n          for (i = 0; i < count1; i++) {\n            array[dest + i] = tmp[cursor1 + i];\n          }\n\n          dest += count1;\n          cursor1 += count1;\n          length1 -= count1;\n\n          if (length1 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = array[cursor2++];\n\n        if (--length2 === 0) {\n          exit = true;\n          break;\n        }\n\n        count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n        if (count2 !== 0) {\n          for (i = 0; i < count2; i++) {\n            array[dest + i] = array[cursor2 + i];\n          }\n\n          dest += count2;\n          cursor2 += count2;\n          length2 -= count2;\n\n          if (length2 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = tmp[cursor1++];\n\n        if (--length1 === 1) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n    minGallop < 1 && (minGallop = 1);\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n    } else if (length1 === 0) {\n      throw new Error(); // throw new Error('mergeLow preconditions were not respected');\n    } else {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n    }\n  }\n\n  function mergeHigh(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length2; i++) {\n      tmp[i] = array[start2 + i];\n    }\n\n    var cursor1 = start1 + length1 - 1;\n    var cursor2 = length2 - 1;\n    var dest = start2 + length2 - 1;\n    var customCursor = 0;\n    var customDest = 0;\n    array[dest--] = array[cursor1--];\n\n    if (--length1 === 0) {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n\n      return;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n      return;\n    }\n\n    var _minGallop = minGallop;\n\n    while (true) {\n      var count1 = 0;\n      var count2 = 0;\n      var exit = false;\n\n      do {\n        if (compare(tmp[cursor2], array[cursor1]) < 0) {\n          array[dest--] = array[cursor1--];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest--] = tmp[cursor2--];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n        if (count1 !== 0) {\n          dest -= count1;\n          cursor1 -= count1;\n          length1 -= count1;\n          customDest = dest + 1;\n          customCursor = cursor1 + 1;\n\n          for (i = count1 - 1; i >= 0; i--) {\n            array[customDest + i] = array[customCursor + i];\n          }\n\n          if (length1 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = tmp[cursor2--];\n\n        if (--length2 === 1) {\n          exit = true;\n          break;\n        }\n\n        count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n        if (count2 !== 0) {\n          dest -= count2;\n          cursor2 -= count2;\n          length2 -= count2;\n          customDest = dest + 1;\n          customCursor = cursor2 + 1;\n\n          for (i = 0; i < count2; i++) {\n            array[customDest + i] = tmp[customCursor + i];\n          }\n\n          if (length2 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = array[cursor1--];\n\n        if (--length1 === 0) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n\n    if (minGallop < 1) {\n      minGallop = 1;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n    } else if (length2 === 0) {\n      throw new Error(); // throw new Error('mergeHigh preconditions were not respected');\n    } else {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n    }\n  }\n\n  this.mergeRuns = mergeRuns;\n  this.forceMergeRuns = forceMergeRuns;\n  this.pushRun = pushRun;\n}\n\nfunction sort(array, compare, lo, hi) {\n  if (!lo) {\n    lo = 0;\n  }\n\n  if (!hi) {\n    hi = array.length;\n  }\n\n  var remaining = hi - lo;\n\n  if (remaining < 2) {\n    return;\n  }\n\n  var runLength = 0;\n\n  if (remaining < DEFAULT_MIN_MERGE) {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n    binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n    return;\n  }\n\n  var ts = new TimSort(array, compare);\n  var minRun = minRunLength(remaining);\n\n  do {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n\n    if (runLength < minRun) {\n      var force = remaining;\n\n      if (force > minRun) {\n        force = minRun;\n      }\n\n      binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n      runLength = force;\n    }\n\n    ts.pushRun(lo, runLength);\n    ts.mergeRuns();\n    remaining -= runLength;\n    lo += runLength;\n  } while (remaining !== 0);\n\n  ts.forceMergeRuns();\n}\n\nmodule.exports = sort;","var LRU = require(\"../../core/LRU\");\n\nvar globalImageCache = new LRU(50);\n/**\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\nfunction findExistImage(newImageOrSrc) {\n  if (typeof newImageOrSrc === 'string') {\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    return cachedImgObj && cachedImgObj.image;\n  } else {\n    return newImageOrSrc;\n  }\n}\n/**\n * Caution: User should cache loaded images, but not just count on LRU.\n * Consider if required images more than LRU size, will dead loop occur?\n *\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\n * @param {module:zrender/Element} [hostEl] For calling `dirty`.\n * @param {Function} [cb] params: (image, cbPayload)\n * @param {Object} [cbPayload] Payload on cb calling.\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\n\nfunction createOrUpdateImage(newImageOrSrc, image, hostEl, cb, cbPayload) {\n  if (!newImageOrSrc) {\n    return image;\n  } else if (typeof newImageOrSrc === 'string') {\n    // Image should not be loaded repeatly.\n    if (image && image.__zrImageSrc === newImageOrSrc || !hostEl) {\n      return image;\n    } // Only when there is no existent image or existent image src\n    // is different, this method is responsible for load.\n\n\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    var pendingWrap = {\n      hostEl: hostEl,\n      cb: cb,\n      cbPayload: cbPayload\n    };\n\n    if (cachedImgObj) {\n      image = cachedImgObj.image;\n      !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n    } else {\n      !image && (image = new Image());\n      image.onload = imageOnLoad;\n      globalImageCache.put(newImageOrSrc, image.__cachedImgObj = {\n        image: image,\n        pending: [pendingWrap]\n      });\n      image.src = image.__zrImageSrc = newImageOrSrc;\n    }\n\n    return image;\n  } // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\n  else {\n      return newImageOrSrc;\n    }\n}\n\nfunction imageOnLoad() {\n  var cachedImgObj = this.__cachedImgObj;\n  this.onload = this.__cachedImgObj = null;\n\n  for (var i = 0; i < cachedImgObj.pending.length; i++) {\n    var pendingWrap = cachedImgObj.pending[i];\n    var cb = pendingWrap.cb;\n    cb && cb(this, pendingWrap.cbPayload);\n    pendingWrap.hostEl.dirty();\n  }\n\n  cachedImgObj.pending.length = 0;\n}\n\nfunction isImageReady(image) {\n  return image && image.width && image.height;\n}\n\nexports.findExistImage = findExistImage;\nexports.createOrUpdateImage = createOrUpdateImage;\nexports.isImageReady = isImageReady;","var vec2 = require(\"./vector\");\n\nvar curve = require(\"./curve\");\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI2 = Math.PI * 2;\nvar start = vec2.create();\nvar end = vec2.create();\nvar extremity = vec2.create();\n/**\n * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n * @module zrender/core/bbox\n * @param {Array<Object>} points 顶点数组\n * @param {number} min\n * @param {number} max\n */\n\nfunction fromPoints(points, min, max) {\n  if (points.length === 0) {\n    return;\n  }\n\n  var p = points[0];\n  var left = p[0];\n  var right = p[0];\n  var top = p[1];\n  var bottom = p[1];\n  var i;\n\n  for (i = 1; i < points.length; i++) {\n    p = points[i];\n    left = mathMin(left, p[0]);\n    right = mathMax(right, p[0]);\n    top = mathMin(top, p[1]);\n    bottom = mathMax(bottom, p[1]);\n  }\n\n  min[0] = left;\n  min[1] = top;\n  max[0] = right;\n  max[1] = bottom;\n}\n/**\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromLine(x0, y0, x1, y1, min, max) {\n  min[0] = mathMin(x0, x1);\n  min[1] = mathMin(y0, y1);\n  max[0] = mathMax(x0, x1);\n  max[1] = mathMax(y0, y1);\n}\n\nvar xDim = [];\nvar yDim = [];\n/**\n * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\nfunction fromCubic(x0, y0, x1, y1, x2, y2, x3, y3, min, max) {\n  var cubicExtrema = curve.cubicExtrema;\n  var cubicAt = curve.cubicAt;\n  var i;\n  var n = cubicExtrema(x0, x1, x2, x3, xDim);\n  min[0] = Infinity;\n  min[1] = Infinity;\n  max[0] = -Infinity;\n  max[1] = -Infinity;\n\n  for (i = 0; i < n; i++) {\n    var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n    min[0] = mathMin(x, min[0]);\n    max[0] = mathMax(x, max[0]);\n  }\n\n  n = cubicExtrema(y0, y1, y2, y3, yDim);\n\n  for (i = 0; i < n; i++) {\n    var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n    min[1] = mathMin(y, min[1]);\n    max[1] = mathMax(y, max[1]);\n  }\n\n  min[0] = mathMin(x0, min[0]);\n  max[0] = mathMax(x0, max[0]);\n  min[0] = mathMin(x3, min[0]);\n  max[0] = mathMax(x3, max[0]);\n  min[1] = mathMin(y0, min[1]);\n  max[1] = mathMax(y0, max[1]);\n  min[1] = mathMin(y3, min[1]);\n  max[1] = mathMax(y3, max[1]);\n}\n/**\n * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromQuadratic(x0, y0, x1, y1, x2, y2, min, max) {\n  var quadraticExtremum = curve.quadraticExtremum;\n  var quadraticAt = curve.quadraticAt; // Find extremities, where derivative in x dim or y dim is zero\n\n  var tx = mathMax(mathMin(quadraticExtremum(x0, x1, x2), 1), 0);\n  var ty = mathMax(mathMin(quadraticExtremum(y0, y1, y2), 1), 0);\n  var x = quadraticAt(x0, x1, x2, tx);\n  var y = quadraticAt(y0, y1, y2, ty);\n  min[0] = mathMin(x0, x2, x);\n  min[1] = mathMin(y0, y2, y);\n  max[0] = mathMax(x0, x2, x);\n  max[1] = mathMax(y0, y2, y);\n}\n/**\n * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n * @method\n * @memberOf module:zrender/core/bbox\n * @param {number} x\n * @param {number} y\n * @param {number} rx\n * @param {number} ry\n * @param {number} startAngle\n * @param {number} endAngle\n * @param {number} anticlockwise\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromArc(x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max) {\n  var vec2Min = vec2.min;\n  var vec2Max = vec2.max;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff % PI2 < 1e-4 && diff > 1e-4) {\n    // Is a circle\n    min[0] = x - rx;\n    min[1] = y - ry;\n    max[0] = x + rx;\n    max[1] = y + ry;\n    return;\n  }\n\n  start[0] = mathCos(startAngle) * rx + x;\n  start[1] = mathSin(startAngle) * ry + y;\n  end[0] = mathCos(endAngle) * rx + x;\n  end[1] = mathSin(endAngle) * ry + y;\n  vec2Min(min, start, end);\n  vec2Max(max, start, end); // Thresh to [0, Math.PI * 2]\n\n  startAngle = startAngle % PI2;\n\n  if (startAngle < 0) {\n    startAngle = startAngle + PI2;\n  }\n\n  endAngle = endAngle % PI2;\n\n  if (endAngle < 0) {\n    endAngle = endAngle + PI2;\n  }\n\n  if (startAngle > endAngle && !anticlockwise) {\n    endAngle += PI2;\n  } else if (startAngle < endAngle && anticlockwise) {\n    startAngle += PI2;\n  }\n\n  if (anticlockwise) {\n    var tmp = endAngle;\n    endAngle = startAngle;\n    startAngle = tmp;\n  } // var number = 0;\n  // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n\n\n  for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n    if (angle > startAngle) {\n      extremity[0] = mathCos(angle) * rx + x;\n      extremity[1] = mathSin(angle) * ry + y;\n      vec2Min(min, extremity, min);\n      vec2Max(max, extremity, max);\n    }\n  }\n}\n\nexports.fromPoints = fromPoints;\nexports.fromLine = fromLine;\nexports.fromCubic = fromCubic;\nexports.fromQuadratic = fromQuadratic;\nexports.fromArc = fromArc;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _clazz = require(\"./clazz\");\n\nvar parseClassType = _clazz.parseClassType;\nvar base = 0;\nvar DELIMITER = '_';\n/**\n * @public\n * @param {string} type\n * @return {string}\n */\n\nfunction getUID(type) {\n  // Considering the case of crossing js context,\n  // use Math.random to make id as unique as possible.\n  return [type || '', base++, Math.random()].join(DELIMITER);\n}\n/**\n * @inner\n */\n\n\nfunction enableSubTypeDefaulter(entity) {\n  var subTypeDefaulters = {};\n\n  entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n    componentType = parseClassType(componentType);\n    subTypeDefaulters[componentType.main] = defaulter;\n  };\n\n  entity.determineSubType = function (componentType, option) {\n    var type = option.type;\n\n    if (!type) {\n      var componentTypeMain = parseClassType(componentType).main;\n\n      if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n        type = subTypeDefaulters[componentTypeMain](option);\n      }\n    }\n\n    return type;\n  };\n\n  return entity;\n}\n/**\n * Topological travel on Activity Network (Activity On Vertices).\n * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n *\n * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n *\n * If there is circle dependencey, Error will be thrown.\n *\n */\n\n\nfunction enableTopologicalTravel(entity, dependencyGetter) {\n  /**\n   * @public\n   * @param {Array.<string>} targetNameList Target Component type list.\n   *                                           Can be ['aa', 'bb', 'aa.xx']\n   * @param {Array.<string>} fullNameList By which we can build dependency graph.\n   * @param {Function} callback Params: componentType, dependencies.\n   * @param {Object} context Scope of callback.\n   */\n  entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n    if (!targetNameList.length) {\n      return;\n    }\n\n    var result = makeDepndencyGraph(fullNameList);\n    var graph = result.graph;\n    var stack = result.noEntryList;\n    var targetNameSet = {};\n    zrUtil.each(targetNameList, function (name) {\n      targetNameSet[name] = true;\n    });\n\n    while (stack.length) {\n      var currComponentType = stack.pop();\n      var currVertex = graph[currComponentType];\n      var isInTargetNameSet = !!targetNameSet[currComponentType];\n\n      if (isInTargetNameSet) {\n        callback.call(context, currComponentType, currVertex.originalDeps.slice());\n        delete targetNameSet[currComponentType];\n      }\n\n      zrUtil.each(currVertex.successor, isInTargetNameSet ? removeEdgeAndAdd : removeEdge);\n    }\n\n    zrUtil.each(targetNameSet, function () {\n      throw new Error('Circle dependency may exists');\n    });\n\n    function removeEdge(succComponentType) {\n      graph[succComponentType].entryCount--;\n\n      if (graph[succComponentType].entryCount === 0) {\n        stack.push(succComponentType);\n      }\n    } // Consider this case: legend depends on series, and we call\n    // chart.setOption({series: [...]}), where only series is in option.\n    // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n    // not be called, but only sereis.mergeOption is called. Thus legend\n    // have no chance to update its local record about series (like which\n    // name of series is available in legend).\n\n\n    function removeEdgeAndAdd(succComponentType) {\n      targetNameSet[succComponentType] = true;\n      removeEdge(succComponentType);\n    }\n  };\n  /**\n   * DepndencyGraph: {Object}\n   * key: conponentType,\n   * value: {\n   *     successor: [conponentTypes...],\n   *     originalDeps: [conponentTypes...],\n   *     entryCount: {number}\n   * }\n   */\n\n\n  function makeDepndencyGraph(fullNameList) {\n    var graph = {};\n    var noEntryList = [];\n    zrUtil.each(fullNameList, function (name) {\n      var thisItem = createDependencyGraphItem(graph, name);\n      var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n      var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n      thisItem.entryCount = availableDeps.length;\n\n      if (thisItem.entryCount === 0) {\n        noEntryList.push(name);\n      }\n\n      zrUtil.each(availableDeps, function (dependentName) {\n        if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n          thisItem.predecessor.push(dependentName);\n        }\n\n        var thatItem = createDependencyGraphItem(graph, dependentName);\n\n        if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n          thatItem.successor.push(name);\n        }\n      });\n    });\n    return {\n      graph: graph,\n      noEntryList: noEntryList\n    };\n  }\n\n  function createDependencyGraphItem(graph, name) {\n    if (!graph[name]) {\n      graph[name] = {\n        predecessor: [],\n        successor: []\n      };\n    }\n\n    return graph[name];\n  }\n\n  function getAvailableDependencies(originalDeps, fullNameList) {\n    var availableDeps = [];\n    zrUtil.each(originalDeps, function (dep) {\n      zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n    });\n    return availableDeps;\n  }\n}\n\nexports.getUID = getUID;\nexports.enableSubTypeDefaulter = enableSubTypeDefaulter;\nexports.enableTopologicalTravel = enableTopologicalTravel;","var Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar Component = function () {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewComponent');\n};\n\nComponent.prototype = {\n  constructor: Component,\n  init: function (ecModel, api) {},\n  render: function (componentModel, ecModel, api, payload) {},\n  dispose: function () {}\n};\nvar componentProto = Component.prototype;\n\ncomponentProto.updateView = componentProto.updateLayout = componentProto.updateVisual = function (seriesModel, ecModel, api, payload) {// Do nothing;\n}; // Enable Component.extend.\n\n\nclazzUtil.enableClassExtend(Component); // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Component, {\n  registerWhenExtend: true\n});\nvar _default = Component;\nmodule.exports = _default;","function _default(seriesType, ecModel) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (!coordSys) {\n      return;\n    }\n\n    var dims = [];\n    var coordDims = coordSys.dimensions;\n\n    for (var i = 0; i < coordDims.length; i++) {\n      dims.push(seriesModel.coordDimToDataDim(coordSys.dimensions[i])[0]);\n    }\n\n    if (dims.length === 1) {\n      data.each(dims[0], function (x, idx) {\n        // Also {Array.<number>}, not undefined to avoid if...else... statement\n        data.setItemLayout(idx, isNaN(x) ? [NaN, NaN] : coordSys.dataToPoint(x));\n      });\n    } else if (dims.length === 2) {\n      data.each(dims, function (x, y, idx) {\n        // Also {Array.<number>}, not undefined to avoid if...else... statement\n        data.setItemLayout(idx, isNaN(x) || isNaN(y) ? [NaN, NaN] : coordSys.dataToPoint([x, y]));\n      }, true);\n    }\n  });\n}\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar Cartesian2D = require(\"./Cartesian2D\");\n\nvar Axis2D = require(\"./Axis2D\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nrequire(\"./GridModel\");\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\n// Depends on GridModel, AxisModel, which performs preprocess.\nvar each = zrUtil.each;\nvar ifAxisCrossZero = axisHelper.ifAxisCrossZero;\nvar niceScaleExtent = axisHelper.niceScaleExtent;\n/**\n * Check if the axis is used in the specified grid\n * @inner\n */\n\nfunction isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n  return axisModel.getCoordSysModel() === gridModel;\n}\n\nfunction rotateTextRect(textRect, rotate) {\n  var rotateRadians = rotate * Math.PI / 180;\n  var boundingBox = textRect.plain();\n  var beforeWidth = boundingBox.width;\n  var beforeHeight = boundingBox.height;\n  var afterWidth = beforeWidth * Math.cos(rotateRadians) + beforeHeight * Math.sin(rotateRadians);\n  var afterHeight = beforeWidth * Math.sin(rotateRadians) + beforeHeight * Math.cos(rotateRadians);\n  var rotatedRect = new BoundingRect(boundingBox.x, boundingBox.y, afterWidth, afterHeight);\n  return rotatedRect;\n}\n\nfunction getLabelUnionRect(axis) {\n  var axisModel = axis.model;\n  var labels = axisModel.getFormattedLabels();\n  var axisLabelModel = axisModel.getModel('axisLabel');\n  var rect;\n  var step = 1;\n  var labelCount = labels.length;\n\n  if (labelCount > 40) {\n    // Simple optimization for large amount of labels\n    step = Math.ceil(labelCount / 40);\n  }\n\n  for (var i = 0; i < labelCount; i += step) {\n    if (!axis.isLabelIgnored(i)) {\n      var unrotatedSingleRect = axisLabelModel.getTextRect(labels[i]);\n      var singleRect = rotateTextRect(unrotatedSingleRect, axisLabelModel.get('rotate') || 0);\n      rect ? rect.union(singleRect) : rect = singleRect;\n    }\n  }\n\n  return rect;\n}\n\nfunction Grid(gridModel, ecModel, api) {\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n   * @private\n   */\n  this._coordsMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n   * @private\n   */\n\n  this._coordsList = [];\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesList = [];\n\n  this._initCartesian(gridModel, ecModel, api);\n\n  this.model = gridModel;\n}\n\nvar gridProto = Grid.prototype;\ngridProto.type = 'grid';\ngridProto.axisPointerEnabled = true;\n\ngridProto.getRect = function () {\n  return this._rect;\n};\n\ngridProto.update = function (ecModel, api) {\n  var axesMap = this._axesMap;\n\n  this._updateScale(ecModel, this.model);\n\n  each(axesMap.x, function (xAxis) {\n    niceScaleExtent(xAxis.scale, xAxis.model);\n  });\n  each(axesMap.y, function (yAxis) {\n    niceScaleExtent(yAxis.scale, yAxis.model);\n  });\n  each(axesMap.x, function (xAxis) {\n    fixAxisOnZero(axesMap, 'y', xAxis);\n  });\n  each(axesMap.y, function (yAxis) {\n    fixAxisOnZero(axesMap, 'x', yAxis);\n  }); // Resize again if containLabel is enabled\n  // FIXME It may cause getting wrong grid size in data processing stage\n\n  this.resize(this.model, api);\n};\n\nfunction fixAxisOnZero(axesMap, otherAxisDim, axis) {\n  // onZero can not be enabled in these two situations:\n  // 1. When any other axis is a category axis.\n  // 2. When no axis is cross 0 point.\n  var axes = axesMap[otherAxisDim];\n\n  if (!axis.onZero) {\n    return;\n  }\n\n  var onZeroAxisIndex = axis.onZeroAxisIndex; // If target axis is specified.\n\n  if (onZeroAxisIndex != null) {\n    var otherAxis = axes[onZeroAxisIndex];\n\n    if (otherAxis && canNotOnZeroToAxis(otherAxis)) {\n      axis.onZero = false;\n    }\n\n    return;\n  }\n\n  for (var idx in axes) {\n    if (axes.hasOwnProperty(idx)) {\n      var otherAxis = axes[idx];\n\n      if (otherAxis && !canNotOnZeroToAxis(otherAxis)) {\n        onZeroAxisIndex = +idx;\n        break;\n      }\n    }\n  }\n\n  if (onZeroAxisIndex == null) {\n    axis.onZero = false;\n  }\n\n  axis.onZeroAxisIndex = onZeroAxisIndex;\n}\n\nfunction canNotOnZeroToAxis(axis) {\n  return axis.type === 'category' || axis.type === 'time' || !ifAxisCrossZero(axis);\n}\n/**\n * Resize the grid\n * @param {module:echarts/coord/cartesian/GridModel} gridModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\ngridProto.resize = function (gridModel, api, ignoreContainLabel) {\n  var gridRect = getLayoutRect(gridModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n  this._rect = gridRect;\n  var axesList = this._axesList;\n  adjustAxes(); // Minus label size\n\n  if (!ignoreContainLabel && gridModel.get('containLabel')) {\n    each(axesList, function (axis) {\n      if (!axis.model.get('axisLabel.inside')) {\n        var labelUnionRect = getLabelUnionRect(axis);\n\n        if (labelUnionRect) {\n          var dim = axis.isHorizontal() ? 'height' : 'width';\n          var margin = axis.model.get('axisLabel.margin');\n          gridRect[dim] -= labelUnionRect[dim] + margin;\n\n          if (axis.position === 'top') {\n            gridRect.y += labelUnionRect.height + margin;\n          } else if (axis.position === 'left') {\n            gridRect.x += labelUnionRect.width + margin;\n          }\n        }\n      }\n    });\n    adjustAxes();\n  }\n\n  function adjustAxes() {\n    each(axesList, function (axis) {\n      var isHorizontal = axis.isHorizontal();\n      var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(extent[idx], extent[1 - idx]);\n      updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n    });\n  }\n};\n/**\n * @param {string} axisType\n * @param {number} [axisIndex]\n */\n\n\ngridProto.getAxis = function (axisType, axisIndex) {\n  var axesMapOnDim = this._axesMap[axisType];\n\n  if (axesMapOnDim != null) {\n    if (axisIndex == null) {\n      // Find first axis\n      for (var name in axesMapOnDim) {\n        if (axesMapOnDim.hasOwnProperty(name)) {\n          return axesMapOnDim[name];\n        }\n      }\n    }\n\n    return axesMapOnDim[axisIndex];\n  }\n};\n/**\n * @return {Array.<module:echarts/coord/Axis>}\n */\n\n\ngridProto.getAxes = function () {\n  return this._axesList.slice();\n};\n/**\n * Usage:\n *      grid.getCartesian(xAxisIndex, yAxisIndex);\n *      grid.getCartesian(xAxisIndex);\n *      grid.getCartesian(null, yAxisIndex);\n *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n *\n * @param {number|Object} [xAxisIndex]\n * @param {number} [yAxisIndex]\n */\n\n\ngridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n  if (xAxisIndex != null && yAxisIndex != null) {\n    var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n    return this._coordsMap[key];\n  }\n\n  if (zrUtil.isObject(xAxisIndex)) {\n    yAxisIndex = xAxisIndex.yAxisIndex;\n    xAxisIndex = xAxisIndex.xAxisIndex;\n  } // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n\n\n  for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n    if (coordList[i].getAxis('x').index === xAxisIndex || coordList[i].getAxis('y').index === yAxisIndex) {\n      return coordList[i];\n    }\n  }\n};\n\ngridProto.getCartesians = function () {\n  return this._coordsList.slice();\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertToPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.dataToPoint(value) : target.axis ? target.axis.toGlobalCoord(target.axis.dataToCoord(value)) : null;\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertFromPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.pointToData(value) : target.axis ? target.axis.coordToData(target.axis.toLocalCoord(value)) : null;\n};\n/**\n * @inner\n */\n\n\ngridProto._findConvertTarget = function (ecModel, finder) {\n  var seriesModel = finder.seriesModel;\n  var xAxisModel = finder.xAxisModel || seriesModel && seriesModel.getReferringComponents('xAxis')[0];\n  var yAxisModel = finder.yAxisModel || seriesModel && seriesModel.getReferringComponents('yAxis')[0];\n  var gridModel = finder.gridModel;\n  var coordsList = this._coordsList;\n  var cartesian;\n  var axis;\n\n  if (seriesModel) {\n    cartesian = seriesModel.coordinateSystem;\n    zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n  } else if (xAxisModel && yAxisModel) {\n    cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  } else if (xAxisModel) {\n    axis = this.getAxis('x', xAxisModel.componentIndex);\n  } else if (yAxisModel) {\n    axis = this.getAxis('y', yAxisModel.componentIndex);\n  } // Lowest priority.\n  else if (gridModel) {\n      var grid = gridModel.coordinateSystem;\n\n      if (grid === this) {\n        cartesian = this._coordsList[0];\n      }\n    }\n\n  return {\n    cartesian: cartesian,\n    axis: axis\n  };\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.containPoint = function (point) {\n  var coord = this._coordsList[0];\n\n  if (coord) {\n    return coord.containPoint(point);\n  }\n};\n/**\n * Initialize cartesian coordinate systems\n * @private\n */\n\n\ngridProto._initCartesian = function (gridModel, ecModel, api) {\n  var axisPositionUsed = {\n    left: false,\n    right: false,\n    top: false,\n    bottom: false\n  };\n  var axesMap = {\n    x: {},\n    y: {}\n  };\n  var axesCount = {\n    x: 0,\n    y: 0\n  }; /// Create axis\n\n  ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n  ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n  if (!axesCount.x || !axesCount.y) {\n    // Roll back when there no either x or y axis\n    this._axesMap = {};\n    this._axesList = [];\n    return;\n  }\n\n  this._axesMap = axesMap; /// Create cartesian2d\n\n  each(axesMap.x, function (xAxis, xAxisIndex) {\n    each(axesMap.y, function (yAxis, yAxisIndex) {\n      var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n      var cartesian = new Cartesian2D(key);\n      cartesian.grid = this;\n      cartesian.model = gridModel;\n      this._coordsMap[key] = cartesian;\n\n      this._coordsList.push(cartesian);\n\n      cartesian.addAxis(xAxis);\n      cartesian.addAxis(yAxis);\n    }, this);\n  }, this);\n\n  function createAxisCreator(axisType) {\n    return function (axisModel, idx) {\n      if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var axisPosition = axisModel.get('position');\n\n      if (axisType === 'x') {\n        // Fix position\n        if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n          // Default bottom of X\n          axisPosition = 'bottom';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n          }\n        }\n      } else {\n        // Fix position\n        if (axisPosition !== 'left' && axisPosition !== 'right') {\n          // Default left of Y\n          axisPosition = 'left';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n          }\n        }\n      }\n\n      axisPositionUsed[axisPosition] = true;\n      var axis = new Axis2D(axisType, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisPosition);\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse');\n      axis.onZero = axisModel.get('axisLine.onZero');\n      axis.onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex'); // Inject axis into axisModel\n\n      axisModel.axis = axis; // Inject axisModel into axis\n\n      axis.model = axisModel; // Inject grid info axis\n\n      axis.grid = this; // Index of axis, can be used as key\n\n      axis.index = idx;\n\n      this._axesList.push(axis);\n\n      axesMap[axisType][idx] = axis;\n      axesCount[axisType]++;\n    };\n  }\n};\n/**\n * Update cartesian properties from series\n * @param  {module:echarts/model/Option} option\n * @private\n */\n\n\ngridProto._updateScale = function (ecModel, gridModel) {\n  // Reset scale\n  zrUtil.each(this._axesList, function (axis) {\n    axis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (isCartesian2D(seriesModel)) {\n      var axesModels = findAxesModels(seriesModel, ecModel);\n      var xAxisModel = axesModels[0];\n      var yAxisModel = axesModels[1];\n\n      if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel) || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n      var data = seriesModel.getData();\n      var xAxis = cartesian.getAxis('x');\n      var yAxis = cartesian.getAxis('y');\n\n      if (data.type === 'list') {\n        unionExtent(data, xAxis, seriesModel);\n        unionExtent(data, yAxis, seriesModel);\n      }\n    }\n  }, this);\n\n  function unionExtent(data, axis, seriesModel) {\n    each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n      axis.scale.unionExtentFromData(data, dim);\n    });\n  }\n};\n/**\n * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n * @return {Object} {baseAxes: [], otherAxes: []}\n */\n\n\ngridProto.getTooltipAxes = function (dim) {\n  var baseAxes = [];\n  var otherAxes = [];\n  each(this.getCartesians(), function (cartesian) {\n    var baseAxis = dim != null && dim !== 'auto' ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n    var otherAxis = cartesian.getOtherAxis(baseAxis);\n    zrUtil.indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n    zrUtil.indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n  });\n  return {\n    baseAxes: baseAxes,\n    otherAxes: otherAxes\n  };\n};\n/**\n * @inner\n */\n\n\nfunction updateAxisTransfrom(axis, coordBase) {\n  var axisExtent = axis.getExtent();\n  var axisExtentSum = axisExtent[0] + axisExtent[1]; // Fast transform\n\n  axis.toGlobalCoord = axis.dim === 'x' ? function (coord) {\n    return coord + coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n  axis.toLocalCoord = axis.dim === 'x' ? function (coord) {\n    return coord - coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n}\n\nvar axesTypes = ['xAxis', 'yAxis'];\n/**\n * @inner\n */\n\nfunction findAxesModels(seriesModel, ecModel) {\n  return zrUtil.map(axesTypes, function (axisType) {\n    var axisModel = seriesModel.getReferringComponents(axisType)[0];\n    return axisModel;\n  });\n}\n/**\n * @inner\n */\n\n\nfunction isCartesian2D(seriesModel) {\n  return seriesModel.get('coordinateSystem') === 'cartesian2d';\n}\n\nGrid.create = function (ecModel, api) {\n  var grids = [];\n  ecModel.eachComponent('grid', function (gridModel, idx) {\n    var grid = new Grid(gridModel, ecModel, api);\n    grid.name = 'grid_' + idx; // dataSampling requires axis extent, so resize\n    // should be performed in create stage.\n\n    grid.resize(gridModel, api, true);\n    gridModel.coordinateSystem = grid;\n    grids.push(grid);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (!isCartesian2D(seriesModel)) {\n      return;\n    }\n\n    var axesModels = findAxesModels(seriesModel, ecModel);\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var gridModel = xAxisModel.getCoordSysModel();\n    var grid = gridModel.coordinateSystem;\n    seriesModel.coordinateSystem = grid.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  });\n  return grids;\n}; // For deciding which dimensions to use when creating list data\n\n\nGrid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\nCoordinateSystem.register('cartesian2d', Grid);\nvar _default = Grid;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar STACK_PREFIX = '__ec_stack_';\n\nfunction getSeriesStackId(seriesModel) {\n  return seriesModel.get('stack') || STACK_PREFIX + seriesModel.seriesIndex;\n}\n\nfunction getAxisKey(axis) {\n  return axis.dim + axis.index;\n}\n/**\n * @param {Object} opt\n * @param {module:echarts/coord/Axis} opt.axis Only support category axis currently.\n * @param {number} opt.count Positive interger.\n * @param {number} [opt.barWidth]\n * @param {number} [opt.barMaxWidth]\n * @param {number} [opt.barGap]\n * @param {number} [opt.barCategoryGap]\n * @return {Object} {width, offset, offsetCenter} If axis.type is not 'category', return undefined.\n */\n\n\nfunction getLayoutOnAxis(opt, api) {\n  var params = [];\n  var baseAxis = opt.axis;\n  var axisKey = 'axis0';\n\n  if (baseAxis.type !== 'category') {\n    return;\n  }\n\n  var bandWidth = baseAxis.getBandWidth();\n\n  for (var i = 0; i < opt.count || 0; i++) {\n    params.push(zrUtil.defaults({\n      bandWidth: bandWidth,\n      axisKey: axisKey,\n      stackId: STACK_PREFIX + i\n    }, opt));\n  }\n\n  var widthAndOffsets = doCalBarWidthAndOffset(params, api);\n  var result = [];\n\n  for (var i = 0; i < opt.count; i++) {\n    var item = widthAndOffsets[axisKey][STACK_PREFIX + i];\n    item.offsetCenter = item.offset + item.width / 2;\n    result.push(item);\n  }\n\n  return result;\n}\n\nfunction calBarWidthAndOffset(barSeries, api) {\n  var seriesInfoList = zrUtil.map(barSeries, function (seriesModel) {\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var axisExtent = baseAxis.getExtent();\n    var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\n    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);\n    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);\n    var barGap = seriesModel.get('barGap');\n    var barCategoryGap = seriesModel.get('barCategoryGap');\n    return {\n      bandWidth: bandWidth,\n      barWidth: barWidth,\n      barMaxWidth: barMaxWidth,\n      barGap: barGap,\n      barCategoryGap: barCategoryGap,\n      axisKey: getAxisKey(baseAxis),\n      stackId: getSeriesStackId(seriesModel)\n    };\n  });\n  return doCalBarWidthAndOffset(seriesInfoList, api);\n}\n\nfunction doCalBarWidthAndOffset(seriesInfoList, api) {\n  // Columns info on each category axis. Key is cartesian name\n  var columnsMap = {};\n  zrUtil.each(seriesInfoList, function (seriesInfo, idx) {\n    var axisKey = seriesInfo.axisKey;\n    var bandWidth = seriesInfo.bandWidth;\n    var columnsOnAxis = columnsMap[axisKey] || {\n      bandWidth: bandWidth,\n      remainedWidth: bandWidth,\n      autoWidthCount: 0,\n      categoryGap: '20%',\n      gap: '30%',\n      stacks: {}\n    };\n    var stacks = columnsOnAxis.stacks;\n    columnsMap[axisKey] = columnsOnAxis;\n    var stackId = seriesInfo.stackId;\n\n    if (!stacks[stackId]) {\n      columnsOnAxis.autoWidthCount++;\n    }\n\n    stacks[stackId] = stacks[stackId] || {\n      width: 0,\n      maxWidth: 0\n    }; // Caution: In a single coordinate system, these barGrid attributes\n    // will be shared by series. Consider that they have default values,\n    // only the attributes set on the last series will work.\n    // Do not change this fact unless there will be a break change.\n    // TODO\n\n    var barWidth = seriesInfo.barWidth;\n\n    if (barWidth && !stacks[stackId].width) {\n      // See #6312, do not restrict width.\n      stacks[stackId].width = barWidth;\n      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n      columnsOnAxis.remainedWidth -= barWidth;\n    }\n\n    var barMaxWidth = seriesInfo.barMaxWidth;\n    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n    var barGap = seriesInfo.barGap;\n    barGap != null && (columnsOnAxis.gap = barGap);\n    var barCategoryGap = seriesInfo.barCategoryGap;\n    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\n  });\n  var result = {};\n  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n    result[coordSysName] = {};\n    var stacks = columnsOnAxis.stacks;\n    var bandWidth = columnsOnAxis.bandWidth;\n    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n    var remainedWidth = columnsOnAxis.remainedWidth;\n    var autoWidthCount = columnsOnAxis.autoWidthCount;\n    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\n\n    zrUtil.each(stacks, function (column, stack) {\n      var maxWidth = column.maxWidth;\n\n      if (maxWidth && maxWidth < autoWidth) {\n        maxWidth = Math.min(maxWidth, remainedWidth);\n\n        if (column.width) {\n          maxWidth = Math.min(maxWidth, column.width);\n        }\n\n        remainedWidth -= maxWidth;\n        column.width = maxWidth;\n        autoWidthCount--;\n      }\n    }); // Recalculate width again\n\n    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0);\n    var widthSum = 0;\n    var lastColumn;\n    zrUtil.each(stacks, function (column, idx) {\n      if (!column.width) {\n        column.width = autoWidth;\n      }\n\n      lastColumn = column;\n      widthSum += column.width * (1 + barGapPercent);\n    });\n\n    if (lastColumn) {\n      widthSum -= lastColumn.width * barGapPercent;\n    }\n\n    var offset = -widthSum / 2;\n    zrUtil.each(stacks, function (column, stackId) {\n      result[coordSysName][stackId] = result[coordSysName][stackId] || {\n        offset: offset,\n        width: column.width\n      };\n      offset += column.width * (1 + barGapPercent);\n    });\n  });\n  return result;\n}\n/**\n * @param {string} seriesType\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction barLayoutGrid(seriesType, ecModel, api) {\n  var barWidthAndOffset = calBarWidthAndOffset(zrUtil.filter(ecModel.getSeriesByType(seriesType), function (seriesModel) {\n    return !ecModel.isSeriesFiltered(seriesModel) && seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'cartesian2d';\n  }));\n  var lastStackCoords = {};\n  var lastStackCoordsOrigin = {};\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    // Check series coordinate, do layout for cartesian2d only\n    if (seriesModel.coordinateSystem.type !== 'cartesian2d') {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var stackId = getSeriesStackId(seriesModel);\n    var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n    var columnOffset = columnLayoutInfo.offset;\n    var columnWidth = columnLayoutInfo.width;\n    var valueAxis = cartesian.getOtherAxis(baseAxis);\n    var barMinHeight = seriesModel.get('barMinHeight') || 0;\n    var valueAxisStart = baseAxis.onZero ? valueAxis.toGlobalCoord(valueAxis.dataToCoord(0)) : valueAxis.getGlobalExtent()[0];\n    var coordDims = [seriesModel.coordDimToDataDim('x')[0], seriesModel.coordDimToDataDim('y')[0]];\n    var coords = data.mapArray(coordDims, function (x, y) {\n      return cartesian.dataToPoint([x, y]);\n    }, true);\n    lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n    lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n    data.setLayout({\n      offset: columnOffset,\n      size: columnWidth\n    });\n    data.each(seriesModel.coordDimToDataDim(valueAxis.dim)[0], function (value, idx) {\n      if (isNaN(value)) {\n        return;\n      }\n\n      if (!lastStackCoords[stackId][idx]) {\n        lastStackCoords[stackId][idx] = {\n          p: valueAxisStart,\n          // Positive stack\n          n: valueAxisStart // Negative stack\n\n        };\n        lastStackCoordsOrigin[stackId][idx] = {\n          p: valueAxisStart,\n          // Positive stack\n          n: valueAxisStart // Negative stack\n\n        };\n      }\n\n      var sign = value >= 0 ? 'p' : 'n';\n      var coord = coords[idx];\n      var lastCoord = lastStackCoords[stackId][idx][sign];\n      var lastCoordOrigin = lastStackCoordsOrigin[stackId][idx][sign];\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (valueAxis.isHorizontal()) {\n        x = lastCoord;\n        y = coord[1] + columnOffset;\n        width = coord[0] - lastCoordOrigin;\n        height = columnWidth;\n        lastStackCoordsOrigin[stackId][idx][sign] += width;\n\n        if (Math.abs(width) < barMinHeight) {\n          width = (width < 0 ? -1 : 1) * barMinHeight;\n        }\n\n        lastStackCoords[stackId][idx][sign] += width;\n      } else {\n        x = coord[0] + columnOffset;\n        y = lastCoord;\n        width = columnWidth;\n        height = coord[1] - lastCoordOrigin;\n        lastStackCoordsOrigin[stackId][idx][sign] += height;\n\n        if (Math.abs(height) < barMinHeight) {\n          // Include zero to has a positive bar\n          height = (height <= 0 ? -1 : 1) * barMinHeight;\n        }\n\n        lastStackCoords[stackId][idx][sign] += height;\n      }\n\n      data.setItemLayout(idx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      });\n    }, true);\n  }, this);\n}\n\nbarLayoutGrid.getLayoutOnAxis = getLayoutOnAxis;\nvar _default = barLayoutGrid;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * Data selectable mixin for chart series.\n * To eanble data select, option of series must have `selectedMode`.\n * And each data item will use `selected` to toggle itself selected status\n */\nvar _default = {\n  updateSelectedMap: function (targetList) {\n    this._targetList = targetList.slice();\n    this._selectTargetMap = zrUtil.reduce(targetList || [], function (targetMap, target) {\n      targetMap.set(target.name, target);\n      return targetMap;\n    }, zrUtil.createHashMap());\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  // PENGING If selectedMode is null ?\n  select: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      this._selectTargetMap.each(function (target) {\n        target.selected = false;\n      });\n    }\n\n    target && (target.selected = true);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  unSelect: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name); // var selectedMode = this.get('selectedMode');\n    // selectedMode !== 'single' && target && (target.selected = false);\n\n    target && (target.selected = false);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  toggleSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n\n    if (target != null) {\n      this[target.selected ? 'unSelect' : 'select'](name, id);\n      return target.selected;\n    }\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  isSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    return target && target.selected;\n  }\n};\nmodule.exports = _default;","// Pick color from palette for each data item.\n// Applicable for charts that require applying color palette\n// in data level (like pie, funnel, chord).\nfunction _default(seriesType, ecModel) {\n  // Pie and funnel may use diferrent scope\n  var paletteScope = {};\n  ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n    var dataAll = seriesModel.getRawData();\n    var idxMap = {};\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      var data = seriesModel.getData();\n      data.each(function (idx) {\n        var rawIdx = data.getRawIndex(idx);\n        idxMap[rawIdx] = idx;\n      });\n      dataAll.each(function (rawIdx) {\n        var filteredIdx = idxMap[rawIdx]; // If series.itemStyle.normal.color is a function. itemVisual may be encoded\n\n        var singleDataColor = filteredIdx != null && data.getItemVisual(filteredIdx, 'color', true);\n\n        if (!singleDataColor) {\n          // FIXME Performance\n          var itemModel = dataAll.getItemModel(rawIdx);\n          var color = itemModel.get('itemStyle.normal.color') || seriesModel.getColorFromPalette(dataAll.getName(rawIdx), paletteScope); // Legend may use the visual info in data before processed\n\n          dataAll.setItemVisual(rawIdx, 'color', color); // Data is not filtered\n\n          if (filteredIdx != null) {\n            data.setItemVisual(filteredIdx, 'color', color);\n          }\n        } else {\n          // Set data all color for legend\n          dataAll.setItemVisual(rawIdx, 'color', singleDataColor);\n        }\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","var IRRELEVANT_EXCLUDES = {\n  'axisPointer': 1,\n  'tooltip': 1,\n  'brush': 1\n};\n/**\n * Avoid that: mouse click on a elements that is over geo or graph,\n * but roam is triggered.\n */\n\nfunction onIrrelevantElement(e, api, targetCoordSysModel) {\n  var model = api.getComponentByElement(e.topTarget); // If model is axisModel, it works only if it is injected with coordinateSystem.\n\n  var coordSys = model && model.coordinateSystem;\n  return model && model !== targetCoordSysModel && !IRRELEVANT_EXCLUDES[model.mainType] && coordSys && coordSys.model !== targetCoordSysModel;\n}\n\nexports.onIrrelevantElement = onIrrelevantElement;","var graphic = require(\"../../util/graphic\");\n\nvar LineGroup = require(\"./Line\");\n\n/**\n * @module echarts/chart/helper/LineDraw\n */\nfunction isPointNaN(pt) {\n  return isNaN(pt[0]) || isNaN(pt[1]);\n}\n\nfunction lineNeedsDraw(pts) {\n  return !isPointNaN(pts[0]) && !isPointNaN(pts[1]);\n}\n/**\n * @alias module:echarts/component/marker/LineDraw\n * @constructor\n */\n\n\nfunction LineDraw(ctor) {\n  this._ctor = ctor || LineGroup;\n  this.group = new graphic.Group();\n}\n\nvar lineDrawProto = LineDraw.prototype;\n/**\n * @param {module:echarts/data/List} lineData\n */\n\nlineDrawProto.updateData = function (lineData) {\n  var oldLineData = this._lineData;\n  var group = this.group;\n  var LineCtor = this._ctor;\n  var hostModel = lineData.hostModel;\n  var seriesScope = {\n    lineStyle: hostModel.getModel('lineStyle.normal').getLineStyle(),\n    hoverLineStyle: hostModel.getModel('lineStyle.emphasis').getLineStyle(),\n    labelModel: hostModel.getModel('label.normal'),\n    hoverLabelModel: hostModel.getModel('label.emphasis')\n  };\n  lineData.diff(oldLineData).add(function (idx) {\n    if (!lineNeedsDraw(lineData.getItemLayout(idx))) {\n      return;\n    }\n\n    var lineGroup = new LineCtor(lineData, idx, seriesScope);\n    lineData.setItemGraphicEl(idx, lineGroup);\n    group.add(lineGroup);\n  }).update(function (newIdx, oldIdx) {\n    var lineGroup = oldLineData.getItemGraphicEl(oldIdx);\n\n    if (!lineNeedsDraw(lineData.getItemLayout(newIdx))) {\n      group.remove(lineGroup);\n      return;\n    }\n\n    if (!lineGroup) {\n      lineGroup = new LineCtor(lineData, newIdx, seriesScope);\n    } else {\n      lineGroup.updateData(lineData, newIdx, seriesScope);\n    }\n\n    lineData.setItemGraphicEl(newIdx, lineGroup);\n    group.add(lineGroup);\n  }).remove(function (idx) {\n    group.remove(oldLineData.getItemGraphicEl(idx));\n  }).execute();\n  this._lineData = lineData;\n};\n\nlineDrawProto.updateLayout = function () {\n  var lineData = this._lineData;\n  lineData.eachItemGraphicEl(function (el, idx) {\n    el.updateLayout(lineData, idx);\n  }, this);\n};\n\nlineDrawProto.remove = function () {\n  this.group.removeAll();\n};\n\nvar _default = LineDraw;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar symbolUtil = require(\"../../util/symbol\");\n\nvar LinePath = require(\"./LinePath\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _number = require(\"../../util/number\");\n\nvar round = _number.round;\n\n/**\n * @module echarts/chart/helper/Line\n */\nvar SYMBOL_CATEGORIES = ['fromSymbol', 'toSymbol'];\n\nfunction makeSymbolTypeKey(symbolCategory) {\n  return '_' + symbolCategory + 'Type';\n}\n/**\n * @inner\n */\n\n\nfunction createSymbol(name, lineData, idx) {\n  var color = lineData.getItemVisual(idx, 'color');\n  var symbolType = lineData.getItemVisual(idx, name);\n  var symbolSize = lineData.getItemVisual(idx, name + 'Size');\n\n  if (!symbolType || symbolType === 'none') {\n    return;\n  }\n\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [symbolSize, symbolSize];\n  }\n\n  var symbolPath = symbolUtil.createSymbol(symbolType, -symbolSize[0] / 2, -symbolSize[1] / 2, symbolSize[0], symbolSize[1], color);\n  symbolPath.name = name;\n  return symbolPath;\n}\n\nfunction createLine(points) {\n  var line = new LinePath({\n    name: 'line'\n  });\n  setLinePoints(line.shape, points);\n  return line;\n}\n\nfunction setLinePoints(targetShape, points) {\n  var p1 = points[0];\n  var p2 = points[1];\n  var cp1 = points[2];\n  targetShape.x1 = p1[0];\n  targetShape.y1 = p1[1];\n  targetShape.x2 = p2[0];\n  targetShape.y2 = p2[1];\n  targetShape.percent = 1;\n\n  if (cp1) {\n    targetShape.cpx1 = cp1[0];\n    targetShape.cpy1 = cp1[1];\n  } else {\n    targetShape.cpx1 = NaN;\n    targetShape.cpy1 = NaN;\n  }\n}\n\nfunction updateSymbolAndLabelBeforeLineUpdate() {\n  var lineGroup = this;\n  var symbolFrom = lineGroup.childOfName('fromSymbol');\n  var symbolTo = lineGroup.childOfName('toSymbol');\n  var label = lineGroup.childOfName('label'); // Quick reject\n\n  if (!symbolFrom && !symbolTo && label.ignore) {\n    return;\n  }\n\n  var invScale = 1;\n  var parentNode = this.parent;\n\n  while (parentNode) {\n    if (parentNode.scale) {\n      invScale /= parentNode.scale[0];\n    }\n\n    parentNode = parentNode.parent;\n  }\n\n  var line = lineGroup.childOfName('line'); // If line not changed\n  // FIXME Parent scale changed\n\n  if (!this.__dirty && !line.__dirty) {\n    return;\n  }\n\n  var percent = line.shape.percent;\n  var fromPos = line.pointAt(0);\n  var toPos = line.pointAt(percent);\n  var d = vector.sub([], toPos, fromPos);\n  vector.normalize(d, d);\n\n  if (symbolFrom) {\n    symbolFrom.attr('position', fromPos);\n    var tangent = line.tangentAt(0);\n    symbolFrom.attr('rotation', Math.PI / 2 - Math.atan2(tangent[1], tangent[0]));\n    symbolFrom.attr('scale', [invScale * percent, invScale * percent]);\n  }\n\n  if (symbolTo) {\n    symbolTo.attr('position', toPos);\n    var tangent = line.tangentAt(1);\n    symbolTo.attr('rotation', -Math.PI / 2 - Math.atan2(tangent[1], tangent[0]));\n    symbolTo.attr('scale', [invScale * percent, invScale * percent]);\n  }\n\n  if (!label.ignore) {\n    label.attr('position', toPos);\n    var textPosition;\n    var textAlign;\n    var textVerticalAlign;\n    var distance = 5 * invScale; // End\n\n    if (label.__position === 'end') {\n      textPosition = [d[0] * distance + toPos[0], d[1] * distance + toPos[1]];\n      textAlign = d[0] > 0.8 ? 'left' : d[0] < -0.8 ? 'right' : 'center';\n      textVerticalAlign = d[1] > 0.8 ? 'top' : d[1] < -0.8 ? 'bottom' : 'middle';\n    } // Middle\n    else if (label.__position === 'middle') {\n        var halfPercent = percent / 2;\n        var tangent = line.tangentAt(halfPercent);\n        var n = [tangent[1], -tangent[0]];\n        var cp = line.pointAt(halfPercent);\n\n        if (n[1] > 0) {\n          n[0] = -n[0];\n          n[1] = -n[1];\n        }\n\n        textPosition = [cp[0] + n[0] * distance, cp[1] + n[1] * distance];\n        textAlign = 'center';\n        textVerticalAlign = 'bottom';\n        var rotation = -Math.atan2(tangent[1], tangent[0]);\n\n        if (toPos[0] < fromPos[0]) {\n          rotation = Math.PI + rotation;\n        }\n\n        label.attr('rotation', rotation);\n      } // Start\n      else {\n          textPosition = [-d[0] * distance + fromPos[0], -d[1] * distance + fromPos[1]];\n          textAlign = d[0] > 0.8 ? 'right' : d[0] < -0.8 ? 'left' : 'center';\n          textVerticalAlign = d[1] > 0.8 ? 'bottom' : d[1] < -0.8 ? 'top' : 'middle';\n        }\n\n    label.attr({\n      style: {\n        // Use the user specified text align and baseline first\n        textVerticalAlign: label.__verticalAlign || textVerticalAlign,\n        textAlign: label.__textAlign || textAlign\n      },\n      position: textPosition,\n      scale: [invScale, invScale]\n    });\n  }\n}\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Line}\n */\n\n\nfunction Line(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n\n  this._createLine(lineData, idx, seriesScope);\n}\n\nvar lineProto = Line.prototype; // Update symbol position and rotation\n\nlineProto.beforeUpdate = updateSymbolAndLabelBeforeLineUpdate;\n\nlineProto._createLine = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var linePoints = lineData.getItemLayout(idx);\n  var line = createLine(linePoints);\n  line.shape.percent = 0;\n  graphic.initProps(line, {\n    shape: {\n      percent: 1\n    }\n  }, seriesModel, idx);\n  this.add(line);\n  var label = new graphic.Text({\n    name: 'label'\n  });\n  this.add(label);\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbol = createSymbol(symbolCategory, lineData, idx); // symbols must added after line to make sure\n    // it will be updated after line#update.\n    // Or symbol position and rotation update in line#beforeUpdate will be one frame slow\n\n    this.add(symbol);\n    this[makeSymbolTypeKey(symbolCategory)] = lineData.getItemVisual(idx, symbolCategory);\n  }, this);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\nlineProto.updateData = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childOfName('line');\n  var linePoints = lineData.getItemLayout(idx);\n  var target = {\n    shape: {}\n  };\n  setLinePoints(target.shape, linePoints);\n  graphic.updateProps(line, target, seriesModel, idx);\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbolType = lineData.getItemVisual(idx, symbolCategory);\n    var key = makeSymbolTypeKey(symbolCategory); // Symbol changed\n\n    if (this[key] !== symbolType) {\n      this.remove(this.childOfName(symbolCategory));\n      var symbol = createSymbol(symbolCategory, lineData, idx);\n      this.add(symbol);\n    }\n\n    this[key] = symbolType;\n  }, this);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\nlineProto._updateCommonStl = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childOfName('line');\n  var lineStyle = seriesScope && seriesScope.lineStyle;\n  var hoverLineStyle = seriesScope && seriesScope.hoverLineStyle;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel; // Optimization for large dataset\n\n  if (!seriesScope || lineData.hasItemOption) {\n    var itemModel = lineData.getItemModel(idx);\n    lineStyle = itemModel.getModel('lineStyle.normal').getLineStyle();\n    hoverLineStyle = itemModel.getModel('lineStyle.emphasis').getLineStyle();\n    labelModel = itemModel.getModel('label.normal');\n    hoverLabelModel = itemModel.getModel('label.emphasis');\n  }\n\n  var visualColor = lineData.getItemVisual(idx, 'color');\n  var visualOpacity = zrUtil.retrieve3(lineData.getItemVisual(idx, 'opacity'), lineStyle.opacity, 1);\n  line.useStyle(zrUtil.defaults({\n    strokeNoScale: true,\n    fill: 'none',\n    stroke: visualColor,\n    opacity: visualOpacity\n  }, lineStyle));\n  line.hoverStyle = hoverLineStyle; // Update symbol\n\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbol = this.childOfName(symbolCategory);\n\n    if (symbol) {\n      symbol.setColor(visualColor);\n      symbol.setStyle({\n        opacity: visualOpacity\n      });\n    }\n  }, this);\n  var showLabel = labelModel.getShallow('show');\n  var hoverShowLabel = hoverLabelModel.getShallow('show');\n  var label = this.childOfName('label');\n  var defaultLabelColor;\n  var defaultText;\n  var normalText;\n  var emphasisText;\n\n  if (showLabel || hoverShowLabel) {\n    var rawVal = seriesModel.getRawValue(idx);\n    defaultText = rawVal == null ? defaultText = lineData.getName(idx) : isFinite(rawVal) ? round(rawVal) : rawVal;\n    defaultLabelColor = visualColor || '#000';\n    normalText = zrUtil.retrieve2(seriesModel.getFormattedLabel(idx, 'normal', lineData.dataType), defaultText);\n    emphasisText = zrUtil.retrieve2(seriesModel.getFormattedLabel(idx, 'emphasis', lineData.dataType), normalText);\n  } // label.afterUpdate = lineAfterUpdate;\n\n\n  if (showLabel) {\n    var labelStyle = graphic.setTextStyle(label.style, labelModel, {\n      text: normalText\n    }, {\n      autoColor: defaultLabelColor\n    });\n    label.__textAlign = labelStyle.textAlign;\n    label.__verticalAlign = labelStyle.textVerticalAlign; // 'start', 'middle', 'end'\n\n    label.__position = labelModel.get('position') || 'middle';\n  } else {\n    label.setStyle('text', null);\n  }\n\n  if (hoverShowLabel) {\n    // Only these properties supported in this emphasis style here.\n    label.hoverStyle = {\n      text: emphasisText,\n      textFill: hoverLabelModel.getTextColor(true),\n      // For merging hover style to normal style, do not use\n      // `hoverLabelModel.getFont()` here.\n      fontStyle: hoverLabelModel.getShallow('fontStyle'),\n      fontWeight: hoverLabelModel.getShallow('fontWeight'),\n      fontSize: hoverLabelModel.getShallow('fontSize'),\n      fontFamily: hoverLabelModel.getShallow('fontFamily')\n    };\n  } else {\n    label.hoverStyle = {\n      text: null\n    };\n  }\n\n  label.ignore = !showLabel && !hoverShowLabel;\n  graphic.setHoverStyle(this);\n};\n\nlineProto.highlight = function () {\n  this.trigger('emphasis');\n};\n\nlineProto.downplay = function () {\n  this.trigger('normal');\n};\n\nlineProto.updateLayout = function (lineData, idx) {\n  this.setLinePoints(lineData.getItemLayout(idx));\n};\n\nlineProto.setLinePoints = function (points) {\n  var linePath = this.childOfName('line');\n  setLinePoints(linePath.shape, points);\n  linePath.dirty();\n};\n\nzrUtil.inherits(Line, graphic.Group);\nvar _default = Line;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar interactionMutex = require(\"./interactionMutex\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar map = zrUtil.map;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathPow = Math.pow;\nvar COVER_Z = 10000;\nvar UNSELECT_THRESHOLD = 6;\nvar MIN_RESIZE_LINE_WIDTH = 6;\nvar MUTEX_RESOURCE_KEY = 'globalPan';\nvar DIRECTION_MAP = {\n  w: [0, 0],\n  e: [0, 1],\n  n: [1, 0],\n  s: [1, 1]\n};\nvar CURSOR_MAP = {\n  w: 'ew',\n  e: 'ew',\n  n: 'ns',\n  s: 'ns',\n  ne: 'nesw',\n  sw: 'nesw',\n  nw: 'nwse',\n  se: 'nwse'\n};\nvar DEFAULT_BRUSH_OPT = {\n  brushStyle: {\n    lineWidth: 2,\n    stroke: 'rgba(0,0,0,0.3)',\n    fill: 'rgba(0,0,0,0.1)'\n  },\n  transformable: true,\n  brushMode: 'single',\n  removeOnClick: false\n};\nvar baseUID = 0;\n/**\n * @alias module:echarts/component/helper/BrushController\n * @constructor\n * @mixin {module:zrender/mixin/Eventful}\n * @event module:echarts/component/helper/BrushController#brush\n *        params:\n *            areas: Array.<Array>, coord relates to container group,\n *                                    If no container specified, to global.\n *            opt {\n *                isEnd: boolean,\n *                removeOnClick: boolean\n *            }\n *\n * @param {module:zrender/zrender~ZRender} zr\n */\n\nfunction BrushController(zr) {\n  Eventful.call(this);\n  /**\n   * @type {module:zrender/zrender~ZRender}\n   * @private\n   */\n\n  this._zr = zr;\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n\n  this.group = new graphic.Group();\n  /**\n   * Only for drawing (after enabledBrush).\n   *     'line', 'rect', 'polygon' or false\n   *     If passing false/null/undefined, disable brush.\n   *     If passing 'auto', determined by panel.defaultBrushType\n   * @private\n   * @type {string}\n   */\n\n  this._brushType;\n  /**\n   * Only for drawing (after enabledBrush).\n   *\n   * @private\n   * @type {Object}\n   */\n\n  this._brushOption;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._panels;\n  /**\n   * @private\n   * @type {Array.<nubmer>}\n   */\n\n  this._track = [];\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._dragging;\n  /**\n   * @private\n   * @type {Array}\n   */\n\n  this._covers = [];\n  /**\n   * @private\n   * @type {moudule:zrender/container/Group}\n   */\n\n  this._creatingCover;\n  /**\n   * `true` means global panel\n   * @private\n   * @type {module:zrender/container/Group|boolean}\n   */\n\n  this._creatingPanel;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._enableGlobalPan;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this._uid = 'brushController_' + baseUID++;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._handlers = {};\n  each(mouseHandlers, function (handler, eventName) {\n    this._handlers[eventName] = zrUtil.bind(handler, this);\n  }, this);\n}\n\nBrushController.prototype = {\n  constructor: BrushController,\n\n  /**\n   * If set to null/undefined/false, select disabled.\n   * @param {Object} brushOption\n   * @param {string|boolean} brushOption.brushType 'line', 'rect', 'polygon' or false\n   *                          If passing false/null/undefined, disable brush.\n   *                          If passing 'auto', determined by panel.defaultBrushType.\n   *                              ('auto' can not be used in global panel)\n   * @param {number} [brushOption.brushMode='single'] 'single' or 'multiple'\n   * @param {boolean} [brushOption.transformable=true]\n   * @param {boolean} [brushOption.removeOnClick=false]\n   * @param {Object} [brushOption.brushStyle]\n   * @param {number} [brushOption.brushStyle.width]\n   * @param {number} [brushOption.brushStyle.lineWidth]\n   * @param {string} [brushOption.brushStyle.stroke]\n   * @param {string} [brushOption.brushStyle.fill]\n   * @param {number} [brushOption.z]\n   */\n  enableBrush: function (brushOption) {\n    this._brushType && doDisableBrush(this);\n    brushOption.brushType && doEnableBrush(this, brushOption);\n    return this;\n  },\n\n  /**\n   * @param {Array.<Object>} panelOpts If not pass, it is global brush.\n   *        Each items: {\n   *            panelId, // mandatory.\n   *            clipPath, // mandatory. function.\n   *            isTargetByCursor, // mandatory. function.\n   *            defaultBrushType, // optional, only used when brushType is 'auto'.\n   *            getLinearBrushOtherExtent, // optional. function.\n   *        }\n   */\n  setPanels: function (panelOpts) {\n    if (panelOpts && panelOpts.length) {\n      var panels = this._panels = {};\n      zrUtil.each(panelOpts, function (panelOpts) {\n        panels[panelOpts.panelId] = zrUtil.clone(panelOpts);\n      });\n    } else {\n      this._panels = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param {Object} [opt]\n   * @return {boolean} [opt.enableGlobalPan=false]\n   */\n  mount: function (opt) {\n    opt = opt || {};\n    this._enableGlobalPan = opt.enableGlobalPan;\n    var thisGroup = this.group;\n\n    this._zr.add(thisGroup);\n\n    thisGroup.attr({\n      position: opt.position || [0, 0],\n      rotation: opt.rotation || 0,\n      scale: opt.scale || [1, 1]\n    });\n    this._transform = thisGroup.getLocalTransform();\n    return this;\n  },\n  eachCover: function (cb, context) {\n    each(this._covers, cb, context);\n  },\n\n  /**\n   * Update covers.\n   * @param {Array.<Object>} brushOptionList Like:\n   *        [\n   *            {id: 'xx', brushType: 'line', range: [23, 44], brushStyle, transformable},\n   *            {id: 'yy', brushType: 'rect', range: [[23, 44], [23, 54]]},\n   *            ...\n   *        ]\n   *        `brushType` is required in each cover info. (can not be 'auto')\n   *        `id` is not mandatory.\n   *        `brushStyle`, `transformable` is not mandatory, use DEFAULT_BRUSH_OPT by default.\n   *        If brushOptionList is null/undefined, all covers removed.\n   */\n  updateCovers: function (brushOptionList) {\n    brushOptionList = zrUtil.map(brushOptionList, function (brushOption) {\n      return zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n    });\n    var tmpIdPrefix = '\\0-brush-index-';\n    var oldCovers = this._covers;\n    var newCovers = this._covers = [];\n    var controller = this;\n    var creatingCover = this._creatingCover;\n    new DataDiffer(oldCovers, brushOptionList, oldGetKey, getKey).add(addOrUpdate).update(addOrUpdate).remove(remove).execute();\n    return this;\n\n    function getKey(brushOption, index) {\n      return (brushOption.id != null ? brushOption.id : tmpIdPrefix + index) + '-' + brushOption.brushType;\n    }\n\n    function oldGetKey(cover, index) {\n      return getKey(cover.__brushOption, index);\n    }\n\n    function addOrUpdate(newIndex, oldIndex) {\n      var newBrushOption = brushOptionList[newIndex]; // Consider setOption in event listener of brushSelect,\n      // where updating cover when creating should be forbiden.\n\n      if (oldIndex != null && oldCovers[oldIndex] === creatingCover) {\n        newCovers[newIndex] = oldCovers[oldIndex];\n      } else {\n        var cover = newCovers[newIndex] = oldIndex != null ? (oldCovers[oldIndex].__brushOption = newBrushOption, oldCovers[oldIndex]) : endCreating(controller, createCover(controller, newBrushOption));\n        updateCoverAfterCreation(controller, cover);\n      }\n    }\n\n    function remove(oldIndex) {\n      if (oldCovers[oldIndex] !== creatingCover) {\n        controller.group.remove(oldCovers[oldIndex]);\n      }\n    }\n  },\n  unmount: function () {\n    this.enableBrush(false); // container may 'removeAll' outside.\n\n    clearCovers(this);\n\n    this._zr.remove(this.group);\n\n    return this;\n  },\n  dispose: function () {\n    this.unmount();\n    this.off();\n  }\n};\nzrUtil.mixin(BrushController, Eventful);\n\nfunction doEnableBrush(controller, brushOption) {\n  var zr = controller._zr; // Consider roam, which takes globalPan too.\n\n  if (!controller._enableGlobalPan) {\n    interactionMutex.take(zr, MUTEX_RESOURCE_KEY, controller._uid);\n  }\n\n  each(controller._handlers, function (handler, eventName) {\n    zr.on(eventName, handler);\n  });\n  controller._brushType = brushOption.brushType;\n  controller._brushOption = zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n}\n\nfunction doDisableBrush(controller) {\n  var zr = controller._zr;\n  interactionMutex.release(zr, MUTEX_RESOURCE_KEY, controller._uid);\n  each(controller._handlers, function (handler, eventName) {\n    zr.off(eventName, handler);\n  });\n  controller._brushType = controller._brushOption = null;\n}\n\nfunction createCover(controller, brushOption) {\n  var cover = coverRenderers[brushOption.brushType].createCover(controller, brushOption);\n  cover.__brushOption = brushOption;\n  updateZ(cover, brushOption);\n  controller.group.add(cover);\n  return cover;\n}\n\nfunction endCreating(controller, creatingCover) {\n  var coverRenderer = getCoverRenderer(creatingCover);\n\n  if (coverRenderer.endCreating) {\n    coverRenderer.endCreating(controller, creatingCover);\n    updateZ(creatingCover, creatingCover.__brushOption);\n  }\n\n  return creatingCover;\n}\n\nfunction updateCoverShape(controller, cover) {\n  var brushOption = cover.__brushOption;\n  getCoverRenderer(cover).updateCoverShape(controller, cover, brushOption.range, brushOption);\n}\n\nfunction updateZ(cover, brushOption) {\n  var z = brushOption.z;\n  z == null && (z = COVER_Z);\n  cover.traverse(function (el) {\n    el.z = z;\n    el.z2 = z; // Consider in given container.\n  });\n}\n\nfunction updateCoverAfterCreation(controller, cover) {\n  getCoverRenderer(cover).updateCommon(controller, cover);\n  updateCoverShape(controller, cover);\n}\n\nfunction getCoverRenderer(cover) {\n  return coverRenderers[cover.__brushOption.brushType];\n} // return target panel or `true` (means global panel)\n\n\nfunction getPanelByPoint(controller, e, localCursorPoint) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return true; // Global panel\n  }\n\n  var panel;\n  var transform = controller._transform;\n  each(panels, function (pn) {\n    pn.isTargetByCursor(e, localCursorPoint, transform) && (panel = pn);\n  });\n  return panel;\n} // Return a panel or true\n\n\nfunction getPanelByCover(controller, cover) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return true; // Global panel\n  }\n\n  var panelId = cover.__brushOption.panelId; // User may give cover without coord sys info,\n  // which is then treated as global panel.\n\n  return panelId != null ? panels[panelId] : true;\n}\n\nfunction clearCovers(controller) {\n  var covers = controller._covers;\n  var originalLength = covers.length;\n  each(covers, function (cover) {\n    controller.group.remove(cover);\n  }, controller);\n  covers.length = 0;\n  return !!originalLength;\n}\n\nfunction trigger(controller, opt) {\n  var areas = map(controller._covers, function (cover) {\n    var brushOption = cover.__brushOption;\n    var range = zrUtil.clone(brushOption.range);\n    return {\n      brushType: brushOption.brushType,\n      panelId: brushOption.panelId,\n      range: range\n    };\n  });\n  controller.trigger('brush', areas, {\n    isEnd: !!opt.isEnd,\n    removeOnClick: !!opt.removeOnClick\n  });\n}\n\nfunction shouldShowCover(controller) {\n  var track = controller._track;\n\n  if (!track.length) {\n    return false;\n  }\n\n  var p2 = track[track.length - 1];\n  var p1 = track[0];\n  var dx = p2[0] - p1[0];\n  var dy = p2[1] - p1[1];\n  var dist = mathPow(dx * dx + dy * dy, 0.5);\n  return dist > UNSELECT_THRESHOLD;\n}\n\nfunction getTrackEnds(track) {\n  var tail = track.length - 1;\n  tail < 0 && (tail = 0);\n  return [track[0], track[tail]];\n}\n\nfunction createBaseRectCover(doDrift, controller, brushOption, edgeNames) {\n  var cover = new graphic.Group();\n  cover.add(new graphic.Rect({\n    name: 'main',\n    style: makeStyle(brushOption),\n    silent: true,\n    draggable: true,\n    cursor: 'move',\n    drift: curry(doDrift, controller, cover, 'nswe'),\n    ondragend: curry(trigger, controller, {\n      isEnd: true\n    })\n  }));\n  each(edgeNames, function (name) {\n    cover.add(new graphic.Rect({\n      name: name,\n      style: {\n        opacity: 0\n      },\n      draggable: true,\n      silent: true,\n      invisible: true,\n      drift: curry(doDrift, controller, cover, name),\n      ondragend: curry(trigger, controller, {\n        isEnd: true\n      })\n    }));\n  });\n  return cover;\n}\n\nfunction updateBaseRect(controller, cover, localRange, brushOption) {\n  var lineWidth = brushOption.brushStyle.lineWidth || 0;\n  var handleSize = mathMax(lineWidth, MIN_RESIZE_LINE_WIDTH);\n  var x = localRange[0][0];\n  var y = localRange[1][0];\n  var xa = x - lineWidth / 2;\n  var ya = y - lineWidth / 2;\n  var x2 = localRange[0][1];\n  var y2 = localRange[1][1];\n  var x2a = x2 - handleSize + lineWidth / 2;\n  var y2a = y2 - handleSize + lineWidth / 2;\n  var width = x2 - x;\n  var height = y2 - y;\n  var widtha = width + lineWidth;\n  var heighta = height + lineWidth;\n  updateRectShape(controller, cover, 'main', x, y, width, height);\n\n  if (brushOption.transformable) {\n    updateRectShape(controller, cover, 'w', xa, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'e', x2a, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'n', xa, ya, widtha, handleSize);\n    updateRectShape(controller, cover, 's', xa, y2a, widtha, handleSize);\n    updateRectShape(controller, cover, 'nw', xa, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'ne', x2a, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'sw', xa, y2a, handleSize, handleSize);\n    updateRectShape(controller, cover, 'se', x2a, y2a, handleSize, handleSize);\n  }\n}\n\nfunction updateCommon(controller, cover) {\n  var brushOption = cover.__brushOption;\n  var transformable = brushOption.transformable;\n  var mainEl = cover.childAt(0);\n  mainEl.useStyle(makeStyle(brushOption));\n  mainEl.attr({\n    silent: !transformable,\n    cursor: transformable ? 'move' : 'default'\n  });\n  each(['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw'], function (name) {\n    var el = cover.childOfName(name);\n    var globalDir = getGlobalDirection(controller, name);\n    el && el.attr({\n      silent: !transformable,\n      invisible: !transformable,\n      cursor: transformable ? CURSOR_MAP[globalDir] + '-resize' : null\n    });\n  });\n}\n\nfunction updateRectShape(controller, cover, name, x, y, w, h) {\n  var el = cover.childOfName(name);\n  el && el.setShape(pointsToRect(clipByPanel(controller, cover, [[x, y], [x + w, y + h]])));\n}\n\nfunction makeStyle(brushOption) {\n  return zrUtil.defaults({\n    strokeNoScale: true\n  }, brushOption.brushStyle);\n}\n\nfunction formatRectRange(x, y, x2, y2) {\n  var min = [mathMin(x, x2), mathMin(y, y2)];\n  var max = [mathMax(x, x2), mathMax(y, y2)];\n  return [[min[0], max[0]], // x range\n  [min[1], max[1]] // y range\n  ];\n}\n\nfunction getTransform(controller) {\n  return graphic.getTransform(controller.group);\n}\n\nfunction getGlobalDirection(controller, localDirection) {\n  if (localDirection.length > 1) {\n    localDirection = localDirection.split('');\n    var globalDir = [getGlobalDirection(controller, localDirection[0]), getGlobalDirection(controller, localDirection[1])];\n    (globalDir[0] === 'e' || globalDir[0] === 'w') && globalDir.reverse();\n    return globalDir.join('');\n  } else {\n    var map = {\n      w: 'left',\n      e: 'right',\n      n: 'top',\n      s: 'bottom'\n    };\n    var inverseMap = {\n      left: 'w',\n      right: 'e',\n      top: 'n',\n      bottom: 's'\n    };\n    var globalDir = graphic.transformDirection(map[localDirection], getTransform(controller));\n    return inverseMap[globalDir];\n  }\n}\n\nfunction driftRect(toRectRange, fromRectRange, controller, cover, name, dx, dy, e) {\n  var brushOption = cover.__brushOption;\n  var rectRange = toRectRange(brushOption.range);\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(name.split(''), function (namePart) {\n    var ind = DIRECTION_MAP[namePart];\n    rectRange[ind[0]][ind[1]] += localDelta[ind[0]];\n  });\n  brushOption.range = fromRectRange(formatRectRange(rectRange[0][0], rectRange[1][0], rectRange[0][1], rectRange[1][1]));\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction driftPolygon(controller, cover, dx, dy, e) {\n  var range = cover.__brushOption.range;\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(range, function (point) {\n    point[0] += localDelta[0];\n    point[1] += localDelta[1];\n  });\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction toLocalDelta(controller, dx, dy) {\n  var thisGroup = controller.group;\n  var localD = thisGroup.transformCoordToLocal(dx, dy);\n  var localZero = thisGroup.transformCoordToLocal(0, 0);\n  return [localD[0] - localZero[0], localD[1] - localZero[1]];\n}\n\nfunction clipByPanel(controller, cover, data) {\n  var panel = getPanelByCover(controller, cover);\n  return panel && panel !== true ? panel.clipPath(data, controller._transform) : zrUtil.clone(data);\n}\n\nfunction pointsToRect(points) {\n  var xmin = mathMin(points[0][0], points[1][0]);\n  var ymin = mathMin(points[0][1], points[1][1]);\n  var xmax = mathMax(points[0][0], points[1][0]);\n  var ymax = mathMax(points[0][1], points[1][1]);\n  return {\n    x: xmin,\n    y: ymin,\n    width: xmax - xmin,\n    height: ymax - ymin\n  };\n}\n\nfunction resetCursor(controller, e, localCursorPoint) {\n  // Check active\n  if (!controller._brushType) {\n    return;\n  }\n\n  var zr = controller._zr;\n  var covers = controller._covers;\n  var currPanel = getPanelByPoint(controller, e, localCursorPoint); // Check whether in covers.\n\n  if (!controller._dragging) {\n    for (var i = 0; i < covers.length; i++) {\n      var brushOption = covers[i].__brushOption;\n\n      if (currPanel && (currPanel === true || brushOption.panelId === currPanel.panelId) && coverRenderers[brushOption.brushType].contain(covers[i], localCursorPoint[0], localCursorPoint[1])) {\n        // Use cursor style set on cover.\n        return;\n      }\n    }\n  }\n\n  currPanel && zr.setCursorStyle('crosshair');\n}\n\nfunction preventDefault(e) {\n  var rawE = e.event;\n  rawE.preventDefault && rawE.preventDefault();\n}\n\nfunction mainShapeContain(cover, x, y) {\n  return cover.childOfName('main').contain(x, y);\n}\n\nfunction updateCoverByMouse(controller, e, localCursorPoint, isEnd) {\n  var creatingCover = controller._creatingCover;\n  var panel = controller._creatingPanel;\n  var thisBrushOption = controller._brushOption;\n  var eventParams;\n\n  controller._track.push(localCursorPoint.slice());\n\n  if (shouldShowCover(controller) || creatingCover) {\n    if (panel && !creatingCover) {\n      thisBrushOption.brushMode === 'single' && clearCovers(controller);\n      var brushOption = zrUtil.clone(thisBrushOption);\n      brushOption.brushType = determineBrushType(brushOption.brushType, panel);\n      brushOption.panelId = panel === true ? null : panel.panelId;\n      creatingCover = controller._creatingCover = createCover(controller, brushOption);\n\n      controller._covers.push(creatingCover);\n    }\n\n    if (creatingCover) {\n      var coverRenderer = coverRenderers[determineBrushType(controller._brushType, panel)];\n      var coverBrushOption = creatingCover.__brushOption;\n      coverBrushOption.range = coverRenderer.getCreatingRange(clipByPanel(controller, creatingCover, controller._track));\n\n      if (isEnd) {\n        endCreating(controller, creatingCover);\n        coverRenderer.updateCommon(controller, creatingCover);\n      }\n\n      updateCoverShape(controller, creatingCover);\n      eventParams = {\n        isEnd: isEnd\n      };\n    }\n  } else if (isEnd && thisBrushOption.brushMode === 'single' && thisBrushOption.removeOnClick) {\n    // Help user to remove covers easily, only by a tiny drag, in 'single' mode.\n    // But a single click do not clear covers, because user may have casual\n    // clicks (for example, click on other component and do not expect covers\n    // disappear).\n    // Only some cover removed, trigger action, but not every click trigger action.\n    if (getPanelByPoint(controller, e, localCursorPoint) && clearCovers(controller)) {\n      eventParams = {\n        isEnd: isEnd,\n        removeOnClick: true\n      };\n    }\n  }\n\n  return eventParams;\n}\n\nfunction determineBrushType(brushType, panel) {\n  if (brushType === 'auto') {\n    return panel.defaultBrushType;\n  }\n\n  return brushType;\n}\n\nvar mouseHandlers = {\n  mousedown: function (e) {\n    if (this._dragging) {\n      // In case some browser do not support globalOut,\n      // and release mose out side the browser.\n      handleDragEnd.call(this, e);\n    } else if (!e.target || !e.target.draggable) {\n      preventDefault(e);\n      var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n      this._creatingCover = null;\n      var panel = this._creatingPanel = getPanelByPoint(this, e, localCursorPoint);\n\n      if (panel) {\n        this._dragging = true;\n        this._track = [localCursorPoint.slice()];\n      }\n    }\n  },\n  mousemove: function (e) {\n    var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n    resetCursor(this, e, localCursorPoint);\n\n    if (this._dragging) {\n      preventDefault(e);\n      var eventParams = updateCoverByMouse(this, e, localCursorPoint, false);\n      eventParams && trigger(this, eventParams);\n    }\n  },\n  mouseup: handleDragEnd //,\n  // FIXME\n  // in tooltip, globalout should not be triggered.\n  // globalout: handleDragEnd\n\n};\n\nfunction handleDragEnd(e) {\n  if (this._dragging) {\n    preventDefault(e);\n    var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n    var eventParams = updateCoverByMouse(this, e, localCursorPoint, true);\n    this._dragging = false;\n    this._track = [];\n    this._creatingCover = null; // trigger event shoule be at final, after procedure will be nested.\n\n    eventParams && trigger(this, eventParams);\n  }\n}\n/**\n * key: brushType\n * @type {Object}\n */\n\n\nvar coverRenderers = {\n  lineX: getLineRenderer(0),\n  lineY: getLineRenderer(1),\n  rect: {\n    createCover: function (controller, brushOption) {\n      return createBaseRectCover(curry(driftRect, function (range) {\n        return range;\n      }, function (range) {\n        return range;\n      }), controller, brushOption, ['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw']);\n    },\n    getCreatingRange: function (localTrack) {\n      var ends = getTrackEnds(localTrack);\n      return formatRectRange(ends[1][0], ends[1][1], ends[0][0], ends[0][1]);\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      updateBaseRect(controller, cover, localRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  },\n  polygon: {\n    createCover: function (controller, brushOption) {\n      var cover = new graphic.Group(); // Do not use graphic.Polygon because graphic.Polyline do not close the\n      // border of the shape when drawing, which is a better experience for user.\n\n      cover.add(new graphic.Polyline({\n        name: 'main',\n        style: makeStyle(brushOption),\n        silent: true\n      }));\n      return cover;\n    },\n    getCreatingRange: function (localTrack) {\n      return localTrack;\n    },\n    endCreating: function (controller, cover) {\n      cover.remove(cover.childAt(0)); // Use graphic.Polygon close the shape.\n\n      cover.add(new graphic.Polygon({\n        name: 'main',\n        draggable: true,\n        drift: curry(driftPolygon, controller, cover),\n        ondragend: curry(trigger, controller, {\n          isEnd: true\n        })\n      }));\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      cover.childAt(0).setShape({\n        points: clipByPanel(controller, cover, localRange)\n      });\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  }\n};\n\nfunction getLineRenderer(xyIndex) {\n  return {\n    createCover: function (controller, brushOption) {\n      return createBaseRectCover(curry(driftRect, function (range) {\n        var rectRange = [range, [0, 100]];\n        xyIndex && rectRange.reverse();\n        return rectRange;\n      }, function (rectRange) {\n        return rectRange[xyIndex];\n      }), controller, brushOption, [['w', 'e'], ['n', 's']][xyIndex]);\n    },\n    getCreatingRange: function (localTrack) {\n      var ends = getTrackEnds(localTrack);\n      var min = mathMin(ends[0][xyIndex], ends[1][xyIndex]);\n      var max = mathMax(ends[0][xyIndex], ends[1][xyIndex]);\n      return [min, max];\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      var otherExtent; // If brushWidth not specified, fit the panel.\n\n      var panel = getPanelByCover(controller, cover);\n\n      if (panel !== true && panel.getLinearBrushOtherExtent) {\n        otherExtent = panel.getLinearBrushOtherExtent(xyIndex, controller._transform);\n      } else {\n        var zr = controller._zr;\n        otherExtent = [0, [zr.getWidth(), zr.getHeight()][1 - xyIndex]];\n      }\n\n      var rectRange = [localRange, otherExtent];\n      xyIndex && rectRange.reverse();\n      updateBaseRect(controller, cover, rectRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  };\n}\n\nvar _default = BrushController;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar clazzUtil = require(\"../../util/clazz\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar axisPointerModelHelper = require(\"./modelHelper\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar get = modelUtil.makeGetter();\nvar clone = zrUtil.clone;\nvar bind = zrUtil.bind;\n/**\n * Base axis pointer class in 2D.\n * Implemenents {module:echarts/component/axis/IAxisPointer}.\n */\n\nfunction BaseAxisPointer() {}\n\nBaseAxisPointer.prototype = {\n  /**\n   * @private\n   */\n  _group: null,\n\n  /**\n   * @private\n   */\n  _lastGraphicKey: null,\n\n  /**\n   * @private\n   */\n  _handle: null,\n\n  /**\n   * @private\n   */\n  _dragging: false,\n\n  /**\n   * @private\n   */\n  _lastValue: null,\n\n  /**\n   * @private\n   */\n  _lastStatus: null,\n\n  /**\n   * @private\n   */\n  _payloadInfo: null,\n\n  /**\n   * In px, arbitrary value. Do not set too small,\n   * no animation is ok for most cases.\n   * @protected\n   */\n  animationThreshold: 15,\n\n  /**\n   * @implement\n   */\n  render: function (axisModel, axisPointerModel, api, forceRender) {\n    var value = axisPointerModel.get('value');\n    var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not\n    // be replaced when user calling setOption in not merge mode.\n\n    this._axisModel = axisModel;\n    this._axisPointerModel = axisPointerModel;\n    this._api = api; // Optimize: `render` will be called repeatly during mouse move.\n    // So it is power consuming if performing `render` each time,\n    // especially on mobile device.\n\n    if (!forceRender && this._lastValue === value && this._lastStatus === status) {\n      return;\n    }\n\n    this._lastValue = value;\n    this._lastStatus = status;\n    var group = this._group;\n    var handle = this._handle;\n\n    if (!status || status === 'hide') {\n      // Do not clear here, for animation better.\n      group && group.hide();\n      handle && handle.hide();\n      return;\n    }\n\n    group && group.show();\n    handle && handle.show(); // Otherwise status is 'show'\n\n    var elOption = {};\n    this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.\n\n    var graphicKey = elOption.graphicKey;\n\n    if (graphicKey !== this._lastGraphicKey) {\n      this.clear(api);\n    }\n\n    this._lastGraphicKey = graphicKey;\n    var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);\n\n    if (!group) {\n      group = this._group = new graphic.Group();\n      this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n      this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n      api.getZr().add(group);\n    } else {\n      var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n      this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n      this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n    }\n\n    updateMandatoryProps(group, axisPointerModel, true);\n\n    this._renderHandle(value);\n  },\n\n  /**\n   * @implement\n   */\n  remove: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @implement\n   */\n  dispose: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @protected\n   */\n  determineAnimation: function (axisModel, axisPointerModel) {\n    var animation = axisPointerModel.get('animation');\n    var axis = axisModel.axis;\n    var isCategoryAxis = axis.type === 'category';\n    var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.\n\n    if (!useSnap && !isCategoryAxis) {\n      return false;\n    }\n\n    if (animation === 'auto' || animation == null) {\n      var animationThreshold = this.animationThreshold;\n\n      if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n        return true;\n      } // It is important to auto animation when snap used. Consider if there is\n      // a dataZoom, animation will be disabled when too many points exist, while\n      // it will be enabled for better visual effect when little points exist.\n\n\n      if (useSnap) {\n        var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n        var axisExtent = axis.getExtent(); // Approximate band width\n\n        return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n      }\n\n      return false;\n    }\n\n    return animation === true;\n  },\n\n  /**\n   * add {pointer, label, graphicKey} to elOption\n   * @protected\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {// Shoule be implemenented by sub-class.\n  },\n\n  /**\n   * @protected\n   */\n  createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n    var pointerOption = elOption.pointer;\n\n    if (pointerOption) {\n      var pointerEl = get(group).pointerEl = new graphic[pointerOption.type](clone(elOption.pointer));\n      group.add(pointerEl);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n    if (elOption.label) {\n      var labelEl = get(group).labelEl = new graphic.Rect(clone(elOption.label));\n      group.add(labelEl);\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updatePointerEl: function (group, elOption, updateProps) {\n    var pointerEl = get(group).pointerEl;\n\n    if (pointerEl) {\n      pointerEl.setStyle(elOption.pointer.style);\n      updateProps(pointerEl, {\n        shape: elOption.pointer.shape\n      });\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n    var labelEl = get(group).labelEl;\n\n    if (labelEl) {\n      labelEl.setStyle(elOption.label.style);\n      updateProps(labelEl, {\n        // Consider text length change in vertical axis, animation should\n        // be used on shape, otherwise the effect will be weird.\n        shape: elOption.label.shape,\n        position: elOption.label.position\n      });\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderHandle: function (value) {\n    if (this._dragging || !this.updateHandleTransform) {\n      return;\n    }\n\n    var axisPointerModel = this._axisPointerModel;\n\n    var zr = this._api.getZr();\n\n    var handle = this._handle;\n    var handleModel = axisPointerModel.getModel('handle');\n    var status = axisPointerModel.get('status');\n\n    if (!handleModel.get('show') || !status || status === 'hide') {\n      handle && zr.remove(handle);\n      this._handle = null;\n      return;\n    }\n\n    var isInit;\n\n    if (!this._handle) {\n      isInit = true;\n      handle = this._handle = graphic.createIcon(handleModel.get('icon'), {\n        cursor: 'move',\n        draggable: true,\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n        drift: bind(this._onHandleDragMove, this),\n        ondragend: bind(this._onHandleDragEnd, this)\n      });\n      zr.add(handle);\n    }\n\n    updateMandatoryProps(handle, axisPointerModel, false); // update style\n\n    var includeStyles = ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n    handle.setStyle(handleModel.getItemStyle(null, includeStyles)); // update position\n\n    var handleSize = handleModel.get('size');\n\n    if (!zrUtil.isArray(handleSize)) {\n      handleSize = [handleSize, handleSize];\n    }\n\n    handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n    throttleUtil.createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');\n\n    this._moveHandleToValue(value, isInit);\n  },\n\n  /**\n   * @private\n   */\n  _moveHandleToValue: function (value, isInit) {\n    updateProps(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragMove: function (dx, dy) {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    this._dragging = true; // Persistent for throttle.\n\n    var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);\n    this._payloadInfo = trans;\n    handle.stopAnimation();\n    handle.attr(getHandleTransProps(trans));\n    get(handle).lastProp = null;\n\n    this._doDispatchAxisPointer();\n  },\n\n  /**\n   * Throttled method.\n   * @private\n   */\n  _doDispatchAxisPointer: function () {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var payloadInfo = this._payloadInfo;\n    var axisModel = this._axisModel;\n\n    this._api.dispatchAction({\n      type: 'updateAxisPointer',\n      x: payloadInfo.cursorPoint[0],\n      y: payloadInfo.cursorPoint[1],\n      tooltipOption: payloadInfo.tooltipOption,\n      axesInfo: [{\n        axisDim: axisModel.axis.dim,\n        axisIndex: axisModel.componentIndex\n      }]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragEnd: function (moveAnimation) {\n    this._dragging = false;\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with\n    // axisPointer. So move handle to align the exact value position when\n    // drag ended.\n\n\n    this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle\n    // button, and will be hidden after finger left handle button.\n\n\n    this._api.dispatchAction({\n      type: 'hideTip'\n    });\n  },\n\n  /**\n   * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {number} value\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0}\n   */\n  getHandleTransform: null,\n\n  /**\n   * * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {Object} transform {position, rotation}\n   * @param {Array.<number>} delta [dx, dy]\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n   */\n  updateHandleTransform: null,\n\n  /**\n   * @private\n   */\n  clear: function (api) {\n    this._lastValue = null;\n    this._lastStatus = null;\n    var zr = api.getZr();\n    var group = this._group;\n    var handle = this._handle;\n\n    if (zr && group) {\n      this._lastGraphicKey = null;\n      group && zr.remove(group);\n      handle && zr.remove(handle);\n      this._group = null;\n      this._handle = null;\n      this._payloadInfo = null;\n    }\n  },\n\n  /**\n   * @protected\n   */\n  doClear: function () {// Implemented by sub-class if necessary.\n  },\n\n  /**\n   * @protected\n   * @param {Array.<number>} xy\n   * @param {Array.<number>} wh\n   * @param {number} [xDimIndex=0] or 1\n   */\n  buildLabel: function (xy, wh, xDimIndex) {\n    xDimIndex = xDimIndex || 0;\n    return {\n      x: xy[xDimIndex],\n      y: xy[1 - xDimIndex],\n      width: wh[xDimIndex],\n      height: wh[1 - xDimIndex]\n    };\n  }\n};\nBaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\nfunction updateProps(animationModel, moveAnimation, el, props) {\n  // Animation optimize.\n  if (!propsEqual(get(el).lastProp, props)) {\n    get(el).lastProp = props;\n    moveAnimation ? graphic.updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));\n  }\n}\n\nfunction propsEqual(lastProps, newProps) {\n  if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n    var equals = true;\n    zrUtil.each(newProps, function (item, key) {\n      equals = equals && propsEqual(lastProps[key], item);\n    });\n    return !!equals;\n  } else {\n    return lastProps === newProps;\n  }\n}\n\nfunction updateLabelShowHide(labelEl, axisPointerModel) {\n  labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n}\n\nfunction getHandleTransProps(trans) {\n  return {\n    position: trans.position.slice(),\n    rotation: trans.rotation || 0\n  };\n}\n\nfunction updateMandatoryProps(group, axisPointerModel, silent) {\n  var z = axisPointerModel.get('z');\n  var zlevel = axisPointerModel.get('zlevel');\n  group && group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n      el.silent = silent;\n    }\n  });\n}\n\nclazzUtil.enableClassExtend(BaseAxisPointer);\nvar _default = BaseAxisPointer;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Polar = require(\"./Polar\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _axisHelper = require(\"../../coord/axisHelper\");\n\nvar createScaleByModel = _axisHelper.createScaleByModel;\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nrequire(\"./PolarModel\");\n\n// TODO Axis scale\n// 依赖 PolarModel 做预处理\n\n/**\n * Resize method bound to the polar\n * @param {module:echarts/coord/polar/PolarModel} polarModel\n * @param {module:echarts/ExtensionAPI} api\n */\nfunction resizePolar(polar, polarModel, api) {\n  var center = polarModel.get('center');\n  var width = api.getWidth();\n  var height = api.getHeight();\n  polar.cx = parsePercent(center[0], width);\n  polar.cy = parsePercent(center[1], height);\n  var radiusAxis = polar.getRadiusAxis();\n  var size = Math.min(width, height) / 2;\n  var radius = parsePercent(polarModel.get('radius'), size);\n  radiusAxis.inverse ? radiusAxis.setExtent(radius, 0) : radiusAxis.setExtent(0, radius);\n}\n/**\n * Update polar\n */\n\n\nfunction updatePolarScale(ecModel, api) {\n  var polar = this;\n  var angleAxis = polar.getAngleAxis();\n  var radiusAxis = polar.getRadiusAxis(); // Reset scale\n\n  angleAxis.scale.setExtent(Infinity, -Infinity);\n  radiusAxis.scale.setExtent(Infinity, -Infinity);\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.coordinateSystem === polar) {\n      var data = seriesModel.getData();\n      radiusAxis.scale.unionExtentFromData(data, 'radius');\n      angleAxis.scale.unionExtentFromData(data, 'angle');\n    }\n  });\n  niceScaleExtent(angleAxis.scale, angleAxis.model);\n  niceScaleExtent(radiusAxis.scale, radiusAxis.model); // Fix extent of category angle axis\n\n  if (angleAxis.type === 'category' && !angleAxis.onBand) {\n    var extent = angleAxis.getExtent();\n    var diff = 360 / angleAxis.scale.count();\n    angleAxis.inverse ? extent[1] += diff : extent[1] -= diff;\n    angleAxis.setExtent(extent[0], extent[1]);\n  }\n}\n/**\n * Set common axis properties\n * @param {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n * @param {module:echarts/coord/polar/AxisModel}\n * @inner\n */\n\n\nfunction setAxis(axis, axisModel) {\n  axis.type = axisModel.get('type');\n  axis.scale = createScaleByModel(axisModel);\n  axis.onBand = axisModel.get('boundaryGap') && axis.type === 'category';\n  axis.inverse = axisModel.get('inverse');\n\n  if (axisModel.mainType === 'angleAxis') {\n    axis.inverse ^= axisModel.get('clockwise');\n    var startAngle = axisModel.get('startAngle');\n    axis.setExtent(startAngle, startAngle + (axis.inverse ? -360 : 360));\n  } // Inject axis instance\n\n\n  axisModel.axis = axis;\n  axis.model = axisModel;\n}\n\nvar polarCreator = {\n  dimensions: Polar.prototype.dimensions,\n  create: function (ecModel, api) {\n    var polarList = [];\n    ecModel.eachComponent('polar', function (polarModel, idx) {\n      var polar = new Polar(idx); // Inject resize and update method\n\n      polar.update = updatePolarScale;\n      var radiusAxis = polar.getRadiusAxis();\n      var angleAxis = polar.getAngleAxis();\n      var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n      var angleAxisModel = polarModel.findAxisModel('angleAxis');\n      setAxis(radiusAxis, radiusAxisModel);\n      setAxis(angleAxis, angleAxisModel);\n      resizePolar(polar, polarModel, api);\n      polarList.push(polar);\n      polarModel.coordinateSystem = polar;\n      polar.model = polarModel;\n    }); // Inject coordinateSystem to series\n\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.get('coordinateSystem') === 'polar') {\n        var polarModel = ecModel.queryComponents({\n          mainType: 'polar',\n          index: seriesModel.get('polarIndex'),\n          id: seriesModel.get('polarId')\n        })[0];\n        seriesModel.coordinateSystem = polarModel.coordinateSystem;\n      }\n    });\n    return polarList;\n  }\n};\nCoordinateSystem.register('polar', polarCreator);","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar AXIS_DIMS = ['x', 'y', 'z', 'radius', 'angle', 'single']; // Supported coords.\n\nvar COORDS = ['cartesian2d', 'polar', 'singleAxis'];\n/**\n * @param {string} coordType\n * @return {boolean}\n */\n\nfunction isCoordSupported(coordType) {\n  return zrUtil.indexOf(COORDS, coordType) >= 0;\n}\n/**\n * Create \"each\" method to iterate names.\n *\n * @pubilc\n * @param  {Array.<string>} names\n * @param  {Array.<string>=} attrs\n * @return {Function}\n */\n\n\nfunction createNameEach(names, attrs) {\n  names = names.slice();\n  var capitalNames = zrUtil.map(names, formatUtil.capitalFirst);\n  attrs = (attrs || []).slice();\n  var capitalAttrs = zrUtil.map(attrs, formatUtil.capitalFirst);\n  return function (callback, context) {\n    zrUtil.each(names, function (name, index) {\n      var nameObj = {\n        name: name,\n        capital: capitalNames[index]\n      };\n\n      for (var j = 0; j < attrs.length; j++) {\n        nameObj[attrs[j]] = name + capitalAttrs[j];\n      }\n\n      callback.call(context, nameObj);\n    });\n  };\n}\n/**\n * Iterate each dimension name.\n *\n * @public\n * @param {Function} callback The parameter is like:\n *                            {\n *                                name: 'angle',\n *                                capital: 'Angle',\n *                                axis: 'angleAxis',\n *                                axisIndex: 'angleAixs',\n *                                index: 'angleIndex'\n *                            }\n * @param {Object} context\n */\n\n\nvar eachAxisDim = createNameEach(AXIS_DIMS, ['axisIndex', 'axis', 'index', 'id']);\n/**\n * If tow dataZoomModels has the same axis controlled, we say that they are 'linked'.\n * dataZoomModels and 'links' make up one or more graphics.\n * This function finds the graphic where the source dataZoomModel is in.\n *\n * @public\n * @param {Function} forEachNode Node iterator.\n * @param {Function} forEachEdgeType edgeType iterator\n * @param {Function} edgeIdGetter Giving node and edgeType, return an array of edge id.\n * @return {Function} Input: sourceNode, Output: Like {nodes: [], dims: {}}\n */\n\nfunction createLinkedNodesFinder(forEachNode, forEachEdgeType, edgeIdGetter) {\n  return function (sourceNode) {\n    var result = {\n      nodes: [],\n      records: {} // key: edgeType.name, value: Object (key: edge id, value: boolean).\n\n    };\n    forEachEdgeType(function (edgeType) {\n      result.records[edgeType.name] = {};\n    });\n\n    if (!sourceNode) {\n      return result;\n    }\n\n    absorb(sourceNode, result);\n    var existsLink;\n\n    do {\n      existsLink = false;\n      forEachNode(processSingleNode);\n    } while (existsLink);\n\n    function processSingleNode(node) {\n      if (!isNodeAbsorded(node, result) && isLinked(node, result)) {\n        absorb(node, result);\n        existsLink = true;\n      }\n    }\n\n    return result;\n  };\n\n  function isNodeAbsorded(node, result) {\n    return zrUtil.indexOf(result.nodes, node) >= 0;\n  }\n\n  function isLinked(node, result) {\n    var hasLink = false;\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] && (hasLink = true);\n      });\n    });\n    return hasLink;\n  }\n\n  function absorb(node, result) {\n    result.nodes.push(node);\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] = true;\n      });\n    });\n  }\n}\n\nexports.isCoordSupported = isCoordSupported;\nexports.createNameEach = createNameEach;\nexports.eachAxisDim = eachAxisDim;\nexports.createLinkedNodesFinder = createLinkedNodesFinder;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar addCommas = formatUtil.addCommas;\nvar encodeHTML = formatUtil.encodeHTML;\n\nfunction fillLabel(opt) {\n  modelUtil.defaultEmphasis(opt.label, ['show']);\n}\n\nvar MarkerModel = echarts.extendComponentModel({\n  type: 'marker',\n  dependencies: ['series', 'grid', 'polar', 'geo'],\n\n  /**\n   * @overrite\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    this.mergeOption(option, ecModel, extraOpt.createdBySelf, true);\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var hostSeries = this.__hostSeries;\n    return this.getShallow('animation') && hostSeries && hostSeries.isAnimationEnabled();\n  },\n  mergeOption: function (newOpt, ecModel, createdBySelf, isInit) {\n    var MarkerModel = this.constructor;\n    var modelPropName = this.mainType + 'Model';\n\n    if (!createdBySelf) {\n      ecModel.eachSeries(function (seriesModel) {\n        var markerOpt = seriesModel.get(this.mainType);\n        var markerModel = seriesModel[modelPropName];\n\n        if (!markerOpt || !markerOpt.data) {\n          seriesModel[modelPropName] = null;\n          return;\n        }\n\n        if (!markerModel) {\n          if (isInit) {\n            // Default label emphasis `position` and `show`\n            fillLabel(markerOpt);\n          }\n\n          zrUtil.each(markerOpt.data, function (item) {\n            // FIXME Overwrite fillLabel method ?\n            if (item instanceof Array) {\n              fillLabel(item[0]);\n              fillLabel(item[1]);\n            } else {\n              fillLabel(item);\n            }\n          });\n          markerModel = new MarkerModel(markerOpt, this, ecModel);\n          zrUtil.extend(markerModel, {\n            mainType: this.mainType,\n            // Use the same series index and name\n            seriesIndex: seriesModel.seriesIndex,\n            name: seriesModel.name,\n            createdBySelf: true\n          });\n          markerModel.__hostSeries = seriesModel;\n        } else {\n          markerModel.mergeOption(markerOpt, ecModel, true);\n        }\n\n        seriesModel[modelPropName] = markerModel;\n      }, this);\n    }\n  },\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? zrUtil.map(value, addCommas).join(', ') : addCommas(value);\n    var name = data.getName(dataIndex);\n    var html = encodeHTML(this.name);\n\n    if (value != null || name) {\n      html += '<br />';\n    }\n\n    if (name) {\n      html += encodeHTML(name);\n\n      if (value != null) {\n        html += ' : ';\n      }\n    }\n\n    if (value != null) {\n      html += encodeHTML(formattedValue);\n    }\n\n    return html;\n  },\n  getData: function () {\n    return this._data;\n  },\n  setData: function (data) {\n    this._data = data;\n  }\n});\nzrUtil.mixin(MarkerModel, modelUtil.dataFormatMixin);\nvar _default = MarkerModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar indexOf = zrUtil.indexOf;\n\nfunction hasXOrY(item) {\n  return !(isNaN(parseFloat(item.x)) && isNaN(parseFloat(item.y)));\n}\n\nfunction hasXAndY(item) {\n  return !isNaN(parseFloat(item.x)) && !isNaN(parseFloat(item.y));\n}\n\nfunction getPrecision(data, valueAxisDim, dataIndex) {\n  var precision = -1;\n\n  do {\n    precision = Math.max(numberUtil.getPrecision(data.get(valueAxisDim, dataIndex)), precision);\n    data = data.stackedOn;\n  } while (data);\n\n  return precision;\n}\n\nfunction markerTypeCalculatorWithExtent(mlType, data, otherDataDim, targetDataDim, otherCoordIndex, targetCoordIndex) {\n  var coordArr = [];\n  var value = numCalculate(data, targetDataDim, mlType);\n  var dataIndex = data.indicesOfNearest(targetDataDim, value, true)[0];\n  coordArr[otherCoordIndex] = data.get(otherDataDim, dataIndex, true);\n  coordArr[targetCoordIndex] = data.get(targetDataDim, dataIndex, true);\n  var precision = getPrecision(data, targetDataDim, dataIndex);\n  precision = Math.min(precision, 20);\n\n  if (precision >= 0) {\n    coordArr[targetCoordIndex] = +coordArr[targetCoordIndex].toFixed(precision);\n  }\n\n  return coordArr;\n}\n\nvar curry = zrUtil.curry; // TODO Specified percent\n\nvar markerTypeCalculator = {\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  min: curry(markerTypeCalculatorWithExtent, 'min'),\n\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  max: curry(markerTypeCalculatorWithExtent, 'max'),\n\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  average: curry(markerTypeCalculatorWithExtent, 'average')\n};\n/**\n * Transform markPoint data item to format used in List by do the following\n * 1. Calculate statistic like `max`, `min`, `average`\n * 2. Convert `item.xAxis`, `item.yAxis` to `item.coord` array\n * @param  {module:echarts/model/Series} seriesModel\n * @param  {module:echarts/coord/*} [coordSys]\n * @param  {Object} item\n * @return {Object}\n */\n\nfunction dataTransform(seriesModel, item) {\n  var data = seriesModel.getData();\n  var coordSys = seriesModel.coordinateSystem; // 1. If not specify the position with pixel directly\n  // 2. If `coord` is not a data array. Which uses `xAxis`,\n  // `yAxis` to specify the coord on each dimension\n  // parseFloat first because item.x and item.y can be percent string like '20%'\n\n  if (item && !hasXAndY(item) && !zrUtil.isArray(item.coord) && coordSys) {\n    var dims = coordSys.dimensions;\n    var axisInfo = getAxisInfo(item, data, coordSys, seriesModel); // Clone the option\n    // Transform the properties xAxis, yAxis, radiusAxis, angleAxis, geoCoord to value\n\n    item = zrUtil.clone(item);\n\n    if (item.type && markerTypeCalculator[item.type] && axisInfo.baseAxis && axisInfo.valueAxis) {\n      var otherCoordIndex = indexOf(dims, axisInfo.baseAxis.dim);\n      var targetCoordIndex = indexOf(dims, axisInfo.valueAxis.dim);\n      item.coord = markerTypeCalculator[item.type](data, axisInfo.baseDataDim, axisInfo.valueDataDim, otherCoordIndex, targetCoordIndex); // Force to use the value of calculated value.\n\n      item.value = item.coord[targetCoordIndex];\n    } else {\n      // FIXME Only has one of xAxis and yAxis.\n      var coord = [item.xAxis != null ? item.xAxis : item.radiusAxis, item.yAxis != null ? item.yAxis : item.angleAxis]; // Each coord support max, min, average\n\n      for (var i = 0; i < 2; i++) {\n        if (markerTypeCalculator[coord[i]]) {\n          var dataDim = seriesModel.coordDimToDataDim(dims[i])[0];\n          coord[i] = numCalculate(data, dataDim, coord[i]);\n        }\n      }\n\n      item.coord = coord;\n    }\n  }\n\n  return item;\n}\n\nfunction getAxisInfo(item, data, coordSys, seriesModel) {\n  var ret = {};\n\n  if (item.valueIndex != null || item.valueDim != null) {\n    ret.valueDataDim = item.valueIndex != null ? data.getDimension(item.valueIndex) : item.valueDim;\n    ret.valueAxis = coordSys.getAxis(seriesModel.dataDimToCoordDim(ret.valueDataDim));\n    ret.baseAxis = coordSys.getOtherAxis(ret.valueAxis);\n    ret.baseDataDim = seriesModel.coordDimToDataDim(ret.baseAxis.dim)[0];\n  } else {\n    ret.baseAxis = seriesModel.getBaseAxis();\n    ret.valueAxis = coordSys.getOtherAxis(ret.baseAxis);\n    ret.baseDataDim = seriesModel.coordDimToDataDim(ret.baseAxis.dim)[0];\n    ret.valueDataDim = seriesModel.coordDimToDataDim(ret.valueAxis.dim)[0];\n  }\n\n  return ret;\n}\n/**\n * Filter data which is out of coordinateSystem range\n * [dataFilter description]\n * @param  {module:echarts/coord/*} [coordSys]\n * @param  {Object} item\n * @return {boolean}\n */\n\n\nfunction dataFilter(coordSys, item) {\n  // Alwalys return true if there is no coordSys\n  return coordSys && coordSys.containData && item.coord && !hasXOrY(item) ? coordSys.containData(item.coord) : true;\n}\n\nfunction dimValueGetter(item, dimName, dataIndex, dimIndex) {\n  // x, y, radius, angle\n  if (dimIndex < 2) {\n    return item.coord && item.coord[dimIndex];\n  }\n\n  return item.value;\n}\n\nfunction numCalculate(data, valueDataDim, type) {\n  if (type === 'average') {\n    var sum = 0;\n    var count = 0;\n    data.each(valueDataDim, function (val, idx) {\n      if (!isNaN(val)) {\n        sum += val;\n        count++;\n      }\n    }, true);\n    return sum / count;\n  } else {\n    return data.getDataExtent(valueDataDim, true)[type === 'max' ? 1 : 0];\n  }\n}\n\nexports.dataTransform = dataTransform;\nexports.getAxisInfo = getAxisInfo;\nexports.dataFilter = dataFilter;\nexports.dimValueGetter = dimValueGetter;\nexports.numCalculate = numCalculate;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _default = echarts.extendComponentView({\n  type: 'marker',\n  init: function () {\n    /**\n     * Markline grouped by series\n     * @private\n     * @type {module:zrender/core/util.HashMap}\n     */\n    this.markerGroupMap = zrUtil.createHashMap();\n  },\n  render: function (markerModel, ecModel, api) {\n    var markerGroupMap = this.markerGroupMap;\n    markerGroupMap.each(function (item) {\n      item.__keep = false;\n    });\n    var markerModelKey = this.type + 'Model';\n    ecModel.eachSeries(function (seriesModel) {\n      var markerModel = seriesModel[markerModelKey];\n      markerModel && this.renderSeries(seriesModel, markerModel, ecModel, api);\n    }, this);\n    markerGroupMap.each(function (item) {\n      !item.__keep && this.group.remove(item.group);\n    }, this);\n  },\n  renderSeries: function () {}\n});\n\nmodule.exports = _default;","var _core = require(\"./core\");\n\nvar createElement = _core.createElement;\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"../graphic/helper/text\");\n\nvar Text = require(\"../graphic/Text\");\n\n// TODO\n// 1. shadow\n// 2. Image: sx, sy, sw, sh\nvar CMD = PathProxy.CMD;\nvar arrayJoin = Array.prototype.join;\nvar NONE = 'none';\nvar mathRound = Math.round;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\nvar PI2 = Math.PI * 2;\nvar degree = 180 / PI;\nvar EPSILON = 1e-4;\n\nfunction round4(val) {\n  return mathRound(val * 1e4) / 1e4;\n}\n\nfunction isAroundZero(val) {\n  return val < EPSILON && val > -EPSILON;\n}\n\nfunction pathHasFill(style, isText) {\n  var fill = isText ? style.textFill : style.fill;\n  return fill != null && fill !== NONE;\n}\n\nfunction pathHasStroke(style, isText) {\n  var stroke = isText ? style.textStroke : style.stroke;\n  return stroke != null && stroke !== NONE;\n}\n\nfunction setTransform(svgEl, m) {\n  if (m) {\n    attr(svgEl, 'transform', 'matrix(' + arrayJoin.call(m, ',') + ')');\n  }\n}\n\nfunction attr(el, key, val) {\n  if (!val || val.type !== 'linear' && val.type !== 'radial') {\n    // Don't set attribute for gradient, since it need new dom nodes\n    el.setAttribute(key, val);\n  }\n}\n\nfunction attrXLink(el, key, val) {\n  el.setAttributeNS('http://www.w3.org/1999/xlink', key, val);\n}\n\nfunction bindStyle(svgEl, style, isText) {\n  if (pathHasFill(style, isText)) {\n    var fill = isText ? style.textFill : style.fill;\n    fill = fill === 'transparent' ? NONE : fill;\n    /**\n     * FIXME:\n     * This is a temporary fix for Chrome's clipping bug\n     * that happens when a clip-path is referring another one.\n     * This fix should be used before Chrome's bug is fixed.\n     * For an element that has clip-path, and fill is none,\n     * set it to be \"rgba(0, 0, 0, 0.002)\" will hide the element.\n     * Otherwise, it will show black fill color.\n     * 0.002 is used because this won't work for alpha values smaller\n     * than 0.002.\n     *\n     * See\n     * https://bugs.chromium.org/p/chromium/issues/detail?id=659790\n     * for more information.\n     */\n\n    if (svgEl.getAttribute('clip-path') !== 'none' && fill === NONE) {\n      fill = 'rgba(0, 0, 0, 0.002)';\n    }\n\n    attr(svgEl, 'fill', fill);\n    attr(svgEl, 'fill-opacity', style.opacity);\n  } else {\n    attr(svgEl, 'fill', NONE);\n  }\n\n  if (pathHasStroke(style, isText)) {\n    var stroke = isText ? style.textStroke : style.stroke;\n    stroke = stroke === 'transparent' ? NONE : stroke;\n    attr(svgEl, 'stroke', stroke);\n    var strokeWidth = isText ? style.textStrokeWidth : style.lineWidth;\n    var strokeScale = style.strokeNoScale ? style.host.getLineScale() : 1;\n    attr(svgEl, 'stroke-width', strokeWidth / strokeScale);\n    attr(svgEl, 'paint-order', 'stroke');\n    attr(svgEl, 'stroke-opacity', style.opacity);\n    var lineDash = style.lineDash;\n\n    if (lineDash) {\n      attr(svgEl, 'stroke-dasharray', style.lineDash.join(','));\n      attr(svgEl, 'stroke-dashoffset', mathRound(style.lineDashOffset || 0));\n    } else {\n      attr(svgEl, 'stroke-dasharray', '');\n    } // PENDING\n\n\n    style.lineCap && attr(svgEl, 'stroke-linecap', style.lineCap);\n    style.lineJoin && attr(svgEl, 'stroke-linejoin', style.lineJoin);\n    style.miterLimit && attr(svgEl, 'stroke-miterlimit', style.miterLimit);\n  } else {\n    attr(svgEl, 'stroke', NONE);\n  }\n}\n/***************************************************\n * PATH\n **************************************************/\n\n\nfunction pathDataToString(path) {\n  var str = [];\n  var data = path.data;\n  var dataLength = path.len();\n\n  for (var i = 0; i < dataLength;) {\n    var cmd = data[i++];\n    var cmdStr = '';\n    var nData = 0;\n\n    switch (cmd) {\n      case CMD.M:\n        cmdStr = 'M';\n        nData = 2;\n        break;\n\n      case CMD.L:\n        cmdStr = 'L';\n        nData = 2;\n        break;\n\n      case CMD.Q:\n        cmdStr = 'Q';\n        nData = 4;\n        break;\n\n      case CMD.C:\n        cmdStr = 'C';\n        nData = 6;\n        break;\n\n      case CMD.A:\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++];\n        var psi = data[i++];\n        var clockwise = data[i++];\n        var dThetaPositive = Math.abs(dTheta);\n        var isCircle = isAroundZero(dThetaPositive % PI2) && !isAroundZero(dThetaPositive);\n        var large = false;\n\n        if (dThetaPositive >= PI2) {\n          large = true;\n        } else if (isAroundZero(dThetaPositive)) {\n          large = false;\n        } else {\n          large = (dTheta > -PI && dTheta < 0 || dTheta > PI) === !!clockwise;\n        }\n\n        var x0 = round4(cx + rx * mathCos(theta));\n        var y0 = round4(cy + ry * mathSin(theta)); // It will not draw if start point and end point are exactly the same\n        // We need to shift the end point with a small value\n        // FIXME A better way to draw circle ?\n\n        if (isCircle) {\n          if (clockwise) {\n            dTheta = PI2 - 1e-4;\n          } else {\n            dTheta = -PI2 + 1e-4;\n          }\n\n          large = true;\n\n          if (i === 9) {\n            // Move to (x0, y0) only when CMD.A comes at the\n            // first position of a shape.\n            // For instance, when drawing a ring, CMD.A comes\n            // after CMD.M, so it's unnecessary to move to\n            // (x0, y0).\n            str.push('M', x0, y0);\n          }\n        }\n\n        var x = round4(cx + rx * mathCos(theta + dTheta));\n        var y = round4(cy + ry * mathSin(theta + dTheta)); // FIXME Ellipse\n\n        str.push('A', round4(rx), round4(ry), mathRound(psi * degree), +large, +clockwise, x, y);\n        break;\n\n      case CMD.Z:\n        cmdStr = 'Z';\n        break;\n\n      case CMD.R:\n        var x = round4(data[i++]);\n        var y = round4(data[i++]);\n        var w = round4(data[i++]);\n        var h = round4(data[i++]);\n        str.push('M', x, y, 'L', x + w, y, 'L', x + w, y + h, 'L', x, y + h, 'L', x, y);\n        break;\n    }\n\n    cmdStr && str.push(cmdStr);\n\n    for (var j = 0; j < nData; j++) {\n      // PENDING With scale\n      str.push(round4(data[i++]));\n    }\n  }\n\n  return str.join(' ');\n}\n\nvar svgPath = {};\n\nsvgPath.brush = function (el) {\n  var style = el.style;\n  var svgEl = el.__svgEl;\n\n  if (!svgEl) {\n    svgEl = createElement('path');\n    el.__svgEl = svgEl;\n  }\n\n  if (!el.path) {\n    el.createPathProxy();\n  }\n\n  var path = el.path;\n\n  if (el.__dirtyPath) {\n    path.beginPath();\n    el.buildPath(path, el.shape);\n    el.__dirtyPath = false;\n    var pathStr = pathDataToString(path);\n\n    if (pathStr.indexOf('NaN') < 0) {\n      // Ignore illegal path, which may happen such in out-of-range\n      // data in Calendar series.\n      attr(svgEl, 'd', pathStr);\n    }\n  }\n\n  bindStyle(svgEl, style);\n  setTransform(svgEl, el.transform);\n\n  if (style.text != null) {\n    svgTextDrawRectText(el, el.getBoundingRect());\n  }\n};\n/***************************************************\n * IMAGE\n **************************************************/\n\n\nvar svgImage = {};\n\nsvgImage.brush = function (el) {\n  var style = el.style;\n  var image = style.image;\n\n  if (image instanceof HTMLImageElement) {\n    var src = image.src;\n    image = src;\n  }\n\n  if (!image) {\n    return;\n  }\n\n  var x = style.x || 0;\n  var y = style.y || 0;\n  var dw = style.width;\n  var dh = style.height;\n  var svgEl = el.__svgEl;\n\n  if (!svgEl) {\n    svgEl = createElement('image');\n    el.__svgEl = svgEl;\n  }\n\n  if (image !== el.__imageSrc) {\n    attrXLink(svgEl, 'href', image); // Caching image src\n\n    el.__imageSrc = image;\n  }\n\n  attr(svgEl, 'width', dw);\n  attr(svgEl, 'height', dh);\n  attr(svgEl, 'x', x);\n  attr(svgEl, 'y', y);\n  setTransform(svgEl, el.transform);\n\n  if (style.text != null) {\n    svgTextDrawRectText(el, el.getBoundingRect());\n  }\n};\n/***************************************************\n * TEXT\n **************************************************/\n\n\nvar svgText = {};\nvar tmpRect = new BoundingRect();\n\nvar svgTextDrawRectText = function (el, rect, textRect) {\n  var style = el.style;\n  el.__dirty && textHelper.normalizeTextStyle(style, true);\n  var text = style.text; // Convert to string\n\n  if (text == null) {\n    // Draw no text only when text is set to null, but not ''\n    return;\n  } else {\n    text += '';\n  }\n\n  var textSvgEl = el.__textSvgEl;\n\n  if (!textSvgEl) {\n    textSvgEl = createElement('text');\n    el.__textSvgEl = textSvgEl;\n  }\n\n  bindStyle(textSvgEl, style, true);\n\n  if (el instanceof Text || el.style.transformText) {\n    // Transform text with element\n    setTransform(textSvgEl, el.transform);\n  } else {\n    if (el.transform) {\n      tmpRect.copy(rect);\n      tmpRect.applyTransform(el.transform);\n      rect = tmpRect;\n    } else {\n      var pos = el.transformCoordToGlobal(rect.x, rect.y);\n      rect.x = pos[0];\n      rect.y = pos[1];\n    }\n  }\n\n  var x;\n  var y;\n  var textPosition = style.textPosition;\n  var distance = style.textDistance;\n  var align = style.textAlign || 'left';\n\n  if (typeof style.fontSize === 'number') {\n    style.fontSize += 'px';\n  }\n\n  var font = style.font || [style.fontStyle || '', style.fontWeight || '', style.fontSize || '', style.fontFamily || ''].join(' ') || textContain.DEFAULT_FONT;\n  var verticalAlign = getVerticalAlignForSvg(style.textVerticalAlign);\n  textRect = textContain.getBoundingRect(text, font, align, verticalAlign);\n  var lineHeight = textRect.lineHeight; // Text position represented by coord\n\n  if (textPosition instanceof Array) {\n    x = rect.x + textPosition[0];\n    y = rect.y + textPosition[1];\n  } else {\n    var newPos = textContain.adjustTextPositionOnRect(textPosition, rect, distance);\n    x = newPos.x;\n    y = newPos.y;\n    verticalAlign = getVerticalAlignForSvg(newPos.textVerticalAlign);\n    align = newPos.textAlign;\n  }\n\n  attr(textSvgEl, 'alignment-baseline', verticalAlign);\n\n  if (font) {\n    textSvgEl.style.font = font;\n  }\n\n  var textPadding = style.textPadding; // Make baseline top\n\n  attr(textSvgEl, 'x', x);\n  attr(textSvgEl, 'y', y);\n  var textLines = text.split('\\n');\n  var nTextLines = textLines.length;\n  var textAnchor = align; // PENDING\n\n  if (textAnchor === 'left') {\n    textAnchor = 'start';\n    textPadding && (x += textPadding[3]);\n  } else if (textAnchor === 'right') {\n    textAnchor = 'end';\n    textPadding && (x -= textPadding[1]);\n  } else if (textAnchor === 'center') {\n    textAnchor = 'middle';\n    textPadding && (x += (textPadding[3] - textPadding[1]) / 2);\n  }\n\n  var dy = 0;\n\n  if (verticalAlign === 'baseline') {\n    dy = -textRect.height + lineHeight;\n    textPadding && (dy -= textPadding[2]);\n  } else if (verticalAlign === 'middle') {\n    dy = (-textRect.height + lineHeight) / 2;\n    textPadding && (y += (textPadding[0] - textPadding[2]) / 2);\n  } else {\n    textPadding && (dy += textPadding[0]);\n  } // Font may affect position of each tspan elements\n\n\n  if (el.__text !== text || el.__textFont !== font) {\n    var tspanList = el.__tspanList || [];\n    el.__tspanList = tspanList;\n\n    for (var i = 0; i < nTextLines; i++) {\n      // Using cached tspan elements\n      var tspan = tspanList[i];\n\n      if (!tspan) {\n        tspan = tspanList[i] = createElement('tspan');\n        textSvgEl.appendChild(tspan);\n        attr(tspan, 'alignment-baseline', verticalAlign);\n        attr(tspan, 'text-anchor', textAnchor);\n      } else {\n        tspan.innerHTML = '';\n      }\n\n      attr(tspan, 'x', x);\n      attr(tspan, 'y', y + i * lineHeight + dy);\n      tspan.appendChild(document.createTextNode(textLines[i]));\n    } // Remove unsed tspan elements\n\n\n    for (; i < tspanList.length; i++) {\n      textSvgEl.removeChild(tspanList[i]);\n    }\n\n    tspanList.length = nTextLines;\n    el.__text = text;\n    el.__textFont = font;\n  } else if (el.__tspanList.length) {\n    // Update span x and y\n    var len = el.__tspanList.length;\n\n    for (var i = 0; i < len; ++i) {\n      var tspan = el.__tspanList[i];\n\n      if (tspan) {\n        attr(tspan, 'x', x);\n        attr(tspan, 'y', y + i * lineHeight + dy);\n      }\n    }\n  }\n};\n\nfunction getVerticalAlignForSvg(verticalAlign) {\n  if (verticalAlign === 'middle') {\n    return 'middle';\n  } else if (verticalAlign === 'bottom') {\n    return 'baseline';\n  } else {\n    return 'hanging';\n  }\n}\n\nsvgText.drawRectText = svgTextDrawRectText;\n\nsvgText.brush = function (el) {\n  var style = el.style;\n\n  if (style.text != null) {\n    // 强制设置 textPosition\n    style.textPosition = [0, 0];\n    svgTextDrawRectText(el, {\n      x: style.x || 0,\n      y: style.y || 0,\n      width: 0,\n      height: 0\n    }, el.getBoundingRect());\n  }\n};\n\nexports.path = svgPath;\nexports.image = svgImage;\nexports.text = svgText;","var svgURI = 'http://www.w3.org/2000/svg';\n\nfunction createElement(name) {\n  return document.createElementNS(svgURI, name);\n}\n\nexports.createElement = createElement;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _echarts = require('echarts');\n\nvar _echarts2 = _interopRequireDefault(_echarts);\n\nvar _core = require('./core');\n\nvar _core2 = _interopRequireDefault(_core);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// export the Component the echarts Object.\nvar EchartsReact = function (_Core) {\n  _inherits(EchartsReact, _Core);\n\n  function EchartsReact(props) {\n    _classCallCheck(this, EchartsReact);\n\n    var _this = _possibleConstructorReturn(this, (EchartsReact.__proto__ || Object.getPrototypeOf(EchartsReact)).call(this, props));\n\n    _this.echartsInstance = _echarts2['default'];\n    return _this;\n  }\n\n  return EchartsReact;\n}(_core2['default']);\n\nexports['default'] = EchartsReact;","var _echarts = require(\"./lib/echarts\");\n\n(function () {\n  for (var key in _echarts) {\n    if (_echarts == null || !_echarts.hasOwnProperty(key) || key === 'default' || key === '__esModule') return;\n    exports[key] = _echarts[key];\n  }\n})();\n\nvar _export = require(\"./lib/export\");\n\n(function () {\n  for (var key in _export) {\n    if (_export == null || !_export.hasOwnProperty(key) || key === 'default' || key === '__esModule') return;\n    exports[key] = _export[key];\n  }\n})();\n\nrequire(\"./lib/chart/line\");\n\nrequire(\"./lib/chart/bar\");\n\nrequire(\"./lib/chart/pie\");\n\nrequire(\"./lib/chart/scatter\");\n\nrequire(\"./lib/chart/radar\");\n\nrequire(\"./lib/chart/map\");\n\nrequire(\"./lib/chart/tree\");\n\nrequire(\"./lib/chart/treemap\");\n\nrequire(\"./lib/chart/graph\");\n\nrequire(\"./lib/chart/gauge\");\n\nrequire(\"./lib/chart/funnel\");\n\nrequire(\"./lib/chart/parallel\");\n\nrequire(\"./lib/chart/sankey\");\n\nrequire(\"./lib/chart/boxplot\");\n\nrequire(\"./lib/chart/candlestick\");\n\nrequire(\"./lib/chart/effectScatter\");\n\nrequire(\"./lib/chart/lines\");\n\nrequire(\"./lib/chart/heatmap\");\n\nrequire(\"./lib/chart/pictorialBar\");\n\nrequire(\"./lib/chart/themeRiver\");\n\nrequire(\"./lib/chart/custom\");\n\nrequire(\"./lib/component/graphic\");\n\nrequire(\"./lib/component/grid\");\n\nrequire(\"./lib/component/legendScroll\");\n\nrequire(\"./lib/component/tooltip\");\n\nrequire(\"./lib/component/axisPointer\");\n\nrequire(\"./lib/component/polar\");\n\nrequire(\"./lib/component/geo\");\n\nrequire(\"./lib/component/parallel\");\n\nrequire(\"./lib/component/singleAxis\");\n\nrequire(\"./lib/component/brush\");\n\nrequire(\"./lib/component/calendar\");\n\nrequire(\"./lib/component/title\");\n\nrequire(\"./lib/component/dataZoom\");\n\nrequire(\"./lib/component/visualMap\");\n\nrequire(\"./lib/component/markPoint\");\n\nrequire(\"./lib/component/markLine\");\n\nrequire(\"./lib/component/markArea\");\n\nrequire(\"./lib/component/timeline\");\n\nrequire(\"./lib/component/toolbox\");\n\nrequire(\"zrender/lib/vml/vml\");\n\nrequire(\"zrender/lib/svg/svg\");","/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\nvar idStart = 0x0907;\n\nfunction _default() {\n  return idStart++;\n}\n\nmodule.exports = _default;","var guid = require(\"./core/guid\");\n\nvar Eventful = require(\"./mixin/Eventful\");\n\nvar Transformable = require(\"./mixin/Transformable\");\n\nvar Animatable = require(\"./mixin/Animatable\");\n\nvar zrUtil = require(\"./core/util\");\n\n/**\n * @alias module:zrender/Element\n * @constructor\n * @extends {module:zrender/mixin/Animatable}\n * @extends {module:zrender/mixin/Transformable}\n * @extends {module:zrender/mixin/Eventful}\n */\nvar Element = function (opts) {\n  // jshint ignore:line\n  Transformable.call(this, opts);\n  Eventful.call(this, opts);\n  Animatable.call(this, opts);\n  /**\n   * 画布元素ID\n   * @type {string}\n   */\n\n  this.id = opts.id || guid();\n};\n\nElement.prototype = {\n  /**\n   * 元素类型\n   * Element type\n   * @type {string}\n   */\n  type: 'element',\n\n  /**\n   * 元素名字\n   * Element name\n   * @type {string}\n   */\n  name: '',\n\n  /**\n   * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n   * ZRender instance will be assigned when element is associated with zrender\n   * @name module:/zrender/Element#__zr\n   * @type {module:zrender/ZRender}\n   */\n  __zr: null,\n\n  /**\n   * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n   * If ignore drawing and events of the element object\n   * @name module:/zrender/Element#ignore\n   * @type {boolean}\n   * @default false\n   */\n  ignore: false,\n\n  /**\n   * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n   * 该路径会继承被裁减对象的变换\n   * @type {module:zrender/graphic/Path}\n   * @see http://www.w3.org/TR/2dcontext/#clipping-region\n   * @readOnly\n   */\n  clipPath: null,\n\n  /**\n   * Drift element\n   * @param  {number} dx dx on the global space\n   * @param  {number} dy dy on the global space\n   */\n  drift: function (dx, dy) {\n    switch (this.draggable) {\n      case 'horizontal':\n        dy = 0;\n        break;\n\n      case 'vertical':\n        dx = 0;\n        break;\n    }\n\n    var m = this.transform;\n\n    if (!m) {\n      m = this.transform = [1, 0, 0, 1, 0, 0];\n    }\n\n    m[4] += dx;\n    m[5] += dy;\n    this.decomposeTransform();\n    this.dirty(false);\n  },\n\n  /**\n   * Hook before update\n   */\n  beforeUpdate: function () {},\n\n  /**\n   * Hook after update\n   */\n  afterUpdate: function () {},\n\n  /**\n   * Update each frame\n   */\n  update: function () {\n    this.updateTransform();\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {},\n\n  /**\n   * @protected\n   */\n  attrKV: function (key, value) {\n    if (key === 'position' || key === 'scale' || key === 'origin') {\n      // Copy the array\n      if (value) {\n        var target = this[key];\n\n        if (!target) {\n          target = this[key] = [];\n        }\n\n        target[0] = value[0];\n        target[1] = value[1];\n      }\n    } else {\n      this[key] = value;\n    }\n  },\n\n  /**\n   * Hide the element\n   */\n  hide: function () {\n    this.ignore = true;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * Show the element\n   */\n  show: function () {\n    this.ignore = false;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * @param {string|Object} key\n   * @param {*} value\n   */\n  attr: function (key, value) {\n    if (typeof key === 'string') {\n      this.attrKV(key, value);\n    } else if (zrUtil.isObject(key)) {\n      for (var name in key) {\n        if (key.hasOwnProperty(name)) {\n          this.attrKV(name, key[name]);\n        }\n      }\n    }\n\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * @param {module:zrender/graphic/Path} clipPath\n   */\n  setClipPath: function (clipPath) {\n    var zr = this.__zr;\n\n    if (zr) {\n      clipPath.addSelfToZr(zr);\n    } // Remove previous clip path\n\n\n    if (this.clipPath && this.clipPath !== clipPath) {\n      this.removeClipPath();\n    }\n\n    this.clipPath = clipPath;\n    clipPath.__zr = zr;\n    clipPath.__clipTarget = this;\n    this.dirty(false);\n  },\n\n  /**\n   */\n  removeClipPath: function () {\n    var clipPath = this.clipPath;\n\n    if (clipPath) {\n      if (clipPath.__zr) {\n        clipPath.removeSelfFromZr(clipPath.__zr);\n      }\n\n      clipPath.__zr = null;\n      clipPath.__clipTarget = null;\n      this.clipPath = null;\n      this.dirty(false);\n    }\n  },\n\n  /**\n   * Add self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  addSelfToZr: function (zr) {\n    this.__zr = zr; // 添加动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.addAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.addSelfToZr(zr);\n    }\n  },\n\n  /**\n   * Remove self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  removeSelfFromZr: function (zr) {\n    this.__zr = null; // 移除动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.removeAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.removeSelfFromZr(zr);\n    }\n  }\n};\nzrUtil.mixin(Element, Animatable);\nzrUtil.mixin(Element, Transformable);\nzrUtil.mixin(Element, Eventful);\nvar _default = Element;\nmodule.exports = _default;","var Clip = require(\"./Clip\");\n\nvar color = require(\"../tool/color\");\n\nvar _util = require(\"../core/util\");\n\nvar isArrayLike = _util.isArrayLike;\n\n/**\n * @module echarts/animation/Animator\n */\nvar arraySlice = Array.prototype.slice;\n\nfunction defaultGetter(target, key) {\n  return target[key];\n}\n\nfunction defaultSetter(target, key, value) {\n  target[key] = value;\n}\n/**\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} percent\n * @return {number}\n */\n\n\nfunction interpolateNumber(p0, p1, percent) {\n  return (p1 - p0) * percent + p0;\n}\n/**\n * @param  {string} p0\n * @param  {string} p1\n * @param  {number} percent\n * @return {string}\n */\n\n\nfunction interpolateString(p0, p1, percent) {\n  return percent > 0.5 ? p1 : p0;\n}\n/**\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {number} percent\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction interpolateArray(p0, p1, percent, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = interpolateNumber(p0[i], p1[i], percent);\n    }\n  } else {\n    var len2 = len && p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = interpolateNumber(p0[i][j], p1[i][j], percent);\n      }\n    }\n  }\n} // arr0 is source array, arr1 is target array.\n// Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n\n\nfunction fillArr(arr0, arr1, arrDim) {\n  var arr0Len = arr0.length;\n  var arr1Len = arr1.length;\n\n  if (arr0Len !== arr1Len) {\n    // FIXME Not work for TypedArray\n    var isPreviousLarger = arr0Len > arr1Len;\n\n    if (isPreviousLarger) {\n      // Cut the previous\n      arr0.length = arr1Len;\n    } else {\n      // Fill the previous\n      for (var i = arr0Len; i < arr1Len; i++) {\n        arr0.push(arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i]));\n      }\n    }\n  } // Handling NaN value\n\n\n  var len2 = arr0[0] && arr0[0].length;\n\n  for (var i = 0; i < arr0.length; i++) {\n    if (arrDim === 1) {\n      if (isNaN(arr0[i])) {\n        arr0[i] = arr1[i];\n      }\n    } else {\n      for (var j = 0; j < len2; j++) {\n        if (isNaN(arr0[i][j])) {\n          arr0[i][j] = arr1[i][j];\n        }\n      }\n    }\n  }\n}\n/**\n * @param  {Array} arr0\n * @param  {Array} arr1\n * @param  {number} arrDim\n * @return {boolean}\n */\n\n\nfunction isArraySame(arr0, arr1, arrDim) {\n  if (arr0 === arr1) {\n    return true;\n  }\n\n  var len = arr0.length;\n\n  if (len !== arr1.length) {\n    return false;\n  }\n\n  if (arrDim === 1) {\n    for (var i = 0; i < len; i++) {\n      if (arr0[i] !== arr1[i]) {\n        return false;\n      }\n    }\n  } else {\n    var len2 = arr0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        if (arr0[i][j] !== arr1[i][j]) {\n          return false;\n        }\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * Catmull Rom interpolate array\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {Array} p2\n * @param  {Array} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction catmullRomInterpolateArray(p0, p1, p2, p3, t, t2, t3, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = catmullRomInterpolate(p0[i], p1[i], p2[i], p3[i], t, t2, t3);\n    }\n  } else {\n    var len2 = p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = catmullRomInterpolate(p0[i][j], p1[i][j], p2[i][j], p3[i][j], t, t2, t3);\n      }\n    }\n  }\n}\n/**\n * Catmull Rom interpolate number\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @return {number}\n */\n\n\nfunction catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n\nfunction cloneValue(value) {\n  if (isArrayLike(value)) {\n    var len = value.length;\n\n    if (isArrayLike(value[0])) {\n      var ret = [];\n\n      for (var i = 0; i < len; i++) {\n        ret.push(arraySlice.call(value[i]));\n      }\n\n      return ret;\n    }\n\n    return arraySlice.call(value);\n  }\n\n  return value;\n}\n\nfunction rgba2String(rgba) {\n  rgba[0] = Math.floor(rgba[0]);\n  rgba[1] = Math.floor(rgba[1]);\n  rgba[2] = Math.floor(rgba[2]);\n  return 'rgba(' + rgba.join(',') + ')';\n}\n\nfunction getArrayDim(keyframes) {\n  var lastValue = keyframes[keyframes.length - 1].value;\n  return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n}\n\nfunction createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\n  var getter = animator._getter;\n  var setter = animator._setter;\n  var useSpline = easing === 'spline';\n  var trackLen = keyframes.length;\n\n  if (!trackLen) {\n    return;\n  } // Guess data type\n\n\n  var firstVal = keyframes[0].value;\n  var isValueArray = isArrayLike(firstVal);\n  var isValueColor = false;\n  var isValueString = false; // For vertices morphing\n\n  var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n  var trackMaxTime; // Sort keyframe as ascending\n\n  keyframes.sort(function (a, b) {\n    return a.time - b.time;\n  });\n  trackMaxTime = keyframes[trackLen - 1].time; // Percents of each keyframe\n\n  var kfPercents = []; // Value of each keyframe\n\n  var kfValues = [];\n  var prevValue = keyframes[0].value;\n  var isAllValueEqual = true;\n\n  for (var i = 0; i < trackLen; i++) {\n    kfPercents.push(keyframes[i].time / trackMaxTime); // Assume value is a color when it is a string\n\n    var value = keyframes[i].value; // Check if value is equal, deep check if value is array\n\n    if (!(isValueArray && isArraySame(value, prevValue, arrDim) || !isValueArray && value === prevValue)) {\n      isAllValueEqual = false;\n    }\n\n    prevValue = value; // Try converting a string to a color array\n\n    if (typeof value == 'string') {\n      var colorArray = color.parse(value);\n\n      if (colorArray) {\n        value = colorArray;\n        isValueColor = true;\n      } else {\n        isValueString = true;\n      }\n    }\n\n    kfValues.push(value);\n  }\n\n  if (!forceAnimate && isAllValueEqual) {\n    return;\n  }\n\n  var lastValue = kfValues[trackLen - 1]; // Polyfill array and NaN value\n\n  for (var i = 0; i < trackLen - 1; i++) {\n    if (isValueArray) {\n      fillArr(kfValues[i], lastValue, arrDim);\n    } else {\n      if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n        kfValues[i] = lastValue;\n      }\n    }\n  }\n\n  isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim); // Cache the key of last frame to speed up when\n  // animation playback is sequency\n\n  var lastFrame = 0;\n  var lastFramePercent = 0;\n  var start;\n  var w;\n  var p0;\n  var p1;\n  var p2;\n  var p3;\n\n  if (isValueColor) {\n    var rgba = [0, 0, 0, 0];\n  }\n\n  var onframe = function (target, percent) {\n    // Find the range keyframes\n    // kf1-----kf2---------current--------kf3\n    // find kf2 and kf3 and do interpolation\n    var frame; // In the easing function like elasticOut, percent may less than 0\n\n    if (percent < 0) {\n      frame = 0;\n    } else if (percent < lastFramePercent) {\n      // Start from next key\n      // PENDING start from lastFrame ?\n      start = Math.min(lastFrame + 1, trackLen - 1);\n\n      for (frame = start; frame >= 0; frame--) {\n        if (kfPercents[frame] <= percent) {\n          break;\n        }\n      } // PENDING really need to do this ?\n\n\n      frame = Math.min(frame, trackLen - 2);\n    } else {\n      for (frame = lastFrame; frame < trackLen; frame++) {\n        if (kfPercents[frame] > percent) {\n          break;\n        }\n      }\n\n      frame = Math.min(frame - 1, trackLen - 2);\n    }\n\n    lastFrame = frame;\n    lastFramePercent = percent;\n    var range = kfPercents[frame + 1] - kfPercents[frame];\n\n    if (range === 0) {\n      return;\n    } else {\n      w = (percent - kfPercents[frame]) / range;\n    }\n\n    if (useSpline) {\n      p1 = kfValues[frame];\n      p0 = kfValues[frame === 0 ? frame : frame - 1];\n      p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n      p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n\n      if (isValueArray) {\n        catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          value = catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(p1, p2, w);\n        } else {\n          value = catmullRomInterpolate(p0, p1, p2, p3, w, w * w, w * w * w);\n        }\n\n        setter(target, propName, value);\n      }\n    } else {\n      if (isValueArray) {\n        interpolateArray(kfValues[frame], kfValues[frame + 1], w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          interpolateArray(kfValues[frame], kfValues[frame + 1], w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n        } else {\n          value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n        }\n\n        setter(target, propName, value);\n      }\n    }\n  };\n\n  var clip = new Clip({\n    target: animator._target,\n    life: trackMaxTime,\n    loop: animator._loop,\n    delay: animator._delay,\n    onframe: onframe,\n    ondestroy: oneTrackDone\n  });\n\n  if (easing && easing !== 'spline') {\n    clip.easing = easing;\n  }\n\n  return clip;\n}\n/**\n * @alias module:zrender/animation/Animator\n * @constructor\n * @param {Object} target\n * @param {boolean} loop\n * @param {Function} getter\n * @param {Function} setter\n */\n\n\nvar Animator = function (target, loop, getter, setter) {\n  this._tracks = {};\n  this._target = target;\n  this._loop = loop || false;\n  this._getter = getter || defaultGetter;\n  this._setter = setter || defaultSetter;\n  this._clipCount = 0;\n  this._delay = 0;\n  this._doneList = [];\n  this._onframeList = [];\n  this._clipList = [];\n};\n\nAnimator.prototype = {\n  /**\n   * 设置动画关键帧\n   * @param  {number} time 关键帧时间，单位是ms\n   * @param  {Object} props 关键帧的属性值，key-value表示\n   * @return {module:zrender/animation/Animator}\n   */\n  when: function (time\n  /* ms */\n  , props) {\n    var tracks = this._tracks;\n\n    for (var propName in props) {\n      if (!props.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      if (!tracks[propName]) {\n        tracks[propName] = []; // Invalid value\n\n        var value = this._getter(this._target, propName);\n\n        if (value == null) {\n          // zrLog('Invalid property ' + propName);\n          continue;\n        } // If time is 0\n        //  Then props is given initialize value\n        // Else\n        //  Initialize value from current prop value\n\n\n        if (time !== 0) {\n          tracks[propName].push({\n            time: 0,\n            value: cloneValue(value)\n          });\n        }\n      }\n\n      tracks[propName].push({\n        time: time,\n        value: props[propName]\n      });\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加动画每一帧的回调函数\n   * @param  {Function} callback\n   * @return {module:zrender/animation/Animator}\n   */\n  during: function (callback) {\n    this._onframeList.push(callback);\n\n    return this;\n  },\n  pause: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].pause();\n    }\n\n    this._paused = true;\n  },\n  resume: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].resume();\n    }\n\n    this._paused = false;\n  },\n  isPaused: function () {\n    return !!this._paused;\n  },\n  _doneCallback: function () {\n    // Clear all tracks\n    this._tracks = {}; // Clear all clips\n\n    this._clipList.length = 0;\n    var doneList = this._doneList;\n    var len = doneList.length;\n\n    for (var i = 0; i < len; i++) {\n      doneList[i].call(this);\n    }\n  },\n\n  /**\n   * 开始执行动画\n   * @param  {string|Function} [easing]\n   *         动画缓动函数，详见{@link module:zrender/animation/easing}\n   * @param  {boolean} forceAnimate\n   * @return {module:zrender/animation/Animator}\n   */\n  start: function (easing, forceAnimate) {\n    var self = this;\n    var clipCount = 0;\n\n    var oneTrackDone = function () {\n      clipCount--;\n\n      if (!clipCount) {\n        self._doneCallback();\n      }\n    };\n\n    var lastClip;\n\n    for (var propName in this._tracks) {\n      if (!this._tracks.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      var clip = createTrackClip(this, easing, oneTrackDone, this._tracks[propName], propName, forceAnimate);\n\n      if (clip) {\n        this._clipList.push(clip);\n\n        clipCount++; // If start after added to animation\n\n        if (this.animation) {\n          this.animation.addClip(clip);\n        }\n\n        lastClip = clip;\n      }\n    } // Add during callback on the last clip\n\n\n    if (lastClip) {\n      var oldOnFrame = lastClip.onframe;\n\n      lastClip.onframe = function (target, percent) {\n        oldOnFrame(target, percent);\n\n        for (var i = 0; i < self._onframeList.length; i++) {\n          self._onframeList[i](target, percent);\n        }\n      };\n    } // This optimization will help the case that in the upper application\n    // the view may be refreshed frequently, where animation will be\n    // called repeatly but nothing changed.\n\n\n    if (!clipCount) {\n      this._doneCallback();\n    }\n\n    return this;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stop: function (forwardToLast) {\n    var clipList = this._clipList;\n    var animation = this.animation;\n\n    for (var i = 0; i < clipList.length; i++) {\n      var clip = clipList[i];\n\n      if (forwardToLast) {\n        // Move to last frame before stop\n        clip.onframe(this._target, 1);\n      }\n\n      animation && animation.removeClip(clip);\n    }\n\n    clipList.length = 0;\n  },\n\n  /**\n   * 设置动画延迟开始的时间\n   * @param  {number} time 单位ms\n   * @return {module:zrender/animation/Animator}\n   */\n  delay: function (time) {\n    this._delay = time;\n    return this;\n  },\n\n  /**\n   * 添加动画结束的回调\n   * @param  {Function} cb\n   * @return {module:zrender/animation/Animator}\n   */\n  done: function (cb) {\n    if (cb) {\n      this._doneList.push(cb);\n    }\n\n    return this;\n  },\n\n  /**\n   * @return {Array.<module:zrender/animation/Clip>}\n   */\n  getClips: function () {\n    return this._clipList;\n  }\n};\nvar _default = Animator;\nmodule.exports = _default;","// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n/**\n * Simple double linked list. Compared with array, it has O(1) remove operation.\n * @constructor\n */\nvar LinkedList = function () {\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n  this.head = null;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.tail = null;\n  this._len = 0;\n};\n\nvar linkedListProto = LinkedList.prototype;\n/**\n * Insert a new value at the tail\n * @param  {} val\n * @return {module:zrender/core/LRU~Entry}\n */\n\nlinkedListProto.insert = function (val) {\n  var entry = new Entry(val);\n  this.insertEntry(entry);\n  return entry;\n};\n/**\n * Insert an entry at the tail\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.insertEntry = function (entry) {\n  if (!this.head) {\n    this.head = this.tail = entry;\n  } else {\n    this.tail.next = entry;\n    entry.prev = this.tail;\n    entry.next = null;\n    this.tail = entry;\n  }\n\n  this._len++;\n};\n/**\n * Remove entry.\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.remove = function (entry) {\n  var prev = entry.prev;\n  var next = entry.next;\n\n  if (prev) {\n    prev.next = next;\n  } else {\n    // Is head\n    this.head = next;\n  }\n\n  if (next) {\n    next.prev = prev;\n  } else {\n    // Is tail\n    this.tail = prev;\n  }\n\n  entry.next = entry.prev = null;\n  this._len--;\n};\n/**\n * @return {number}\n */\n\n\nlinkedListProto.len = function () {\n  return this._len;\n};\n/**\n * Clear list\n */\n\n\nlinkedListProto.clear = function () {\n  this.head = this.tail = null;\n  this._len = 0;\n};\n/**\n * @constructor\n * @param {} val\n */\n\n\nvar Entry = function (val) {\n  /**\n   * @type {}\n   */\n  this.value = val;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.next;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.prev;\n};\n/**\n * LRU Cache\n * @constructor\n * @alias module:zrender/core/LRU\n */\n\n\nvar LRU = function (maxSize) {\n  this._list = new LinkedList();\n  this._map = {};\n  this._maxSize = maxSize || 10;\n  this._lastRemovedEntry = null;\n};\n\nvar LRUProto = LRU.prototype;\n/**\n * @param  {string} key\n * @param  {} value\n * @return {} Removed value\n */\n\nLRUProto.put = function (key, value) {\n  var list = this._list;\n  var map = this._map;\n  var removed = null;\n\n  if (map[key] == null) {\n    var len = list.len(); // Reuse last removed entry\n\n    var entry = this._lastRemovedEntry;\n\n    if (len >= this._maxSize && len > 0) {\n      // Remove the least recently used\n      var leastUsedEntry = list.head;\n      list.remove(leastUsedEntry);\n      delete map[leastUsedEntry.key];\n      removed = leastUsedEntry.value;\n      this._lastRemovedEntry = leastUsedEntry;\n    }\n\n    if (entry) {\n      entry.value = value;\n    } else {\n      entry = new Entry(value);\n    }\n\n    entry.key = key;\n    list.insertEntry(entry);\n    map[key] = entry;\n  }\n\n  return removed;\n};\n/**\n * @param  {string} key\n * @return {}\n */\n\n\nLRUProto.get = function (key) {\n  var entry = this._map[key];\n  var list = this._list;\n\n  if (entry != null) {\n    // Put the latest used entry in the tail\n    if (entry !== list.tail) {\n      list.remove(entry);\n      list.insertEntry(entry);\n    }\n\n    return entry.value;\n  }\n};\n/**\n * Clear the cache\n */\n\n\nLRUProto.clear = function () {\n  this._list.clear();\n\n  this._map = {};\n};\n\nvar _default = LRU;\nmodule.exports = _default;","var STYLE_COMMON_PROPS = [['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'], ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]]; // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n// var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\nvar Style = function (opts, host) {\n  this.extendFrom(opts, false);\n  this.host = host;\n};\n\nfunction createLinearGradient(ctx, obj, rect) {\n  var x = obj.x == null ? 0 : obj.x;\n  var x2 = obj.x2 == null ? 1 : obj.x2;\n  var y = obj.y == null ? 0 : obj.y;\n  var y2 = obj.y2 == null ? 0 : obj.y2;\n\n  if (!obj.global) {\n    x = x * rect.width + rect.x;\n    x2 = x2 * rect.width + rect.x;\n    y = y * rect.height + rect.y;\n    y2 = y2 * rect.height + rect.y;\n  }\n\n  var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n  return canvasGradient;\n}\n\nfunction createRadialGradient(ctx, obj, rect) {\n  var width = rect.width;\n  var height = rect.height;\n  var min = Math.min(width, height);\n  var x = obj.x == null ? 0.5 : obj.x;\n  var y = obj.y == null ? 0.5 : obj.y;\n  var r = obj.r == null ? 0.5 : obj.r;\n\n  if (!obj.global) {\n    x = x * width + rect.x;\n    y = y * height + rect.y;\n    r = r * min;\n  }\n\n  var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n  return canvasGradient;\n}\n\nStyle.prototype = {\n  constructor: Style,\n\n  /**\n   * @type {module:zrender/graphic/Displayable}\n   */\n  host: null,\n\n  /**\n   * @type {string}\n   */\n  fill: '#000',\n\n  /**\n   * @type {string}\n   */\n  stroke: null,\n\n  /**\n   * @type {number}\n   */\n  opacity: 1,\n\n  /**\n   * @type {Array.<number>}\n   */\n  lineDash: null,\n\n  /**\n   * @type {number}\n   */\n  lineDashOffset: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetY: 0,\n\n  /**\n   * @type {number}\n   */\n  lineWidth: 1,\n\n  /**\n   * If stroke ignore scale\n   * @type {Boolean}\n   */\n  strokeNoScale: false,\n  // Bounding rect text configuration\n  // Not affected by element transform\n\n  /**\n   * @type {string}\n   */\n  text: null,\n\n  /**\n   * If `fontSize` or `fontFamily` exists, `font` will be reset by\n   * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n   * So do not visit it directly in upper application (like echarts),\n   * but use `contain/text#makeFont` instead.\n   * @type {string}\n   */\n  font: null,\n\n  /**\n   * The same as font. Use font please.\n   * @deprecated\n   * @type {string}\n   */\n  textFont: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontStyle: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontWeight: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * Should be 12 but not '12px'.\n   * @type {number}\n   */\n  fontSize: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontFamily: null,\n\n  /**\n   * Reserved for special functinality, like 'hr'.\n   * @type {string}\n   */\n  textTag: null,\n\n  /**\n   * @type {string}\n   */\n  textFill: '#000',\n\n  /**\n   * @type {string}\n   */\n  textStroke: null,\n\n  /**\n   * @type {number}\n   */\n  textWidth: null,\n\n  /**\n   * Only for textBackground.\n   * @type {number}\n   */\n  textHeight: null,\n\n  /**\n   * textStroke may be set as some color as a default\n   * value in upper applicaion, where the default value\n   * of textStrokeWidth should be 0 to make sure that\n   * user can choose to do not use text stroke.\n   * @type {number}\n   */\n  textStrokeWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textLineHeight: null,\n\n  /**\n   * 'inside', 'left', 'right', 'top', 'bottom'\n   * [x, y]\n   * Based on x, y of rect.\n   * @type {string|Array.<number>}\n   * @default 'inside'\n   */\n  textPosition: 'inside',\n\n  /**\n   * If not specified, use the boundingRect of a `displayable`.\n   * @type {Object}\n   */\n  textRect: null,\n\n  /**\n   * [x, y]\n   * @type {Array.<number>}\n   */\n  textOffset: null,\n\n  /**\n   * @type {string}\n   */\n  textAlign: null,\n\n  /**\n   * @type {string}\n   */\n  textVerticalAlign: null,\n\n  /**\n   * @type {number}\n   */\n  textDistance: 5,\n\n  /**\n   * @type {string}\n   */\n  textShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetY: 0,\n\n  /**\n   * @type {string}\n   */\n  textBoxShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetY: 0,\n\n  /**\n   * Whether transform text.\n   * Only useful in Path and Image element\n   * @type {boolean}\n   */\n  transformText: false,\n\n  /**\n   * Text rotate around position of Path or Image\n   * Only useful in Path and Image element and transformText is false.\n   */\n  textRotation: 0,\n\n  /**\n   * Text origin of text rotation, like [10, 40].\n   * Based on x, y of rect.\n   * Useful in label rotation of circular symbol.\n   * By default, this origin is textPosition.\n   * Can be 'center'.\n   * @type {string|Array.<number>}\n   */\n  textOrigin: null,\n\n  /**\n   * @type {string}\n   */\n  textBackgroundColor: null,\n\n  /**\n   * @type {string}\n   */\n  textBorderColor: null,\n\n  /**\n   * @type {number}\n   */\n  textBorderWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textBorderRadius: 0,\n\n  /**\n   * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n   * @type {number|Array.<number>}\n   */\n  textPadding: null,\n\n  /**\n   * Text styles for rich text.\n   * @type {Object}\n   */\n  rich: null,\n\n  /**\n   * {outerWidth, outerHeight, ellipsis, placeholder}\n   * @type {Object}\n   */\n  truncate: null,\n\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n   * @type {string}\n   */\n  blend: null,\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  bind: function (ctx, el, prevEl) {\n    var style = this;\n    var prevStyle = prevEl && prevEl.style;\n    var firstDraw = !prevStyle;\n\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n      var prop = STYLE_COMMON_PROPS[i];\n      var styleName = prop[0];\n\n      if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n        // FIXME Invalid property value will cause style leak from previous element.\n        ctx[styleName] = style[styleName] || prop[1];\n      }\n    }\n\n    if (firstDraw || style.fill !== prevStyle.fill) {\n      ctx.fillStyle = style.fill;\n    }\n\n    if (firstDraw || style.stroke !== prevStyle.stroke) {\n      ctx.strokeStyle = style.stroke;\n    }\n\n    if (firstDraw || style.opacity !== prevStyle.opacity) {\n      ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n    }\n\n    if (firstDraw || style.blend !== prevStyle.blend) {\n      ctx.globalCompositeOperation = style.blend || 'source-over';\n    }\n\n    if (this.hasStroke()) {\n      var lineWidth = style.lineWidth;\n      ctx.lineWidth = lineWidth / (this.strokeNoScale && el && el.getLineScale ? el.getLineScale() : 1);\n    }\n  },\n  hasFill: function () {\n    var fill = this.fill;\n    return fill != null && fill !== 'none';\n  },\n  hasStroke: function () {\n    var stroke = this.stroke;\n    return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n  },\n\n  /**\n   * Extend from other style\n   * @param {zrender/graphic/Style} otherStyle\n   * @param {boolean} overwrite true: overwrirte any way.\n   *                            false: overwrite only when !target.hasOwnProperty\n   *                            others: overwrite when property is not null/undefined.\n   */\n  extendFrom: function (otherStyle, overwrite) {\n    if (otherStyle) {\n      for (var name in otherStyle) {\n        if (otherStyle.hasOwnProperty(name) && (overwrite === true || (overwrite === false ? !this.hasOwnProperty(name) : otherStyle[name] != null))) {\n          this[name] = otherStyle[name];\n        }\n      }\n    }\n  },\n\n  /**\n   * Batch setting style with a given object\n   * @param {Object|string} obj\n   * @param {*} [obj]\n   */\n  set: function (obj, value) {\n    if (typeof obj === 'string') {\n      this[obj] = value;\n    } else {\n      this.extendFrom(obj, true);\n    }\n  },\n\n  /**\n   * Clone\n   * @return {zrender/graphic/Style} [description]\n   */\n  clone: function () {\n    var newStyle = new this.constructor();\n    newStyle.extendFrom(this, true);\n    return newStyle;\n  },\n  getGradient: function (ctx, obj, rect) {\n    var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n    var canvasGradient = method(ctx, obj, rect);\n    var colorStops = obj.colorStops;\n\n    for (var i = 0; i < colorStops.length; i++) {\n      canvasGradient.addColorStop(colorStops[i].offset, colorStops[i].color);\n    }\n\n    return canvasGradient;\n  }\n};\nvar styleProto = Style.prototype;\n\nfor (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n  var prop = STYLE_COMMON_PROPS[i];\n\n  if (!(prop[0] in styleProto)) {\n    styleProto[prop[0]] = prop[1];\n  }\n} // Provide for others\n\n\nStyle.getGradient = styleProto.getGradient;\nvar _default = Style;\nmodule.exports = _default;","var Pattern = function (image, repeat) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {image: ...}`, where this constructor will not be called.\n  this.image = image;\n  this.repeat = repeat; // Can be cloned\n\n  this.type = 'pattern';\n};\n\nPattern.prototype.getCanvasPattern = function (ctx) {\n  return ctx.createPattern(this.image, this.repeat || 'repeat');\n};\n\nvar _default = Pattern;\nmodule.exports = _default;","var _default = typeof window !== 'undefined' && (window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\nwindow.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window) || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame) || function (func) {\n  setTimeout(func, 16);\n};\n\nmodule.exports = _default;","var textHelper = require(\"../helper/text\");\n\nvar BoundingRect = require(\"../../core/BoundingRect\");\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\nvar tmpRect = new BoundingRect();\n\nvar RectText = function () {};\n\nRectText.prototype = {\n  constructor: RectText,\n\n  /**\n   * Draw text in a rect with specified position.\n   * @param  {CanvasRenderingContext2D} ctx\n   * @param  {Object} rect Displayable rect\n   */\n  drawRectText: function (ctx, rect) {\n    var style = this.style;\n    rect = style.textRect || rect; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    } // FIXME\n\n\n    ctx.save(); // Transform rect to view space\n\n    var transform = this.transform;\n\n    if (!style.transformText) {\n      if (transform) {\n        tmpRect.copy(rect);\n        tmpRect.applyTransform(transform);\n        rect = tmpRect;\n      }\n    } else {\n      this.setTransform(ctx);\n    } // transformText and textRotation can not be used at the same time.\n\n\n    textHelper.renderText(this, ctx, text, style, rect);\n    ctx.restore();\n  }\n};\nvar _default = RectText;\nmodule.exports = _default;","function buildPath(ctx, shape) {\n  var x = shape.x;\n  var y = shape.y;\n  var width = shape.width;\n  var height = shape.height;\n  var r = shape.r;\n  var r1;\n  var r2;\n  var r3;\n  var r4; // Convert width and height to positive for better borderRadius\n\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n\n  if (typeof r === 'number') {\n    r1 = r2 = r3 = r4 = r;\n  } else if (r instanceof Array) {\n    if (r.length === 1) {\n      r1 = r2 = r3 = r4 = r[0];\n    } else if (r.length === 2) {\n      r1 = r3 = r[0];\n      r2 = r4 = r[1];\n    } else if (r.length === 3) {\n      r1 = r[0];\n      r2 = r4 = r[1];\n      r3 = r[2];\n    } else {\n      r1 = r[0];\n      r2 = r[1];\n      r3 = r[2];\n      r4 = r[3];\n    }\n  } else {\n    r1 = r2 = r3 = r4 = 0;\n  }\n\n  var total;\n\n  if (r1 + r2 > width) {\n    total = r1 + r2;\n    r1 *= width / total;\n    r2 *= width / total;\n  }\n\n  if (r3 + r4 > width) {\n    total = r3 + r4;\n    r3 *= width / total;\n    r4 *= width / total;\n  }\n\n  if (r2 + r3 > height) {\n    total = r2 + r3;\n    r2 *= height / total;\n    r3 *= height / total;\n  }\n\n  if (r1 + r4 > height) {\n    total = r1 + r4;\n    r1 *= height / total;\n    r4 *= height / total;\n  }\n\n  ctx.moveTo(x + r1, y);\n  ctx.lineTo(x + width - r2, y);\n  r2 !== 0 && ctx.quadraticCurveTo(x + width, y, x + width, y + r2);\n  ctx.lineTo(x + width, y + height - r3);\n  r3 !== 0 && ctx.quadraticCurveTo(x + width, y + height, x + width - r3, y + height);\n  ctx.lineTo(x + r4, y + height);\n  r4 !== 0 && ctx.quadraticCurveTo(x, y + height, x, y + height - r4);\n  ctx.lineTo(x, y + r1);\n  r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n}\n\nexports.buildPath = buildPath;","/**\n * 线段包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  var _a = 0;\n  var _b = x0; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l || y < y0 - _l && y < y1 - _l || x > x0 + _l && x > x1 + _l || x < x0 - _l && x < x1 - _l) {\n    return false;\n  }\n\n  if (x0 !== x1) {\n    _a = (y0 - y1) / (x0 - x1);\n    _b = (x0 * y1 - x1 * y0) / (x0 - x1);\n  } else {\n    return Math.abs(x - x0) <= _l / 2;\n  }\n\n  var tmp = _a * x - y + _b;\n\n  var _s = tmp * tmp / (_a * _a + 1);\n\n  return _s <= _l / 2 * _l / 2;\n}\n\nexports.containStroke = containStroke;","var _curve = require(\"../core/curve\");\n\nvar quadraticProjectPoint = _curve.quadraticProjectPoint;\n\n/**\n * 二次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l) {\n    return false;\n  }\n\n  var d = quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;","var PI2 = Math.PI * 2;\n\nfunction normalizeRadian(angle) {\n  angle %= PI2;\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle;\n}\n\nexports.normalizeRadian = normalizeRadian;","function windingLine(x0, y0, x1, y1, x, y) {\n  if (y > y0 && y > y1 || y < y0 && y < y1) {\n    return 0;\n  } // Ignore horizontal line\n\n\n  if (y1 === y0) {\n    return 0;\n  }\n\n  var dir = y1 < y0 ? 1 : -1;\n  var t = (y - y0) / (y1 - y0); // Avoid winding error when intersection point is the connect point of two line of polygon\n\n  if (t === 1 || t === 0) {\n    dir = y1 < y0 ? 0.5 : -0.5;\n  }\n\n  var x_ = t * (x1 - x0) + x0;\n  return x_ > x ? dir : 0;\n}\n\nmodule.exports = windingLine;","var env = require(\"../../core/env\");\n\n// Fix weird bug in some version of IE11 (like 11.0.9600.178**),\n// where exception \"unexpected call to method or property access\"\n// might be thrown when calling ctx.fill or ctx.stroke after a path\n// whose area size is zero is drawn and ctx.clip() is called and\n// shadowBlur is set. See #4572, #3112, #5777.\n// (e.g.,\n//  ctx.moveTo(10, 10);\n//  ctx.lineTo(20, 10);\n//  ctx.closePath();\n//  ctx.clip();\n//  ctx.shadowBlur = 10;\n//  ...\n//  ctx.fill();\n// )\nvar shadowTemp = [['shadowBlur', 0], ['shadowColor', '#000'], ['shadowOffsetX', 0], ['shadowOffsetY', 0]];\n\nfunction _default(orignalBrush) {\n  // version string can be: '11.0'\n  return env.browser.ie && env.browser.version >= 11 ? function () {\n    var clipPaths = this.__clipPaths;\n    var style = this.style;\n    var modified;\n\n    if (clipPaths) {\n      for (var i = 0; i < clipPaths.length; i++) {\n        var clipPath = clipPaths[i];\n        var shape = clipPath && clipPath.shape;\n        var type = clipPath && clipPath.type;\n\n        if (shape && (type === 'sector' && shape.startAngle === shape.endAngle || type === 'rect' && (!shape.width || !shape.height))) {\n          for (var j = 0; j < shadowTemp.length; j++) {\n            // It is save to put shadowTemp static, because shadowTemp\n            // will be all modified each item brush called.\n            shadowTemp[j][2] = style[shadowTemp[j][0]];\n            style[shadowTemp[j][0]] = shadowTemp[j][1];\n          }\n\n          modified = true;\n          break;\n        }\n      }\n    }\n\n    orignalBrush.apply(this, arguments);\n\n    if (modified) {\n      for (var j = 0; j < shadowTemp.length; j++) {\n        style[shadowTemp[j][0]] = shadowTemp[j][2];\n      }\n    }\n  } : orignalBrush;\n}\n\nmodule.exports = _default;","var smoothSpline = require(\"./smoothSpline\");\n\nvar smoothBezier = require(\"./smoothBezier\");\n\nfunction buildPath(ctx, shape, closePath) {\n  var points = shape.points;\n  var smooth = shape.smooth;\n\n  if (points && points.length >= 2) {\n    if (smooth && smooth !== 'spline') {\n      var controlPoints = smoothBezier(points, smooth, closePath, shape.smoothConstraint);\n      ctx.moveTo(points[0][0], points[0][1]);\n      var len = points.length;\n\n      for (var i = 0; i < (closePath ? len : len - 1); i++) {\n        var cp1 = controlPoints[i * 2];\n        var cp2 = controlPoints[i * 2 + 1];\n        var p = points[(i + 1) % len];\n        ctx.bezierCurveTo(cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]);\n      }\n    } else {\n      if (smooth === 'spline') {\n        points = smoothSpline(points, closePath);\n      }\n\n      ctx.moveTo(points[0][0], points[0][1]);\n\n      for (var i = 1, l = points.length; i < l; i++) {\n        ctx.lineTo(points[i][0], points[i][1]);\n      }\n    }\n\n    closePath && ctx.closePath();\n  }\n}\n\nexports.buildPath = buildPath;","var zrUtil = require(\"../core/util\");\n\nvar Gradient = require(\"./Gradient\");\n\n/**\n * x, y, x2, y2 are all percent from 0 to 1\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @param {number} [x2=1]\n * @param {number} [y2=0]\n * @param {Array.<Object>} colorStops\n * @param {boolean} [globalCoord=false]\n */\nvar LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'linear', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0 : x;\n  this.y = y == null ? 0 : y;\n  this.x2 = x2 == null ? 1 : x2;\n  this.y2 = y2 == null ? 0 : y2; // Can be cloned\n\n  this.type = 'linear'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nLinearGradient.prototype = {\n  constructor: LinearGradient\n};\nzrUtil.inherits(LinearGradient, Gradient);\nvar _default = LinearGradient;\nmodule.exports = _default;","var _clazz = require(\"../../util/clazz\");\n\nvar set = _clazz.set;\nvar get = _clazz.get;\nvar _default = {\n  clearColorPalette: function () {\n    set(this, 'colorIdx', 0);\n    set(this, 'colorNameMap', {});\n  },\n  getColorFromPalette: function (name, scope) {\n    scope = scope || this;\n    var colorIdx = get(scope, 'colorIdx') || 0;\n    var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {}); // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n\n    if (colorNameMap.hasOwnProperty(name)) {\n      return colorNameMap[name];\n    }\n\n    var colorPalette = this.get('color', true) || [];\n\n    if (!colorPalette.length) {\n      return;\n    }\n\n    var color = colorPalette[colorIdx];\n\n    if (name) {\n      colorNameMap[name] = color;\n    }\n\n    set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n    return color;\n  }\n};\nmodule.exports = _default;","var zrender = require(\"zrender/lib/zrender\");\n\nexports.zrender = zrender;\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nexports.matrix = matrix;\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nexports.vector = vector;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nexports.color = colorTool;\n\nvar graphic = require(\"./util/graphic\");\n\nexports.graphic = graphic;\n\nvar numberUtil = require(\"./util/number\");\n\nexports.number = numberUtil;\n\nvar formatUtil = require(\"./util/format\");\n\nexports.format = formatUtil;\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\nexports.throttle = _throttle.throttle;\n\nvar ecHelper = require(\"./helper\");\n\nexports.helper = ecHelper;\n\nvar _List = require(\"./data/List\");\n\nexports.List = _List;\n\nvar _Model = require(\"./model/Model\");\n\nexports.Model = _Model;\n\nvar _Axis = require(\"./coord/Axis\");\n\nexports.Axis = _Axis;\n\nvar _env = require(\"zrender/lib/core/env\");\n\nexports.env = _env;\n\nvar _parseGeoJson = require(\"./coord/geo/parseGeoJson\");\n\nexports.parseGeoJson = _parseGeoJson;\n\n/**\n * Do not mount those modules on 'src/echarts' for better tree shaking.\n */\nvar ecUtil = {};\nzrUtil.each(['map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter', 'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction', 'extend', 'defaults', 'clone', 'merge'], function (name) {\n  ecUtil[name] = zrUtil[name];\n});\nexports.util = ecUtil;","var numberUtil = require(\"../util/number\");\n\n/**\n * For testable.\n */\nvar roundNumber = numberUtil.round;\n/**\n * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n *                                Should be extent[0] < extent[1].\n * @param {number} splitNumber splitNumber should be >= 1.\n * @param {number} [minInterval]\n * @param {number} [maxInterval]\n * @return {Object} {interval, intervalPrecision, niceTickExtent}\n */\n\nfunction intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval) {\n  var result = {};\n  var span = extent[1] - extent[0];\n  var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n\n  if (minInterval != null && interval < minInterval) {\n    interval = result.interval = minInterval;\n  }\n\n  if (maxInterval != null && interval > maxInterval) {\n    interval = result.interval = maxInterval;\n  } // Tow more digital for tick.\n\n\n  var precision = result.intervalPrecision = getIntervalPrecision(interval); // Niced extent inside original extent\n\n  var niceTickExtent = result.niceTickExtent = [roundNumber(Math.ceil(extent[0] / interval) * interval, precision), roundNumber(Math.floor(extent[1] / interval) * interval, precision)];\n  fixExtent(niceTickExtent, extent);\n  return result;\n}\n/**\n * @param {number} interval\n * @return {number} interval precision\n */\n\n\nfunction getIntervalPrecision(interval) {\n  // Tow more digital for tick.\n  return numberUtil.getPrecisionSafe(interval) + 2;\n}\n\nfunction clamp(niceTickExtent, idx, extent) {\n  niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n} // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n\n\nfunction fixExtent(niceTickExtent, extent) {\n  !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n  !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n  clamp(niceTickExtent, 0, extent);\n  clamp(niceTickExtent, 1, extent);\n\n  if (niceTickExtent[0] > niceTickExtent[1]) {\n    niceTickExtent[0] = niceTickExtent[1];\n  }\n}\n\nfunction intervalScaleGetTicks(interval, extent, niceTickExtent, intervalPrecision) {\n  var ticks = []; // If interval is 0, return [];\n\n  if (!interval) {\n    return ticks;\n  } // Consider this case: using dataZoom toolbox, zoom and zoom.\n\n\n  var safeLimit = 10000;\n\n  if (extent[0] < niceTickExtent[0]) {\n    ticks.push(extent[0]);\n  }\n\n  var tick = niceTickExtent[0];\n\n  while (tick <= niceTickExtent[1]) {\n    ticks.push(tick); // Avoid rounding error\n\n    tick = roundNumber(tick + interval, intervalPrecision);\n\n    if (tick === ticks[ticks.length - 1]) {\n      // Consider out of safe float point, e.g.,\n      // -3711126.9907707 + 2e-10 === -3711126.9907707\n      break;\n    }\n\n    if (ticks.length > safeLimit) {\n      return [];\n    }\n  } // Consider this case: the last item of ticks is smaller\n  // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n\n\n  if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n    ticks.push(extent[1]);\n  }\n\n  return ticks;\n}\n\nexports.intervalScaleNiceTicks = intervalScaleNiceTicks;\nexports.getIntervalPrecision = getIntervalPrecision;\nexports.fixExtent = fixExtent;\nexports.intervalScaleGetTicks = intervalScaleGetTicks;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Region = require(\"./Region\");\n\n/**\n * Parse and decode geo json\n * @module echarts/coord/geo/parseGeoJson\n */\nfunction decode(json) {\n  if (!json.UTF8Encoding) {\n    return json;\n  }\n\n  var encodeScale = json.UTF8Scale;\n\n  if (encodeScale == null) {\n    encodeScale = 1024;\n  }\n\n  var features = json.features;\n\n  for (var f = 0; f < features.length; f++) {\n    var feature = features[f];\n    var geometry = feature.geometry;\n    var coordinates = geometry.coordinates;\n    var encodeOffsets = geometry.encodeOffsets;\n\n    for (var c = 0; c < coordinates.length; c++) {\n      var coordinate = coordinates[c];\n\n      if (geometry.type === 'Polygon') {\n        coordinates[c] = decodePolygon(coordinate, encodeOffsets[c], encodeScale);\n      } else if (geometry.type === 'MultiPolygon') {\n        for (var c2 = 0; c2 < coordinate.length; c2++) {\n          var polygon = coordinate[c2];\n          coordinate[c2] = decodePolygon(polygon, encodeOffsets[c][c2], encodeScale);\n        }\n      }\n    }\n  } // Has been decoded\n\n\n  json.UTF8Encoding = false;\n  return json;\n}\n\nfunction decodePolygon(coordinate, encodeOffsets, encodeScale) {\n  var result = [];\n  var prevX = encodeOffsets[0];\n  var prevY = encodeOffsets[1];\n\n  for (var i = 0; i < coordinate.length; i += 2) {\n    var x = coordinate.charCodeAt(i) - 64;\n    var y = coordinate.charCodeAt(i + 1) - 64; // ZigZag decoding\n\n    x = x >> 1 ^ -(x & 1);\n    y = y >> 1 ^ -(y & 1); // Delta deocding\n\n    x += prevX;\n    y += prevY;\n    prevX = x;\n    prevY = y; // Dequantize\n\n    result.push([x / encodeScale, y / encodeScale]);\n  }\n\n  return result;\n}\n/**\n * @alias module:echarts/coord/geo/parseGeoJson\n * @param {Object} geoJson\n * @return {module:zrender/container/Group}\n */\n\n\nfunction _default(geoJson) {\n  decode(geoJson);\n  return zrUtil.map(zrUtil.filter(geoJson.features, function (featureObj) {\n    // Output of mapshaper may have geometry null\n    return featureObj.geometry && featureObj.properties && featureObj.geometry.coordinates.length > 0;\n  }), function (featureObj) {\n    var properties = featureObj.properties;\n    var geo = featureObj.geometry;\n    var coordinates = geo.coordinates;\n    var geometries = [];\n\n    if (geo.type === 'Polygon') {\n      geometries.push({\n        type: 'polygon',\n        // According to the GeoJSON specification.\n        // First must be exterior, and the rest are all interior(holes).\n        exterior: coordinates[0],\n        interiors: coordinates.slice(1)\n      });\n    }\n\n    if (geo.type === 'MultiPolygon') {\n      zrUtil.each(coordinates, function (item) {\n        if (item[0]) {\n          geometries.push({\n            type: 'polygon',\n            exterior: item[0],\n            interiors: item.slice(1)\n          });\n        }\n      });\n    }\n\n    var region = new Region(properties.name, geometries, properties.cp);\n    region.properties = properties;\n    return region;\n  });\n}\n\nmodule.exports = _default;","var BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar bbox = require(\"zrender/lib/core/bbox\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar polygonContain = require(\"zrender/lib/contain/polygon\");\n\n/**\n * @module echarts/coord/geo/Region\n */\n\n/**\n * @param {string} name\n * @param {Array} geometries\n * @param {Array.<number>} cp\n */\nfunction Region(name, geometries, cp) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.name = name;\n  /**\n   * @type {Array.<Array>}\n   * @readOnly\n   */\n\n  this.geometries = geometries;\n\n  if (!cp) {\n    var rect = this.getBoundingRect();\n    cp = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  } else {\n    cp = [cp[0], cp[1]];\n  }\n  /**\n   * @type {Array.<number>}\n   */\n\n\n  this.center = cp;\n}\n\nRegion.prototype = {\n  constructor: Region,\n  properties: null,\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    var rect = this._rect;\n\n    if (rect) {\n      return rect;\n    }\n\n    var MAX_NUMBER = Number.MAX_VALUE;\n    var min = [MAX_NUMBER, MAX_NUMBER];\n    var max = [-MAX_NUMBER, -MAX_NUMBER];\n    var min2 = [];\n    var max2 = [];\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      } // Doesn't consider hole\n\n\n      var exterior = geometries[i].exterior;\n      bbox.fromPoints(exterior, min2, max2);\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return this._rect = new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * @param {<Array.<number>} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var rect = this.getBoundingRect();\n    var geometries = this.geometries;\n\n    if (!rect.contain(coord[0], coord[1])) {\n      return false;\n    }\n\n    loopGeo: for (var i = 0, len = geometries.length; i < len; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      if (polygonContain.contain(exterior, coord[0], coord[1])) {\n        // Not in the region if point is in the hole.\n        for (var k = 0; k < (interiors ? interiors.length : 0); k++) {\n          if (polygonContain.contain(interiors[k])) {\n            continue loopGeo;\n          }\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  },\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var aspect = rect.width / rect.height;\n\n    if (!width) {\n      width = aspect * height;\n    } else if (!height) {\n      height = width / aspect;\n    }\n\n    var target = new BoundingRect(x, y, width, height);\n    var transform = rect.calculateTransform(target);\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      for (var p = 0; p < exterior.length; p++) {\n        vec2.applyTransform(exterior[p], exterior[p], transform);\n      }\n\n      for (var h = 0; h < (interiors ? interiors.length : 0); h++) {\n        for (var p = 0; p < interiors[h].length; p++) {\n          vec2.applyTransform(interiors[h][p], interiors[h][p], transform);\n        }\n      }\n    }\n\n    rect = this._rect;\n    rect.copy(target); // Update center\n\n    this.center = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n};\nvar _default = Region;\nmodule.exports = _default;","var windingLine = require(\"./windingLine\");\n\nvar EPSILON = 1e-8;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n}\n\nfunction contain(points, x, y) {\n  var w = 0;\n  var p = points[0];\n\n  if (!p) {\n    return false;\n  }\n\n  for (var i = 1; i < points.length; i++) {\n    var p2 = points[i];\n    w += windingLine(p[0], p[1], p2[0], p2[1], x, y);\n    p = p2;\n  } // Close polygon\n\n\n  var p0 = points[0];\n\n  if (!isAroundEqual(p[0], p0[0]) || !isAroundEqual(p[1], p0[1])) {\n    w += windingLine(p[0], p[1], p0[0], p0[1], x, y);\n  }\n\n  return w !== 0;\n}\n\nexports.contain = contain;","var _model = require(\"../../util/model\");\n\nvar otherDimToDataDim = _model.otherDimToDataDim;\n\n/**\n * @module echarts/chart/helper/Symbol\n */\nfunction findLabelValueDim(data) {\n  var valueDim;\n  var labelDims = otherDimToDataDim(data, 'label');\n\n  if (labelDims.length) {\n    valueDim = labelDims[0];\n  } else {\n    // Get last value dim\n    var dimensions = data.dimensions.slice();\n    var dataType;\n\n    while (dimensions.length && (valueDim = dimensions.pop(), dataType = data.getDimensionInfo(valueDim).type, dataType === 'ordinal' || dataType === 'time')) {} // jshint ignore:line\n\n  }\n\n  return valueDim;\n}\n\nexports.findLabelValueDim = findLabelValueDim;","var Path = require(\"zrender/lib/graphic/Path\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar fixClipWithShadow = require(\"zrender/lib/graphic/helper/fixClipWithShadow\");\n\n// Poly path support NaN point\nvar vec2Min = vec2.min;\nvar vec2Max = vec2.max;\nvar scaleAndAdd = vec2.scaleAndAdd;\nvar v2Copy = vec2.copy; // Temporary variable\n\nvar v = [];\nvar cp0 = [];\nvar cp1 = [];\n\nfunction isPointNull(p) {\n  return isNaN(p[0]) || isNaN(p[1]);\n}\n\nfunction drawSegment(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  var prevIdx = 0;\n  var idx = start;\n\n  for (var k = 0; k < segLen; k++) {\n    var p = points[idx];\n\n    if (idx >= allLen || idx < 0) {\n      break;\n    }\n\n    if (isPointNull(p)) {\n      if (connectNulls) {\n        idx += dir;\n        continue;\n      }\n\n      break;\n    }\n\n    if (idx === start) {\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n      v2Copy(cp0, p);\n    } else {\n      if (smooth > 0) {\n        var nextIdx = idx + dir;\n        var nextP = points[nextIdx];\n\n        if (connectNulls) {\n          // Find next point not null\n          while (nextP && isPointNull(points[nextIdx])) {\n            nextIdx += dir;\n            nextP = points[nextIdx];\n          }\n        }\n\n        var ratioNextSeg = 0.5;\n        var prevP = points[prevIdx];\n        var nextP = points[nextIdx]; // Last point\n\n        if (!nextP || isPointNull(nextP)) {\n          v2Copy(cp1, p);\n        } else {\n          // If next data is null in not connect case\n          if (isPointNull(nextP) && !connectNulls) {\n            nextP = p;\n          }\n\n          vec2.sub(v, nextP, prevP);\n          var lenPrevSeg;\n          var lenNextSeg;\n\n          if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n            var dim = smoothMonotone === 'x' ? 0 : 1;\n            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n          } else {\n            lenPrevSeg = vec2.dist(p, prevP);\n            lenNextSeg = vec2.dist(p, nextP);\n          } // Use ratio of seg length\n\n\n          ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n          scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n        } // Smooth constraint\n\n\n        vec2Min(cp0, cp0, smoothMax);\n        vec2Max(cp0, cp0, smoothMin);\n        vec2Min(cp1, cp1, smoothMax);\n        vec2Max(cp1, cp1, smoothMin);\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]); // cp0 of next segment\n\n        scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n      } else {\n        ctx.lineTo(p[0], p[1]);\n      }\n    }\n\n    prevIdx = idx;\n    idx += dir;\n  }\n\n  return k;\n}\n\nfunction getBoundingBox(points, smoothConstraint) {\n  var ptMin = [Infinity, Infinity];\n  var ptMax = [-Infinity, -Infinity];\n\n  if (smoothConstraint) {\n    for (var i = 0; i < points.length; i++) {\n      var pt = points[i];\n\n      if (pt[0] < ptMin[0]) {\n        ptMin[0] = pt[0];\n      }\n\n      if (pt[1] < ptMin[1]) {\n        ptMin[1] = pt[1];\n      }\n\n      if (pt[0] > ptMax[0]) {\n        ptMax[0] = pt[0];\n      }\n\n      if (pt[1] > ptMax[1]) {\n        ptMax[1] = pt[1];\n      }\n    }\n  }\n\n  return {\n    min: smoothConstraint ? ptMin : ptMax,\n    max: smoothConstraint ? ptMax : ptMin\n  };\n}\n\nvar Polyline = Path.extend({\n  type: 'ec-polyline',\n  shape: {\n    points: [],\n    smooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  style: {\n    fill: null,\n    stroke: '#000'\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var i = 0;\n    var len = points.length;\n    var result = getBoundingBox(points, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      i += drawSegment(ctx, points, i, len, len, 1, result.min, result.max, shape.smooth, shape.smoothMonotone, shape.connectNulls) + 1;\n    }\n  }\n});\nvar Polygon = Path.extend({\n  type: 'ec-polygon',\n  shape: {\n    points: [],\n    // Offset between stacked base points and points\n    stackedOnPoints: [],\n    smooth: 0,\n    stackedOnSmooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var stackedOnPoints = shape.stackedOnPoints;\n    var i = 0;\n    var len = points.length;\n    var smoothMonotone = shape.smoothMonotone;\n    var bbox = getBoundingBox(points, shape.smoothConstraint);\n    var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      var k = drawSegment(ctx, points, i, len, len, 1, bbox.min, bbox.max, shape.smooth, smoothMonotone, shape.connectNulls);\n      drawSegment(ctx, stackedOnPoints, i + k - 1, k, len, -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth, smoothMonotone, shape.connectNulls);\n      i += k + 1;\n      ctx.closePath();\n    }\n  }\n});\nexports.Polyline = Polyline;\nexports.Polygon = Polygon;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\nvar AxisModel = ComponentModel.extend({\n  type: 'cartesian2dAxis',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Axis2D}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  init: function () {\n    AxisModel.superApply(this, 'init', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function () {\n    AxisModel.superApply(this, 'mergeOption', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  restoreData: function () {\n    AxisModel.superApply(this, 'restoreData', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   * @return {module:echarts/model/Component}\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'grid',\n      index: this.option.gridIndex,\n      id: this.option.gridId\n    })[0];\n  }\n});\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\nvar extraOption = {\n  // gridIndex: 0,\n  // gridId: '',\n  // Offset is for multiple axis on the same position\n  offset: 0\n};\naxisModelCreator('x', AxisModel, getAxisType, extraOption);\naxisModelCreator('y', AxisModel, getAxisType, extraOption);\nvar _default = AxisModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar defaultOption = {\n  show: true,\n  zlevel: 0,\n  // 一级层叠\n  z: 0,\n  // 二级层叠\n  // 反向坐标轴\n  inverse: false,\n  // 坐标轴名字，默认为空\n  name: '',\n  // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n  nameLocation: 'end',\n  // 坐标轴名字旋转，degree。\n  nameRotate: null,\n  // Adapt to axis rotate, when nameLocation is 'middle'.\n  nameTruncate: {\n    maxWidth: null,\n    ellipsis: '...',\n    placeholder: '.'\n  },\n  // 坐标轴文字样式，默认取全局样式\n  nameTextStyle: {},\n  // 文字与轴线距离\n  nameGap: 15,\n  silent: false,\n  // Default false to support tooltip.\n  triggerEvent: false,\n  // Default false to avoid legacy user event listener fail.\n  tooltip: {\n    show: false\n  },\n  axisPointer: {},\n  // 坐标轴线\n  axisLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    onZero: true,\n    onZeroAxisIndex: null,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      color: '#333',\n      width: 1,\n      type: 'solid'\n    },\n    // 坐标轴两端的箭头\n    symbol: ['none', 'none'],\n    symbolSize: [10, 15]\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // 属性show控制显示与否，默认显示\n    show: true,\n    // 控制小标记是否在grid里\n    inside: false,\n    // 属性length控制线长\n    length: 5,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      width: 1\n    }\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    show: true,\n    // 控制文本标签是否在grid里\n    inside: false,\n    rotate: 0,\n    showMinLabel: null,\n    // true | false | null (auto)\n    showMaxLabel: null,\n    // true | false | null (auto)\n    margin: 8,\n    // formatter: null,\n    // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n    fontSize: 12\n  },\n  // 分隔线\n  splitLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    // 属性lineStyle（详见lineStyle）控制线条样式\n    lineStyle: {\n      color: ['#ccc'],\n      width: 1,\n      type: 'solid'\n    }\n  },\n  // 分隔区域\n  splitArea: {\n    // 默认不显示，属性show控制显示与否\n    show: false,\n    // 属性areaStyle（详见areaStyle）控制区域样式\n    areaStyle: {\n      color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\n    }\n  }\n};\nvar axisDefault = {};\naxisDefault.categoryAxis = zrUtil.merge({\n  // 类目起始和结束两端空白策略\n  boundaryGap: true,\n  // splitArea: {\n  // show: false\n  // },\n  splitLine: {\n    show: false\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // If tick is align with label when boundaryGap is true\n    alignWithLabel: false,\n    interval: 'auto'\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    interval: 'auto'\n  }\n}, defaultOption);\naxisDefault.valueAxis = zrUtil.merge({\n  // 数值起始和结束两端空白策略\n  boundaryGap: [0, 0],\n  // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n  // min: null,\n  // 最大值，设置成 'dataMax' 则从数据中计算最大值\n  // max: null,\n  // Readonly prop, specifies start value of the range when using data zoom.\n  // rangeStart: null\n  // Readonly prop, specifies end value of the range when using data zoom.\n  // rangeEnd: null\n  // 脱离0值比例，放大聚焦到最终_min，_max区间\n  // scale: false,\n  // 分割段数，默认为5\n  splitNumber: 5 // Minimum interval\n  // minInterval: null\n  // maxInterval: null\n\n}, defaultOption); // FIXME\n\naxisDefault.timeAxis = zrUtil.defaults({\n  scale: true,\n  min: 'dataMin',\n  max: 'dataMax'\n}, axisDefault.valueAxis);\naxisDefault.logAxis = zrUtil.defaults({\n  scale: true,\n  logBase: 10\n}, axisDefault.valueAxis);\nvar _default = axisDefault;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, labelInterval, z2\n * }\n */\nfunction layout(gridModel, axisModel, opt) {\n  opt = opt || {};\n  var grid = gridModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var rawAxisPosition = axis.position;\n  var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n  var axisDim = axis.dim;\n  var rect = grid.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var idx = {\n    left: 0,\n    right: 1,\n    top: 0,\n    bottom: 1,\n    onZero: 2\n  };\n  var axisOffset = axisModel.get('offset') || 0;\n  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n  if (axis.onZero) {\n    var otherAxis = grid.getAxis(axisDim === 'x' ? 'y' : 'x', axis.onZeroAxisIndex);\n    var onZeroCoord = otherAxis.toGlobalCoord(otherAxis.dataToCoord(0));\n    posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n  } // Axis position\n\n\n  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\n\n  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\n\n  var dirMap = {\n    top: -1,\n    bottom: 1,\n    left: -1,\n    right: 1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n  layout.labelOffset = axis.onZero ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  } // Special label rotation\n\n\n  var labelRotate = axisModel.get('axisLabel.rotate');\n  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // label interval when auto mode.\n\n  layout.labelInterval = axis.getLabelInterval(); // Over splitLine and splitArea\n\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;","var SeriesModel = require(\"../../model/Series\");\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.__base_bar__',\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(option.data, this, ecModel);\n  },\n  getMarkerPosition: function (value) {\n    var coordSys = this.coordinateSystem;\n\n    if (coordSys) {\n      // PENDING if clamp ?\n      var pt = coordSys.dataToPoint(value, true);\n      var data = this.getData();\n      var offset = data.getLayout('offset');\n      var size = data.getLayout('size');\n      var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n      pt[offsetIndex] += offset + size / 2;\n      return pt;\n    }\n\n    return [NaN, NaN];\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    // stack: null\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // 最小高度改为0\n    barMinHeight: 0,\n    // 最小角度为0，仅对极坐标系下的柱状图有效\n    barMinAngle: 0,\n    // cursor: null,\n    // barMaxWidth: null,\n    // 默认自适应\n    // barWidth: null,\n    // 柱间距离，默认为柱形宽度的30%，可设固定值\n    // barGap: '30%',\n    // 类目间柱形距离，默认为类目间距的20%，可设固定值\n    // barCategoryGap: '20%',\n    // label: {\n    //     normal: {\n    //         show: false\n    //     }\n    // },\n    itemStyle: {// normal: {\n      // color: '各异'\n      // },\n      // emphasis: {}\n    }\n  }\n});\n\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nfunction setLabel(normalStyle, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside) {\n  var labelModel = itemModel.getModel('label.normal');\n  var hoverLabelModel = itemModel.getModel('label.emphasis');\n  graphic.setLabelStyle(normalStyle, hoverStyle, labelModel, hoverLabelModel, {\n    labelFetcher: seriesModel,\n    labelDataIndex: dataIndex,\n    defaultText: seriesModel.getRawValue(dataIndex),\n    isRectText: true,\n    autoColor: color\n  });\n  fixPosition(normalStyle);\n  fixPosition(hoverStyle);\n}\n\nfunction fixPosition(style, labelPositionOutside) {\n  if (style.textPosition === 'outside') {\n    style.textPosition = labelPositionOutside;\n  }\n}\n\nexports.setLabel = setLabel;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nfunction _default(seriesType, actionInfos) {\n  zrUtil.each(actionInfos, function (actionInfo) {\n    actionInfo.update = 'updateView';\n    /**\n     * @payload\n     * @property {string} seriesName\n     * @property {string} name\n     */\n\n    echarts.registerAction(actionInfo, function (payload, ecModel) {\n      var selected = {};\n      ecModel.eachComponent({\n        mainType: 'series',\n        subType: seriesType,\n        query: payload\n      }, function (seriesModel) {\n        if (seriesModel[actionInfo.method]) {\n          seriesModel[actionInfo.method](payload.name, payload.dataIndex);\n        }\n\n        var data = seriesModel.getData(); // Create selected map\n\n        data.each(function (idx) {\n          var name = data.getName(idx);\n          selected[name] = seriesModel.isSelected(name) || false;\n        });\n      });\n      return {\n        name: payload.name,\n        selected: selected\n      };\n    });\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar Transformable = require(\"zrender/lib/mixin/Transformable\");\n\n/**\n * Simple view coordinate system\n * Mapping given x, y to transformd view x, y\n */\nvar v2ApplyTransform = vector.applyTransform; // Dummy transform node\n\nfunction TransformDummy() {\n  Transformable.call(this);\n}\n\nzrUtil.mixin(TransformDummy, Transformable);\n\nfunction View(name) {\n  /**\n   * @type {string}\n   */\n  this.name = name;\n  /**\n   * @type {Object}\n   */\n\n  this.zoomLimit;\n  Transformable.call(this);\n  this._roamTransform = new TransformDummy();\n  this._viewTransform = new TransformDummy();\n  this._center;\n  this._zoom;\n}\n\nView.prototype = {\n  constructor: View,\n  type: 'view',\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Set bounding rect\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  // PENDING to getRect\n  setBoundingRect: function (x, y, width, height) {\n    this._rect = new BoundingRect(x, y, width, height);\n    return this._rect;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // PENDING to getRect\n  getBoundingRect: function () {\n    return this._rect;\n  },\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  setViewRect: function (x, y, width, height) {\n    this.transformTo(x, y, width, height);\n    this._viewRect = new BoundingRect(x, y, width, height);\n  },\n\n  /**\n   * Transformed to particular position and size\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var viewTransform = this._viewTransform;\n    viewTransform.transform = rect.calculateTransform(new BoundingRect(x, y, width, height));\n    viewTransform.decomposeTransform();\n\n    this._updateTransform();\n  },\n\n  /**\n   * Set center of view\n   * @param {Array.<number>} [centerCoord]\n   */\n  setCenter: function (centerCoord) {\n    if (!centerCoord) {\n      return;\n    }\n\n    this._center = centerCoord;\n\n    this._updateCenterAndZoom();\n  },\n\n  /**\n   * @param {number} zoom\n   */\n  setZoom: function (zoom) {\n    zoom = zoom || 1;\n    var zoomLimit = this.zoomLimit;\n\n    if (zoomLimit) {\n      if (zoomLimit.max != null) {\n        zoom = Math.min(zoomLimit.max, zoom);\n      }\n\n      if (zoomLimit.min != null) {\n        zoom = Math.max(zoomLimit.min, zoom);\n      }\n    }\n\n    this._zoom = zoom;\n\n    this._updateCenterAndZoom();\n  },\n\n  /**\n   * Get default center without roam\n   */\n  getDefaultCenter: function () {\n    // Rect before any transform\n    var rawRect = this.getBoundingRect();\n    var cx = rawRect.x + rawRect.width / 2;\n    var cy = rawRect.y + rawRect.height / 2;\n    return [cx, cy];\n  },\n  getCenter: function () {\n    return this._center || this.getDefaultCenter();\n  },\n  getZoom: function () {\n    return this._zoom || 1;\n  },\n\n  /**\n   * @return {Array.<number}\n   */\n  getRoamTransform: function () {\n    return this._roamTransform;\n  },\n  _updateCenterAndZoom: function () {\n    // Must update after view transform updated\n    var viewTransformMatrix = this._viewTransform.getLocalTransform();\n\n    var roamTransform = this._roamTransform;\n    var defaultCenter = this.getDefaultCenter();\n    var center = this.getCenter();\n    var zoom = this.getZoom();\n    center = vector.applyTransform([], center, viewTransformMatrix);\n    defaultCenter = vector.applyTransform([], defaultCenter, viewTransformMatrix);\n    roamTransform.origin = center;\n    roamTransform.position = [defaultCenter[0] - center[0], defaultCenter[1] - center[1]];\n    roamTransform.scale = [zoom, zoom];\n\n    this._updateTransform();\n  },\n\n  /**\n   * Update transform from roam and mapLocation\n   * @private\n   */\n  _updateTransform: function () {\n    var roamTransform = this._roamTransform;\n    var viewTransform = this._viewTransform;\n    viewTransform.parent = roamTransform;\n    roamTransform.updateTransform();\n    viewTransform.updateTransform();\n    viewTransform.transform && matrix.copy(this.transform || (this.transform = []), viewTransform.transform);\n\n    if (this.transform) {\n      this.invTransform = this.invTransform || [];\n      matrix.invert(this.invTransform, this.transform);\n    } else {\n      this.invTransform = null;\n    }\n\n    this.decomposeTransform();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getViewRect: function () {\n    return this._viewRect;\n  },\n\n  /**\n   * Get view rect after roam transform\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getViewRectAfterRoam: function () {\n    var rect = this.getBoundingRect().clone();\n    rect.applyTransform(this.transform);\n    return rect;\n  },\n\n  /**\n   * Convert a single (lon, lat) data item to (x, y) point.\n   * @param {Array.<number>} data\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data) {\n    var transform = this.transform;\n    return transform ? v2ApplyTransform([], data, transform) : [data[0], data[1]];\n  },\n\n  /**\n   * Convert a (x, y) point to (lon, lat) data\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToData: function (point) {\n    var invTransform = this.invTransform;\n    return invTransform ? v2ApplyTransform([], point, invTransform) : [point[0], point[1]];\n  },\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData'),\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  containPoint: function (point) {\n    return this.getViewRectAfterRoam().contain(point[0], point[1]);\n  }\n  /**\n   * @return {number}\n   */\n  // getScalarScale: function () {\n  //     // Use determinant square root of transform to mutiply scalar\n  //     var m = this.transform;\n  //     var det = Math.sqrt(Math.abs(m[0] * m[3] - m[2] * m[1]));\n  //     return det;\n  // }\n\n};\nzrUtil.mixin(View, Transformable);\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var seriesModel = finder.seriesModel;\n  var coordSys = seriesModel ? seriesModel.coordinateSystem : null; // e.g., graph.\n\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nvar _default = View;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar RoamController = require(\"./RoamController\");\n\nvar roamHelper = require(\"../../component/helper/roamHelper\");\n\nvar _cursorHelper = require(\"../../component/helper/cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphic = require(\"../../util/graphic\");\n\nfunction getFixedItemStyle(model, scale) {\n  var itemStyle = model.getItemStyle();\n  var areaColor = model.get('areaColor'); // If user want the color not to be changed when hover,\n  // they should both set areaColor and color to be null.\n\n  if (areaColor != null) {\n    itemStyle.fill = areaColor;\n  }\n\n  return itemStyle;\n}\n\nfunction updateMapSelectHandler(mapDraw, mapOrGeoModel, group, api, fromView) {\n  group.off('click');\n  group.off('mousedown');\n\n  if (mapOrGeoModel.get('selectedMode')) {\n    group.on('mousedown', function () {\n      mapDraw._mouseDownFlag = true;\n    });\n    group.on('click', function (e) {\n      if (!mapDraw._mouseDownFlag) {\n        return;\n      }\n\n      mapDraw._mouseDownFlag = false;\n      var el = e.target;\n\n      while (!el.__regions) {\n        el = el.parent;\n      }\n\n      if (!el) {\n        return;\n      }\n\n      var action = {\n        type: (mapOrGeoModel.mainType === 'geo' ? 'geo' : 'map') + 'ToggleSelect',\n        batch: zrUtil.map(el.__regions, function (region) {\n          return {\n            name: region.name,\n            from: fromView.uid\n          };\n        })\n      };\n      action[mapOrGeoModel.mainType + 'Id'] = mapOrGeoModel.id;\n      api.dispatchAction(action);\n      updateMapSelected(mapOrGeoModel, group);\n    });\n  }\n}\n\nfunction updateMapSelected(mapOrGeoModel, group) {\n  // FIXME\n  group.eachChild(function (otherRegionEl) {\n    zrUtil.each(otherRegionEl.__regions, function (region) {\n      otherRegionEl.trigger(mapOrGeoModel.isSelected(region.name) ? 'emphasis' : 'normal');\n    });\n  });\n}\n/**\n * @alias module:echarts/component/helper/MapDraw\n * @param {module:echarts/ExtensionAPI} api\n * @param {boolean} updateGroup\n */\n\n\nfunction MapDraw(api, updateGroup) {\n  var group = new graphic.Group();\n  /**\n   * @type {module:echarts/component/helper/RoamController}\n   * @private\n   */\n\n  this._controller = new RoamController(api.getZr());\n  /**\n   * @type {Object} {target, zoom, zoomLimit}\n   * @private\n   */\n\n  this._controllerHost = {\n    target: updateGroup ? group : null\n  };\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n\n  this.group = group;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._updateGroup = updateGroup;\n  /**\n   * This flag is used to make sure that only one among\n   * `pan`, `zoom`, `click` can occurs, otherwise 'selected'\n   * action may be triggered when `pan`, which is unexpected.\n   * @type {booelan}\n   */\n\n  this._mouseDownFlag;\n}\n\nMapDraw.prototype = {\n  constructor: MapDraw,\n  draw: function (mapOrGeoModel, ecModel, api, fromView, payload) {\n    var isGeo = mapOrGeoModel.mainType === 'geo'; // Map series has data. GEO model that controlled by map series\n    // will be assigned with map data. Other GEO model has no data.\n\n    var data = mapOrGeoModel.getData && mapOrGeoModel.getData();\n    isGeo && ecModel.eachComponent({\n      mainType: 'series',\n      subType: 'map'\n    }, function (mapSeries) {\n      if (!data && mapSeries.getHostGeoModel() === mapOrGeoModel) {\n        data = mapSeries.getData();\n      }\n    });\n    var geo = mapOrGeoModel.coordinateSystem;\n    var group = this.group;\n    var scale = geo.scale;\n    var groupNewProp = {\n      position: geo.position,\n      scale: scale\n    }; // No animation when first draw or in action\n\n    if (!group.childAt(0) || payload) {\n      group.attr(groupNewProp);\n    } else {\n      graphic.updateProps(group, groupNewProp, mapOrGeoModel);\n    }\n\n    group.removeAll();\n    var itemStyleAccessPath = ['itemStyle', 'normal'];\n    var hoverItemStyleAccessPath = ['itemStyle', 'emphasis'];\n    var labelAccessPath = ['label', 'normal'];\n    var hoverLabelAccessPath = ['label', 'emphasis'];\n    var nameMap = zrUtil.createHashMap();\n    zrUtil.each(geo.regions, function (region) {\n      // Consider in GeoJson properties.name may be duplicated, for example,\n      // there is multiple region named \"United Kindom\" or \"France\" (so many\n      // colonies). And it is not appropriate to merge them in geo, which\n      // will make them share the same label and bring trouble in label\n      // location calculation.\n      var regionGroup = nameMap.get(region.name) || nameMap.set(region.name, new graphic.Group());\n      var compoundPath = new graphic.CompoundPath({\n        shape: {\n          paths: []\n        }\n      });\n      regionGroup.add(compoundPath);\n      var regionModel = mapOrGeoModel.getRegionModel(region.name) || mapOrGeoModel;\n      var itemStyleModel = regionModel.getModel(itemStyleAccessPath);\n      var hoverItemStyleModel = regionModel.getModel(hoverItemStyleAccessPath);\n      var itemStyle = getFixedItemStyle(itemStyleModel, scale);\n      var hoverItemStyle = getFixedItemStyle(hoverItemStyleModel, scale);\n      var labelModel = regionModel.getModel(labelAccessPath);\n      var hoverLabelModel = regionModel.getModel(hoverLabelAccessPath);\n      var dataIdx; // Use the itemStyle in data if has data\n\n      if (data) {\n        dataIdx = data.indexOfName(region.name); // Only visual color of each item will be used. It can be encoded by dataRange\n        // But visual color of series is used in symbol drawing\n        //\n        // Visual color for each series is for the symbol draw\n\n        var visualColor = data.getItemVisual(dataIdx, 'color', true);\n\n        if (visualColor) {\n          itemStyle.fill = visualColor;\n        }\n      }\n\n      zrUtil.each(region.geometries, function (geometry) {\n        if (geometry.type !== 'polygon') {\n          return;\n        }\n\n        compoundPath.shape.paths.push(new graphic.Polygon({\n          shape: {\n            points: geometry.exterior\n          }\n        }));\n\n        for (var i = 0; i < (geometry.interiors ? geometry.interiors.length : 0); i++) {\n          compoundPath.shape.paths.push(new graphic.Polygon({\n            shape: {\n              points: geometry.interiors[i]\n            }\n          }));\n        }\n      });\n      compoundPath.setStyle(itemStyle);\n      compoundPath.style.strokeNoScale = true;\n      compoundPath.culling = true; // Label\n\n      var showLabel = labelModel.get('show');\n      var hoverShowLabel = hoverLabelModel.get('show');\n      var isDataNaN = data && isNaN(data.get('value', dataIdx));\n      var itemLayout = data && data.getItemLayout(dataIdx); // In the following cases label will be drawn\n      // 1. In map series and data value is NaN\n      // 2. In geo component\n      // 4. Region has no series legendSymbol, which will be add a showLabel flag in mapSymbolLayout\n\n      if (isGeo || isDataNaN && (showLabel || hoverShowLabel) || itemLayout && itemLayout.showLabel) {\n        var query = !isGeo ? dataIdx : region.name;\n        var labelFetcher; // Consider dataIdx not found.\n\n        if (!data || dataIdx >= 0) {\n          labelFetcher = mapOrGeoModel;\n        }\n\n        var textEl = new graphic.Text({\n          position: region.center.slice(),\n          scale: [1 / scale[0], 1 / scale[1]],\n          z2: 10,\n          silent: true\n        });\n        graphic.setLabelStyle(textEl.style, textEl.hoverStyle = {}, labelModel, hoverLabelModel, {\n          labelFetcher: labelFetcher,\n          labelDataIndex: query,\n          defaultText: region.name,\n          useInsideStyle: false\n        }, {\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        });\n        regionGroup.add(textEl);\n      } // setItemGraphicEl, setHoverStyle after all polygons and labels\n      // are added to the rigionGroup\n\n\n      if (data) {\n        data.setItemGraphicEl(dataIdx, regionGroup);\n      } else {\n        var regionModel = mapOrGeoModel.getRegionModel(region.name); // Package custom mouse event for geo component\n\n        compoundPath.eventData = {\n          componentType: 'geo',\n          geoIndex: mapOrGeoModel.componentIndex,\n          name: region.name,\n          region: regionModel && regionModel.option || {}\n        };\n      }\n\n      var groupRegions = regionGroup.__regions || (regionGroup.__regions = []);\n      groupRegions.push(region);\n      graphic.setHoverStyle(regionGroup, hoverItemStyle, {\n        hoverSilentOnTouch: !!mapOrGeoModel.get('selectedMode')\n      });\n      group.add(regionGroup);\n    });\n\n    this._updateController(mapOrGeoModel, ecModel, api);\n\n    updateMapSelectHandler(this, mapOrGeoModel, group, api, fromView);\n    updateMapSelected(mapOrGeoModel, group);\n  },\n  remove: function () {\n    this.group.removeAll();\n\n    this._controller.dispose();\n\n    this._controllerHost = {};\n  },\n  _updateController: function (mapOrGeoModel, ecModel, api) {\n    var geo = mapOrGeoModel.coordinateSystem;\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    controllerHost.zoomLimit = mapOrGeoModel.get('scaleLimit');\n    controllerHost.zoom = geo.getZoom(); // roamType is will be set default true if it is null\n\n    controller.enable(mapOrGeoModel.get('roam') || false);\n    var mainType = mapOrGeoModel.mainType;\n\n    function makeActionBase() {\n      var action = {\n        type: 'geoRoam',\n        componentType: mainType\n      };\n      action[mainType + 'Id'] = mapOrGeoModel.id;\n      return action;\n    }\n\n    controller.off('pan').on('pan', function (dx, dy) {\n      this._mouseDownFlag = false;\n      roamHelper.updateViewOnPan(controllerHost, dx, dy);\n      api.dispatchAction(zrUtil.extend(makeActionBase(), {\n        dx: dx,\n        dy: dy\n      }));\n    }, this);\n    controller.off('zoom').on('zoom', function (zoom, mouseX, mouseY) {\n      this._mouseDownFlag = false;\n      roamHelper.updateViewOnZoom(controllerHost, zoom, mouseX, mouseY);\n      api.dispatchAction(zrUtil.extend(makeActionBase(), {\n        zoom: zoom,\n        originX: mouseX,\n        originY: mouseY\n      }));\n\n      if (this._updateGroup) {\n        var group = this.group;\n        var scale = group.scale;\n        group.traverse(function (el) {\n          if (el.type === 'text') {\n            el.attr('scale', [1 / scale[0], 1 / scale[1]]);\n          }\n        });\n      }\n    }, this);\n    controller.setPointerChecker(function (e, x, y) {\n      return geo.getViewRectAfterRoam().contain(x, y) && !onIrrelevantElement(e, api, mapOrGeoModel);\n    });\n  }\n};\nvar _default = MapDraw;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar ATTR = '\\0_ec_interaction_mutex';\n\nfunction take(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  store[resourceKey] = userKey;\n}\n\nfunction release(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  var uKey = store[resourceKey];\n\n  if (uKey === userKey) {\n    store[resourceKey] = null;\n  }\n}\n\nfunction isTaken(zr, resourceKey) {\n  return !!getStore(zr)[resourceKey];\n}\n\nfunction getStore(zr) {\n  return zr[ATTR] || (zr[ATTR] = {});\n}\n/**\n * payload: {\n *     type: 'takeGlobalCursor',\n *     key: 'dataZoomSelect', or 'brush', or ...,\n *         If no userKey, release global cursor.\n * }\n */\n\n\necharts.registerAction({\n  type: 'takeGlobalCursor',\n  event: 'globalCursorTaken',\n  update: 'update'\n}, function () {});\nexports.take = take;\nexports.release = release;\nexports.isTaken = isTaken;","/**\n * For geo and graph.\n *\n * @param {Object} controllerHost\n * @param {module:zrender/Element} controllerHost.target\n */\nfunction updateViewOnPan(controllerHost, dx, dy) {\n  var target = controllerHost.target;\n  var pos = target.position;\n  pos[0] += dx;\n  pos[1] += dy;\n  target.dirty();\n}\n/**\n * For geo and graph.\n *\n * @param {Object} controllerHost\n * @param {module:zrender/Element} controllerHost.target\n * @param {number} controllerHost.zoom\n * @param {number} controllerHost.zoomLimit like: {min: 1, max: 2}\n */\n\n\nfunction updateViewOnZoom(controllerHost, zoomDelta, zoomX, zoomY) {\n  var target = controllerHost.target;\n  var zoomLimit = controllerHost.zoomLimit;\n  var pos = target.position;\n  var scale = target.scale;\n  var newZoom = controllerHost.zoom = controllerHost.zoom || 1;\n  newZoom *= zoomDelta;\n\n  if (zoomLimit) {\n    var zoomMin = zoomLimit.min || 0;\n    var zoomMax = zoomLimit.max || Infinity;\n    newZoom = Math.max(Math.min(zoomMax, newZoom), zoomMin);\n  }\n\n  var zoomScale = newZoom / controllerHost.zoom;\n  controllerHost.zoom = newZoom; // Keep the mouse center when scaling\n\n  pos[0] -= (zoomX - pos[0]) * (zoomScale - 1);\n  pos[1] -= (zoomY - pos[1]) * (zoomScale - 1);\n  scale[0] *= zoomScale;\n  scale[1] *= zoomScale;\n  target.dirty();\n}\n\nexports.updateViewOnPan = updateViewOnPan;\nexports.updateViewOnZoom = updateViewOnZoom;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _roamHelper = require(\"./roamHelper\");\n\nvar updateCenterAndZoom = _roamHelper.updateCenterAndZoom;\n\n/**\n * @payload\n * @property {string} [componentType=series]\n * @property {number} [dx]\n * @property {number} [dy]\n * @property {number} [zoom]\n * @property {number} [originX]\n * @property {number} [originY]\n */\necharts.registerAction({\n  type: 'geoRoam',\n  event: 'geoRoam',\n  update: 'updateLayout'\n}, function (payload, ecModel) {\n  var componentType = payload.componentType || 'series';\n  ecModel.eachComponent({\n    mainType: componentType,\n    query: payload\n  }, function (componentModel) {\n    var geo = componentModel.coordinateSystem;\n\n    if (geo.type !== 'geo') {\n      return;\n    }\n\n    var res = updateCenterAndZoom(geo, payload, componentModel.get('scaleLimit'));\n    componentModel.setCenter && componentModel.setCenter(res.center);\n    componentModel.setZoom && componentModel.setZoom(res.zoom); // All map series with same `map` use the same geo coordinate system\n    // So the center and zoom must be in sync. Include the series not selected by legend\n\n    if (componentType === 'series') {\n      zrUtil.each(componentModel.seriesGroup, function (seriesModel) {\n        seriesModel.setCenter(res.center);\n        seriesModel.setZoom(res.zoom);\n      });\n    }\n  });\n});","/**\n * @param {module:echarts/coord/View} view\n * @param {Object} payload\n * @param {Object} [zoomLimit]\n */\nfunction updateCenterAndZoom(view, payload, zoomLimit) {\n  var previousZoom = view.getZoom();\n  var center = view.getCenter();\n  var zoom = payload.zoom;\n  var point = view.dataToPoint(center);\n\n  if (payload.dx != null && payload.dy != null) {\n    point[0] -= payload.dx;\n    point[1] -= payload.dy;\n    var center = view.pointToData(point);\n    view.setCenter(center);\n  }\n\n  if (zoom != null) {\n    if (zoomLimit) {\n      var zoomMin = zoomLimit.min || 0;\n      var zoomMax = zoomLimit.max || Infinity;\n      zoom = Math.max(Math.min(previousZoom * zoom, zoomMax), zoomMin) / previousZoom;\n    } // Zoom on given point(originX, originY)\n\n\n    view.scale[0] *= zoom;\n    view.scale[1] *= zoom;\n    var position = view.position;\n    var fixX = (payload.originX - position[0]) * (zoom - 1);\n    var fixY = (payload.originY - position[1]) * (zoom - 1);\n    position[0] -= fixX;\n    position[1] -= fixY;\n    view.updateTransform(); // Get the new center\n\n    var center = view.pointToData(point);\n    view.setCenter(center);\n    view.setZoom(zoom * previousZoom);\n  }\n\n  return {\n    center: view.getCenter(),\n    zoom: view.getZoom()\n  };\n}\n\nexports.updateCenterAndZoom = updateCenterAndZoom;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../model/Model\");\n\nvar List = require(\"./List\");\n\nvar linkList = require(\"./helper/linkList\");\n\nvar completeDimensions = require(\"./helper/completeDimensions\");\n\n/**\n * Tree data structure\n *\n * @module echarts/data/Tree\n */\n\n/**\n * @constructor module:echarts/data/Tree~TreeNode\n * @param {string} name\n * @param {module:echarts/data/Tree} hostTree\n */\nvar TreeNode = function (name, hostTree) {\n  /**\n   * @type {string}\n   */\n  this.name = name || '';\n  /**\n   * Depth of node\n   *\n   * @type {number}\n   * @readOnly\n   */\n\n  this.depth = 0;\n  /**\n   * Height of the subtree rooted at this node.\n   * @type {number}\n   * @readOnly\n   */\n\n  this.height = 0;\n  /**\n   * @type {module:echarts/data/Tree~TreeNode}\n   * @readOnly\n   */\n\n  this.parentNode = null;\n  /**\n   * Reference to list item.\n   * Do not persistent dataIndex outside,\n   * besause it may be changed by list.\n   * If dataIndex -1,\n   * this node is logical deleted (filtered) in list.\n   *\n   * @type {Object}\n   * @readOnly\n   */\n\n  this.dataIndex = -1;\n  /**\n   * @type {Array.<module:echarts/data/Tree~TreeNode>}\n   * @readOnly\n   */\n\n  this.children = [];\n  /**\n   * @type {Array.<module:echarts/data/Tree~TreeNode>}\n   * @pubilc\n   */\n\n  this.viewChildren = [];\n  /**\n   * @type {moduel:echarts/data/Tree}\n   * @readOnly\n   */\n\n  this.hostTree = hostTree;\n};\n\nTreeNode.prototype = {\n  constructor: TreeNode,\n\n  /**\n   * The node is removed.\n   * @return {boolean} is removed.\n   */\n  isRemoved: function () {\n    return this.dataIndex < 0;\n  },\n\n  /**\n   * Travel this subtree (include this node).\n   * Usage:\n   *    node.eachNode(function () { ... }); // preorder\n   *    node.eachNode('preorder', function () { ... }); // preorder\n   *    node.eachNode('postorder', function () { ... }); // postorder\n   *    node.eachNode(\n   *        {order: 'postorder', attr: 'viewChildren'},\n   *        function () { ... }\n   *    ); // postorder\n   *\n   * @param {(Object|string)} options If string, means order.\n   * @param {string=} options.order 'preorder' or 'postorder'\n   * @param {string=} options.attr 'children' or 'viewChildren'\n   * @param {Function} cb If in preorder and return false,\n   *                      its subtree will not be visited.\n   * @param {Object} [context]\n   */\n  eachNode: function (options, cb, context) {\n    if (typeof options === 'function') {\n      context = cb;\n      cb = options;\n      options = null;\n    }\n\n    options = options || {};\n\n    if (zrUtil.isString(options)) {\n      options = {\n        order: options\n      };\n    }\n\n    var order = options.order || 'preorder';\n    var children = this[options.attr || 'children'];\n    var suppressVisitSub;\n    order === 'preorder' && (suppressVisitSub = cb.call(context, this));\n\n    for (var i = 0; !suppressVisitSub && i < children.length; i++) {\n      children[i].eachNode(options, cb, context);\n    }\n\n    order === 'postorder' && cb.call(context, this);\n  },\n\n  /**\n   * Update depth and height of this subtree.\n   *\n   * @param  {number} depth\n   */\n  updateDepthAndHeight: function (depth) {\n    var height = 0;\n    this.depth = depth;\n\n    for (var i = 0; i < this.children.length; i++) {\n      var child = this.children[i];\n      child.updateDepthAndHeight(depth + 1);\n\n      if (child.height > height) {\n        height = child.height;\n      }\n    }\n\n    this.height = height + 1;\n  },\n\n  /**\n   * @param  {string} id\n   * @return {module:echarts/data/Tree~TreeNode}\n   */\n  getNodeById: function (id) {\n    if (this.getId() === id) {\n      return this;\n    }\n\n    for (var i = 0, children = this.children, len = children.length; i < len; i++) {\n      var res = children[i].getNodeById(id);\n\n      if (res) {\n        return res;\n      }\n    }\n  },\n\n  /**\n   * @param {module:echarts/data/Tree~TreeNode} node\n   * @return {boolean}\n   */\n  contains: function (node) {\n    if (node === this) {\n      return true;\n    }\n\n    for (var i = 0, children = this.children, len = children.length; i < len; i++) {\n      var res = children[i].contains(node);\n\n      if (res) {\n        return res;\n      }\n    }\n  },\n\n  /**\n   * @param {boolean} includeSelf Default false.\n   * @return {Array.<module:echarts/data/Tree~TreeNode>} order: [root, child, grandchild, ...]\n   */\n  getAncestors: function (includeSelf) {\n    var ancestors = [];\n    var node = includeSelf ? this : this.parentNode;\n\n    while (node) {\n      ancestors.push(node);\n      node = node.parentNode;\n    }\n\n    ancestors.reverse();\n    return ancestors;\n  },\n\n  /**\n   * @param {string|Array=} [dimension='value'] Default 'value'. can be 0, 1, 2, 3\n   * @return {number} Value.\n   */\n  getValue: function (dimension) {\n    var data = this.hostTree.data;\n    return data.get(data.getDimension(dimension || 'value'), this.dataIndex);\n  },\n\n  /**\n   * @param {Object} layout\n   * @param {boolean=} [merge=false]\n   */\n  setLayout: function (layout, merge) {\n    this.dataIndex >= 0 && this.hostTree.data.setItemLayout(this.dataIndex, layout, merge);\n  },\n\n  /**\n   * @return {Object} layout\n   */\n  getLayout: function () {\n    return this.hostTree.data.getItemLayout(this.dataIndex);\n  },\n\n  /**\n   * @param {string} [path]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path) {\n    if (this.dataIndex < 0) {\n      return;\n    }\n\n    var hostTree = this.hostTree;\n    var itemModel = hostTree.data.getItemModel(this.dataIndex);\n    var levelModel = this.getLevelModel();\n    var leavesModel;\n\n    if (!levelModel && (this.children.length === 0 || this.children.length !== 0 && this.isExpand === false)) {\n      leavesModel = this.getLeavesModel();\n    }\n\n    return itemModel.getModel(path, (levelModel || leavesModel || hostTree.hostModel).getModel(path));\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getLevelModel: function () {\n    return (this.hostTree.levelModels || [])[this.depth];\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getLeavesModel: function () {\n    return this.hostTree.leavesModel;\n  },\n\n  /**\n   * @example\n   *  setItemVisual('color', color);\n   *  setItemVisual({\n   *      'color': color\n   *  });\n   */\n  setVisual: function (key, value) {\n    this.dataIndex >= 0 && this.hostTree.data.setItemVisual(this.dataIndex, key, value);\n  },\n\n  /**\n   * Get item visual\n   */\n  getVisual: function (key, ignoreParent) {\n    return this.hostTree.data.getItemVisual(this.dataIndex, key, ignoreParent);\n  },\n\n  /**\n   * @public\n   * @return {number}\n   */\n  getRawIndex: function () {\n    return this.hostTree.data.getRawIndex(this.dataIndex);\n  },\n\n  /**\n   * @public\n   * @return {string}\n   */\n  getId: function () {\n    return this.hostTree.data.getId(this.dataIndex);\n  }\n};\n/**\n * @constructor\n * @alias module:echarts/data/Tree\n * @param {module:echarts/model/Model} hostModel\n * @param {Array.<Object>} levelOptions\n * @param {Object} leavesOption\n */\n\nfunction Tree(hostModel, levelOptions, leavesOption) {\n  /**\n   * @type {module:echarts/data/Tree~TreeNode}\n   * @readOnly\n   */\n  this.root;\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.data;\n  /**\n   * Index of each item is the same as the raw index of coresponding list item.\n   * @private\n   * @type {Array.<module:echarts/data/Tree~TreeNode}\n   */\n\n  this._nodes = [];\n  /**\n   * @private\n   * @readOnly\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @private\n   * @readOnly\n   * @type {Array.<module:echarts/model/Model}\n   */\n\n  this.levelModels = zrUtil.map(levelOptions || [], function (levelDefine) {\n    return new Model(levelDefine, hostModel, hostModel.ecModel);\n  });\n  this.leavesModel = new Model(leavesOption || {}, hostModel, hostModel.ecModel);\n}\n\nTree.prototype = {\n  constructor: Tree,\n  type: 'tree',\n\n  /**\n   * Travel this subtree (include this node).\n   * Usage:\n   *    node.eachNode(function () { ... }); // preorder\n   *    node.eachNode('preorder', function () { ... }); // preorder\n   *    node.eachNode('postorder', function () { ... }); // postorder\n   *    node.eachNode(\n   *        {order: 'postorder', attr: 'viewChildren'},\n   *        function () { ... }\n   *    ); // postorder\n   *\n   * @param {(Object|string)} options If string, means order.\n   * @param {string=} options.order 'preorder' or 'postorder'\n   * @param {string=} options.attr 'children' or 'viewChildren'\n   * @param {Function} cb\n   * @param {Object}   [context]\n   */\n  eachNode: function (options, cb, context) {\n    this.root.eachNode(options, cb, context);\n  },\n\n  /**\n   * @param {number} dataIndex\n   * @return {module:echarts/data/Tree~TreeNode}\n   */\n  getNodeByDataIndex: function (dataIndex) {\n    var rawIndex = this.data.getRawIndex(dataIndex);\n    return this._nodes[rawIndex];\n  },\n\n  /**\n   * @param {string} name\n   * @return {module:echarts/data/Tree~TreeNode}\n   */\n  getNodeByName: function (name) {\n    return this.root.getNodeByName(name);\n  },\n\n  /**\n   * Update item available by list,\n   * when list has been performed options like 'filterSelf' or 'map'.\n   */\n  update: function () {\n    var data = this.data;\n    var nodes = this._nodes;\n\n    for (var i = 0, len = nodes.length; i < len; i++) {\n      nodes[i].dataIndex = -1;\n    }\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      nodes[data.getRawIndex(i)].dataIndex = i;\n    }\n  },\n\n  /**\n   * Clear all layouts\n   */\n  clearLayouts: function () {\n    this.data.clearItemLayouts();\n  }\n};\n/**\n * data node format:\n * {\n *     name: ...\n *     value: ...\n *     children: [\n *         {\n *             name: ...\n *             value: ...\n *             children: ...\n *         },\n *         ...\n *     ]\n * }\n *\n * @static\n * @param {Object} dataRoot Root node.\n * @param {module:echarts/model/Model} hostModel\n * @param {Object} treeOptions\n * @param {Array.<Object>} treeOptions.levels\n * @param {Array.<Object>} treeOptions.leaves\n * @return module:echarts/data/Tree\n */\n\nTree.createTree = function (dataRoot, hostModel, treeOptions) {\n  var tree = new Tree(hostModel, treeOptions.levels, treeOptions.leaves);\n  var listData = [];\n  var dimMax = 1;\n  buildHierarchy(dataRoot);\n\n  function buildHierarchy(dataNode, parentNode) {\n    var value = dataNode.value;\n    dimMax = Math.max(dimMax, zrUtil.isArray(value) ? value.length : 1);\n    listData.push(dataNode);\n    var node = new TreeNode(dataNode.name, tree);\n    parentNode ? addChild(node, parentNode) : tree.root = node;\n\n    tree._nodes.push(node);\n\n    var children = dataNode.children;\n\n    if (children) {\n      for (var i = 0; i < children.length; i++) {\n        buildHierarchy(children[i], node);\n      }\n    }\n  }\n\n  tree.root.updateDepthAndHeight(0);\n  var dimensions = completeDimensions([{\n    name: 'value'\n  }], listData, {\n    dimCount: dimMax\n  });\n  var list = new List(dimensions, hostModel);\n  list.initData(listData);\n  linkList({\n    mainData: list,\n    struct: tree,\n    structAttr: 'tree'\n  });\n  tree.update();\n  return tree;\n};\n/**\n * It is needed to consider the mess of 'list', 'hostModel' when creating a TreeNote,\n * so this function is not ready and not necessary to be public.\n *\n * @param {(module:echarts/data/Tree~TreeNode|Object)} child\n */\n\n\nfunction addChild(child, node) {\n  var children = node.children;\n\n  if (child.parentNode === node) {\n    return;\n  }\n\n  children.push(child);\n  child.parentNode = node;\n}\n\nvar _default = Tree;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * Link lists and struct (graph or tree)\n */\nvar each = zrUtil.each;\nvar DATAS = '\\0__link_datas';\nvar MAIN_DATA = '\\0__link_mainData'; // Caution:\n// In most case, either list or its shallow clones (see list.cloneShallow)\n// is active in echarts process. So considering heap memory consumption,\n// we do not clone tree or graph, but share them among list and its shallow clones.\n// But in some rare case, we have to keep old list (like do animation in chart). So\n// please take care that both the old list and the new list share the same tree/graph.\n\n/**\n * @param {Object} opt\n * @param {module:echarts/data/List} opt.mainData\n * @param {Object} [opt.struct] For example, instance of Graph or Tree.\n * @param {string} [opt.structAttr] designation: list[structAttr] = struct;\n * @param {Object} [opt.datas] {dataType: data},\n *                 like: {node: nodeList, edge: edgeList}.\n *                 Should contain mainData.\n * @param {Object} [opt.datasAttr] {dataType: attr},\n *                 designation: struct[datasAttr[dataType]] = list;\n */\n\nfunction linkList(opt) {\n  var mainData = opt.mainData;\n  var datas = opt.datas;\n\n  if (!datas) {\n    datas = {\n      main: mainData\n    };\n    opt.datasAttr = {\n      main: 'data'\n    };\n  }\n\n  opt.datas = opt.mainData = null;\n  linkAll(mainData, datas, opt); // Porxy data original methods.\n\n  each(datas, function (data) {\n    each(mainData.TRANSFERABLE_METHODS, function (methodName) {\n      data.wrapMethod(methodName, zrUtil.curry(transferInjection, opt));\n    });\n  }); // Beyond transfer, additional features should be added to `cloneShallow`.\n\n  mainData.wrapMethod('cloneShallow', zrUtil.curry(cloneShallowInjection, opt)); // Only mainData trigger change, because struct.update may trigger\n  // another changable methods, which may bring about dead lock.\n\n  each(mainData.CHANGABLE_METHODS, function (methodName) {\n    mainData.wrapMethod(methodName, zrUtil.curry(changeInjection, opt));\n  }); // Make sure datas contains mainData.\n\n  zrUtil.assert(datas[mainData.dataType] === mainData);\n}\n\nfunction transferInjection(opt, res) {\n  if (isMainData(this)) {\n    // Transfer datas to new main data.\n    var datas = zrUtil.extend({}, this[DATAS]);\n    datas[this.dataType] = res;\n    linkAll(res, datas, opt);\n  } else {\n    // Modify the reference in main data to point newData.\n    linkSingle(res, this.dataType, this[MAIN_DATA], opt);\n  }\n\n  return res;\n}\n\nfunction changeInjection(opt, res) {\n  opt.struct && opt.struct.update(this);\n  return res;\n}\n\nfunction cloneShallowInjection(opt, res) {\n  // cloneShallow, which brings about some fragilities, may be inappropriate\n  // to be exposed as an API. So for implementation simplicity we can make\n  // the restriction that cloneShallow of not-mainData should not be invoked\n  // outside, but only be invoked here.\n  each(res[DATAS], function (data, dataType) {\n    data !== res && linkSingle(data.cloneShallow(), dataType, res, opt);\n  });\n  return res;\n}\n/**\n * Supplement method to List.\n *\n * @public\n * @param {string} [dataType] If not specified, return mainData.\n * @return {module:echarts/data/List}\n */\n\n\nfunction getLinkedData(dataType) {\n  var mainData = this[MAIN_DATA];\n  return dataType == null || mainData == null ? mainData : mainData[DATAS][dataType];\n}\n\nfunction isMainData(data) {\n  return data[MAIN_DATA] === data;\n}\n\nfunction linkAll(mainData, datas, opt) {\n  mainData[DATAS] = {};\n  each(datas, function (data, dataType) {\n    linkSingle(data, dataType, mainData, opt);\n  });\n}\n\nfunction linkSingle(data, dataType, mainData, opt) {\n  mainData[DATAS][dataType] = data;\n  data[MAIN_DATA] = mainData;\n  data.dataType = dataType;\n\n  if (opt.struct) {\n    data[opt.structAttr] = opt.struct;\n    opt.struct[opt.datasAttr[dataType]] = data;\n  } // Supplement method.\n\n\n  data.getLinkedData = getLinkedData;\n}\n\nvar _default = linkList;\nmodule.exports = _default;","var layout = require(\"../../util/layout\");\n\n/**\n * @file The layout algorithm of node-link tree diagrams. Here we using Reingold-Tilford algorithm to drawing\n *       the tree.\n * @see https://github.com/d3/d3-hierarchy\n */\n\n/**\n * Initialize all computational message for following algorithm\n * @param  {module:echarts/data/Tree~TreeNode} root   The virtual root of the tree\n */\nfunction init(root) {\n  root.hierNode = {\n    defaultAncestor: null,\n    ancestor: root,\n    prelim: 0,\n    modifier: 0,\n    change: 0,\n    shift: 0,\n    i: 0,\n    thread: null\n  };\n  var nodes = [root];\n  var node;\n  var children;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    children = node.children;\n\n    if (node.isExpand && children.length) {\n      var n = children.length;\n\n      for (var i = n - 1; i >= 0; i--) {\n        var child = children[i];\n        child.hierNode = {\n          defaultAncestor: null,\n          ancestor: child,\n          prelim: 0,\n          modifier: 0,\n          change: 0,\n          shift: 0,\n          i: i,\n          thread: null\n        };\n        nodes.push(child);\n      }\n    }\n  }\n}\n/**\n * Computes a preliminary x coordinate for node. Before that, this function is\n * applied recursively to the children of node, as well as the function\n * apportion(). After spacing out the children by calling executeShifts(), the\n * node is placed to the midpoint of its outermost children.\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @param {Function} separation\n */\n\n\nfunction firstWalk(node, separation) {\n  var children = node.isExpand ? node.children : [];\n  var siblings = node.parentNode.children;\n  var subtreeW = node.hierNode.i ? siblings[node.hierNode.i - 1] : null;\n\n  if (children.length) {\n    executeShifts(node);\n    var midPoint = (children[0].hierNode.prelim + children[children.length - 1].hierNode.prelim) / 2;\n\n    if (subtreeW) {\n      node.hierNode.prelim = subtreeW.hierNode.prelim + separation(node, subtreeW);\n      node.hierNode.modifier = node.hierNode.prelim - midPoint;\n    } else {\n      node.hierNode.prelim = midPoint;\n    }\n  } else if (subtreeW) {\n    node.hierNode.prelim = subtreeW.hierNode.prelim + separation(node, subtreeW);\n  }\n\n  node.parentNode.hierNode.defaultAncestor = apportion(node, subtreeW, node.parentNode.hierNode.defaultAncestor || siblings[0], separation);\n}\n/**\n * Computes all real x-coordinates by summing up the modifiers recursively.\n * @param  {module:echarts/data/Tree~TreeNode} node\n */\n\n\nfunction secondWalk(node) {\n  var nodeX = node.hierNode.prelim + node.parentNode.hierNode.modifier;\n  node.setLayout({\n    x: nodeX\n  }, true);\n  node.hierNode.modifier += node.parentNode.hierNode.modifier;\n}\n\nfunction separation(cb) {\n  return arguments.length ? cb : defaultSeparation;\n}\n/**\n * Transform the common coordinate to radial coordinate\n * @param  {number} x\n * @param  {number} y\n * @return {Object}\n */\n\n\nfunction radialCoordinate(x, y) {\n  var radialCoor = {};\n  x -= Math.PI / 2;\n  radialCoor.x = y * Math.cos(x);\n  radialCoor.y = y * Math.sin(x);\n  return radialCoor;\n}\n/**\n * Get the layout position of the whole view\n * @param {module:echarts/model/Series} seriesModel  the model object of sankey series\n * @param {module:echarts/ExtensionAPI} api  provide the API list that the developer can call\n * @return {module:zrender/core/BoundingRect}  size of rect to draw the sankey view\n */\n\n\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n/**\n * All other shifts, applied to the smaller subtrees between w- and w+, are\n * performed by this function.\n * @param  {module:echarts/data/Tree~TreeNode} node\n */\n\n\nfunction executeShifts(node) {\n  var children = node.children;\n  var n = children.length;\n  var shift = 0;\n  var change = 0;\n\n  while (--n >= 0) {\n    var child = children[n];\n    child.hierNode.prelim += shift;\n    child.hierNode.modifier += shift;\n    change += child.hierNode.change;\n    shift += child.hierNode.shift + change;\n  }\n}\n/**\n * The core of the algorithm. Here, a new subtree is combined with the\n * previous subtrees. Threads are used to traverse the inside and outside\n * contours of the left and right subtree up to the highest common level.\n * Whenever two nodes of the inside contours conflict, we compute the left\n * one of the greatest uncommon ancestors using the function nextAncestor()\n * and call moveSubtree() to shift the subtree and prepare the shifts of\n * smaller subtrees. Finally, we add a new thread (if necessary).\n * @param  {module:echarts/data/Tree~TreeNode} subtreeV\n * @param  {module:echarts/data/Tree~TreeNode} subtreeW\n * @param  {module:echarts/data/Tree~TreeNode} ancestor\n * @param  {Function} separation\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction apportion(subtreeV, subtreeW, ancestor, separation) {\n  if (subtreeW) {\n    var nodeOutRight = subtreeV;\n    var nodeInRight = subtreeV;\n    var nodeOutLeft = nodeInRight.parentNode.children[0];\n    var nodeInLeft = subtreeW;\n    var sumOutRight = nodeOutRight.hierNode.modifier;\n    var sumInRight = nodeInRight.hierNode.modifier;\n    var sumOutLeft = nodeOutLeft.hierNode.modifier;\n    var sumInLeft = nodeInLeft.hierNode.modifier;\n\n    while (nodeInLeft = nextRight(nodeInLeft), nodeInRight = nextLeft(nodeInRight), nodeInLeft && nodeInRight) {\n      nodeOutRight = nextRight(nodeOutRight);\n      nodeOutLeft = nextLeft(nodeOutLeft);\n      nodeOutRight.hierNode.ancestor = subtreeV;\n      var shift = nodeInLeft.hierNode.prelim + sumInLeft - nodeInRight.hierNode.prelim - sumInRight + separation(nodeInLeft, nodeInRight);\n\n      if (shift > 0) {\n        moveSubtree(nextAncestor(nodeInLeft, subtreeV, ancestor), subtreeV, shift);\n        sumInRight += shift;\n        sumOutRight += shift;\n      }\n\n      sumInLeft += nodeInLeft.hierNode.modifier;\n      sumInRight += nodeInRight.hierNode.modifier;\n      sumOutRight += nodeOutRight.hierNode.modifier;\n      sumOutLeft += nodeOutLeft.hierNode.modifier;\n    }\n\n    if (nodeInLeft && !nextRight(nodeOutRight)) {\n      nodeOutRight.hierNode.thread = nodeInLeft;\n      nodeOutRight.hierNode.modifier += sumInLeft - sumOutRight;\n    }\n\n    if (nodeInRight && !nextLeft(nodeOutLeft)) {\n      nodeOutLeft.hierNode.thread = nodeInRight;\n      nodeOutLeft.hierNode.modifier += sumInRight - sumOutLeft;\n      ancestor = subtreeV;\n    }\n  }\n\n  return ancestor;\n}\n/**\n * This function is used to traverse the right contour of a subtree.\n * It returns the rightmost child of node or the thread of node. The function\n * returns null if and only if node is on the highest depth of its subtree.\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction nextRight(node) {\n  var children = node.children;\n  return children.length && node.isExpand ? children[children.length - 1] : node.hierNode.thread;\n}\n/**\n * This function is used to traverse the left contour of a subtree (or a subforest).\n * It returns the leftmost child of node or the thread of node. The function\n * returns null if and only if node is on the highest depth of its subtree.\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction nextLeft(node) {\n  var children = node.children;\n  return children.length && node.isExpand ? children[0] : node.hierNode.thread;\n}\n/**\n * If nodeInLeft’s ancestor is a sibling of node, returns nodeInLeft’s ancestor.\n * Otherwise, returns the specified ancestor.\n * @param  {module:echarts/data/Tree~TreeNode} nodeInLeft\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @param  {module:echarts/data/Tree~TreeNode} ancestor\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction nextAncestor(nodeInLeft, node, ancestor) {\n  return nodeInLeft.hierNode.ancestor.parentNode === node.parentNode ? nodeInLeft.hierNode.ancestor : ancestor;\n}\n/**\n * Shifts the current subtree rooted at wr. This is done by increasing prelim(w+) and modifier(w+) by shift.\n * @param  {module:echarts/data/Tree~TreeNode} wl\n * @param  {module:echarts/data/Tree~TreeNode} wr\n * @param  {number} shift [description]\n */\n\n\nfunction moveSubtree(wl, wr, shift) {\n  var change = shift / (wr.hierNode.i - wl.hierNode.i);\n  wr.hierNode.change -= change;\n  wr.hierNode.shift += shift;\n  wr.hierNode.modifier += shift;\n  wr.hierNode.prelim += shift;\n  wl.hierNode.change += change;\n}\n\nfunction defaultSeparation(node1, node2) {\n  return node1.parentNode === node2.parentNode ? 1 : 2;\n}\n\nexports.init = init;\nexports.firstWalk = firstWalk;\nexports.secondWalk = secondWalk;\nexports.separation = separation;\nexports.radialCoordinate = radialCoordinate;\nexports.getViewRect = getViewRect;","var _traversalHelper = require(\"./traversalHelper\");\n\nvar eachAfter = _traversalHelper.eachAfter;\nvar eachBefore = _traversalHelper.eachBefore;\n\nvar _layoutHelper = require(\"./layoutHelper\");\n\nvar init = _layoutHelper.init;\nvar firstWalk = _layoutHelper.firstWalk;\nvar secondWalk = _layoutHelper.secondWalk;\nvar sep = _layoutHelper.separation;\nvar radialCoordinate = _layoutHelper.radialCoordinate;\nvar getViewRect = _layoutHelper.getViewRect;\n\nfunction _default(seriesModel, api) {\n  var layoutInfo = getViewRect(seriesModel, api);\n  seriesModel.layoutInfo = layoutInfo;\n  var layout = seriesModel.get('layout');\n  var width = 0;\n  var height = 0;\n  var separation = null;\n\n  if (layout === 'radial') {\n    width = 2 * Math.PI;\n    height = Math.min(layoutInfo.height, layoutInfo.width) / 2;\n    separation = sep(function (node1, node2) {\n      return (node1.parentNode === node2.parentNode ? 1 : 2) / node1.depth;\n    });\n  } else {\n    width = layoutInfo.width;\n    height = layoutInfo.height;\n    separation = sep();\n  }\n\n  var virtualRoot = seriesModel.getData().tree.root;\n  var realRoot = virtualRoot.children[0];\n  init(virtualRoot);\n  eachAfter(realRoot, firstWalk, separation);\n  virtualRoot.hierNode.modifier = -realRoot.hierNode.prelim;\n  eachBefore(realRoot, secondWalk);\n  var left = realRoot;\n  var right = realRoot;\n  var bottom = realRoot;\n  eachBefore(realRoot, function (node) {\n    var x = node.getLayout().x;\n\n    if (x < left.getLayout().x) {\n      left = node;\n    }\n\n    if (x > right.getLayout().x) {\n      right = node;\n    }\n\n    if (node.depth > bottom.depth) {\n      bottom = node;\n    }\n  });\n  var delta = left === right ? 1 : separation(left, right) / 2;\n  var tx = delta - left.getLayout().x;\n  var kx = 0;\n  var ky = 0;\n  var coorX = 0;\n  var coorY = 0;\n\n  if (layout === 'radial') {\n    kx = width / (right.getLayout().x + delta + tx); // here we use (node.depth - 1), bucause the real root's depth is 1\n\n    ky = height / (bottom.depth - 1 || 1);\n    eachBefore(realRoot, function (node) {\n      coorX = (node.getLayout().x + tx) * kx;\n      coorY = (node.depth - 1) * ky;\n      var finalCoor = radialCoordinate(coorX, coorY);\n      node.setLayout({\n        x: finalCoor.x,\n        y: finalCoor.y,\n        rawX: coorX,\n        rawY: coorY\n      }, true);\n    });\n  } else {\n    if (seriesModel.get('orient') === 'horizontal') {\n      ky = height / (right.getLayout().x + delta + tx);\n      kx = width / (bottom.depth - 1 || 1);\n      eachBefore(realRoot, function (node) {\n        coorY = (node.getLayout().x + tx) * ky;\n        coorX = (node.depth - 1) * kx;\n        node.setLayout({\n          x: coorX,\n          y: coorY\n        }, true);\n      });\n    } else {\n      kx = width / (right.getLayout().x + delta + tx);\n      ky = height / (bottom.depth - 1 || 1);\n      eachBefore(realRoot, function (node) {\n        coorX = (node.getLayout().x + tx) * kx;\n        coorY = (node.depth - 1) * ky;\n        node.setLayout({\n          x: coorX,\n          y: coorY\n        }, true);\n      });\n    }\n  }\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar Graph = require(\"../../data/Graph\");\n\nvar linkList = require(\"../../data/helper/linkList\");\n\nvar completeDimensions = require(\"../../data/helper/completeDimensions\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar createListFromArray = require(\"./createListFromArray\");\n\nfunction _default(nodes, edges, hostModel, directed, beforeLink) {\n  var graph = new Graph(directed);\n\n  for (var i = 0; i < nodes.length; i++) {\n    graph.addNode(zrUtil.retrieve( // Id, name, dataIndex\n    nodes[i].id, nodes[i].name, i), i);\n  }\n\n  var linkNameList = [];\n  var validEdges = [];\n  var linkCount = 0;\n\n  for (var i = 0; i < edges.length; i++) {\n    var link = edges[i];\n    var source = link.source;\n    var target = link.target; // addEdge may fail when source or target not exists\n\n    if (graph.addEdge(source, target, linkCount)) {\n      validEdges.push(link);\n      linkNameList.push(zrUtil.retrieve(link.id, source + ' > ' + target));\n      linkCount++;\n    }\n  }\n\n  var coordSys = hostModel.get('coordinateSystem');\n  var nodeData;\n\n  if (coordSys === 'cartesian2d' || coordSys === 'polar') {\n    nodeData = createListFromArray(nodes, hostModel, hostModel.ecModel);\n  } else {\n    // FIXME\n    var coordSysCtor = CoordinateSystem.get(coordSys); // FIXME\n\n    var dimensionNames = completeDimensions((coordSysCtor && coordSysCtor.type !== 'view' ? coordSysCtor.dimensions || [] : []).concat(['value']), nodes);\n    nodeData = new List(dimensionNames, hostModel);\n    nodeData.initData(nodes);\n  }\n\n  var edgeData = new List(['value'], hostModel);\n  edgeData.initData(validEdges, linkNameList);\n  beforeLink && beforeLink(nodeData, edgeData);\n  linkList({\n    mainData: nodeData,\n    struct: graph,\n    structAttr: 'graph',\n    datas: {\n      node: nodeData,\n      edge: edgeData\n    },\n    datasAttr: {\n      node: 'data',\n      edge: 'edgeData'\n    }\n  }); // Update dataIndex of nodes and edges because invalid edge may be removed\n\n  graph.update();\n  return graph;\n}\n\nmodule.exports = _default;","var vec2 = require(\"zrender/lib/core/vector\");\n\nfunction simpleLayout(seriesModel) {\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (coordSys && coordSys.type !== 'view') {\n    return;\n  }\n\n  var graph = seriesModel.getGraph();\n  graph.eachNode(function (node) {\n    var model = node.getModel();\n    node.setLayout([+model.get('x'), +model.get('y')]);\n  });\n  simpleLayoutEdge(graph);\n}\n\nfunction simpleLayoutEdge(graph) {\n  graph.eachEdge(function (edge) {\n    var curveness = edge.getModel().get('lineStyle.normal.curveness') || 0;\n    var p1 = vec2.clone(edge.node1.getLayout());\n    var p2 = vec2.clone(edge.node2.getLayout());\n    var points = [p1, p2];\n\n    if (+curveness) {\n      points.push([(p1[0] + p2[0]) / 2 - (p1[1] - p2[1]) * curveness, (p1[1] + p2[1]) / 2 - (p2[0] - p1[0]) * curveness]);\n    }\n\n    edge.setLayout(points);\n  });\n}\n\nexports.simpleLayout = simpleLayout;\nexports.simpleLayoutEdge = simpleLayoutEdge;","var vec2 = require(\"zrender/lib/core/vector\");\n\nfunction circularLayout(seriesModel) {\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (coordSys && coordSys.type !== 'view') {\n    return;\n  }\n\n  var rect = coordSys.getBoundingRect();\n  var nodeData = seriesModel.getData();\n  var graph = nodeData.graph;\n  var angle = 0;\n  var sum = nodeData.getSum('value');\n  var unitAngle = Math.PI * 2 / (sum || nodeData.count());\n  var cx = rect.width / 2 + rect.x;\n  var cy = rect.height / 2 + rect.y;\n  var r = Math.min(rect.width, rect.height) / 2;\n  graph.eachNode(function (node) {\n    var value = node.getValue('value');\n    angle += unitAngle * (sum ? value : 1) / 2;\n    node.setLayout([r * Math.cos(angle) + cx, r * Math.sin(angle) + cy]);\n    angle += unitAngle * (sum ? value : 1) / 2;\n  });\n  nodeData.setLayout({\n    cx: cx,\n    cy: cy\n  });\n  graph.eachEdge(function (edge) {\n    var curveness = edge.getModel().get('lineStyle.normal.curveness') || 0;\n    var p1 = vec2.clone(edge.node1.getLayout());\n    var p2 = vec2.clone(edge.node2.getLayout());\n    var cp1;\n    var x12 = (p1[0] + p2[0]) / 2;\n    var y12 = (p1[1] + p2[1]) / 2;\n\n    if (+curveness) {\n      curveness *= 3;\n      cp1 = [cx * curveness + x12 * (1 - curveness), cy * curveness + y12 * (1 - curveness)];\n    }\n\n    edge.setLayout([p1, p2, cp1]);\n  });\n}\n\nexports.circularLayout = circularLayout;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar throttleUtil = require(\"../util/throttle\");\n\nvar parallelPreprocessor = require(\"../coord/parallel/parallelPreprocessor\");\n\nrequire(\"../coord/parallel/parallelCreator\");\n\nrequire(\"../coord/parallel/ParallelModel\");\n\nrequire(\"./parallelAxis\");\n\nvar CLICK_THRESHOLD = 5; // > 4\n// Parallel view\n\necharts.extendComponentView({\n  type: 'parallel',\n  render: function (parallelModel, ecModel, api) {\n    this._model = parallelModel;\n    this._api = api;\n\n    if (!this._handlers) {\n      this._handlers = {};\n      zrUtil.each(handlers, function (handler, eventName) {\n        api.getZr().on(eventName, this._handlers[eventName] = zrUtil.bind(handler, this));\n      }, this);\n    }\n\n    throttleUtil.createOrUpdate(this, '_throttledDispatchExpand', parallelModel.get('axisExpandRate'), 'fixRate');\n  },\n  dispose: function (ecModel, api) {\n    zrUtil.each(this._handlers, function (handler, eventName) {\n      api.getZr().off(eventName, handler);\n    });\n    this._handlers = null;\n  },\n\n  /**\n   * @param {Object} [opt] If null, cancle the last action triggering for debounce.\n   */\n  _throttledDispatchExpand: function (opt) {\n    this._dispatchExpand(opt);\n  },\n  _dispatchExpand: function (opt) {\n    opt && this._api.dispatchAction(zrUtil.extend({\n      type: 'parallelAxisExpand'\n    }, opt));\n  }\n});\nvar handlers = {\n  mousedown: function (e) {\n    if (checkTrigger(this, 'click')) {\n      this._mouseDownPoint = [e.offsetX, e.offsetY];\n    }\n  },\n  mouseup: function (e) {\n    var mouseDownPoint = this._mouseDownPoint;\n\n    if (checkTrigger(this, 'click') && mouseDownPoint) {\n      var point = [e.offsetX, e.offsetY];\n      var dist = Math.pow(mouseDownPoint[0] - point[0], 2) + Math.pow(mouseDownPoint[1] - point[1], 2);\n\n      if (dist > CLICK_THRESHOLD) {\n        return;\n      }\n\n      var result = this._model.coordinateSystem.getSlidedAxisExpandWindow([e.offsetX, e.offsetY]);\n\n      result.behavior !== 'none' && this._dispatchExpand({\n        axisExpandWindow: result.axisExpandWindow\n      });\n    }\n\n    this._mouseDownPoint = null;\n  },\n  mousemove: function (e) {\n    // Should do nothing when brushing.\n    if (this._mouseDownPoint || !checkTrigger(this, 'mousemove')) {\n      return;\n    }\n\n    var model = this._model;\n    var result = model.coordinateSystem.getSlidedAxisExpandWindow([e.offsetX, e.offsetY]);\n    var behavior = result.behavior;\n    behavior === 'jump' && this._throttledDispatchExpand.debounceNextCall(model.get('axisExpandDebounce'));\n\n    this._throttledDispatchExpand(behavior === 'none' ? null // Cancle the last trigger, in case that mouse slide out of the area quickly.\n    : {\n      axisExpandWindow: result.axisExpandWindow,\n      // Jumping uses animation, and sliding suppresses animation.\n      animation: behavior === 'jump' ? null : false\n    });\n  }\n};\n\nfunction checkTrigger(view, triggerOn) {\n  var model = view._model;\n  return model.get('axisExpandable') && model.get('axisExpandTriggerOn') === triggerOn;\n}\n\necharts.registerPreprocessor(parallelPreprocessor);","var Parallel = require(\"./Parallel\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n/**\n * Parallel coordinate system creater.\n */\nfunction create(ecModel, api) {\n  var coordSysList = [];\n  ecModel.eachComponent('parallel', function (parallelModel, idx) {\n    var coordSys = new Parallel(parallelModel, ecModel, api);\n    coordSys.name = 'parallel_' + idx;\n    coordSys.resize(parallelModel, api);\n    parallelModel.coordinateSystem = coordSys;\n    coordSys.model = parallelModel;\n    coordSysList.push(coordSys);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.get('coordinateSystem') === 'parallel') {\n      var parallelModel = ecModel.queryComponents({\n        mainType: 'parallel',\n        index: seriesModel.get('parallelIndex'),\n        id: seriesModel.get('parallelId')\n      })[0];\n      seriesModel.coordinateSystem = parallelModel.coordinateSystem;\n    }\n  });\n  return coordSysList;\n}\n\nCoordinateSystem.register('parallel', {\n  create: create\n});","var BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _cursorHelper = require(\"./cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphicUtil = require(\"../../util/graphic\");\n\nfunction makeRectPanelClipPath(rect) {\n  rect = normalizeRect(rect);\n  return function (localPoints, transform) {\n    return graphicUtil.clipPointsByRect(localPoints, rect);\n  };\n}\n\nfunction makeLinearBrushOtherExtent(rect, specifiedXYIndex) {\n  rect = normalizeRect(rect);\n  return function (xyIndex) {\n    var idx = specifiedXYIndex != null ? specifiedXYIndex : xyIndex;\n    var brushWidth = idx ? rect.width : rect.height;\n    var base = idx ? rect.x : rect.y;\n    return [base, base + (brushWidth || 0)];\n  };\n}\n\nfunction makeRectIsTargetByCursor(rect, api, targetModel) {\n  rect = normalizeRect(rect);\n  return function (e, localCursorPoint, transform) {\n    return rect.contain(localCursorPoint[0], localCursorPoint[1]) && !onIrrelevantElement(e, api, targetModel);\n  };\n} // Consider width/height is negative.\n\n\nfunction normalizeRect(rect) {\n  return BoundingRect.create(rect);\n}\n\nexports.makeRectPanelClipPath = makeRectPanelClipPath;\nexports.makeLinearBrushOtherExtent = makeLinearBrushOtherExtent;\nexports.makeRectIsTargetByCursor = makeRectIsTargetByCursor;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * nest helper used to group by the array.\n * can specified the keys and sort the keys.\n */\nfunction nest() {\n  var keysFunction = [];\n  var sortKeysFunction = [];\n  /**\n   * map an Array into the mapObject.\n   * @param {Array} array\n   * @param {number} depth\n   */\n\n  function map(array, depth) {\n    if (depth >= keysFunction.length) {\n      return array;\n    }\n\n    var i = -1;\n    var n = array.length;\n    var keyFunction = keysFunction[depth++];\n    var mapObject = {};\n    var valuesByKey = {};\n\n    while (++i < n) {\n      var keyValue = keyFunction(array[i]);\n      var values = valuesByKey[keyValue];\n\n      if (values) {\n        values.push(array[i]);\n      } else {\n        valuesByKey[keyValue] = [array[i]];\n      }\n    }\n\n    zrUtil.each(valuesByKey, function (value, key) {\n      mapObject[key] = map(value, depth);\n    });\n    return mapObject;\n  }\n  /**\n   * transform the Map Object to multidimensional Array\n   * @param {Object} map\n   * @param {number} depth\n   */\n\n\n  function entriesMap(mapObject, depth) {\n    if (depth >= keysFunction.length) {\n      return mapObject;\n    }\n\n    var array = [];\n    var sortKeyFunction = sortKeysFunction[depth++];\n    zrUtil.each(mapObject, function (value, key) {\n      array.push({\n        key: key,\n        values: entriesMap(value, depth)\n      });\n    });\n\n    if (sortKeyFunction) {\n      return array.sort(function (a, b) {\n        return sortKeyFunction(a.key, b.key);\n      });\n    } else {\n      return array;\n    }\n  }\n\n  return {\n    /**\n     * specified the key to groupby the arrays.\n     * users can specified one more keys.\n     * @param {Function} d\n     */\n    key: function (d) {\n      keysFunction.push(d);\n      return this;\n    },\n\n    /**\n     * specified the comparator to sort the keys\n     * @param {Function} order\n     */\n    sortKeys: function (order) {\n      sortKeysFunction[keysFunction.length - 1] = order;\n      return this;\n    },\n\n    /**\n     * the array to be grouped by.\n     * @param {Array} array\n     */\n    entries: function (array) {\n      return entriesMap(map(array, 0), 0);\n    }\n  };\n}\n\nmodule.exports = nest;","var graphic = require(\"../../util/graphic\");\n\nvar Line = require(\"./Line\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar curveUtil = require(\"zrender/lib/core/curve\");\n\n/**\n * Provide effect for line\n * @module echarts/chart/helper/EffectLine\n */\n\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Line}\n */\nfunction EffectLine(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.add(this.createLine(lineData, idx, seriesScope));\n\n  this._updateEffectSymbol(lineData, idx);\n}\n\nvar effectLineProto = EffectLine.prototype;\n\neffectLineProto.createLine = function (lineData, idx, seriesScope) {\n  return new Line(lineData, idx, seriesScope);\n};\n\neffectLineProto._updateEffectSymbol = function (lineData, idx) {\n  var itemModel = lineData.getItemModel(idx);\n  var effectModel = itemModel.getModel('effect');\n  var size = effectModel.get('symbolSize');\n  var symbolType = effectModel.get('symbol');\n\n  if (!zrUtil.isArray(size)) {\n    size = [size, size];\n  }\n\n  var color = effectModel.get('color') || lineData.getItemVisual(idx, 'color');\n  var symbol = this.childAt(1);\n\n  if (this._symbolType !== symbolType) {\n    // Remove previous\n    this.remove(symbol);\n    symbol = createSymbol(symbolType, -0.5, -0.5, 1, 1, color);\n    symbol.z2 = 100;\n    symbol.culling = true;\n    this.add(symbol);\n  } // Symbol may be removed if loop is false\n\n\n  if (!symbol) {\n    return;\n  } // Shadow color is same with color in default\n\n\n  symbol.setStyle('shadowColor', color);\n  symbol.setStyle(effectModel.getItemStyle(['color']));\n  symbol.attr('scale', size);\n  symbol.setColor(color);\n  symbol.attr('scale', size);\n  this._symbolType = symbolType;\n\n  this._updateEffectAnimation(lineData, effectModel, idx);\n};\n\neffectLineProto._updateEffectAnimation = function (lineData, effectModel, idx) {\n  var symbol = this.childAt(1);\n\n  if (!symbol) {\n    return;\n  }\n\n  var self = this;\n  var points = lineData.getItemLayout(idx);\n  var period = effectModel.get('period') * 1000;\n  var loop = effectModel.get('loop');\n  var constantSpeed = effectModel.get('constantSpeed');\n  var delayExpr = zrUtil.retrieve(effectModel.get('delay'), function (idx) {\n    return idx / lineData.count() * period / 3;\n  });\n  var isDelayFunc = typeof delayExpr === 'function'; // Ignore when updating\n\n  symbol.ignore = true;\n  this.updateAnimationPoints(symbol, points);\n\n  if (constantSpeed > 0) {\n    period = this.getLineLength(symbol) / constantSpeed * 1000;\n  }\n\n  if (period !== this._period || loop !== this._loop) {\n    symbol.stopAnimation();\n    var delay = delayExpr;\n\n    if (isDelayFunc) {\n      delay = delayExpr(idx);\n    }\n\n    if (symbol.__t > 0) {\n      delay = -period * symbol.__t;\n    }\n\n    symbol.__t = 0;\n    var animator = symbol.animate('', loop).when(period, {\n      __t: 1\n    }).delay(delay).during(function () {\n      self.updateSymbolPosition(symbol);\n    });\n\n    if (!loop) {\n      animator.done(function () {\n        self.remove(symbol);\n      });\n    }\n\n    animator.start();\n  }\n\n  this._period = period;\n  this._loop = loop;\n};\n\neffectLineProto.getLineLength = function (symbol) {\n  // Not so accurate\n  return vec2.dist(symbol.__p1, symbol.__cp1) + vec2.dist(symbol.__cp1, symbol.__p2);\n};\n\neffectLineProto.updateAnimationPoints = function (symbol, points) {\n  symbol.__p1 = points[0];\n  symbol.__p2 = points[1];\n  symbol.__cp1 = points[2] || [(points[0][0] + points[1][0]) / 2, (points[0][1] + points[1][1]) / 2];\n};\n\neffectLineProto.updateData = function (lineData, idx, seriesScope) {\n  this.childAt(0).updateData(lineData, idx, seriesScope);\n\n  this._updateEffectSymbol(lineData, idx);\n};\n\neffectLineProto.updateSymbolPosition = function (symbol) {\n  var p1 = symbol.__p1;\n  var p2 = symbol.__p2;\n  var cp1 = symbol.__cp1;\n  var t = symbol.__t;\n  var pos = symbol.position;\n  var quadraticAt = curveUtil.quadraticAt;\n  var quadraticDerivativeAt = curveUtil.quadraticDerivativeAt;\n  pos[0] = quadraticAt(p1[0], cp1[0], p2[0], t);\n  pos[1] = quadraticAt(p1[1], cp1[1], p2[1], t); // Tangent\n\n  var tx = quadraticDerivativeAt(p1[0], cp1[0], p2[0], t);\n  var ty = quadraticDerivativeAt(p1[1], cp1[1], p2[1], t);\n  symbol.rotation = -Math.atan2(ty, tx) - Math.PI / 2;\n  symbol.ignore = false;\n};\n\neffectLineProto.updateLayout = function (lineData, idx) {\n  this.childAt(0).updateLayout(lineData, idx);\n  var effectModel = lineData.getItemModel(idx).getModel('effect');\n\n  this._updateEffectAnimation(lineData, effectModel, idx);\n};\n\nzrUtil.inherits(EffectLine, graphic.Group);\nvar _default = EffectLine;\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @module echarts/chart/helper/Line\n */\n\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Polyline}\n */\nfunction Polyline(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n\n  this._createPolyline(lineData, idx, seriesScope);\n}\n\nvar polylineProto = Polyline.prototype;\n\npolylineProto._createPolyline = function (lineData, idx, seriesScope) {\n  // var seriesModel = lineData.hostModel;\n  var points = lineData.getItemLayout(idx);\n  var line = new graphic.Polyline({\n    shape: {\n      points: points\n    }\n  });\n  this.add(line);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\npolylineProto.updateData = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childAt(0);\n  var target = {\n    shape: {\n      points: lineData.getItemLayout(idx)\n    }\n  };\n  graphic.updateProps(line, target, seriesModel, idx);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\npolylineProto._updateCommonStl = function (lineData, idx, seriesScope) {\n  var line = this.childAt(0);\n  var itemModel = lineData.getItemModel(idx);\n  var visualColor = lineData.getItemVisual(idx, 'color');\n  var lineStyle = seriesScope && seriesScope.lineStyle;\n  var hoverLineStyle = seriesScope && seriesScope.hoverLineStyle;\n\n  if (!seriesScope || lineData.hasItemOption) {\n    lineStyle = itemModel.getModel('lineStyle.normal').getLineStyle();\n    hoverLineStyle = itemModel.getModel('lineStyle.emphasis').getLineStyle();\n  }\n\n  line.useStyle(zrUtil.defaults({\n    strokeNoScale: true,\n    fill: 'none',\n    stroke: visualColor\n  }, lineStyle));\n  line.hoverStyle = hoverLineStyle;\n  graphic.setHoverStyle(this);\n};\n\npolylineProto.updateLayout = function (lineData, idx) {\n  var polyline = this.childAt(0);\n  polyline.setShape('points', lineData.getItemLayout(idx));\n};\n\nzrUtil.inherits(Polyline, graphic.Group);\nvar _default = Polyline;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"../coord/single/singleCreator\");\n\nrequire(\"./axis/SingleAxisView\");\n\nrequire(\"../coord/single/AxisModel\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./axisPointer/SingleAxisPointer\");\n\necharts.extendComponentView({\n  type: 'single'\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, labelInterval, z2\n * }\n */\nfunction layout(axisModel, opt) {\n  opt = opt || {};\n  var single = axisModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var axisPosition = axis.position;\n  var orient = axis.orient;\n  var rect = single.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var positionMap = {\n    horizontal: {\n      top: rectBound[2],\n      bottom: rectBound[3]\n    },\n    vertical: {\n      left: rectBound[0],\n      right: rectBound[1]\n    }\n  };\n  layout.position = [orient === 'vertical' ? positionMap.vertical[axisPosition] : rectBound[0], orient === 'horizontal' ? positionMap.horizontal[axisPosition] : rectBound[3]];\n  var r = {\n    horizontal: 0,\n    vertical: 1\n  };\n  layout.rotation = Math.PI / 2 * r[orient];\n  var directionMap = {\n    top: -1,\n    bottom: 1,\n    right: 1,\n    left: -1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = directionMap[axisPosition];\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  }\n\n  var labelRotation = opt.rotate;\n  labelRotation == null && (labelRotation = axisModel.get('axisLabel.rotate'));\n  layout.labelRotation = axisPosition === 'top' ? -labelRotation : labelRotation;\n  layout.labelInterval = axis.getLabelInterval();\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/**\n * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} {point: [x, y], el: ...} point Will not be null.\n */\nfunction _default(finder, ecModel) {\n  var point = [];\n  var seriesIndex = finder.seriesIndex;\n  var seriesModel;\n\n  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\n    return {\n      point: []\n    };\n  }\n\n  var data = seriesModel.getData();\n  var dataIndex = modelUtil.queryDataIndex(data, finder);\n\n  if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n    return {\n      point: []\n    };\n  }\n\n  var el = data.getItemGraphicEl(dataIndex);\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (seriesModel.getTooltipPosition) {\n    point = seriesModel.getTooltipPosition(dataIndex) || [];\n  } else if (coordSys && coordSys.dataToPoint) {\n    point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n      return seriesModel.coordDimToDataDim(dim)[0];\n    }), dataIndex, true)) || [];\n  } else if (el) {\n    // Use graphic bounding rect\n    var rect = el.getBoundingRect().clone();\n    rect.applyTransform(el.transform);\n    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n\n  return {\n    point: point,\n    el: el\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar get = modelUtil.makeGetter();\nvar each = zrUtil.each;\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n * @param {Function} handler\n *      param: {string} currTrigger\n *      param: {Array.<number>} point\n */\n\nfunction register(key, api, handler) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  get(zr).records || (get(zr).records = {});\n  initGlobalListeners(zr, api);\n  var record = get(zr).records[key] || (get(zr).records[key] = {});\n  record.handler = handler;\n}\n\nfunction initGlobalListeners(zr, api) {\n  if (get(zr).initialized) {\n    return;\n  }\n\n  get(zr).initialized = true;\n  useHandler('click', zrUtil.curry(doEnter, 'click'));\n  useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove')); // useHandler('mouseout', onLeave);\n\n  useHandler('globalout', onLeave);\n\n  function useHandler(eventType, cb) {\n    zr.on(eventType, function (e) {\n      var dis = makeDispatchAction(api);\n      each(get(zr).records, function (record) {\n        record && cb(record, e, dis.dispatchAction);\n      });\n      dispatchTooltipFinally(dis.pendings, api);\n    });\n  }\n}\n\nfunction dispatchTooltipFinally(pendings, api) {\n  var showLen = pendings.showTip.length;\n  var hideLen = pendings.hideTip.length;\n  var actuallyPayload;\n\n  if (showLen) {\n    actuallyPayload = pendings.showTip[showLen - 1];\n  } else if (hideLen) {\n    actuallyPayload = pendings.hideTip[hideLen - 1];\n  }\n\n  if (actuallyPayload) {\n    actuallyPayload.dispatchAction = null;\n    api.dispatchAction(actuallyPayload);\n  }\n}\n\nfunction onLeave(record, e, dispatchAction) {\n  record.handler('leave', null, dispatchAction);\n}\n\nfunction doEnter(currTrigger, record, e, dispatchAction) {\n  record.handler(currTrigger, e, dispatchAction);\n}\n\nfunction makeDispatchAction(api) {\n  var pendings = {\n    showTip: [],\n    hideTip: []\n  }; // FIXME\n  // better approach?\n  // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n  // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n  // So we have to add \"final stage\" to merge those dispatched actions.\n\n  var dispatchAction = function (payload) {\n    var pendingList = pendings[payload.type];\n\n    if (pendingList) {\n      pendingList.push(payload);\n    } else {\n      payload.dispatchAction = dispatchAction;\n      api.dispatchAction(payload);\n    }\n  };\n\n  return {\n    dispatchAction: dispatchAction,\n    pendings: pendings\n  };\n}\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction unregister(key, api) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  var record = (get(zr).records || {})[key];\n\n  if (record) {\n    get(zr).records[key] = null;\n  }\n}\n\nexports.register = register;\nexports.unregister = unregister;","var graphic = require(\"../../util/graphic\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar cartesianAxisHelper = require(\"../axis/cartesianAxisHelper\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\nvar CartesianAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisPointerType = axisPointerModel.get('type');\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisExtent = axis.getGlobalExtent(true);\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var dimIndex = axis.dim === 'x' ? 0 : 1;\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.\n\n    var tooltipOptions = [{\n      verticalAlign: 'middle'\n    }, {\n      align: 'center'\n    }];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: tooltipOptions[dimIndex]\n    };\n  }\n});\n\nfunction getCartesian(grid, axis) {\n  var opt = {};\n  opt[axis.dim + 'AxisIndex'] = axis.index;\n  return grid.getCartesian(opt);\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = axis.getBandWidth();\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))\n    };\n  }\n};\n\nfunction getAxisDimIndex(axis) {\n  return axis.dim === 'x' ? 0 : 1;\n}\n\nAxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\nvar _default = CartesianAxisPointer;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function (option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function (ecModel) {\n    var legendData = zrUtil.map(this.get('data') || [], function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    this._data = legendData;\n    var availableNames = zrUtil.map(ecModel.getSeries(), function (series) {\n      return series.name;\n    });\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        availableNames = availableNames.concat(data.mapArray(data.getName));\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _listComponent = require(\"../helper/listComponent\");\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      }\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode);\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // FIXME Should not specify the series name\n            .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, true)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType == 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nmodule.exports = _default;","var _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\nvar layoutBox = _layout.box;\nvar positionElement = _layout.positionElement;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\n/**\n * Layout list like component.\n * It will box layout each items in group of component and then position the whole group in the viewport\n * @param {module:zrender/group/Group} group\n * @param {module:echarts/model/Component} componentModel\n * @param {module:echarts/ExtensionAPI}\n */\nfunction layout(group, componentModel, api) {\n  var boxLayoutParams = componentModel.getBoxLayoutParams();\n  var padding = componentModel.get('padding');\n  var viewportSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var rect = getLayoutRect(boxLayoutParams, viewportSize, padding);\n  layoutBox(componentModel.get('orient'), group, componentModel.get('itemGap'), rect.width, rect.height);\n  positionElement(group, boxLayoutParams, viewportSize, padding);\n}\n\nfunction makeBackground(rect, componentModel) {\n  var padding = formatUtil.normalizeCssArray(componentModel.get('padding'));\n  var style = componentModel.getItemStyle(['color', 'opacity']);\n  style.fill = componentModel.get('backgroundColor');\n  var rect = new graphic.Rect({\n    shape: {\n      x: rect.x - padding[3],\n      y: rect.y - padding[0],\n      width: rect.width + padding[1] + padding[3],\n      height: rect.height + padding[0] + padding[2],\n      r: componentModel.get('borderRadius')\n    },\n    style: style,\n    silent: true,\n    z2: -1\n  }); // FIXME\n  // `subPixelOptimizeRect` may bring some gap between edge of viewpart\n  // and background rect when setting like `left: 0`, `top: 0`.\n  // graphic.subPixelOptimizeRect(rect);\n\n  return rect;\n}\n\nexports.layout = layout;\nexports.makeBackground = makeBackground;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar brushHelper = require(\"./brushHelper\");\n\nvar each = zrUtil.each;\nvar indexOf = zrUtil.indexOf;\nvar curry = zrUtil.curry;\nvar COORD_CONVERTS = ['dataToPoint', 'pointToData']; // FIXME\n// how to genarialize to more coordinate systems.\n\nvar INCLUDE_FINDER_MAIN_TYPES = ['grid', 'xAxis', 'yAxis', 'geo', 'graph', 'polar', 'radiusAxis', 'angleAxis', 'bmap'];\n/**\n * [option in constructor]:\n * {\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n * }\n *\n *\n * [targetInfo]:\n *\n * There can be multiple axes in a single targetInfo. Consider the case\n * of `grid` component, a targetInfo represents a grid which contains one or more\n * cartesian and one or more axes. And consider the case of parallel system,\n * which has multiple axes in a coordinate system.\n * Can be {\n *     panelId: ...,\n *     coordSys: <a representitive cartesian in grid (first cartesian by default)>,\n *     coordSyses: all cartesians.\n *     gridModel: <grid component>\n *     xAxes: correspond to coordSyses on index\n *     yAxes: correspond to coordSyses on index\n * }\n * or {\n *     panelId: ...,\n *     coordSys: <geo coord sys>\n *     coordSyses: [<geo coord sys>]\n *     geoModel: <geo component>\n * }\n *\n *\n * [panelOpt]:\n *\n * Make from targetInfo. Input to BrushController.\n * {\n *     panelId: ...,\n *     rect: ...\n * }\n *\n *\n * [area]:\n *\n * Generated by BrushController or user input.\n * {\n *     panelId: Used to locate coordInfo directly. If user inpput, no panelId.\n *     brushType: determine how to convert to/from coord('rect' or 'polygon' or 'lineX/Y').\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n *     range: pixel range.\n *     coordRange: representitive coord range (the first one of coordRanges).\n *     coordRanges: <Array> coord ranges, used in multiple cartesian in one grid.\n * }\n */\n\n/**\n * @param {Object} option contains Index/Id/Name of xAxis/yAxis/geo/grid\n *        Each can be {number|Array.<number>}. like: {xAxisIndex: [3, 4]}\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} [opt]\n * @param {Array.<string>} [opt.include] include coordinate system types.\n */\n\nfunction BrushTargetManager(option, ecModel, opt) {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  var targetInfoList = this._targetInfoList = [];\n  var info = {};\n  var foundCpts = parseFinder(ecModel, option);\n  each(targetInfoBuilders, function (builder, type) {\n    if (!opt || !opt.include || indexOf(opt.include, type) >= 0) {\n      builder(foundCpts, targetInfoList, info);\n    }\n  });\n}\n\nvar proto = BrushTargetManager.prototype;\n\nproto.setOutputRanges = function (areas, ecModel) {\n  this.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    (area.coordRanges || (area.coordRanges = [])).push(coordRange); // area.coordRange is the first of area.coordRanges\n\n    if (!area.coordRange) {\n      area.coordRange = coordRange; // In 'category' axis, coord to pixel is not reversible, so we can not\n      // rebuild range by coordRange accrately, which may bring trouble when\n      // brushing only one item. So we use __rangeOffset to rebuilding range\n      // by coordRange. And this it only used in brush component so it is no\n      // need to be adapted to coordRanges.\n\n      var result = coordConvert[area.brushType](0, coordSys, coordRange);\n      area.__rangeOffset = {\n        offset: diffProcessor[area.brushType](result.values, area.range, [1, 1]),\n        xyMinMax: result.xyMinMax\n      };\n    }\n  });\n};\n\nproto.matchOutputRanges = function (areas, ecModel, cb) {\n  each(areas, function (area) {\n    var targetInfo = this.findTargetInfo(area, ecModel);\n\n    if (targetInfo && targetInfo !== true) {\n      zrUtil.each(targetInfo.coordSyses, function (coordSys) {\n        var result = coordConvert[area.brushType](1, coordSys, area.range);\n        cb(area, result.values, coordSys, ecModel);\n      });\n    }\n  }, this);\n};\n\nproto.setInputRanges = function (areas, ecModel) {\n  each(areas, function (area) {\n    var targetInfo = this.findTargetInfo(area, ecModel);\n    area.range = area.range || []; // convert coordRange to global range and set panelId.\n\n    if (targetInfo && targetInfo !== true) {\n      area.panelId = targetInfo.panelId; // (1) area.range shoule always be calculate from coordRange but does\n      // not keep its original value, for the sake of the dataZoom scenario,\n      // where area.coordRange remains unchanged but area.range may be changed.\n      // (2) Only support converting one coordRange to pixel range in brush\n      // component. So do not consider `coordRanges`.\n      // (3) About __rangeOffset, see comment above.\n\n      var result = coordConvert[area.brushType](0, targetInfo.coordSys, area.coordRange);\n      var rangeOffset = area.__rangeOffset;\n      area.range = rangeOffset ? diffProcessor[area.brushType](result.values, rangeOffset.offset, getScales(result.xyMinMax, rangeOffset.xyMinMax)) : result.values;\n    }\n  }, this);\n};\n\nproto.makePanelOpts = function (api, getDefaultBrushType) {\n  return zrUtil.map(this._targetInfoList, function (targetInfo) {\n    var rect = targetInfo.getPanelRect();\n    return {\n      panelId: targetInfo.panelId,\n      defaultBrushType: getDefaultBrushType && getDefaultBrushType(targetInfo),\n      clipPath: brushHelper.makeRectPanelClipPath(rect),\n      isTargetByCursor: brushHelper.makeRectIsTargetByCursor(rect, api, targetInfo.coordSysModel),\n      getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect)\n    };\n  });\n};\n\nproto.controlSeries = function (area, seriesModel, ecModel) {\n  // Check whether area is bound in coord, and series do not belong to that coord.\n  // If do not do this check, some brush (like lineX) will controll all axes.\n  var targetInfo = this.findTargetInfo(area, ecModel);\n  return targetInfo === true || targetInfo && indexOf(targetInfo.coordSyses, seriesModel.coordinateSystem) >= 0;\n};\n/**\n * If return Object, a coord found.\n * If reutrn true, global found.\n * Otherwise nothing found.\n *\n * @param {Object} area\n * @param {Array} targetInfoList\n * @return {Object|boolean}\n */\n\n\nproto.findTargetInfo = function (area, ecModel) {\n  var targetInfoList = this._targetInfoList;\n  var foundCpts = parseFinder(ecModel, area);\n\n  for (var i = 0; i < targetInfoList.length; i++) {\n    var targetInfo = targetInfoList[i];\n    var areaPanelId = area.panelId;\n\n    if (areaPanelId) {\n      if (targetInfo.panelId === areaPanelId) {\n        return targetInfo;\n      }\n    } else {\n      for (var i = 0; i < targetInfoMatchers.length; i++) {\n        if (targetInfoMatchers[i](foundCpts, targetInfo)) {\n          return targetInfo;\n        }\n      }\n    }\n  }\n\n  return true;\n};\n\nfunction formatMinMax(minMax) {\n  minMax[0] > minMax[1] && minMax.reverse();\n  return minMax;\n}\n\nfunction parseFinder(ecModel, option) {\n  return modelUtil.parseFinder(ecModel, option, {\n    includeMainTypes: INCLUDE_FINDER_MAIN_TYPES\n  });\n}\n\nvar targetInfoBuilders = {\n  grid: function (foundCpts, targetInfoList) {\n    var xAxisModels = foundCpts.xAxisModels;\n    var yAxisModels = foundCpts.yAxisModels;\n    var gridModels = foundCpts.gridModels; // Remove duplicated.\n\n    var gridModelMap = zrUtil.createHashMap();\n    var xAxesHas = {};\n    var yAxesHas = {};\n\n    if (!xAxisModels && !yAxisModels && !gridModels) {\n      return;\n    }\n\n    each(xAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n    });\n    each(yAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      yAxesHas[gridModel.id] = true;\n    });\n    each(gridModels, function (gridModel) {\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n      yAxesHas[gridModel.id] = true;\n    });\n    gridModelMap.each(function (gridModel) {\n      var grid = gridModel.coordinateSystem;\n      var cartesians = [];\n      each(grid.getCartesians(), function (cartesian, index) {\n        if (indexOf(xAxisModels, cartesian.getAxis('x').model) >= 0 || indexOf(yAxisModels, cartesian.getAxis('y').model) >= 0) {\n          cartesians.push(cartesian);\n        }\n      });\n      targetInfoList.push({\n        panelId: 'grid--' + gridModel.id,\n        gridModel: gridModel,\n        coordSysModel: gridModel,\n        // Use the first one as the representitive coordSys.\n        coordSys: cartesians[0],\n        coordSyses: cartesians,\n        getPanelRect: panelRectBuilder.grid,\n        xAxisDeclared: xAxesHas[gridModel.id],\n        yAxisDeclared: yAxesHas[gridModel.id]\n      });\n    });\n  },\n  geo: function (foundCpts, targetInfoList) {\n    each(foundCpts.geoModels, function (geoModel) {\n      var coordSys = geoModel.coordinateSystem;\n      targetInfoList.push({\n        panelId: 'geo--' + geoModel.id,\n        geoModel: geoModel,\n        coordSysModel: geoModel,\n        coordSys: coordSys,\n        coordSyses: [coordSys],\n        getPanelRect: panelRectBuilder.geo\n      });\n    });\n  }\n};\nvar targetInfoMatchers = [// grid\nfunction (foundCpts, targetInfo) {\n  var xAxisModel = foundCpts.xAxisModel;\n  var yAxisModel = foundCpts.yAxisModel;\n  var gridModel = foundCpts.gridModel;\n  !gridModel && xAxisModel && (gridModel = xAxisModel.axis.grid.model);\n  !gridModel && yAxisModel && (gridModel = yAxisModel.axis.grid.model);\n  return gridModel && gridModel === targetInfo.gridModel;\n}, // geo\nfunction (foundCpts, targetInfo) {\n  var geoModel = foundCpts.geoModel;\n  return geoModel && geoModel === targetInfo.geoModel;\n}];\nvar panelRectBuilder = {\n  grid: function () {\n    // grid is not Transformable.\n    return this.coordSys.grid.getRect().clone();\n  },\n  geo: function () {\n    var coordSys = this.coordSys;\n    var rect = coordSys.getBoundingRect().clone(); // geo roam and zoom transform\n\n    rect.applyTransform(graphic.getTransform(coordSys));\n    return rect;\n  }\n};\nvar coordConvert = {\n  lineX: curry(axisConvert, 0),\n  lineY: curry(axisConvert, 1),\n  rect: function (to, coordSys, rangeOrCoordRange) {\n    var xminymin = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][0], rangeOrCoordRange[1][0]]);\n    var xmaxymax = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][1], rangeOrCoordRange[1][1]]);\n    var values = [formatMinMax([xminymin[0], xmaxymax[0]]), formatMinMax([xminymin[1], xmaxymax[1]])];\n    return {\n      values: values,\n      xyMinMax: values\n    };\n  },\n  polygon: function (to, coordSys, rangeOrCoordRange) {\n    var xyMinMax = [[Infinity, -Infinity], [Infinity, -Infinity]];\n    var values = zrUtil.map(rangeOrCoordRange, function (item) {\n      var p = coordSys[COORD_CONVERTS[to]](item);\n      xyMinMax[0][0] = Math.min(xyMinMax[0][0], p[0]);\n      xyMinMax[1][0] = Math.min(xyMinMax[1][0], p[1]);\n      xyMinMax[0][1] = Math.max(xyMinMax[0][1], p[0]);\n      xyMinMax[1][1] = Math.max(xyMinMax[1][1], p[1]);\n      return p;\n    });\n    return {\n      values: values,\n      xyMinMax: xyMinMax\n    };\n  }\n};\n\nfunction axisConvert(axisNameIndex, to, coordSys, rangeOrCoordRange) {\n  var axis = coordSys.getAxis(['x', 'y'][axisNameIndex]);\n  var values = formatMinMax(zrUtil.map([0, 1], function (i) {\n    return to ? axis.coordToData(axis.toLocalCoord(rangeOrCoordRange[i])) : axis.toGlobalCoord(axis.dataToCoord(rangeOrCoordRange[i]));\n  }));\n  var xyMinMax = [];\n  xyMinMax[axisNameIndex] = values;\n  xyMinMax[1 - axisNameIndex] = [NaN, NaN];\n  return {\n    values: values,\n    xyMinMax: xyMinMax\n  };\n}\n\nvar diffProcessor = {\n  lineX: curry(axisDiffProcessor, 0),\n  lineY: curry(axisDiffProcessor, 1),\n  rect: function (values, refer, scales) {\n    return [[values[0][0] - scales[0] * refer[0][0], values[0][1] - scales[0] * refer[0][1]], [values[1][0] - scales[1] * refer[1][0], values[1][1] - scales[1] * refer[1][1]]];\n  },\n  polygon: function (values, refer, scales) {\n    return zrUtil.map(values, function (item, idx) {\n      return [item[0] - scales[0] * refer[idx][0], item[1] - scales[1] * refer[idx][1]];\n    });\n  }\n};\n\nfunction axisDiffProcessor(axisNameIndex, values, refer, scales) {\n  return [values[0] - scales[axisNameIndex] * refer[0], values[1] - scales[axisNameIndex] * refer[1]];\n} // We have to process scale caused by dataZoom manually,\n// although it might be not accurate.\n\n\nfunction getScales(xyMinMaxCurr, xyMinMaxOrigin) {\n  var sizeCurr = getSize(xyMinMaxCurr);\n  var sizeOrigin = getSize(xyMinMaxOrigin);\n  var scales = [sizeCurr[0] / sizeOrigin[0], sizeCurr[1] / sizeOrigin[1]];\n  isNaN(scales[0]) && (scales[0] = 1);\n  isNaN(scales[1]) && (scales[1] = 1);\n  return scales;\n}\n\nfunction getSize(xyMinMax) {\n  return xyMinMax ? [xyMinMax[0][1] - xyMinMax[0][0], xyMinMax[1][1] - xyMinMax[1][0]] : [NaN, NaN];\n}\n\nvar _default = BrushTargetManager;\nmodule.exports = _default;","var Component = require(\"../../model/Component\");\n\nComponent.registerSubTypeDefaulter('dataZoom', function () {\n  // Default 'slider' when no type specified.\n  return 'slider';\n});","var echarts = require(\"../../echarts\");\n\necharts.registerProcessor(function (ecModel, api) {\n  ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n    // We calculate window and reset axis here but not in model\n    // init stage and not after action dispatch handler, because\n    // reset should be called after seriesData.restoreData.\n    dataZoomModel.eachTargetAxis(resetSingleAxis); // Caution: data zoom filtering is order sensitive when using\n    // percent range and no min/max/scale set on axis.\n    // For example, we have dataZoom definition:\n    // [\n    //      {xAxisIndex: 0, start: 30, end: 70},\n    //      {yAxisIndex: 0, start: 20, end: 80}\n    // ]\n    // In this case, [20, 80] of y-dataZoom should be based on data\n    // that have filtered by x-dataZoom using range of [30, 70],\n    // but should not be based on full raw data. Thus sliding\n    // x-dataZoom will change both ranges of xAxis and yAxis,\n    // while sliding y-dataZoom will only change the range of yAxis.\n    // So we should filter x-axis after reset x-axis immediately,\n    // and then reset y-axis and filter y-axis.\n\n    dataZoomModel.eachTargetAxis(filterSingleAxis);\n  });\n  ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n    // Fullfill all of the range props so that user\n    // is able to get them from chart.getOption().\n    var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n    var percentRange = axisProxy.getDataPercentWindow();\n    var valueRange = axisProxy.getDataValueWindow();\n    dataZoomModel.setRawRange({\n      start: percentRange[0],\n      end: percentRange[1],\n      startValue: valueRange[0],\n      endValue: valueRange[1]\n    }, true);\n  });\n});\n\nfunction resetSingleAxis(dimNames, axisIndex, dataZoomModel) {\n  dataZoomModel.getAxisProxy(dimNames.name, axisIndex).reset(dataZoomModel);\n}\n\nfunction filterSingleAxis(dimNames, axisIndex, dataZoomModel) {\n  dataZoomModel.getAxisProxy(dimNames.name, axisIndex).filterData(dataZoomModel);\n}","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar helper = require(\"./helper\");\n\necharts.registerAction('dataZoom', function (payload, ecModel) {\n  var linkedNodesFinder = helper.createLinkedNodesFinder(zrUtil.bind(ecModel.eachComponent, ecModel, 'dataZoom'), helper.eachAxisDim, function (model, dimNames) {\n    return model.get(dimNames.axisIndex);\n  });\n  var effectedModels = [];\n  ecModel.eachComponent({\n    mainType: 'dataZoom',\n    query: payload\n  }, function (model, index) {\n    effectedModels.push.apply(effectedModels, linkedNodesFinder(model).nodes);\n  });\n  zrUtil.each(effectedModels, function (dataZoomModel, index) {\n    dataZoomModel.setRawRange({\n      start: payload.start,\n      end: payload.end,\n      startValue: payload.startValue,\n      endValue: payload.endValue\n    });\n  });\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar each = zrUtil.each;\n\nfunction _default(option) {\n  var visualMap = option && option.visualMap;\n\n  if (!zrUtil.isArray(visualMap)) {\n    visualMap = visualMap ? [visualMap] : [];\n  }\n\n  each(visualMap, function (opt) {\n    if (!opt) {\n      return;\n    } // rename splitList to pieces\n\n\n    if (has(opt, 'splitList') && !has(opt, 'pieces')) {\n      opt.pieces = opt.splitList;\n      delete opt.splitList;\n    }\n\n    var pieces = opt.pieces;\n\n    if (pieces && zrUtil.isArray(pieces)) {\n      each(pieces, function (piece) {\n        if (zrUtil.isObject(piece)) {\n          if (has(piece, 'start') && !has(piece, 'min')) {\n            piece.min = piece.start;\n          }\n\n          if (has(piece, 'end') && !has(piece, 'max')) {\n            piece.max = piece.end;\n          }\n        }\n      });\n    }\n  });\n}\n\nfunction has(obj, name) {\n  return obj && obj.hasOwnProperty && obj.hasOwnProperty(name);\n}\n\nmodule.exports = _default;","var Component = require(\"../../model/Component\");\n\nComponent.registerSubTypeDefaulter('visualMap', function (option) {\n  // Compatible with ec2, when splitNumber === 0, continuous visualMap will be used.\n  return !option.categories && (!(option.pieces ? option.pieces.length > 0 : option.splitNumber > 0) || option.calculable) ? 'continuous' : 'piecewise';\n});","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\necharts.registerVisual(echarts.PRIORITY.VISUAL.COMPONENT, function (ecModel) {\n  ecModel.eachComponent('visualMap', function (visualMapModel) {\n    processSingleVisualMap(visualMapModel, ecModel);\n  });\n  prepareVisualMeta(ecModel);\n});\n\nfunction processSingleVisualMap(visualMapModel, ecModel) {\n  visualMapModel.eachTargetSeries(function (seriesModel) {\n    var data = seriesModel.getData();\n    visualSolution.applyVisual(visualMapModel.stateList, visualMapModel.targetVisuals, data, visualMapModel.getValueState, visualMapModel, visualMapModel.getDataDimension(data));\n  });\n} // Only support color.\n\n\nfunction prepareVisualMeta(ecModel) {\n  ecModel.eachSeries(function (seriesModel) {\n    var data = seriesModel.getData();\n    var visualMetaList = [];\n    ecModel.eachComponent('visualMap', function (visualMapModel) {\n      if (visualMapModel.isTargetSeries(seriesModel)) {\n        var visualMeta = visualMapModel.getVisualMeta(zrUtil.bind(getColorVisual, null, seriesModel, visualMapModel)) || {\n          stops: [],\n          outerColors: []\n        };\n        visualMeta.dimension = visualMapModel.getDataDimension(data);\n        visualMetaList.push(visualMeta);\n      }\n    }); // console.log(JSON.stringify(visualMetaList.map(a => a.stops)));\n\n    seriesModel.getData().setVisual('visualMeta', visualMetaList);\n  });\n} // FIXME\n// performance and export for heatmap?\n// value can be Infinity or -Infinity\n\n\nfunction getColorVisual(seriesModel, visualMapModel, value, valueState) {\n  var mappings = visualMapModel.targetVisuals[valueState];\n  var visualTypes = VisualMapping.prepareVisualTypes(mappings);\n  var resultVisual = {\n    color: seriesModel.getData().getVisual('color') // default color.\n\n  };\n\n  for (var i = 0, len = visualTypes.length; i < len; i++) {\n    var type = visualTypes[i];\n    var mapping = mappings[type === 'opacity' ? '__alphaForOpacity' : type];\n    mapping && mapping.applyVisual(value, getVisual, setVisual);\n  }\n\n  return resultVisual.color;\n\n  function getVisual(key) {\n    return resultVisual[key];\n  }\n\n  function setVisual(key, value) {\n    resultVisual[key] = value;\n  }\n}","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar visualDefault = require(\"../../visual/visualDefault\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar mapVisual = VisualMapping.mapVisual;\nvar eachVisual = VisualMapping.eachVisual;\nvar isArray = zrUtil.isArray;\nvar each = zrUtil.each;\nvar asc = numberUtil.asc;\nvar linearMap = numberUtil.linearMap;\nvar noop = zrUtil.noop;\nvar DEFAULT_COLOR = ['#f6efa6', '#d88273', '#bf444c'];\nvar VisualMapModel = echarts.extendComponentModel({\n  type: 'visualMap',\n  dependencies: ['series'],\n\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  stateList: ['inRange', 'outOfRange'],\n\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  replacableOptionKeys: ['inRange', 'outOfRange', 'target', 'controller', 'color'],\n\n  /**\n   * [lowerBound, upperBound]\n   *\n   * @readOnly\n   * @type {Array.<number>}\n   */\n  dataBound: [-Infinity, Infinity],\n\n  /**\n   * @readOnly\n   * @type {string|Object}\n   */\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    show: true,\n    zlevel: 0,\n    z: 4,\n    seriesIndex: 'all',\n    // 'all' or null/undefined: all series.\n    // A number or an array of number: the specified series.\n    // set min: 0, max: 200, only for campatible with ec2.\n    // In fact min max should not have default value.\n    min: 0,\n    // min value, must specified if pieces is not specified.\n    max: 200,\n    // max value, must specified if pieces is not specified.\n    dimension: null,\n    inRange: null,\n    // 'color', 'colorHue', 'colorSaturation', 'colorLightness', 'colorAlpha',\n    // 'symbol', 'symbolSize'\n    outOfRange: null,\n    // 'color', 'colorHue', 'colorSaturation',\n    // 'colorLightness', 'colorAlpha',\n    // 'symbol', 'symbolSize'\n    left: 0,\n    // 'center' ¦ 'left' ¦ 'right' ¦ {number} (px)\n    right: null,\n    // The same as left.\n    top: null,\n    // 'top' ¦ 'bottom' ¦ 'center' ¦ {number} (px)\n    bottom: 0,\n    // The same as top.\n    itemWidth: null,\n    itemHeight: null,\n    inverse: false,\n    orient: 'vertical',\n    // 'horizontal' ¦ 'vertical'\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderColor: '#ccc',\n    // 值域边框颜色\n    contentColor: '#5793f3',\n    inactiveColor: '#aaa',\n    borderWidth: 0,\n    // 值域边框线宽，单位px，默认为0（无边框）\n    padding: 5,\n    // 值域内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    textGap: 10,\n    //\n    precision: 0,\n    // 小数精度，默认为0，无小数点\n    color: null,\n    //颜色（deprecated，兼容ec2，顺序同pieces，不同于inRange/outOfRange）\n    formatter: null,\n    text: null,\n    // 文本，如['高', '低']，兼容ec2，text[0]对应高值，text[1]对应低值\n    textStyle: {\n      color: '#333' // 值域文字颜色\n\n    }\n  },\n\n  /**\n   * @protected\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this._dataExtent;\n    /**\n     * @readOnly\n     */\n\n    this.targetVisuals = {};\n    /**\n     * @readOnly\n     */\n\n    this.controllerVisuals = {};\n    /**\n     * @readOnly\n     */\n\n    this.textStyleModel;\n    /**\n     * [width, height]\n     * @readOnly\n     * @type {Array.<number>}\n     */\n\n    this.itemSize;\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n\n  /**\n   * @protected\n   */\n  optionUpdated: function (newOption, isInit) {\n    var thisOption = this.option; // FIXME\n    // necessary?\n    // Disable realtime view update if canvas is not supported.\n\n    if (!env.canvasSupported) {\n      thisOption.realtime = false;\n    }\n\n    !isInit && visualSolution.replaceVisualOption(thisOption, newOption, this.replacableOptionKeys);\n    this.textStyleModel = this.getModel('textStyle');\n    this.resetItemSize();\n    this.completeVisualOption();\n  },\n\n  /**\n   * @protected\n   */\n  resetVisual: function (supplementVisualOption) {\n    var stateList = this.stateList;\n    supplementVisualOption = zrUtil.bind(supplementVisualOption, this);\n    this.controllerVisuals = visualSolution.createVisualMappings(this.option.controller, stateList, supplementVisualOption);\n    this.targetVisuals = visualSolution.createVisualMappings(this.option.target, stateList, supplementVisualOption);\n  },\n\n  /**\n   * @protected\n   * @return {Array.<number>} An array of series indices.\n   */\n  getTargetSeriesIndices: function () {\n    var optionSeriesIndex = this.option.seriesIndex;\n    var seriesIndices = [];\n\n    if (optionSeriesIndex == null || optionSeriesIndex === 'all') {\n      this.ecModel.eachSeries(function (seriesModel, index) {\n        seriesIndices.push(index);\n      });\n    } else {\n      seriesIndices = modelUtil.normalizeToArray(optionSeriesIndex);\n    }\n\n    return seriesIndices;\n  },\n\n  /**\n   * @public\n   */\n  eachTargetSeries: function (callback, context) {\n    zrUtil.each(this.getTargetSeriesIndices(), function (seriesIndex) {\n      callback.call(context, this.ecModel.getSeriesByIndex(seriesIndex));\n    }, this);\n  },\n\n  /**\n   * @pubilc\n   */\n  isTargetSeries: function (seriesModel) {\n    var is = false;\n    this.eachTargetSeries(function (model) {\n      model === seriesModel && (is = true);\n    });\n    return is;\n  },\n\n  /**\n   * @example\n   * this.formatValueText(someVal); // format single numeric value to text.\n   * this.formatValueText(someVal, true); // format single category value to text.\n   * this.formatValueText([min, max]); // format numeric min-max to text.\n   * this.formatValueText([this.dataBound[0], max]); // using data lower bound.\n   * this.formatValueText([min, this.dataBound[1]]); // using data upper bound.\n   *\n   * @param {number|Array.<number>} value Real value, or this.dataBound[0 or 1].\n   * @param {boolean} [isCategory=false] Only available when value is number.\n   * @param {Array.<string>} edgeSymbols Open-close symbol when value is interval.\n   * @return {string}\n   * @protected\n   */\n  formatValueText: function (value, isCategory, edgeSymbols) {\n    var option = this.option;\n    var precision = option.precision;\n    var dataBound = this.dataBound;\n    var formatter = option.formatter;\n    var isMinMax;\n    var textValue;\n    edgeSymbols = edgeSymbols || ['<', '>'];\n\n    if (zrUtil.isArray(value)) {\n      value = value.slice();\n      isMinMax = true;\n    }\n\n    textValue = isCategory ? value : isMinMax ? [toFixed(value[0]), toFixed(value[1])] : toFixed(value);\n\n    if (zrUtil.isString(formatter)) {\n      return formatter.replace('{value}', isMinMax ? textValue[0] : textValue).replace('{value2}', isMinMax ? textValue[1] : textValue);\n    } else if (zrUtil.isFunction(formatter)) {\n      return isMinMax ? formatter(value[0], value[1]) : formatter(value);\n    }\n\n    if (isMinMax) {\n      if (value[0] === dataBound[0]) {\n        return edgeSymbols[0] + ' ' + textValue[1];\n      } else if (value[1] === dataBound[1]) {\n        return edgeSymbols[1] + ' ' + textValue[0];\n      } else {\n        return textValue[0] + ' - ' + textValue[1];\n      }\n    } else {\n      // Format single value (includes category case).\n      return textValue;\n    }\n\n    function toFixed(val) {\n      return val === dataBound[0] ? 'min' : val === dataBound[1] ? 'max' : (+val).toFixed(Math.min(precision, 20));\n    }\n  },\n\n  /**\n   * @protected\n   */\n  resetExtent: function () {\n    var thisOption = this.option; // Can not calculate data extent by data here.\n    // Because series and data may be modified in processing stage.\n    // So we do not support the feature \"auto min/max\".\n\n    var extent = asc([thisOption.min, thisOption.max]);\n    this._dataExtent = extent;\n  },\n\n  /**\n   * @public\n   * @param {module:echarts/data/List} list\n   * @return {string} Concrete dimention. If return null/undefined,\n   *                  no dimension used.\n   */\n  getDataDimension: function (list) {\n    var optDim = this.option.dimension;\n    return optDim != null ? optDim : list.dimensions.length - 1;\n  },\n\n  /**\n   * @public\n   * @override\n   */\n  getExtent: function () {\n    return this._dataExtent.slice();\n  },\n\n  /**\n   * @protected\n   */\n  completeVisualOption: function () {\n    var thisOption = this.option;\n    var base = {\n      inRange: thisOption.inRange,\n      outOfRange: thisOption.outOfRange\n    };\n    var target = thisOption.target || (thisOption.target = {});\n    var controller = thisOption.controller || (thisOption.controller = {});\n    zrUtil.merge(target, base); // Do not override\n\n    zrUtil.merge(controller, base); // Do not override\n\n    var isCategory = this.isCategory();\n    completeSingle.call(this, target);\n    completeSingle.call(this, controller);\n    completeInactive.call(this, target, 'inRange', 'outOfRange'); // completeInactive.call(this, target, 'outOfRange', 'inRange');\n\n    completeController.call(this, controller);\n\n    function completeSingle(base) {\n      // Compatible with ec2 dataRange.color.\n      // The mapping order of dataRange.color is: [high value, ..., low value]\n      // whereas inRange.color and outOfRange.color is [low value, ..., high value]\n      // Notice: ec2 has no inverse.\n      if (isArray(thisOption.color) // If there has been inRange: {symbol: ...}, adding color is a mistake.\n      // So adding color only when no inRange defined.\n      && !base.inRange) {\n        base.inRange = {\n          color: thisOption.color.slice().reverse()\n        };\n      } // Compatible with previous logic, always give a defautl color, otherwise\n      // simple config with no inRange and outOfRange will not work.\n      // Originally we use visualMap.color as the default color, but setOption at\n      // the second time the default color will be erased. So we change to use\n      // constant DEFAULT_COLOR.\n      // If user do not want the defualt color, set inRange: {color: null}.\n\n\n      base.inRange = base.inRange || {\n        color: DEFAULT_COLOR\n      }; // If using shortcut like: {inRange: 'symbol'}, complete default value.\n\n      each(this.stateList, function (state) {\n        var visualType = base[state];\n\n        if (zrUtil.isString(visualType)) {\n          var defa = visualDefault.get(visualType, 'active', isCategory);\n\n          if (defa) {\n            base[state] = {};\n            base[state][visualType] = defa;\n          } else {\n            // Mark as not specified.\n            delete base[state];\n          }\n        }\n      }, this);\n    }\n\n    function completeInactive(base, stateExist, stateAbsent) {\n      var optExist = base[stateExist];\n      var optAbsent = base[stateAbsent];\n\n      if (optExist && !optAbsent) {\n        optAbsent = base[stateAbsent] = {};\n        each(optExist, function (visualData, visualType) {\n          if (!VisualMapping.isValidType(visualType)) {\n            return;\n          }\n\n          var defa = visualDefault.get(visualType, 'inactive', isCategory);\n\n          if (defa != null) {\n            optAbsent[visualType] = defa; // Compatibable with ec2:\n            // Only inactive color to rgba(0,0,0,0) can not\n            // make label transparent, so use opacity also.\n\n            if (visualType === 'color' && !optAbsent.hasOwnProperty('opacity') && !optAbsent.hasOwnProperty('colorAlpha')) {\n              optAbsent.opacity = [0, 0];\n            }\n          }\n        });\n      }\n    }\n\n    function completeController(controller) {\n      var symbolExists = (controller.inRange || {}).symbol || (controller.outOfRange || {}).symbol;\n      var symbolSizeExists = (controller.inRange || {}).symbolSize || (controller.outOfRange || {}).symbolSize;\n      var inactiveColor = this.get('inactiveColor');\n      each(this.stateList, function (state) {\n        var itemSize = this.itemSize;\n        var visuals = controller[state]; // Set inactive color for controller if no other color\n        // attr (like colorAlpha) specified.\n\n        if (!visuals) {\n          visuals = controller[state] = {\n            color: isCategory ? inactiveColor : [inactiveColor]\n          };\n        } // Consistent symbol and symbolSize if not specified.\n\n\n        if (visuals.symbol == null) {\n          visuals.symbol = symbolExists && zrUtil.clone(symbolExists) || (isCategory ? 'roundRect' : ['roundRect']);\n        }\n\n        if (visuals.symbolSize == null) {\n          visuals.symbolSize = symbolSizeExists && zrUtil.clone(symbolSizeExists) || (isCategory ? itemSize[0] : [itemSize[0], itemSize[0]]);\n        } // Filter square and none.\n\n\n        visuals.symbol = mapVisual(visuals.symbol, function (symbol) {\n          return symbol === 'none' || symbol === 'square' ? 'roundRect' : symbol;\n        }); // Normalize symbolSize\n\n        var symbolSize = visuals.symbolSize;\n\n        if (symbolSize != null) {\n          var max = -Infinity; // symbolSize can be object when categories defined.\n\n          eachVisual(symbolSize, function (value) {\n            value > max && (max = value);\n          });\n          visuals.symbolSize = mapVisual(symbolSize, function (value) {\n            return linearMap(value, [0, max], [0, itemSize[0]], true);\n          });\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  resetItemSize: function () {\n    this.itemSize = [parseFloat(this.get('itemWidth')), parseFloat(this.get('itemHeight'))];\n  },\n\n  /**\n   * @public\n   */\n  isCategory: function () {\n    return !!this.option.categories;\n  },\n\n  /**\n   * @public\n   * @abstract\n   */\n  setSelected: noop,\n\n  /**\n   * @public\n   * @abstract\n   * @param {*|module:echarts/data/List} valueOrData\n   * @param {number} dataIndex\n   * @return {string} state See this.stateList\n   */\n  getValueState: noop,\n\n  /**\n   * FIXME\n   * Do not publish to thirt-part-dev temporarily\n   * util the interface is stable. (Should it return\n   * a function but not visual meta?)\n   *\n   * @pubilc\n   * @abstract\n   * @param {Function} getColorVisual\n   *        params: value, valueState\n   *        return: color\n   * @return {Object} visualMeta\n   *        should includes {stops, outerColors}\n   *        outerColor means [colorBeyondMinValue, colorBeyondMaxValue]\n   */\n  getVisualMeta: noop\n});\nvar _default = VisualMapModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @file Visual mapping.\n */\nvar visualDefault = {\n  /**\n   * @public\n   */\n  get: function (visualType, key, isCategory) {\n    var value = zrUtil.clone((defaultOption[visualType] || {})[key]);\n    return isCategory ? zrUtil.isArray(value) ? value[value.length - 1] : value : value;\n  }\n};\nvar defaultOption = {\n  color: {\n    active: ['#006edd', '#e0ffff'],\n    inactive: ['rgba(0,0,0,0)']\n  },\n  colorHue: {\n    active: [0, 360],\n    inactive: [0, 0]\n  },\n  colorSaturation: {\n    active: [0.3, 1],\n    inactive: [0, 0]\n  },\n  colorLightness: {\n    active: [0.9, 0.5],\n    inactive: [0, 0]\n  },\n  colorAlpha: {\n    active: [0.3, 1],\n    inactive: [0, 0]\n  },\n  opacity: {\n    active: [0.3, 1],\n    inactive: [0, 0]\n  },\n  symbol: {\n    active: ['circle', 'roundRect', 'diamond'],\n    inactive: ['none']\n  },\n  symbolSize: {\n    active: [10, 50],\n    inactive: [0, 0]\n  }\n};\nvar _default = visualDefault;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar layout = require(\"../../util/layout\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar _default = echarts.extendComponentView({\n  type: 'visualMap',\n\n  /**\n   * @readOnly\n   * @type {Object}\n   */\n  autoPositionValues: {\n    left: 1,\n    right: 1,\n    top: 1,\n    bottom: 1\n  },\n  init: function (ecModel, api) {\n    /**\n     * @readOnly\n     * @type {module:echarts/model/Global}\n     */\n    this.ecModel = ecModel;\n    /**\n     * @readOnly\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this.api = api;\n    /**\n     * @readOnly\n     * @type {module:echarts/component/visualMap/visualMapModel}\n     */\n\n    this.visualMapModel;\n  },\n\n  /**\n   * @protected\n   */\n  render: function (visualMapModel, ecModel, api, payload) {\n    this.visualMapModel = visualMapModel;\n\n    if (visualMapModel.get('show') === false) {\n      this.group.removeAll();\n      return;\n    }\n\n    this.doRender.apply(this, arguments);\n  },\n\n  /**\n   * @protected\n   */\n  renderBackground: function (group) {\n    var visualMapModel = this.visualMapModel;\n    var padding = formatUtil.normalizeCssArray(visualMapModel.get('padding') || 0);\n    var rect = group.getBoundingRect();\n    group.add(new graphic.Rect({\n      z2: -1,\n      // Lay background rect on the lowest layer.\n      silent: true,\n      shape: {\n        x: rect.x - padding[3],\n        y: rect.y - padding[0],\n        width: rect.width + padding[3] + padding[1],\n        height: rect.height + padding[0] + padding[2]\n      },\n      style: {\n        fill: visualMapModel.get('backgroundColor'),\n        stroke: visualMapModel.get('borderColor'),\n        lineWidth: visualMapModel.get('borderWidth')\n      }\n    }));\n  },\n\n  /**\n   * @protected\n   * @param {number} targetValue can be Infinity or -Infinity\n   * @param {string=} visualCluster Only can be 'color' 'opacity' 'symbol' 'symbolSize'\n   * @param {Object} [opts]\n   * @param {string=} [opts.forceState] Specify state, instead of using getValueState method.\n   * @param {string=} [opts.convertOpacityToAlpha=false] For color gradient in controller widget.\n   * @return {*} Visual value.\n   */\n  getControllerVisual: function (targetValue, visualCluster, opts) {\n    opts = opts || {};\n    var forceState = opts.forceState;\n    var visualMapModel = this.visualMapModel;\n    var visualObj = {}; // Default values.\n\n    if (visualCluster === 'symbol') {\n      visualObj.symbol = visualMapModel.get('itemSymbol');\n    }\n\n    if (visualCluster === 'color') {\n      var defaultColor = visualMapModel.get('contentColor');\n      visualObj.color = defaultColor;\n    }\n\n    function getter(key) {\n      return visualObj[key];\n    }\n\n    function setter(key, value) {\n      visualObj[key] = value;\n    }\n\n    var mappings = visualMapModel.controllerVisuals[forceState || visualMapModel.getValueState(targetValue)];\n    var visualTypes = VisualMapping.prepareVisualTypes(mappings);\n    zrUtil.each(visualTypes, function (type) {\n      var visualMapping = mappings[type];\n\n      if (opts.convertOpacityToAlpha && type === 'opacity') {\n        type = 'colorAlpha';\n        visualMapping = mappings.__alphaForOpacity;\n      }\n\n      if (VisualMapping.dependsOn(type, visualCluster)) {\n        visualMapping && visualMapping.applyVisual(targetValue, getter, setter);\n      }\n    });\n    return visualObj[visualCluster];\n  },\n\n  /**\n   * @protected\n   */\n  positionGroup: function (group) {\n    var model = this.visualMapModel;\n    var api = this.api;\n    layout.positionElement(group, model.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  },\n\n  /**\n   * @protected\n   * @abstract\n   */\n  doRender: zrUtil.noop\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\n/**\n * @param {module:echarts/component/visualMap/VisualMapModel} visualMapModel\\\n * @param {module:echarts/ExtensionAPI} api\n * @param {Array.<number>} itemSize always [short, long]\n * @return {string} 'left' or 'right' or 'top' or 'bottom'\n */\nfunction getItemAlign(visualMapModel, api, itemSize) {\n  var modelOption = visualMapModel.option;\n  var itemAlign = modelOption.align;\n\n  if (itemAlign != null && itemAlign !== 'auto') {\n    return itemAlign;\n  } // Auto decision align.\n\n\n  var ecSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var realIndex = modelOption.orient === 'horizontal' ? 1 : 0;\n  var paramsSet = [['left', 'right', 'width'], ['top', 'bottom', 'height']];\n  var reals = paramsSet[realIndex];\n  var fakeValue = [0, null, 10];\n  var layoutInput = {};\n\n  for (var i = 0; i < 3; i++) {\n    layoutInput[paramsSet[1 - realIndex][i]] = fakeValue[i];\n    layoutInput[reals[i]] = i === 2 ? itemSize[0] : modelOption[reals[i]];\n  }\n\n  var rParam = [['x', 'width', 3], ['y', 'height', 0]][realIndex];\n  var rect = getLayoutRect(layoutInput, ecSize, modelOption.padding);\n  return reals[(rect.margin[rParam[2]] || 0) + rect[rParam[0]] + rect[rParam[1]] * 0.5 < ecSize[rParam[1]] * 0.5 ? 0 : 1];\n}\n/**\n * Prepare dataIndex for outside usage, where dataIndex means rawIndex, and\n * dataIndexInside means filtered index.\n */\n\n\nfunction convertDataIndex(batch) {\n  zrUtil.each(batch || [], function (batchItem) {\n    if (batch.dataIndex != null) {\n      batch.dataIndexInside = batch.dataIndex;\n      batch.dataIndex = null;\n    }\n  });\n  return batch;\n}\n\nexports.getItemAlign = getItemAlign;\nexports.convertDataIndex = convertDataIndex;","var echarts = require(\"../../echarts\");\n\nvar actionInfo = {\n  type: 'selectDataRange',\n  event: 'dataRangeSelected',\n  // FIXME use updateView appears wrong\n  update: 'update'\n};\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'visualMap',\n    query: payload\n  }, function (model) {\n    model.setSelected(payload.selected);\n  });\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar each = zrUtil.each;\nvar ATTR = '\\0_ec_hist_store';\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} newSnapshot {dataZoomId, batch: [payloadInfo, ...]}\n */\n\nfunction push(ecModel, newSnapshot) {\n  var store = giveStore(ecModel); // If previous dataZoom can not be found,\n  // complete an range with current range.\n\n  each(newSnapshot, function (batchItem, dataZoomId) {\n    var i = store.length - 1;\n\n    for (; i >= 0; i--) {\n      var snapshot = store[i];\n\n      if (snapshot[dataZoomId]) {\n        break;\n      }\n    }\n\n    if (i < 0) {\n      // No origin range set, create one by current range.\n      var dataZoomModel = ecModel.queryComponents({\n        mainType: 'dataZoom',\n        subType: 'select',\n        id: dataZoomId\n      })[0];\n\n      if (dataZoomModel) {\n        var percentRange = dataZoomModel.getPercentRange();\n        store[0][dataZoomId] = {\n          dataZoomId: dataZoomId,\n          start: percentRange[0],\n          end: percentRange[1]\n        };\n      }\n    }\n  });\n  store.push(newSnapshot);\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} snapshot\n */\n\n\nfunction pop(ecModel) {\n  var store = giveStore(ecModel);\n  var head = store[store.length - 1];\n  store.length > 1 && store.pop(); // Find top for all dataZoom.\n\n  var snapshot = {};\n  each(head, function (batchItem, dataZoomId) {\n    for (var i = store.length - 1; i >= 0; i--) {\n      var batchItem = store[i][dataZoomId];\n\n      if (batchItem) {\n        snapshot[dataZoomId] = batchItem;\n        break;\n      }\n    }\n  });\n  return snapshot;\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction clear(ecModel) {\n  ecModel[ATTR] = null;\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n * @return {number} records. always >= 1.\n */\n\n\nfunction count(ecModel) {\n  return giveStore(ecModel).length;\n}\n/**\n * [{key: dataZoomId, value: {dataZoomId, range}}, ...]\n * History length of each dataZoom may be different.\n * this._history[0] is used to store origin range.\n * @type {Array.<Object>}\n */\n\n\nfunction giveStore(ecModel) {\n  var store = ecModel[ATTR];\n\n  if (!store) {\n    store = ecModel[ATTR] = [{}];\n  }\n\n  return store;\n}\n\nexports.push = push;\nexports.pop = pop;\nexports.clear = clear;\nexports.count = count;","var env = require(\"../core/env\");\n\nvar urn = 'urn:schemas-microsoft-com:vml';\nvar win = typeof window === 'undefined' ? null : window;\nvar vmlInited = false;\nvar doc = win && win.document;\n\nfunction createNode(tagName) {\n  return doCreateNode(tagName);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nvar doCreateNode;\n\nif (doc && !env.canvasSupported) {\n  try {\n    !doc.namespaces.zrvml && doc.namespaces.add('zrvml', urn);\n\n    doCreateNode = function (tagName) {\n      return doc.createElement('<zrvml:' + tagName + ' class=\"zrvml\">');\n    };\n  } catch (e) {\n    doCreateNode = function (tagName) {\n      return doc.createElement('<' + tagName + ' xmlns=\"' + urn + '\" class=\"zrvml\">');\n    };\n  }\n} // From raphael\n\n\nfunction initVML() {\n  if (vmlInited || !doc) {\n    return;\n  }\n\n  vmlInited = true;\n  var styleSheets = doc.styleSheets;\n\n  if (styleSheets.length < 31) {\n    doc.createStyleSheet().addRule('.zrvml', 'behavior:url(#default#VML)');\n  } else {\n    // http://msdn.microsoft.com/en-us/library/ms531194%28VS.85%29.aspx\n    styleSheets[0].addRule('.zrvml', 'behavior:url(#default#VML)');\n  }\n}\n\nexports.doc = doc;\nexports.createNode = createNode;\nexports.initVML = initVML;","var _core = require(\"../core\");\n\nvar createElement = _core.createElement;\n\nvar zrUtil = require(\"../../core/util\");\n\nvar Path = require(\"../../graphic/Path\");\n\nvar ZImage = require(\"../../graphic/Image\");\n\nvar ZText = require(\"../../graphic/Text\");\n\nvar _graphic = require(\"../graphic\");\n\nvar svgPath = _graphic.path;\nvar svgImage = _graphic.image;\nvar svgText = _graphic.text;\n\n/**\n * @file Manages elements that can be defined in <defs> in SVG,\n *       e.g., gradients, clip path, etc.\n * @author Zhang Wenli\n */\nvar MARK_UNUSED = '0';\nvar MARK_USED = '1';\n/**\n * Manages elements that can be defined in <defs> in SVG,\n * e.g., gradients, clip path, etc.\n *\n * @class\n * @param {SVGElement}      svgRoot   root of SVG document\n * @param {string|string[]} tagNames  possible tag names\n * @param {string}          markLabel label name to make if the element\n *                                    is used\n */\n\nfunction Definable(svgRoot, tagNames, markLabel) {\n  this._svgRoot = svgRoot;\n  this._tagNames = typeof tagNames === 'string' ? [tagNames] : tagNames;\n  this._markLabel = markLabel;\n  this.nextId = 0;\n}\n\nDefinable.prototype.createElement = createElement;\n/**\n * Get the <defs> tag for svgRoot; optionally creates one if not exists.\n *\n * @param {boolean} isForceCreating if need to create when not exists\n * @return {SVGDefsElement} SVG <defs> element, null if it doesn't\n * exist and isForceCreating is false\n */\n\nDefinable.prototype.getDefs = function (isForceCreating) {\n  var svgRoot = this._svgRoot;\n\n  var defs = this._svgRoot.getElementsByTagName('defs');\n\n  if (defs.length === 0) {\n    // Not exist\n    if (isForceCreating) {\n      defs = svgRoot.insertBefore(this.createElement('defs'), // Create new tag\n      svgRoot.firstChild // Insert in the front of svg\n      );\n\n      if (!defs.contains) {\n        // IE doesn't support contains method\n        defs.contains = function (el) {\n          var children = defs.children;\n\n          if (!children) {\n            return false;\n          }\n\n          for (var i = children.length - 1; i >= 0; --i) {\n            if (children[i] === el) {\n              return true;\n            }\n          }\n\n          return false;\n        };\n      }\n\n      return defs;\n    } else {\n      return null;\n    }\n  } else {\n    return defs[0];\n  }\n};\n/**\n * Update DOM element if necessary.\n *\n * @param {Object|string} element style element. e.g., for gradient,\n *                                it may be '#ccc' or {type: 'linear', ...}\n * @param {Function|undefined} onUpdate update callback\n */\n\n\nDefinable.prototype.update = function (element, onUpdate) {\n  if (!element) {\n    return;\n  }\n\n  var defs = this.getDefs(false);\n\n  if (element._dom && defs.contains(element._dom)) {\n    // Update DOM\n    if (typeof onUpdate === 'function') {\n      onUpdate();\n    }\n  } else {\n    // No previous dom, create new\n    var dom = this.add(element);\n\n    if (dom) {\n      element._dom = dom;\n    }\n  }\n};\n/**\n * Add gradient dom to defs\n *\n * @param {SVGElement} dom DOM to be added to <defs>\n */\n\n\nDefinable.prototype.addDom = function (dom) {\n  var defs = this.getDefs(true);\n  defs.appendChild(dom);\n};\n/**\n * Remove DOM of a given element.\n *\n * @param {SVGElement} element element to remove dom\n */\n\n\nDefinable.prototype.removeDom = function (element) {\n  var defs = this.getDefs(false);\n  defs.removeChild(element._dom);\n};\n/**\n * Get DOMs of this element.\n *\n * @return {HTMLDomElement} doms of this defineable elements in <defs>\n */\n\n\nDefinable.prototype.getDoms = function () {\n  var defs = this.getDefs(false);\n\n  if (!defs) {\n    // No dom when defs is not defined\n    return [];\n  }\n\n  var doms = [];\n  zrUtil.each(this._tagNames, function (tagName) {\n    var tags = defs.getElementsByTagName(tagName); // Note that tags is HTMLCollection, which is array-like\n    // rather than real array.\n    // So `doms.concat(tags)` add tags as one object.\n\n    doms = doms.concat([].slice.call(tags));\n  });\n  return doms;\n};\n/**\n * Mark DOMs to be unused before painting, and clear unused ones at the end\n * of the painting.\n */\n\n\nDefinable.prototype.markAllUnused = function () {\n  var doms = this.getDoms();\n  var that = this;\n  zrUtil.each(doms, function (dom) {\n    dom[that._markLabel] = MARK_UNUSED;\n  });\n};\n/**\n * Mark a single DOM to be used.\n *\n * @param {SVGElement} dom DOM to mark\n */\n\n\nDefinable.prototype.markUsed = function (dom) {\n  if (dom) {\n    dom[this._markLabel] = MARK_USED;\n  }\n};\n/**\n * Remove unused DOMs defined in <defs>\n */\n\n\nDefinable.prototype.removeUnused = function () {\n  var defs = this.getDefs(false);\n\n  if (!defs) {\n    // Nothing to remove\n    return;\n  }\n\n  var doms = this.getDoms();\n  var that = this;\n  zrUtil.each(doms, function (dom) {\n    if (dom[that._markLabel] !== MARK_USED) {\n      // Remove gradient\n      defs.removeChild(dom);\n    }\n  });\n};\n/**\n * Get SVG proxy.\n *\n * @param {Displayable} displayable displayable element\n * @return {Path|Image|Text} svg proxy of given element\n */\n\n\nDefinable.prototype.getSvgProxy = function (displayable) {\n  if (displayable instanceof Path) {\n    return svgPath;\n  } else if (displayable instanceof ZImage) {\n    return svgImage;\n  } else if (displayable instanceof ZText) {\n    return svgText;\n  } else {\n    return svgPath;\n  }\n};\n/**\n * Get text SVG element.\n *\n * @param {Displayable} displayable displayable element\n * @return {SVGElement} SVG element of text\n */\n\n\nDefinable.prototype.getTextSvgElement = function (displayable) {\n  return displayable.__textSvgEl;\n};\n/**\n * Get SVG element.\n *\n * @param {Displayable} displayable displayable element\n * @return {SVGElement} SVG element\n */\n\n\nDefinable.prototype.getSvgElement = function (displayable) {\n  return displayable.__svgEl;\n};\n\nvar _default = Definable;\nmodule.exports = _default;","var util = require(\"./core/util\");\n\nvar vec2 = require(\"./core/vector\");\n\nvar Draggable = require(\"./mixin/Draggable\");\n\nvar Eventful = require(\"./mixin/Eventful\");\n\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\nvar SILENT = 'silent';\n\nfunction makeEventPacket(eveType, targetInfo, event) {\n  return {\n    type: eveType,\n    event: event,\n    // target can only be an element that is not silent.\n    target: targetInfo.target,\n    // topTarget can be a silent element.\n    topTarget: targetInfo.topTarget,\n    cancelBubble: false,\n    offsetX: event.zrX,\n    offsetY: event.zrY,\n    gestureEvent: event.gestureEvent,\n    pinchX: event.pinchX,\n    pinchY: event.pinchY,\n    pinchScale: event.pinchScale,\n    wheelDelta: event.zrDelta,\n    zrByTouch: event.zrByTouch,\n    which: event.which\n  };\n}\n\nfunction EmptyProxy() {}\n\nEmptyProxy.prototype.dispose = function () {};\n\nvar handlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\n/**\n * @alias module:zrender/Handler\n * @constructor\n * @extends module:zrender/mixin/Eventful\n * @param {module:zrender/Storage} storage Storage instance.\n * @param {module:zrender/Painter} painter Painter instance.\n * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n */\n\nvar Handler = function (storage, painter, proxy, painterRoot) {\n  Eventful.call(this);\n  this.storage = storage;\n  this.painter = painter;\n  this.painterRoot = painterRoot;\n  proxy = proxy || new EmptyProxy();\n  /**\n   * Proxy of event. can be Dom, WebGLSurface, etc.\n   */\n\n  this.proxy = proxy; // Attach handler\n\n  proxy.handler = this;\n  /**\n   * {target, topTarget, x, y}\n   * @private\n   * @type {Object}\n   */\n\n  this._hovered = {};\n  /**\n   * @private\n   * @type {Date}\n   */\n\n  this._lastTouchMoment;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastX;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastY;\n  Draggable.call(this);\n  util.each(handlerNames, function (name) {\n    proxy.on && proxy.on(name, this[name], this);\n  }, this);\n};\n\nHandler.prototype = {\n  constructor: Handler,\n  mousemove: function (event) {\n    var x = event.zrX;\n    var y = event.zrY;\n    var lastHovered = this._hovered;\n    var lastHoveredTarget = lastHovered.target; // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\n    // (like 'setOption' or 'dispatchAction') in event handlers, we should find\n    // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\n    // See #6198.\n\n    if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n      lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n      lastHoveredTarget = lastHovered.target;\n    }\n\n    var hovered = this._hovered = this.findHover(x, y);\n    var hoveredTarget = hovered.target;\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default'); // Mouse out on previous hovered element\n\n    if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(lastHovered, 'mouseout', event);\n    } // Mouse moving on one element\n\n\n    this.dispatchToElement(hovered, 'mousemove', event); // Mouse over on a new element\n\n    if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(hovered, 'mouseover', event);\n    }\n  },\n  mouseout: function (event) {\n    this.dispatchToElement(this._hovered, 'mouseout', event); // There might be some doms created by upper layer application\n    // at the same level of painter.getViewportRoot() (e.g., tooltip\n    // dom created by echarts), where 'globalout' event should not\n    // be triggered when mouse enters these doms. (But 'mouseout'\n    // should be triggered at the original hovered element as usual).\n\n    var element = event.toElement || event.relatedTarget;\n    var innerDom;\n\n    do {\n      element = element && element.parentNode;\n    } while (element && element.nodeType != 9 && !(innerDom = element === this.painterRoot));\n\n    !innerDom && this.trigger('globalout', {\n      event: event\n    });\n  },\n\n  /**\n   * Resize\n   */\n  resize: function (event) {\n    this._hovered = {};\n  },\n\n  /**\n   * Dispatch event\n   * @param {string} eventName\n   * @param {event=} eventArgs\n   */\n  dispatch: function (eventName, eventArgs) {\n    var handler = this[eventName];\n    handler && handler.call(this, eventArgs);\n  },\n\n  /**\n   * Dispose\n   */\n  dispose: function () {\n    this.proxy.dispose();\n    this.storage = this.proxy = this.painter = null;\n  },\n\n  /**\n   * 设置默认的cursor style\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(cursorStyle);\n  },\n\n  /**\n   * 事件分发代理\n   *\n   * @private\n   * @param {Object} targetInfo {target, topTarget} 目标图形元素\n   * @param {string} eventName 事件名称\n   * @param {Object} event 事件对象\n   */\n  dispatchToElement: function (targetInfo, eventName, event) {\n    targetInfo = targetInfo || {};\n    var el = targetInfo.target;\n\n    if (el && el.silent) {\n      return;\n    }\n\n    var eventHandler = 'on' + eventName;\n    var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n    while (el) {\n      el[eventHandler] && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n      el.trigger(eventName, eventPacket);\n      el = el.parent;\n\n      if (eventPacket.cancelBubble) {\n        break;\n      }\n    }\n\n    if (!eventPacket.cancelBubble) {\n      // 冒泡到顶级 zrender 对象\n      this.trigger(eventName, eventPacket); // 分发事件到用户自定义层\n      // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n\n      this.painter && this.painter.eachOtherLayer(function (layer) {\n        if (typeof layer[eventHandler] == 'function') {\n          layer[eventHandler].call(layer, eventPacket);\n        }\n\n        if (layer.trigger) {\n          layer.trigger(eventName, eventPacket);\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {number} x\n   * @param {number} y\n   * @param {module:zrender/graphic/Displayable} exclude\n   * @return {model:zrender/Element}\n   * @method\n   */\n  findHover: function (x, y, exclude) {\n    var list = this.storage.getDisplayList();\n    var out = {\n      x: x,\n      y: y\n    };\n\n    for (var i = list.length - 1; i >= 0; i--) {\n      var hoverCheckResult;\n\n      if (list[i] !== exclude // getDisplayList may include ignored item in VML mode\n      && !list[i].ignore && (hoverCheckResult = isHover(list[i], x, y))) {\n        !out.topTarget && (out.topTarget = list[i]);\n\n        if (hoverCheckResult !== SILENT) {\n          out.target = list[i];\n          break;\n        }\n      }\n    }\n\n    return out;\n  }\n}; // Common handlers\n\nutil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  Handler.prototype[name] = function (event) {\n    // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n    var hovered = this.findHover(event.zrX, event.zrY);\n    var hoveredTarget = hovered.target;\n\n    if (name === 'mousedown') {\n      this._downEl = hoveredTarget;\n      this._downPoint = [event.zrX, event.zrY]; // In case click triggered before mouseup\n\n      this._upEl = hoveredTarget;\n    } else if (name === 'mosueup') {\n      this._upEl = hoveredTarget;\n    } else if (name === 'click') {\n      if (this._downEl !== this._upEl // Original click event is triggered on the whole canvas element,\n      // including the case that `mousedown` - `mousemove` - `mouseup`,\n      // which should be filtered, otherwise it will bring trouble to\n      // pan and zoom.\n      || !this._downPoint // Arbitrary value\n      || vec2.dist(this._downPoint, [event.zrX, event.zrY]) > 4) {\n        return;\n      }\n\n      this._downPoint = null;\n    }\n\n    this.dispatchToElement(hovered, name, event);\n  };\n});\n\nfunction isHover(displayable, x, y) {\n  if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n    var el = displayable;\n    var isSilent;\n\n    while (el) {\n      // If clipped by ancestor.\n      // FIXME: If clipPath has neither stroke nor fill,\n      // el.clipPath.contain(x, y) will always return false.\n      if (el.clipPath && !el.clipPath.contain(x, y)) {\n        return false;\n      }\n\n      if (el.silent) {\n        isSilent = true;\n      }\n\n      el = el.parent;\n    }\n\n    return isSilent ? SILENT : true;\n  }\n\n  return false;\n}\n\nutil.mixin(Handler, Eventful);\nutil.mixin(Handler, Draggable);\nvar _default = Handler;\nmodule.exports = _default;","// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\nfunction Draggable() {\n  this.on('mousedown', this._dragStart, this);\n  this.on('mousemove', this._drag, this);\n  this.on('mouseup', this._dragEnd, this);\n  this.on('globalout', this._dragEnd, this); // this._dropTarget = null;\n  // this._draggingTarget = null;\n  // this._x = 0;\n  // this._y = 0;\n}\n\nDraggable.prototype = {\n  constructor: Draggable,\n  _dragStart: function (e) {\n    var draggingTarget = e.target;\n\n    if (draggingTarget && draggingTarget.draggable) {\n      this._draggingTarget = draggingTarget;\n      draggingTarget.dragging = true;\n      this._x = e.offsetX;\n      this._y = e.offsetY;\n      this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n    }\n  },\n  _drag: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      var x = e.offsetX;\n      var y = e.offsetY;\n      var dx = x - this._x;\n      var dy = y - this._y;\n      this._x = x;\n      this._y = y;\n      draggingTarget.drift(dx, dy, e);\n      this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n      var dropTarget = this.findHover(x, y, draggingTarget).target;\n      var lastDropTarget = this._dropTarget;\n      this._dropTarget = dropTarget;\n\n      if (draggingTarget !== dropTarget) {\n        if (lastDropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n        }\n\n        if (dropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n        }\n      }\n    }\n  },\n  _dragEnd: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      draggingTarget.dragging = false;\n    }\n\n    this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n    if (this._dropTarget) {\n      this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n    }\n\n    this._draggingTarget = null;\n    this._dropTarget = null;\n  }\n};\n\nfunction param(target, e) {\n  return {\n    target: target,\n    topTarget: e && e.topTarget\n  };\n}\n\nvar _default = Draggable;\nmodule.exports = _default;","var util = require(\"./core/util\");\n\nvar env = require(\"./core/env\");\n\nvar Group = require(\"./container/Group\");\n\nvar timsort = require(\"./core/timsort\");\n\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n// Use timsort because in most case elements are partially sorted\n// https://jsfiddle.net/pissang/jr4x7mdm/8/\nfunction shapeCompareFunc(a, b) {\n  if (a.zlevel === b.zlevel) {\n    if (a.z === b.z) {\n      // if (a.z2 === b.z2) {\n      //     // FIXME Slow has renderidx compare\n      //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n      //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n      //     return a.__renderidx - b.__renderidx;\n      // }\n      return a.z2 - b.z2;\n    }\n\n    return a.z - b.z;\n  }\n\n  return a.zlevel - b.zlevel;\n}\n/**\n * 内容仓库 (M)\n * @alias module:zrender/Storage\n * @constructor\n */\n\n\nvar Storage = function () {\n  // jshint ignore:line\n  this._roots = [];\n  this._displayList = [];\n  this._displayListLen = 0;\n};\n\nStorage.prototype = {\n  constructor: Storage,\n\n  /**\n   * @param  {Function} cb\n   *\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._roots.length; i++) {\n      this._roots[i].traverse(cb, context);\n    }\n  },\n\n  /**\n   * 返回所有图形的绘制队列\n   * @param {boolean} [update=false] 是否在返回前更新该数组\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n   *\n   * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n   * @return {Array.<module:zrender/graphic/Displayable>}\n   */\n  getDisplayList: function (update, includeIgnore) {\n    includeIgnore = includeIgnore || false;\n\n    if (update) {\n      this.updateDisplayList(includeIgnore);\n    }\n\n    return this._displayList;\n  },\n\n  /**\n   * 更新图形的绘制队列。\n   * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n   * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n   */\n  updateDisplayList: function (includeIgnore) {\n    this._displayListLen = 0;\n    var roots = this._roots;\n    var displayList = this._displayList;\n\n    for (var i = 0, len = roots.length; i < len; i++) {\n      this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n    }\n\n    displayList.length = this._displayListLen; // for (var i = 0, len = displayList.length; i < len; i++) {\n    //     displayList[i].__renderidx = i;\n    // }\n    // displayList.sort(shapeCompareFunc);\n\n    env.canvasSupported && timsort(displayList, shapeCompareFunc);\n  },\n  _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n    if (el.ignore && !includeIgnore) {\n      return;\n    }\n\n    el.beforeUpdate();\n\n    if (el.__dirty) {\n      el.update();\n    }\n\n    el.afterUpdate();\n    var userSetClipPath = el.clipPath;\n\n    if (userSetClipPath) {\n      // FIXME 效率影响\n      if (clipPaths) {\n        clipPaths = clipPaths.slice();\n      } else {\n        clipPaths = [];\n      }\n\n      var currentClipPath = userSetClipPath;\n      var parentClipPath = el; // Recursively add clip path\n\n      while (currentClipPath) {\n        // clipPath 的变换是基于使用这个 clipPath 的元素\n        currentClipPath.parent = parentClipPath;\n        currentClipPath.updateTransform();\n        clipPaths.push(currentClipPath);\n        parentClipPath = currentClipPath;\n        currentClipPath = currentClipPath.clipPath;\n      }\n    }\n\n    if (el.isGroup) {\n      var children = el._children;\n\n      for (var i = 0; i < children.length; i++) {\n        var child = children[i]; // Force to mark as dirty if group is dirty\n        // FIXME __dirtyPath ?\n\n        if (el.__dirty) {\n          child.__dirty = true;\n        }\n\n        this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n      } // Mark group clean here\n\n\n      el.__dirty = false;\n    } else {\n      el.__clipPaths = clipPaths;\n      this._displayList[this._displayListLen++] = el;\n    }\n  },\n\n  /**\n   * 添加图形(Shape)或者组(Group)到根节点\n   * @param {module:zrender/Element} el\n   */\n  addRoot: function (el) {\n    if (el.__storage === this) {\n      return;\n    }\n\n    if (el instanceof Group) {\n      el.addChildrenToStorage(this);\n    }\n\n    this.addToStorage(el);\n\n    this._roots.push(el);\n  },\n\n  /**\n   * 删除指定的图形(Shape)或者组(Group)\n   * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n   */\n  delRoot: function (el) {\n    if (el == null) {\n      // 不指定el清空\n      for (var i = 0; i < this._roots.length; i++) {\n        var root = this._roots[i];\n\n        if (root instanceof Group) {\n          root.delChildrenFromStorage(this);\n        }\n      }\n\n      this._roots = [];\n      this._displayList = [];\n      this._displayListLen = 0;\n      return;\n    }\n\n    if (el instanceof Array) {\n      for (var i = 0, l = el.length; i < l; i++) {\n        this.delRoot(el[i]);\n      }\n\n      return;\n    }\n\n    var idx = util.indexOf(this._roots, el);\n\n    if (idx >= 0) {\n      this.delFromStorage(el);\n\n      this._roots.splice(idx, 1);\n\n      if (el instanceof Group) {\n        el.delChildrenFromStorage(this);\n      }\n    }\n  },\n  addToStorage: function (el) {\n    el.__storage = this;\n    el.dirty(false);\n    return this;\n  },\n  delFromStorage: function (el) {\n    if (el) {\n      el.__storage = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清空并且释放Storage\n   */\n  dispose: function () {\n    this._renderList = this._roots = null;\n  },\n  displayableSortFunc: shapeCompareFunc\n};\nvar _default = Storage;\nmodule.exports = _default;","var Animator = require(\"../animation/Animator\");\n\nvar log = require(\"../core/log\");\n\nvar _util = require(\"../core/util\");\n\nvar isString = _util.isString;\nvar isFunction = _util.isFunction;\nvar isObject = _util.isObject;\nvar isArrayLike = _util.isArrayLike;\nvar indexOf = _util.indexOf;\n\n/**\n * @alias modue:zrender/mixin/Animatable\n * @constructor\n */\nvar Animatable = function () {\n  /**\n   * @type {Array.<module:zrender/animation/Animator>}\n   * @readOnly\n   */\n  this.animators = [];\n};\n\nAnimatable.prototype = {\n  constructor: Animatable,\n\n  /**\n   * 动画\n   *\n   * @param {string} path The path to fetch value from object, like 'a.b.c'.\n   * @param {boolean} [loop] Whether to loop animation.\n   * @return {module:zrender/animation/Animator}\n   * @example:\n   *     el.animate('style', false)\n   *         .when(1000, {x: 10} )\n   *         .done(function(){ // Animation done })\n   *         .start()\n   */\n  animate: function (path, loop) {\n    var target;\n    var animatingShape = false;\n    var el = this;\n    var zr = this.__zr;\n\n    if (path) {\n      var pathSplitted = path.split('.');\n      var prop = el; // If animating shape\n\n      animatingShape = pathSplitted[0] === 'shape';\n\n      for (var i = 0, l = pathSplitted.length; i < l; i++) {\n        if (!prop) {\n          continue;\n        }\n\n        prop = prop[pathSplitted[i]];\n      }\n\n      if (prop) {\n        target = prop;\n      }\n    } else {\n      target = el;\n    }\n\n    if (!target) {\n      log('Property \"' + path + '\" is not existed in element ' + el.id);\n      return;\n    }\n\n    var animators = el.animators;\n    var animator = new Animator(target, loop);\n    animator.during(function (target) {\n      el.dirty(animatingShape);\n    }).done(function () {\n      // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n      animators.splice(indexOf(animators, animator), 1);\n    });\n    animators.push(animator); // If animate after added to the zrender\n\n    if (zr) {\n      zr.animation.addAnimator(animator);\n    }\n\n    return animator;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stopAnimation: function (forwardToLast) {\n    var animators = this.animators;\n    var len = animators.length;\n\n    for (var i = 0; i < len; i++) {\n      animators[i].stop(forwardToLast);\n    }\n\n    animators.length = 0;\n    return this;\n  },\n\n  /**\n   * Caution: this method will stop previous animation.\n   * So do not use this method to one element twice before\n   * animation starts, unless you know what you are doing.\n   * @param {Object} target\n   * @param {number} [time=500] Time in ms\n   * @param {string} [easing='linear']\n   * @param {number} [delay=0]\n   * @param {Function} [callback]\n   * @param {Function} [forceAnimate] Prevent stop animation and callback\n   *        immediently when target values are the same as current values.\n   *\n   * @example\n   *  // Animate position\n   *  el.animateTo({\n   *      position: [10, 10]\n   *  }, function () { // done })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n   *  el.animateTo({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100, 'cubicOut', function () { // done })\n   */\n  // TODO Return animation key\n  animateTo: function (target, time, delay, easing, callback, forceAnimate) {\n    // animateTo(target, time, easing, callback);\n    if (isString(delay)) {\n      callback = easing;\n      easing = delay;\n      delay = 0;\n    } // animateTo(target, time, delay, callback);\n    else if (isFunction(easing)) {\n        callback = easing;\n        easing = 'linear';\n        delay = 0;\n      } // animateTo(target, time, callback);\n      else if (isFunction(delay)) {\n          callback = delay;\n          delay = 0;\n        } // animateTo(target, callback)\n        else if (isFunction(time)) {\n            callback = time;\n            time = 500;\n          } // animateTo(target)\n          else if (!time) {\n              time = 500;\n            } // Stop all previous animations\n\n\n    this.stopAnimation();\n\n    this._animateToShallow('', this, target, time, delay); // Animators may be removed immediately after start\n    // if there is nothing to animate\n\n\n    var animators = this.animators.slice();\n    var count = animators.length;\n\n    function done() {\n      count--;\n\n      if (!count) {\n        callback && callback();\n      }\n    } // No animators. This should be checked before animators[i].start(),\n    // because 'done' may be executed immediately if no need to animate.\n\n\n    if (!count) {\n      callback && callback();\n    } // Start after all animators created\n    // Incase any animator is done immediately when all animation properties are not changed\n\n\n    for (var i = 0; i < animators.length; i++) {\n      animators[i].done(done).start(easing, forceAnimate);\n    }\n  },\n\n  /**\n   * @private\n   * @param {string} path=''\n   * @param {Object} source=this\n   * @param {Object} target\n   * @param {number} [time=500]\n   * @param {number} [delay=0]\n   *\n   * @example\n   *  // Animate position\n   *  el._animateToShallow({\n   *      position: [10, 10]\n   *  })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms\n   *  el._animateToShallow({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100)\n   */\n  _animateToShallow: function (path, source, target, time, delay) {\n    var objShallow = {};\n    var propertyCount = 0;\n\n    for (var name in target) {\n      if (!target.hasOwnProperty(name)) {\n        continue;\n      }\n\n      if (source[name] != null) {\n        if (isObject(target[name]) && !isArrayLike(target[name])) {\n          this._animateToShallow(path ? path + '.' + name : name, source[name], target[name], time, delay);\n        } else {\n          objShallow[name] = target[name];\n          propertyCount++;\n        }\n      } else if (target[name] != null) {\n        // Attr directly if not has property\n        // FIXME, if some property not needed for element ?\n        if (!path) {\n          this.attr(name, target[name]);\n        } else {\n          // Shape or style\n          var props = {};\n          props[path] = {};\n          props[path][name] = target[name];\n          this.attr(props);\n        }\n      }\n    }\n\n    if (propertyCount > 0) {\n      this.animate(path, false).when(time == null ? 500 : time, objShallow).delay(delay || 0);\n    }\n\n    return this;\n  }\n};\nvar _default = Animatable;\nmodule.exports = _default;","var easingFuncs = require(\"./easing\");\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\nfunction Clip(options) {\n  this._target = options.target; // 生命周期\n\n  this._life = options.life || 1000; // 延时\n\n  this._delay = options.delay || 0; // 开始时间\n  // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n\n  this._initialized = false; // 是否循环\n\n  this.loop = options.loop == null ? false : options.loop;\n  this.gap = options.gap || 0;\n  this.easing = options.easing || 'Linear';\n  this.onframe = options.onframe;\n  this.ondestroy = options.ondestroy;\n  this.onrestart = options.onrestart;\n  this._pausedTime = 0;\n  this._paused = false;\n}\n\nClip.prototype = {\n  constructor: Clip,\n  step: function (globalTime, deltaTime) {\n    // Set startTime on first step, or _startTime may has milleseconds different between clips\n    // PENDING\n    if (!this._initialized) {\n      this._startTime = globalTime + this._delay;\n      this._initialized = true;\n    }\n\n    if (this._paused) {\n      this._pausedTime += deltaTime;\n      return;\n    }\n\n    var percent = (globalTime - this._startTime - this._pausedTime) / this._life; // 还没开始\n\n    if (percent < 0) {\n      return;\n    }\n\n    percent = Math.min(percent, 1);\n    var easing = this.easing;\n    var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n    var schedule = typeof easingFunc === 'function' ? easingFunc(percent) : percent;\n    this.fire('frame', schedule); // 结束\n\n    if (percent == 1) {\n      if (this.loop) {\n        this.restart(globalTime); // 重新开始周期\n        // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n\n        return 'restart';\n      } // 动画完成将这个控制器标识为待删除\n      // 在Animation.update中进行批量删除\n\n\n      this._needsRemove = true;\n      return 'destroy';\n    }\n\n    return null;\n  },\n  restart: function (globalTime) {\n    var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n    this._startTime = globalTime - remainder + this.gap;\n    this._pausedTime = 0;\n    this._needsRemove = false;\n  },\n  fire: function (eventType, arg) {\n    eventType = 'on' + eventType;\n\n    if (this[eventType]) {\n      this[eventType](this._target, arg);\n    }\n  },\n  pause: function () {\n    this._paused = true;\n  },\n  resume: function () {\n    this._paused = false;\n  }\n};\nvar _default = Clip;\nmodule.exports = _default;","/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\nvar easing = {\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  linear: function (k) {\n    return k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticIn: function (k) {\n    return k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticOut: function (k) {\n    return k * (2 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k;\n    }\n\n    return -0.5 * (--k * (k - 2) - 1);\n  },\n  // 三次方的缓动（t^3）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicIn: function (k) {\n    return k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicOut: function (k) {\n    return --k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k + 2);\n  },\n  // 四次方的缓动（t^4）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticIn: function (k) {\n    return k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticOut: function (k) {\n    return 1 - --k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k;\n    }\n\n    return -0.5 * ((k -= 2) * k * k * k - 2);\n  },\n  // 五次方的缓动（t^5）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticIn: function (k) {\n    return k * k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticOut: function (k) {\n    return --k * k * k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k * k * k + 2);\n  },\n  // 正弦曲线的缓动（sin(t)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalIn: function (k) {\n    return 1 - Math.cos(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalOut: function (k) {\n    return Math.sin(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalInOut: function (k) {\n    return 0.5 * (1 - Math.cos(Math.PI * k));\n  },\n  // 指数曲线的缓动（2^t）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialIn: function (k) {\n    return k === 0 ? 0 : Math.pow(1024, k - 1);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialOut: function (k) {\n    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialInOut: function (k) {\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if ((k *= 2) < 1) {\n      return 0.5 * Math.pow(1024, k - 1);\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n  },\n  // 圆形曲线的缓动（sqrt(1-t^2)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularIn: function (k) {\n    return 1 - Math.sqrt(1 - k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularOut: function (k) {\n    return Math.sqrt(1 - --k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return -0.5 * (Math.sqrt(1 - k * k) - 1);\n    }\n\n    return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n  },\n  // 创建类似于弹簧在停止前来回振荡的动画\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticIn: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return -(a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return a * Math.pow(2, -10 * k) * Math.sin((k - s) * (2 * Math.PI) / p) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticInOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    if ((k *= 2) < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n    }\n\n    return a * Math.pow(2, -10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n  },\n  // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backIn: function (k) {\n    var s = 1.70158;\n    return k * k * ((s + 1) * k - s);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backOut: function (k) {\n    var s = 1.70158;\n    return --k * k * ((s + 1) * k + s) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backInOut: function (k) {\n    var s = 1.70158 * 1.525;\n\n    if ((k *= 2) < 1) {\n      return 0.5 * (k * k * ((s + 1) * k - s));\n    }\n\n    return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n  },\n  // 创建弹跳效果\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceIn: function (k) {\n    return 1 - easing.bounceOut(1 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceOut: function (k) {\n    if (k < 1 / 2.75) {\n      return 7.5625 * k * k;\n    } else if (k < 2 / 2.75) {\n      return 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;\n    } else if (k < 2.5 / 2.75) {\n      return 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;\n    } else {\n      return 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;\n    }\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceInOut: function (k) {\n    if (k < 0.5) {\n      return easing.bounceIn(k * 2) * 0.5;\n    }\n\n    return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n  }\n};\nvar _default = easing;\nmodule.exports = _default;","var _config = require(\"./config\");\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar util = require(\"./core/util\");\n\nvar log = require(\"./core/log\");\n\nvar BoundingRect = require(\"./core/BoundingRect\");\n\nvar timsort = require(\"./core/timsort\");\n\nvar Layer = require(\"./Layer\");\n\nvar requestAnimationFrame = require(\"./animation/requestAnimationFrame\");\n\nvar Image = require(\"./graphic/Image\");\n\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n// PENDIGN\n// Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n//\n// Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\nvar MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction isLayerValid(layer) {\n  if (!layer) {\n    return false;\n  }\n\n  if (layer.__builtin__) {\n    return true;\n  }\n\n  if (typeof layer.resize !== 'function' || typeof layer.refresh !== 'function') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction preProcessLayer(layer) {\n  layer.__unusedCount++;\n}\n\nfunction postProcessLayer(layer) {\n  if (layer.__unusedCount == 1) {\n    layer.clear();\n  }\n}\n\nvar tmpRect = new BoundingRect(0, 0, 0, 0);\nvar viewRect = new BoundingRect(0, 0, 0, 0);\n\nfunction isDisplayableCulled(el, width, height) {\n  tmpRect.copy(el.getBoundingRect());\n\n  if (el.transform) {\n    tmpRect.applyTransform(el.transform);\n  }\n\n  viewRect.width = width;\n  viewRect.height = height;\n  return !tmpRect.intersect(viewRect);\n}\n\nfunction isClipPathChanged(clipPaths, prevClipPaths) {\n  if (clipPaths == prevClipPaths) {\n    // Can both be null or undefined\n    return false;\n  }\n\n  if (!clipPaths || !prevClipPaths || clipPaths.length !== prevClipPaths.length) {\n    return true;\n  }\n\n  for (var i = 0; i < clipPaths.length; i++) {\n    if (clipPaths[i] !== prevClipPaths[i]) {\n      return true;\n    }\n  }\n}\n\nfunction doClip(clipPaths, ctx) {\n  for (var i = 0; i < clipPaths.length; i++) {\n    var clipPath = clipPaths[i];\n    clipPath.setTransform(ctx);\n    ctx.beginPath();\n    clipPath.buildPath(ctx, clipPath.shape);\n    ctx.clip(); // Transform back\n\n    clipPath.restoreTransform(ctx);\n  }\n}\n\nfunction createRoot(width, height) {\n  var domRoot = document.createElement('div'); // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n  domRoot.style.cssText = ['position:relative', 'overflow:hidden', 'width:' + width + 'px', 'height:' + height + 'px', 'padding:0', 'margin:0', 'border-width:0'].join(';') + ';';\n  return domRoot;\n}\n/**\n * @alias module:zrender/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar Painter = function (root, storage, opts) {\n  this.type = 'canvas'; // In node environment using node-canvas\n\n  var singleCanvas = !root.nodeName // In node ?\n  || root.nodeName.toUpperCase() === 'CANVAS';\n  this._opts = opts = util.extend({}, opts || {});\n  /**\n   * @type {number}\n   */\n\n  this.dpr = opts.devicePixelRatio || devicePixelRatio;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._singleCanvas = singleCanvas;\n  /**\n   * 绘图容器\n   * @type {HTMLElement}\n   */\n\n  this.root = root;\n  var rootStyle = root.style;\n\n  if (rootStyle) {\n    rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n    rootStyle['-webkit-user-select'] = rootStyle['user-select'] = rootStyle['-webkit-touch-callout'] = 'none';\n    root.innerHTML = '';\n  }\n  /**\n   * @type {module:zrender/Storage}\n   */\n\n\n  this.storage = storage;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  var zlevelList = this._zlevelList = [];\n  /**\n   * @type {Object.<string, module:zrender/Layer>}\n   * @private\n   */\n\n  var layers = this._layers = {};\n  /**\n   * @type {Object.<string, Object>}\n   * @type {private}\n   */\n\n  this._layerConfig = {};\n\n  if (!singleCanvas) {\n    this._width = this._getSize(0);\n    this._height = this._getSize(1);\n    var domRoot = this._domRoot = createRoot(this._width, this._height);\n    root.appendChild(domRoot);\n  } else {\n    if (opts.width != null) {\n      root.width = opts.width;\n    }\n\n    if (opts.height != null) {\n      root.height = opts.height;\n    } // Use canvas width and height directly\n\n\n    var width = root.width;\n    var height = root.height;\n    this._width = width;\n    this._height = height; // Create layer if only one given canvas\n    // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n\n    var mainLayer = new Layer(root, this, 1);\n    mainLayer.initContext(); // FIXME Use canvas width and height\n    // mainLayer.resize(width, height);\n\n    layers[0] = mainLayer;\n    zlevelList.push(0);\n    this._domRoot = root;\n  } // Layers for progressive rendering\n\n\n  this._progressiveLayers = [];\n  /**\n   * @type {module:zrender/Layer}\n   * @private\n   */\n\n  this._hoverlayer;\n  this._hoverElements = [];\n};\n\nPainter.prototype = {\n  constructor: Painter,\n  getType: function () {\n    return 'canvas';\n  },\n\n  /**\n   * If painter use a single canvas\n   * @return {boolean}\n   */\n  isSingleCanvas: function () {\n    return this._singleCanvas;\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._domRoot;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   * @param {boolean} [paintAll=false] 强制绘制所有displayable\n   */\n  refresh: function (paintAll) {\n    var list = this.storage.getDisplayList(true);\n    var zlevelList = this._zlevelList;\n\n    this._paintList(list, paintAll); // Paint custum layers\n\n\n    for (var i = 0; i < zlevelList.length; i++) {\n      var z = zlevelList[i];\n      var layer = this._layers[z];\n\n      if (!layer.__builtin__ && layer.refresh) {\n        layer.refresh();\n      }\n    }\n\n    this.refreshHover();\n\n    if (this._progressiveLayers.length) {\n      this._startProgessive();\n    }\n\n    return this;\n  },\n  addHover: function (el, hoverStyle) {\n    if (el.__hoverMir) {\n      return;\n    }\n\n    var elMirror = new el.constructor({\n      style: el.style,\n      shape: el.shape\n    });\n    elMirror.__from = el;\n    el.__hoverMir = elMirror;\n    elMirror.setStyle(hoverStyle);\n\n    this._hoverElements.push(elMirror);\n  },\n  removeHover: function (el) {\n    var elMirror = el.__hoverMir;\n    var hoverElements = this._hoverElements;\n    var idx = util.indexOf(hoverElements, elMirror);\n\n    if (idx >= 0) {\n      hoverElements.splice(idx, 1);\n    }\n\n    el.__hoverMir = null;\n  },\n  clearHover: function (el) {\n    var hoverElements = this._hoverElements;\n\n    for (var i = 0; i < hoverElements.length; i++) {\n      var from = hoverElements[i].__from;\n\n      if (from) {\n        from.__hoverMir = null;\n      }\n    }\n\n    hoverElements.length = 0;\n  },\n  refreshHover: function () {\n    var hoverElements = this._hoverElements;\n    var len = hoverElements.length;\n    var hoverLayer = this._hoverlayer;\n    hoverLayer && hoverLayer.clear();\n\n    if (!len) {\n      return;\n    }\n\n    timsort(hoverElements, this.storage.displayableSortFunc); // Use a extream large zlevel\n    // FIXME?\n\n    if (!hoverLayer) {\n      hoverLayer = this._hoverlayer = this.getLayer(1e5);\n    }\n\n    var scope = {};\n    hoverLayer.ctx.save();\n\n    for (var i = 0; i < len;) {\n      var el = hoverElements[i];\n      var originalEl = el.__from; // Original el is removed\n      // PENDING\n\n      if (!(originalEl && originalEl.__zr)) {\n        hoverElements.splice(i, 1);\n        originalEl.__hoverMir = null;\n        len--;\n        continue;\n      }\n\n      i++; // Use transform\n      // FIXME style and shape ?\n\n      if (!originalEl.invisible) {\n        el.transform = originalEl.transform;\n        el.invTransform = originalEl.invTransform;\n        el.__clipPaths = originalEl.__clipPaths; // el.\n\n        this._doPaintEl(el, hoverLayer, true, scope);\n      }\n    }\n\n    hoverLayer.ctx.restore();\n  },\n  _startProgessive: function () {\n    var self = this;\n\n    if (!self._furtherProgressive) {\n      return;\n    } // Use a token to stop progress steps triggered by\n    // previous zr.refresh calling.\n\n\n    var token = self._progressiveToken = +new Date();\n    self._progress++;\n    requestAnimationFrame(step);\n\n    function step() {\n      // In case refreshed or disposed\n      if (token === self._progressiveToken && self.storage) {\n        self._doPaintList(self.storage.getDisplayList());\n\n        if (self._furtherProgressive) {\n          self._progress++;\n          requestAnimationFrame(step);\n        } else {\n          self._progressiveToken = -1;\n        }\n      }\n    }\n  },\n  _clearProgressive: function () {\n    this._progressiveToken = -1;\n    this._progress = 0;\n    util.each(this._progressiveLayers, function (layer) {\n      layer.__dirty && layer.clear();\n    });\n  },\n  _paintList: function (list, paintAll) {\n    if (paintAll == null) {\n      paintAll = false;\n    }\n\n    this._updateLayerStatus(list);\n\n    this._clearProgressive();\n\n    this.eachBuiltinLayer(preProcessLayer);\n\n    this._doPaintList(list, paintAll);\n\n    this.eachBuiltinLayer(postProcessLayer);\n  },\n  _doPaintList: function (list, paintAll) {\n    var currentLayer;\n    var currentZLevel;\n    var ctx; // var invTransform = [];\n\n    var scope;\n    var progressiveLayerIdx = 0;\n    var currentProgressiveLayer;\n    var width = this._width;\n    var height = this._height;\n    var layerProgress;\n    var frame = this._progress;\n\n    function flushProgressiveLayer(layer) {\n      var dpr = ctx.dpr || 1;\n      ctx.save();\n      ctx.globalAlpha = 1;\n      ctx.shadowBlur = 0; // Avoid layer don't clear in next progressive frame\n\n      currentLayer.__dirty = true;\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n      ctx.restore();\n    }\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      var el = list[i];\n      var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n      var elFrame = el.__frame; // Flush at current context\n      // PENDING\n\n      if (elFrame < 0 && currentProgressiveLayer) {\n        flushProgressiveLayer(currentProgressiveLayer);\n        currentProgressiveLayer = null;\n      } // Change draw layer\n\n\n      if (currentZLevel !== elZLevel) {\n        if (ctx) {\n          ctx.restore();\n        } // Reset scope\n\n\n        scope = {}; // Only 0 zlevel if only has one canvas\n\n        currentZLevel = elZLevel;\n        currentLayer = this.getLayer(currentZLevel);\n\n        if (!currentLayer.__builtin__) {\n          log('ZLevel ' + currentZLevel + ' has been used by unkown layer ' + currentLayer.id);\n        }\n\n        ctx = currentLayer.ctx;\n        ctx.save(); // Reset the count\n\n        currentLayer.__unusedCount = 0;\n\n        if (currentLayer.__dirty || paintAll) {\n          currentLayer.clear();\n        }\n      }\n\n      if (!(currentLayer.__dirty || paintAll)) {\n        continue;\n      }\n\n      if (elFrame >= 0) {\n        // Progressive layer changed\n        if (!currentProgressiveLayer) {\n          currentProgressiveLayer = this._progressiveLayers[Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)];\n          currentProgressiveLayer.ctx.save();\n          currentProgressiveLayer.renderScope = {};\n\n          if (currentProgressiveLayer && currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress) {\n            // flushProgressiveLayer(currentProgressiveLayer);\n            // Quick jump all progressive elements\n            // All progressive element are not dirty, jump over and flush directly\n            i = currentProgressiveLayer.__nextIdxNotProg - 1; // currentProgressiveLayer = null;\n\n            continue;\n          }\n\n          layerProgress = currentProgressiveLayer.__progress;\n\n          if (!currentProgressiveLayer.__dirty) {\n            // Keep rendering\n            frame = layerProgress;\n          }\n\n          currentProgressiveLayer.__progress = frame + 1;\n        }\n\n        if (elFrame === frame) {\n          this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n        }\n      } else {\n        this._doPaintEl(el, currentLayer, paintAll, scope);\n      }\n\n      el.__dirty = false;\n    }\n\n    if (currentProgressiveLayer) {\n      flushProgressiveLayer(currentProgressiveLayer);\n    } // Restore the lastLayer ctx\n\n\n    ctx && ctx.restore(); // If still has clipping state\n    // if (scope.prevElClipPaths) {\n    //     ctx.restore();\n    // }\n\n    this._furtherProgressive = false;\n    util.each(this._progressiveLayers, function (layer) {\n      if (layer.__maxProgress >= layer.__progress) {\n        this._furtherProgressive = true;\n      }\n    }, this);\n  },\n  _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n    var ctx = currentLayer.ctx;\n    var m = el.transform;\n\n    if ((currentLayer.__dirty || forcePaint) && // Ignore invisible element\n    !el.invisible // Ignore transparent element\n    && el.style.opacity !== 0 // Ignore scale 0 element, in some environment like node-canvas\n    // Draw a scale 0 element can cause all following draw wrong\n    // And setTransform with scale 0 will cause set back transform failed.\n    && !(m && !m[0] && !m[3]) // Ignore culled element\n    && !(el.culling && isDisplayableCulled(el, this._width, this._height))) {\n      var clipPaths = el.__clipPaths; // Optimize when clipping on group with several elements\n\n      if (scope.prevClipLayer !== currentLayer || isClipPathChanged(clipPaths, scope.prevElClipPaths)) {\n        // If has previous clipping state, restore from it\n        if (scope.prevElClipPaths) {\n          scope.prevClipLayer.ctx.restore();\n          scope.prevClipLayer = scope.prevElClipPaths = null; // Reset prevEl since context has been restored\n\n          scope.prevEl = null;\n        } // New clipping state\n\n\n        if (clipPaths) {\n          ctx.save();\n          doClip(clipPaths, ctx);\n          scope.prevClipLayer = currentLayer;\n          scope.prevElClipPaths = clipPaths;\n        }\n      }\n\n      el.beforeBrush && el.beforeBrush(ctx);\n      el.brush(ctx, scope.prevEl || null);\n      scope.prevEl = el;\n      el.afterBrush && el.afterBrush(ctx);\n    }\n  },\n\n  /**\n   * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n   * @param {number} zlevel\n   * @return {module:zrender/Layer}\n   */\n  getLayer: function (zlevel) {\n    if (this._singleCanvas) {\n      return this._layers[0];\n    }\n\n    var layer = this._layers[zlevel];\n\n    if (!layer) {\n      // Create a new layer\n      layer = new Layer('zr_' + zlevel, this, this.dpr);\n      layer.__builtin__ = true;\n\n      if (this._layerConfig[zlevel]) {\n        util.merge(layer, this._layerConfig[zlevel], true);\n      }\n\n      this.insertLayer(zlevel, layer); // Context is created after dom inserted to document\n      // Or excanvas will get 0px clientWidth and clientHeight\n\n      layer.initContext();\n    }\n\n    return layer;\n  },\n  insertLayer: function (zlevel, layer) {\n    var layersMap = this._layers;\n    var zlevelList = this._zlevelList;\n    var len = zlevelList.length;\n    var prevLayer = null;\n    var i = -1;\n    var domRoot = this._domRoot;\n\n    if (layersMap[zlevel]) {\n      log('ZLevel ' + zlevel + ' has been used already');\n      return;\n    } // Check if is a valid layer\n\n\n    if (!isLayerValid(layer)) {\n      log('Layer of zlevel ' + zlevel + ' is not valid');\n      return;\n    }\n\n    if (len > 0 && zlevel > zlevelList[0]) {\n      for (i = 0; i < len - 1; i++) {\n        if (zlevelList[i] < zlevel && zlevelList[i + 1] > zlevel) {\n          break;\n        }\n      }\n\n      prevLayer = layersMap[zlevelList[i]];\n    }\n\n    zlevelList.splice(i + 1, 0, zlevel);\n    layersMap[zlevel] = layer; // Vitual layer will not directly show on the screen.\n    // (It can be a WebGL layer and assigned to a ZImage element)\n    // But it still under management of zrender.\n\n    if (!layer.virtual) {\n      if (prevLayer) {\n        var prevDom = prevLayer.dom;\n\n        if (prevDom.nextSibling) {\n          domRoot.insertBefore(layer.dom, prevDom.nextSibling);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      } else {\n        if (domRoot.firstChild) {\n          domRoot.insertBefore(layer.dom, domRoot.firstChild);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      }\n    }\n  },\n  // Iterate each layer\n  eachLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      cb.call(context, this._layers[z], z);\n    }\n  },\n  // Iterate each buildin layer\n  eachBuiltinLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n  // Iterate each other layer except buildin layer\n  eachOtherLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (!layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n\n  /**\n   * 获取所有已创建的层\n   * @param {Array.<module:zrender/Layer>} [prevLayer]\n   */\n  getLayers: function () {\n    return this._layers;\n  },\n  _updateLayerStatus: function (list) {\n    var layers = this._layers;\n    var progressiveLayers = this._progressiveLayers;\n    var elCountsLastFrame = {};\n    var progressiveElCountsLastFrame = {};\n    this.eachBuiltinLayer(function (layer, z) {\n      elCountsLastFrame[z] = layer.elCount;\n      layer.elCount = 0;\n      layer.__dirty = false;\n    });\n    util.each(progressiveLayers, function (layer, idx) {\n      progressiveElCountsLastFrame[idx] = layer.elCount;\n      layer.elCount = 0;\n      layer.__dirty = false;\n    });\n    var progressiveLayerCount = 0;\n    var currentProgressiveLayer;\n    var lastProgressiveKey;\n    var frameCount = 0;\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      var el = list[i];\n      var zlevel = this._singleCanvas ? 0 : el.zlevel;\n      var layer = layers[zlevel];\n      var elProgress = el.progressive;\n\n      if (layer) {\n        layer.elCount++;\n        layer.__dirty = layer.__dirty || el.__dirty;\n      } /////// Update progressive\n\n\n      if (elProgress >= 0) {\n        // Fix wrong progressive sequence problem.\n        if (lastProgressiveKey !== elProgress) {\n          lastProgressiveKey = elProgress;\n          frameCount++;\n        }\n\n        var elFrame = el.__frame = frameCount - 1;\n\n        if (!currentProgressiveLayer) {\n          var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n          currentProgressiveLayer = progressiveLayers[idx];\n\n          if (!currentProgressiveLayer) {\n            currentProgressiveLayer = progressiveLayers[idx] = new Layer('progressive', this, this.dpr);\n            currentProgressiveLayer.initContext();\n          }\n\n          currentProgressiveLayer.__maxProgress = 0;\n        }\n\n        currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n        currentProgressiveLayer.elCount++;\n        currentProgressiveLayer.__maxProgress = Math.max(currentProgressiveLayer.__maxProgress, elFrame);\n\n        if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n          // Should keep rendering this  layer because progressive rendering is not finished yet\n          layer.__dirty = true;\n        }\n      } else {\n        el.__frame = -1;\n\n        if (currentProgressiveLayer) {\n          currentProgressiveLayer.__nextIdxNotProg = i;\n          progressiveLayerCount++;\n          currentProgressiveLayer = null;\n        }\n      }\n    }\n\n    if (currentProgressiveLayer) {\n      progressiveLayerCount++;\n      currentProgressiveLayer.__nextIdxNotProg = i;\n    } // 层中的元素数量有发生变化\n\n\n    this.eachBuiltinLayer(function (layer, z) {\n      if (elCountsLastFrame[z] !== layer.elCount) {\n        layer.__dirty = true;\n      }\n    });\n    progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n    util.each(progressiveLayers, function (layer, idx) {\n      if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n        el.__dirty = true;\n      }\n\n      if (layer.__dirty) {\n        layer.__progress = 0;\n      }\n    });\n  },\n\n  /**\n   * 清除hover层外所有内容\n   */\n  clear: function () {\n    this.eachBuiltinLayer(this._clearLayer);\n    return this;\n  },\n  _clearLayer: function (layer) {\n    layer.clear();\n  },\n\n  /**\n   * 修改指定zlevel的绘制参数\n   *\n   * @param {string} zlevel\n   * @param {Object} config 配置对象\n   * @param {string} [config.clearColor=0] 每次清空画布的颜色\n   * @param {string} [config.motionBlur=false] 是否开启动态模糊\n   * @param {number} [config.lastFrameAlpha=0.7]\n   *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   */\n  configLayer: function (zlevel, config) {\n    if (config) {\n      var layerConfig = this._layerConfig;\n\n      if (!layerConfig[zlevel]) {\n        layerConfig[zlevel] = config;\n      } else {\n        util.merge(layerConfig[zlevel], config, true);\n      }\n\n      var layer = this._layers[zlevel];\n\n      if (layer) {\n        util.merge(layer, layerConfig[zlevel], true);\n      }\n    }\n  },\n\n  /**\n   * 删除指定层\n   * @param {number} zlevel 层所在的zlevel\n   */\n  delLayer: function (zlevel) {\n    var layers = this._layers;\n    var zlevelList = this._zlevelList;\n    var layer = layers[zlevel];\n\n    if (!layer) {\n      return;\n    }\n\n    layer.dom.parentNode.removeChild(layer.dom);\n    delete layers[zlevel];\n    zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n  },\n\n  /**\n   * 区域大小变化后重绘\n   */\n  resize: function (width, height) {\n    var domRoot = this._domRoot; // FIXME Why ?\n\n    domRoot.style.display = 'none'; // Save input w/h\n\n    var opts = this._opts;\n    width != null && (opts.width = width);\n    height != null && (opts.height = height);\n    width = this._getSize(0);\n    height = this._getSize(1);\n    domRoot.style.display = ''; // 优化没有实际改变的resize\n\n    if (this._width != width || height != this._height) {\n      domRoot.style.width = width + 'px';\n      domRoot.style.height = height + 'px';\n\n      for (var id in this._layers) {\n        if (this._layers.hasOwnProperty(id)) {\n          this._layers[id].resize(width, height);\n        }\n      }\n\n      util.each(this._progressiveLayers, function (layer) {\n        layer.resize(width, height);\n      });\n      this.refresh(true);\n    }\n\n    this._width = width;\n    this._height = height;\n    return this;\n  },\n\n  /**\n   * 清除单独的一个层\n   * @param {number} zlevel\n   */\n  clearLayer: function (zlevel) {\n    var layer = this._layers[zlevel];\n\n    if (layer) {\n      layer.clear();\n    }\n  },\n\n  /**\n   * 释放\n   */\n  dispose: function () {\n    this.root.innerHTML = '';\n    this.root = this.storage = this._domRoot = this._layers = null;\n  },\n\n  /**\n   * Get canvas which has all thing rendered\n   * @param {Object} opts\n   * @param {string} [opts.backgroundColor]\n   * @param {number} [opts.pixelRatio]\n   */\n  getRenderedCanvas: function (opts) {\n    opts = opts || {};\n\n    if (this._singleCanvas) {\n      return this._layers[0].dom;\n    }\n\n    var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n    imageLayer.initContext();\n    imageLayer.clearColor = opts.backgroundColor;\n    imageLayer.clear();\n    var displayList = this.storage.getDisplayList(true);\n    var scope = {};\n    var zlevel;\n    var self = this;\n\n    function findAndDrawOtherLayer(smaller, larger) {\n      var zlevelList = self._zlevelList;\n\n      if (smaller == null) {\n        smaller = -Infinity;\n      }\n\n      var intermediateLayer;\n\n      for (var i = 0; i < zlevelList.length; i++) {\n        var z = zlevelList[i];\n        var layer = self._layers[z];\n\n        if (!layer.__builtin__ && z > smaller && z < larger) {\n          intermediateLayer = layer;\n          break;\n        }\n      }\n\n      if (intermediateLayer && intermediateLayer.renderToCanvas) {\n        imageLayer.ctx.save();\n        intermediateLayer.renderToCanvas(imageLayer.ctx);\n        imageLayer.ctx.restore();\n      }\n    }\n\n    for (var i = 0; i < displayList.length; i++) {\n      var el = displayList[i];\n\n      if (el.zlevel !== zlevel) {\n        findAndDrawOtherLayer(zlevel, el.zlevel);\n        zlevel = el.zlevel;\n      }\n\n      this._doPaintEl(el, imageLayer, true, scope);\n    }\n\n    findAndDrawOtherLayer(zlevel, Infinity);\n    return imageLayer.dom;\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  pathToImage: function (path, dpr) {\n    dpr = dpr || this.dpr;\n    var canvas = document.createElement('canvas');\n    var ctx = canvas.getContext('2d');\n    var rect = path.getBoundingRect();\n    var style = path.style;\n    var shadowBlurSize = style.shadowBlur;\n    var shadowOffsetX = style.shadowOffsetX;\n    var shadowOffsetY = style.shadowOffsetY;\n    var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n    var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n    var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n    var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n    var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n    var width = rect.width + leftMargin + rightMargin;\n    var height = rect.height + topMargin + bottomMargin;\n    canvas.width = width * dpr;\n    canvas.height = height * dpr;\n    ctx.scale(dpr, dpr);\n    ctx.clearRect(0, 0, width, height);\n    ctx.dpr = dpr;\n    var pathTransform = {\n      position: path.position,\n      rotation: path.rotation,\n      scale: path.scale\n    };\n    path.position = [leftMargin - rect.x, topMargin - rect.y];\n    path.rotation = 0;\n    path.scale = [1, 1];\n    path.updateTransform();\n\n    if (path) {\n      path.brush(ctx);\n    }\n\n    var ImageShape = Image;\n    var imgShape = new ImageShape({\n      style: {\n        x: 0,\n        y: 0,\n        image: canvas\n      }\n    });\n\n    if (pathTransform.position != null) {\n      imgShape.position = path.position = pathTransform.position;\n    }\n\n    if (pathTransform.rotation != null) {\n      imgShape.rotation = path.rotation = pathTransform.rotation;\n    }\n\n    if (pathTransform.scale != null) {\n      imgShape.scale = path.scale = pathTransform.scale;\n    }\n\n    return imgShape;\n  }\n};\nvar _default = Painter;\nmodule.exports = _default;","var util = require(\"./core/util\");\n\nvar _config = require(\"./config\");\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar Style = require(\"./graphic/Style\");\n\nvar Pattern = require(\"./graphic/Pattern\");\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\nfunction returnFalse() {\n  return false;\n}\n/**\n * 创建dom\n *\n * @inner\n * @param {string} id dom id 待用\n * @param {Painter} painter painter instance\n * @param {number} number\n */\n\n\nfunction createDom(id, painter, dpr) {\n  var newDom = util.createCanvas();\n  var width = painter.getWidth();\n  var height = painter.getHeight();\n  var newDomStyle = newDom.style; // 没append呢，请原谅我这样写，清晰~\n\n  newDomStyle.position = 'absolute';\n  newDomStyle.left = 0;\n  newDomStyle.top = 0;\n  newDomStyle.width = width + 'px';\n  newDomStyle.height = height + 'px';\n  newDom.width = width * dpr;\n  newDom.height = height * dpr; // id不作为索引用，避免可能造成的重名，定义为私有属性\n\n  newDom.setAttribute('data-zr-dom-id', id);\n  return newDom;\n}\n/**\n * @alias module:zrender/Layer\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @param {string} id\n * @param {module:zrender/Painter} painter\n * @param {number} [dpr]\n */\n\n\nvar Layer = function (id, painter, dpr) {\n  var dom;\n  dpr = dpr || devicePixelRatio;\n\n  if (typeof id === 'string') {\n    dom = createDom(id, painter, dpr);\n  } // Not using isDom because in node it will return false\n  else if (util.isObject(id)) {\n      dom = id;\n      id = dom.id;\n    }\n\n  this.id = id;\n  this.dom = dom;\n  var domStyle = dom.style;\n\n  if (domStyle) {\n    // Not in node\n    dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n    domStyle['-webkit-user-select'] = 'none';\n    domStyle['user-select'] = 'none';\n    domStyle['-webkit-touch-callout'] = 'none';\n    domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n    domStyle['padding'] = 0;\n    domStyle['margin'] = 0;\n    domStyle['border-width'] = 0;\n  }\n\n  this.domBack = null;\n  this.ctxBack = null;\n  this.painter = painter;\n  this.config = null; // Configs\n\n  /**\n   * 每次清空画布的颜色\n   * @type {string}\n   * @default 0\n   */\n\n  this.clearColor = 0;\n  /**\n   * 是否开启动态模糊\n   * @type {boolean}\n   * @default false\n   */\n\n  this.motionBlur = false;\n  /**\n   * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   * @type {number}\n   * @default 0.7\n   */\n\n  this.lastFrameAlpha = 0.7;\n  /**\n   * Layer dpr\n   * @type {number}\n   */\n\n  this.dpr = dpr;\n};\n\nLayer.prototype = {\n  constructor: Layer,\n  elCount: 0,\n  __dirty: true,\n  initContext: function () {\n    this.ctx = this.dom.getContext('2d');\n    this.ctx.__currentValues = {};\n    this.ctx.dpr = this.dpr;\n  },\n  createBackBuffer: function () {\n    var dpr = this.dpr;\n    this.domBack = createDom('back-' + this.id, this.painter, dpr);\n    this.ctxBack = this.domBack.getContext('2d');\n    this.ctxBack.__currentValues = {};\n\n    if (dpr != 1) {\n      this.ctxBack.scale(dpr, dpr);\n    }\n  },\n\n  /**\n   * @param  {number} width\n   * @param  {number} height\n   */\n  resize: function (width, height) {\n    var dpr = this.dpr;\n    var dom = this.dom;\n    var domStyle = dom.style;\n    var domBack = this.domBack;\n    domStyle.width = width + 'px';\n    domStyle.height = height + 'px';\n    dom.width = width * dpr;\n    dom.height = height * dpr;\n\n    if (domBack) {\n      domBack.width = width * dpr;\n      domBack.height = height * dpr;\n\n      if (dpr != 1) {\n        this.ctxBack.scale(dpr, dpr);\n      }\n    }\n  },\n\n  /**\n   * 清空该层画布\n   * @param {boolean} clearAll Clear all with out motion blur\n   */\n  clear: function (clearAll) {\n    var dom = this.dom;\n    var ctx = this.ctx;\n    var width = dom.width;\n    var height = dom.height;\n    var clearColor = this.clearColor;\n    var haveMotionBLur = this.motionBlur && !clearAll;\n    var lastFrameAlpha = this.lastFrameAlpha;\n    var dpr = this.dpr;\n\n    if (haveMotionBLur) {\n      if (!this.domBack) {\n        this.createBackBuffer();\n      }\n\n      this.ctxBack.globalCompositeOperation = 'copy';\n      this.ctxBack.drawImage(dom, 0, 0, width / dpr, height / dpr);\n    }\n\n    ctx.clearRect(0, 0, width, height);\n\n    if (clearColor) {\n      var clearColorGradientOrPattern; // Gradient\n\n      if (clearColor.colorStops) {\n        // Cache canvas gradient\n        clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n          x: 0,\n          y: 0,\n          width: width,\n          height: height\n        });\n        clearColor.__canvasGradient = clearColorGradientOrPattern;\n      } // Pattern\n      else if (clearColor.image) {\n          clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n        }\n\n      ctx.save();\n      ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    if (haveMotionBLur) {\n      var domBack = this.domBack;\n      ctx.save();\n      ctx.globalAlpha = lastFrameAlpha;\n      ctx.drawImage(domBack, 0, 0, width, height);\n      ctx.restore();\n    }\n  }\n};\nvar _default = Layer;\nmodule.exports = _default;","var util = require(\"../core/util\");\n\nvar _event = require(\"../core/event\");\n\nvar Dispatcher = _event.Dispatcher;\n\nvar requestAnimationFrame = require(\"./requestAnimationFrame\");\n\nvar Animator = require(\"./Animator\");\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n/**\n * @typedef {Object} IZRenderStage\n * @property {Function} update\n */\n\n/**\n * @alias module:zrender/animation/Animation\n * @constructor\n * @param {Object} [options]\n * @param {Function} [options.onframe]\n * @param {IZRenderStage} [options.stage]\n * @example\n *     var animation = new Animation();\n *     var obj = {\n *         x: 100,\n *         y: 100\n *     };\n *     animation.animate(node.position)\n *         .when(1000, {\n *             x: 500,\n *             y: 500\n *         })\n *         .when(2000, {\n *             x: 100,\n *             y: 100\n *         })\n *         .start('spline');\n */\nvar Animation = function (options) {\n  options = options || {};\n  this.stage = options.stage || {};\n\n  this.onframe = options.onframe || function () {}; // private properties\n\n\n  this._clips = [];\n  this._running = false;\n  this._time;\n  this._pausedTime;\n  this._pauseStart;\n  this._paused = false;\n  Dispatcher.call(this);\n};\n\nAnimation.prototype = {\n  constructor: Animation,\n\n  /**\n   * 添加 clip\n   * @param {module:zrender/animation/Clip} clip\n   */\n  addClip: function (clip) {\n    this._clips.push(clip);\n  },\n\n  /**\n   * 添加 animator\n   * @param {module:zrender/animation/Animator} animator\n   */\n  addAnimator: function (animator) {\n    animator.animation = this;\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.addClip(clips[i]);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Clip} clip\n   */\n  removeClip: function (clip) {\n    var idx = util.indexOf(this._clips, clip);\n\n    if (idx >= 0) {\n      this._clips.splice(idx, 1);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Animator} animator\n   */\n  removeAnimator: function (animator) {\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.removeClip(clips[i]);\n    }\n\n    animator.animation = null;\n  },\n  _update: function () {\n    var time = new Date().getTime() - this._pausedTime;\n\n    var delta = time - this._time;\n    var clips = this._clips;\n    var len = clips.length;\n    var deferredEvents = [];\n    var deferredClips = [];\n\n    for (var i = 0; i < len; i++) {\n      var clip = clips[i];\n      var e = clip.step(time, delta); // Throw out the events need to be called after\n      // stage.update, like destroy\n\n      if (e) {\n        deferredEvents.push(e);\n        deferredClips.push(clip);\n      }\n    } // Remove the finished clip\n\n\n    for (var i = 0; i < len;) {\n      if (clips[i]._needsRemove) {\n        clips[i] = clips[len - 1];\n        clips.pop();\n        len--;\n      } else {\n        i++;\n      }\n    }\n\n    len = deferredEvents.length;\n\n    for (var i = 0; i < len; i++) {\n      deferredClips[i].fire(deferredEvents[i]);\n    }\n\n    this._time = time;\n    this.onframe(delta);\n    this.trigger('frame', delta);\n\n    if (this.stage.update) {\n      this.stage.update();\n    }\n  },\n  _startLoop: function () {\n    var self = this;\n    this._running = true;\n\n    function step() {\n      if (self._running) {\n        requestAnimationFrame(step);\n        !self._paused && self._update();\n      }\n    }\n\n    requestAnimationFrame(step);\n  },\n\n  /**\n   * 开始运行动画\n   */\n  start: function () {\n    this._time = new Date().getTime();\n    this._pausedTime = 0;\n\n    this._startLoop();\n  },\n\n  /**\n   * 停止运行动画\n   */\n  stop: function () {\n    this._running = false;\n  },\n\n  /**\n   * Pause\n   */\n  pause: function () {\n    if (!this._paused) {\n      this._pauseStart = new Date().getTime();\n      this._paused = true;\n    }\n  },\n\n  /**\n   * Resume\n   */\n  resume: function () {\n    if (this._paused) {\n      this._pausedTime += new Date().getTime() - this._pauseStart;\n      this._paused = false;\n    }\n  },\n\n  /**\n   * 清除所有动画片段\n   */\n  clear: function () {\n    this._clips = [];\n  },\n\n  /**\n   * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n   * @param  {Object} target\n   * @param  {Object} options\n   * @param  {boolean} [options.loop=false] 是否循环播放动画\n   * @param  {Function} [options.getter=null]\n   *         如果指定getter函数，会通过getter函数取属性值\n   * @param  {Function} [options.setter=null]\n   *         如果指定setter函数，会通过setter函数设置属性值\n   * @return {module:zrender/animation/Animation~Animator}\n   */\n  // TODO Gap\n  animate: function (target, options) {\n    options = options || {};\n    var animator = new Animator(target, options.loop, options.getter, options.setter);\n    this.addAnimator(animator);\n    return animator;\n  }\n};\nutil.mixin(Animation, Dispatcher);\nvar _default = Animation;\nmodule.exports = _default;","var _event = require(\"../core/event\");\n\nvar addEventListener = _event.addEventListener;\nvar removeEventListener = _event.removeEventListener;\nvar normalizeEvent = _event.normalizeEvent;\n\nvar zrUtil = require(\"../core/util\");\n\nvar Eventful = require(\"../mixin/Eventful\");\n\nvar env = require(\"../core/env\");\n\nvar GestureMgr = require(\"../core/GestureMgr\");\n\nvar TOUCH_CLICK_DELAY = 300;\nvar mouseHandlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\nvar touchHandlerNames = ['touchstart', 'touchend', 'touchmove'];\nvar pointerEventNames = {\n  pointerdown: 1,\n  pointerup: 1,\n  pointermove: 1,\n  pointerout: 1\n};\nvar pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n  var nm = name.replace('mouse', 'pointer');\n  return pointerEventNames[nm] ? nm : name;\n});\n\nfunction eventNameFix(name) {\n  return name === 'mousewheel' && env.browser.firefox ? 'DOMMouseScroll' : name;\n}\n\nfunction processGesture(proxy, event, stage) {\n  var gestureMgr = proxy._gestureMgr;\n  stage === 'start' && gestureMgr.clear();\n  var gestureInfo = gestureMgr.recognize(event, proxy.handler.findHover(event.zrX, event.zrY, null).target, proxy.dom);\n  stage === 'end' && gestureMgr.clear(); // Do not do any preventDefault here. Upper application do that if necessary.\n\n  if (gestureInfo) {\n    var type = gestureInfo.type;\n    event.gestureEvent = type;\n    proxy.handler.dispatchToElement({\n      target: gestureInfo.target\n    }, type, gestureInfo.event);\n  }\n} // function onMSGestureChange(proxy, event) {\n//     if (event.translationX || event.translationY) {\n//         // mousemove is carried by MSGesture to reduce the sensitivity.\n//         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n//     }\n//     if (event.scale !== 1) {\n//         event.pinchX = event.offsetX;\n//         event.pinchY = event.offsetY;\n//         event.pinchScale = event.scale;\n//         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n//     }\n// }\n\n/**\n * Prevent mouse event from being dispatched after Touch Events action\n * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n * Result: Blocking Mouse Events for 700ms.\n */\n\n\nfunction setTouchTimer(instance) {\n  instance._touching = true;\n  clearTimeout(instance._touchTimer);\n  instance._touchTimer = setTimeout(function () {\n    instance._touching = false;\n  }, 700);\n}\n\nvar domHandlers = {\n  /**\n   * Mouse move handler\n   * @inner\n   * @param {Event} event\n   */\n  mousemove: function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger('mousemove', event);\n  },\n\n  /**\n   * Mouse out handler\n   * @inner\n   * @param {Event} event\n   */\n  mouseout: function (event) {\n    event = normalizeEvent(this.dom, event);\n    var element = event.toElement || event.relatedTarget;\n\n    if (element != this.dom) {\n      while (element && element.nodeType != 9) {\n        // 忽略包含在root中的dom引起的mouseOut\n        if (element === this.dom) {\n          return;\n        }\n\n        element = element.parentNode;\n      }\n    }\n\n    this.trigger('mouseout', event);\n  },\n\n  /**\n   * Touch开始响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchstart: function (event) {\n    // Default mouse behaviour should not be disabled here.\n    // For example, page may needs to be slided.\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    this._lastTouchMoment = new Date();\n    processGesture(this, event, 'start'); // In touch device, trigger `mousemove`(`mouseover`) should\n    // be triggered, and must before `mousedown` triggered.\n\n    domHandlers.mousemove.call(this, event);\n    domHandlers.mousedown.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch移动响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchmove: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'change'); // Mouse move should always be triggered no matter whether\n    // there is gestrue event, because mouse move and pinch may\n    // be used at the same time.\n\n    domHandlers.mousemove.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch结束响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchend: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'end');\n    domHandlers.mouseup.call(this, event); // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n    // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n    // we can conveniently implement \"hover style\" in both PC and touch device just\n    // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n    // to remove \"hover style\" on an element, without any additional code for\n    // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n    // style\" will remain for user view)\n    // click event should always be triggered no matter whether\n    // there is gestrue event. System click can not be prevented.\n\n    if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n      domHandlers.click.call(this, event);\n    }\n\n    setTouchTimer(this);\n  },\n  pointerdown: function (event) {\n    domHandlers.mousedown.call(this, event); // if (useMSGuesture(this, event)) {\n    //     this._msGesture.addPointer(event.pointerId);\n    // }\n  },\n  pointermove: function (event) {\n    // FIXME\n    // pointermove is so sensitive that it always triggered when\n    // tap(click) on touch screen, which affect some judgement in\n    // upper application. So, we dont support mousemove on MS touch\n    // device yet.\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mousemove.call(this, event);\n    }\n  },\n  pointerup: function (event) {\n    domHandlers.mouseup.call(this, event);\n  },\n  pointerout: function (event) {\n    // pointerout will be triggered when tap on touch screen\n    // (IE11+/Edge on MS Surface) after click event triggered,\n    // which is inconsistent with the mousout behavior we defined\n    // in touchend. So we unify them.\n    // (check domHandlers.touchend for detailed explanation)\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mouseout.call(this, event);\n    }\n  }\n};\n\nfunction isPointerFromTouch(event) {\n  var pointerType = event.pointerType;\n  return pointerType === 'pen' || pointerType === 'touch';\n} // function useMSGuesture(handlerProxy, event) {\n//     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n// }\n// Common handlers\n\n\nzrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  domHandlers[name] = function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger(name, event);\n  };\n});\n/**\n * 为控制类实例初始化dom 事件处理函数\n *\n * @inner\n * @param {module:zrender/Handler} instance 控制类实例\n */\n\nfunction initDomHandler(instance) {\n  zrUtil.each(touchHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(pointerHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(mouseHandlerNames, function (name) {\n    instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n  });\n\n  function makeMouseHandler(fn, instance) {\n    return function () {\n      if (instance._touching) {\n        return;\n      }\n\n      return fn.apply(instance, arguments);\n    };\n  }\n}\n\nfunction HandlerDomProxy(dom) {\n  Eventful.call(this);\n  this.dom = dom;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._touching = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._touchTimer;\n  /**\n   * @private\n   * @type {module:zrender/core/GestureMgr}\n   */\n\n  this._gestureMgr = new GestureMgr();\n  this._handlers = {};\n  initDomHandler(this);\n\n  if (env.pointerEventsSupported) {\n    // Only IE11+/Edge\n    // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n    // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n    // at the same time.\n    // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n    // screen, which do not occurs in pointer event.\n    // So we use pointer event to both detect touch gesture and mouse behavior.\n    mountHandlers(pointerHandlerNames, this); // FIXME\n    // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n    // which does not prevent defuault behavior occasionally (which may cause view port\n    // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n    // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n    // touch screen. And we only support click behavior on MS touch screen now.\n    // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n    // We dont support touch on IE on win7.\n    // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n    // if (typeof MSGesture === 'function') {\n    //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n    //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n    // }\n  } else {\n    if (env.touchEventsSupported) {\n      mountHandlers(touchHandlerNames, this); // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n      // addEventListener(root, 'mouseout', this._mouseoutHandler);\n    } // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n    // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n    // mouse event can not be handle in those devices.\n    // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n    // mouseevent after touch event triggered, see `setTouchTimer`.\n\n\n    mountHandlers(mouseHandlerNames, this);\n  }\n\n  function mountHandlers(handlerNames, instance) {\n    zrUtil.each(handlerNames, function (name) {\n      addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n    }, instance);\n  }\n}\n\nvar handlerDomProxyProto = HandlerDomProxy.prototype;\n\nhandlerDomProxyProto.dispose = function () {\n  var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n  for (var i = 0; i < handlerNames.length; i++) {\n    var name = handlerNames[i];\n    removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n  }\n};\n\nhandlerDomProxyProto.setCursor = function (cursorStyle) {\n  this.dom.style.cursor = cursorStyle || 'default';\n};\n\nzrUtil.mixin(HandlerDomProxy, Eventful);\nvar _default = HandlerDomProxy;\nmodule.exports = _default;","var eventUtil = require(\"./event\");\n\n/**\n * Only implements needed gestures for mobile.\n */\nvar GestureMgr = function () {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  this._track = [];\n};\n\nGestureMgr.prototype = {\n  constructor: GestureMgr,\n  recognize: function (event, target, root) {\n    this._doTrack(event, target, root);\n\n    return this._recognize(event);\n  },\n  clear: function () {\n    this._track.length = 0;\n    return this;\n  },\n  _doTrack: function (event, target, root) {\n    var touches = event.touches;\n\n    if (!touches) {\n      return;\n    }\n\n    var trackItem = {\n      points: [],\n      touches: [],\n      target: target,\n      event: event\n    };\n\n    for (var i = 0, len = touches.length; i < len; i++) {\n      var touch = touches[i];\n      var pos = eventUtil.clientToLocal(root, touch, {});\n      trackItem.points.push([pos.zrX, pos.zrY]);\n      trackItem.touches.push(touch);\n    }\n\n    this._track.push(trackItem);\n  },\n  _recognize: function (event) {\n    for (var eventName in recognizers) {\n      if (recognizers.hasOwnProperty(eventName)) {\n        var gestureInfo = recognizers[eventName](this._track, event);\n\n        if (gestureInfo) {\n          return gestureInfo;\n        }\n      }\n    }\n  }\n};\n\nfunction dist(pointPair) {\n  var dx = pointPair[1][0] - pointPair[0][0];\n  var dy = pointPair[1][1] - pointPair[0][1];\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nfunction center(pointPair) {\n  return [(pointPair[0][0] + pointPair[1][0]) / 2, (pointPair[0][1] + pointPair[1][1]) / 2];\n}\n\nvar recognizers = {\n  pinch: function (track, event) {\n    var trackLen = track.length;\n\n    if (!trackLen) {\n      return;\n    }\n\n    var pinchEnd = (track[trackLen - 1] || {}).points;\n    var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n    if (pinchPre && pinchPre.length > 1 && pinchEnd && pinchEnd.length > 1) {\n      var pinchScale = dist(pinchEnd) / dist(pinchPre);\n      !isFinite(pinchScale) && (pinchScale = 1);\n      event.pinchScale = pinchScale;\n      var pinchCenter = center(pinchEnd);\n      event.pinchX = pinchCenter[0];\n      event.pinchY = pinchCenter[1];\n      return {\n        type: 'pinch',\n        target: track[0].target,\n        event: event\n      };\n    }\n  } // Only pinch currently.\n\n};\nvar _default = GestureMgr;\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar Model = require(\"./Model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar globalDefault = require(\"./globalDefault\");\n\nvar colorPaletteMinin = require(\"./mixin/colorPalette\");\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n/**\n * Caution: If the mechanism should be changed some day, these cases\n * should be considered:\n *\n * (1) In `merge option` mode, if using the same option to call `setOption`\n * many times, the result should be the same (try our best to ensure that).\n * (2) In `merge option` mode, if a component has no id/name specified, it\n * will be merged by index, and the result sequence of the components is\n * consistent to the original sequence.\n * (3) `reset` feature (in toolbox). Find detailed info in comments about\n * `mergeOption` in module:echarts/model/OptionManager.\n */\nvar each = zrUtil.each;\nvar filter = zrUtil.filter;\nvar map = zrUtil.map;\nvar isArray = zrUtil.isArray;\nvar indexOf = zrUtil.indexOf;\nvar isObject = zrUtil.isObject;\nvar OPTION_INNER_KEY = '\\0_ec_inner';\n/**\n * @alias module:echarts/model/Global\n *\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {Object} theme\n */\n\nvar GlobalModel = Model.extend({\n  constructor: GlobalModel,\n  init: function (option, parentModel, theme, optionManager) {\n    theme = theme || {};\n    this.option = null; // Mark as not initialized.\n\n    /**\n     * @type {module:echarts/model/Model}\n     * @private\n     */\n\n    this._theme = new Model(theme);\n    /**\n     * @type {module:echarts/model/OptionManager}\n     */\n\n    this._optionManager = optionManager;\n  },\n  setOption: function (option, optionPreprocessorFuncs) {\n    zrUtil.assert(!(OPTION_INNER_KEY in option), 'please use chart.getOption()');\n\n    this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n    this.resetOption(null);\n  },\n\n  /**\n   * @param {string} type null/undefined: reset all.\n   *                      'recreate': force recreate all.\n   *                      'timeline': only reset timeline option\n   *                      'media': only reset media query option\n   * @return {boolean} Whether option changed.\n   */\n  resetOption: function (type) {\n    var optionChanged = false;\n    var optionManager = this._optionManager;\n\n    if (!type || type === 'recreate') {\n      var baseOption = optionManager.mountOption(type === 'recreate');\n\n      if (!this.option || type === 'recreate') {\n        initBase.call(this, baseOption);\n      } else {\n        this.restoreData();\n        this.mergeOption(baseOption);\n      }\n\n      optionChanged = true;\n    }\n\n    if (type === 'timeline' || type === 'media') {\n      this.restoreData();\n    }\n\n    if (!type || type === 'recreate' || type === 'timeline') {\n      var timelineOption = optionManager.getTimelineOption(this);\n      timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n    }\n\n    if (!type || type === 'recreate' || type === 'media') {\n      var mediaOptions = optionManager.getMediaOption(this, this._api);\n\n      if (mediaOptions.length) {\n        each(mediaOptions, function (mediaOption) {\n          this.mergeOption(mediaOption, optionChanged = true);\n        }, this);\n      }\n    }\n\n    return optionChanged;\n  },\n\n  /**\n   * @protected\n   */\n  mergeOption: function (newOption) {\n    var option = this.option;\n    var componentsMap = this._componentsMap;\n    var newCptTypes = []; // 如果不存在对应的 component model 则直接 merge\n\n    each(newOption, function (componentOption, mainType) {\n      if (componentOption == null) {\n        return;\n      }\n\n      if (!ComponentModel.hasClass(mainType)) {\n        option[mainType] = option[mainType] == null ? zrUtil.clone(componentOption) : zrUtil.merge(option[mainType], componentOption, true);\n      } else {\n        newCptTypes.push(mainType);\n      }\n    }); // FIXME OPTION 同步是否要改回原来的\n\n    ComponentModel.topologicalTravel(newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this);\n    this._seriesIndices = this._seriesIndices || [];\n\n    function visitComponent(mainType, dependencies) {\n      var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n      var mapResult = modelUtil.mappingToExists(componentsMap.get(mainType), newCptOptionList);\n      modelUtil.makeIdAndName(mapResult); // Set mainType and complete subType.\n\n      each(mapResult, function (item, index) {\n        var opt = item.option;\n\n        if (isObject(opt)) {\n          item.keyInfo.mainType = mainType;\n          item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n        }\n      });\n      var dependentModels = getComponentsByTypes(componentsMap, dependencies);\n      option[mainType] = [];\n      componentsMap.set(mainType, []);\n      each(mapResult, function (resultItem, index) {\n        var componentModel = resultItem.exist;\n        var newCptOption = resultItem.option;\n        zrUtil.assert(isObject(newCptOption) || componentModel, 'Empty component definition'); // Consider where is no new option and should be merged using {},\n        // see removeEdgeAndAdd in topologicalTravel and\n        // ComponentModel.getAllClassMainTypes.\n\n        if (!newCptOption) {\n          componentModel.mergeOption({}, this);\n          componentModel.optionUpdated({}, false);\n        } else {\n          var ComponentModelClass = ComponentModel.getClass(mainType, resultItem.keyInfo.subType, true);\n\n          if (componentModel && componentModel instanceof ComponentModelClass) {\n            componentModel.name = resultItem.keyInfo.name;\n            componentModel.mergeOption(newCptOption, this);\n            componentModel.optionUpdated(newCptOption, false);\n          } else {\n            // PENDING Global as parent ?\n            var extraOpt = zrUtil.extend({\n              dependentModels: dependentModels,\n              componentIndex: index\n            }, resultItem.keyInfo);\n            componentModel = new ComponentModelClass(newCptOption, this, this, extraOpt);\n            zrUtil.extend(componentModel, extraOpt);\n            componentModel.init(newCptOption, this, this, extraOpt); // Call optionUpdated after init.\n            // newCptOption has been used as componentModel.option\n            // and may be merged with theme and default, so pass null\n            // to avoid confusion.\n\n            componentModel.optionUpdated(null, true);\n          }\n        }\n\n        componentsMap.get(mainType)[index] = componentModel;\n        option[mainType][index] = componentModel.option;\n      }, this); // Backup series for filtering.\n\n      if (mainType === 'series') {\n        this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n      }\n    }\n  },\n\n  /**\n   * Get option for output (cloned option and inner info removed)\n   * @public\n   * @return {Object}\n   */\n  getOption: function () {\n    var option = zrUtil.clone(this.option);\n    each(option, function (opts, mainType) {\n      if (ComponentModel.hasClass(mainType)) {\n        var opts = modelUtil.normalizeToArray(opts);\n\n        for (var i = opts.length - 1; i >= 0; i--) {\n          // Remove options with inner id.\n          if (modelUtil.isIdInner(opts[i])) {\n            opts.splice(i, 1);\n          }\n        }\n\n        option[mainType] = opts;\n      }\n    });\n    delete option[OPTION_INNER_KEY];\n    return option;\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getTheme: function () {\n    return this._theme;\n  },\n\n  /**\n   * @param {string} mainType\n   * @param {number} [idx=0]\n   * @return {module:echarts/model/Component}\n   */\n  getComponent: function (mainType, idx) {\n    var list = this._componentsMap.get(mainType);\n\n    if (list) {\n      return list[idx || 0];\n    }\n  },\n\n  /**\n   * If none of index and id and name used, return all components with mainType.\n   * @param {Object} condition\n   * @param {string} condition.mainType\n   * @param {string} [condition.subType] If ignore, only query by mainType\n   * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  queryComponents: function (condition) {\n    var mainType = condition.mainType;\n\n    if (!mainType) {\n      return [];\n    }\n\n    var index = condition.index;\n    var id = condition.id;\n    var name = condition.name;\n\n    var cpts = this._componentsMap.get(mainType);\n\n    if (!cpts || !cpts.length) {\n      return [];\n    }\n\n    var result;\n\n    if (index != null) {\n      if (!isArray(index)) {\n        index = [index];\n      }\n\n      result = filter(map(index, function (idx) {\n        return cpts[idx];\n      }), function (val) {\n        return !!val;\n      });\n    } else if (id != null) {\n      var isIdArray = isArray(id);\n      result = filter(cpts, function (cpt) {\n        return isIdArray && indexOf(id, cpt.id) >= 0 || !isIdArray && cpt.id === id;\n      });\n    } else if (name != null) {\n      var isNameArray = isArray(name);\n      result = filter(cpts, function (cpt) {\n        return isNameArray && indexOf(name, cpt.name) >= 0 || !isNameArray && cpt.name === name;\n      });\n    } else {\n      // Return all components with mainType\n      result = cpts.slice();\n    }\n\n    return filterBySubType(result, condition);\n  },\n\n  /**\n   * The interface is different from queryComponents,\n   * which is convenient for inner usage.\n   *\n   * @usage\n   * var result = findComponents(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series'},\n   *     function (model, index) {...}\n   * );\n   * // result like [component0, componnet1, ...]\n   *\n   * @param {Object} condition\n   * @param {string} condition.mainType Mandatory.\n   * @param {string} [condition.subType] Optional.\n   * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n   *        where xxx is mainType.\n   *        If query attribute is null/undefined or has no index/id/name,\n   *        do not filtering by query conditions, which is convenient for\n   *        no-payload situations or when target of action is global.\n   * @param {Function} [condition.filter] parameter: component, return boolean.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  findComponents: function (condition) {\n    var query = condition.query;\n    var mainType = condition.mainType;\n    var queryCond = getQueryCond(query);\n    var result = queryCond ? this.queryComponents(queryCond) : this._componentsMap.get(mainType);\n    return doFilter(filterBySubType(result, condition));\n\n    function getQueryCond(q) {\n      var indexAttr = mainType + 'Index';\n      var idAttr = mainType + 'Id';\n      var nameAttr = mainType + 'Name';\n      return q && (q[indexAttr] != null || q[idAttr] != null || q[nameAttr] != null) ? {\n        mainType: mainType,\n        // subType will be filtered finally.\n        index: q[indexAttr],\n        id: q[idAttr],\n        name: q[nameAttr]\n      } : null;\n    }\n\n    function doFilter(res) {\n      return condition.filter ? filter(res, condition.filter) : res;\n    }\n  },\n\n  /**\n   * @usage\n   * eachComponent('legend', function (legendModel, index) {\n   *     ...\n   * });\n   * eachComponent(function (componentType, model, index) {\n   *     // componentType does not include subType\n   *     // (componentType is 'xxx' but not 'xxx.aa')\n   * });\n   * eachComponent(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n   *     function (model, index) {...}\n   * );\n   * eachComponent(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n   *     function (model, index) {...}\n   * );\n   *\n   * @param {string|Object=} mainType When mainType is object, the definition\n   *                                  is the same as the method 'findComponents'.\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachComponent: function (mainType, cb, context) {\n    var componentsMap = this._componentsMap;\n\n    if (typeof mainType === 'function') {\n      context = cb;\n      cb = mainType;\n      componentsMap.each(function (components, componentType) {\n        each(components, function (component, index) {\n          cb.call(context, componentType, component, index);\n        });\n      });\n    } else if (zrUtil.isString(mainType)) {\n      each(componentsMap.get(mainType), cb, context);\n    } else if (isObject(mainType)) {\n      var queryResult = this.findComponents(mainType);\n      each(queryResult, cb, context);\n    }\n  },\n\n  /**\n   * @param {string} name\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByName: function (name) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.name === name;\n    });\n  },\n\n  /**\n   * @param {number} seriesIndex\n   * @return {module:echarts/model/Series}\n   */\n  getSeriesByIndex: function (seriesIndex) {\n    return this._componentsMap.get('series')[seriesIndex];\n  },\n\n  /**\n   * @param {string} subType\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByType: function (subType) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.subType === subType;\n    });\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeries: function () {\n    return this._componentsMap.get('series').slice();\n  },\n\n  /**\n   * After filtering, series may be different\n   * frome raw series.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      cb.call(context, series, rawSeriesIndex);\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeries: function (cb, context) {\n    each(this._componentsMap.get('series'), cb, context);\n  },\n\n  /**\n   * After filtering, series may be different.\n   * frome raw series.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeriesByType: function (subType, cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      if (series.subType === subType) {\n        cb.call(context, series, rawSeriesIndex);\n      }\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered of given type.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeriesByType: function (subType, cb, context) {\n    return each(this.getSeriesByType(subType), cb, context);\n  },\n\n  /**\n   * @param {module:echarts/model/Series} seriesModel\n   */\n  isSeriesFiltered: function (seriesModel) {\n    assertSeriesInitialized(this);\n    return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getCurrentSeriesIndices: function () {\n    return (this._seriesIndices || []).slice();\n  },\n\n  /**\n   * @param {Function} cb\n   * @param {*} context\n   */\n  filterSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    var filteredSeries = filter(this._componentsMap.get('series'), cb, context);\n    this._seriesIndices = createSeriesIndices(filteredSeries);\n  },\n  restoreData: function () {\n    var componentsMap = this._componentsMap;\n    this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n    var componentTypes = [];\n    componentsMap.each(function (components, componentType) {\n      componentTypes.push(componentType);\n    });\n    ComponentModel.topologicalTravel(componentTypes, ComponentModel.getAllClassMainTypes(), function (componentType, dependencies) {\n      each(componentsMap.get(componentType), function (component) {\n        component.restoreData();\n      });\n    });\n  }\n});\n/**\n * @inner\n */\n\nfunction mergeTheme(option, theme) {\n  zrUtil.each(theme, function (themeItem, name) {\n    // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n    if (!ComponentModel.hasClass(name)) {\n      if (typeof themeItem === 'object') {\n        option[name] = !option[name] ? zrUtil.clone(themeItem) : zrUtil.merge(option[name], themeItem, false);\n      } else {\n        if (option[name] == null) {\n          option[name] = themeItem;\n        }\n      }\n    }\n  });\n}\n\nfunction initBase(baseOption) {\n  baseOption = baseOption; // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n  // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n\n  this.option = {};\n  this.option[OPTION_INNER_KEY] = 1;\n  /**\n   * Init with series: [], in case of calling findSeries method\n   * before series initialized.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @private\n   */\n\n  this._componentsMap = zrUtil.createHashMap({\n    series: []\n  });\n  /**\n   * Mapping between filtered series list and raw series list.\n   * key: filtered series indices, value: raw series indices.\n   * @type {Array.<nubmer>}\n   * @private\n   */\n\n  this._seriesIndices = null;\n  mergeTheme(baseOption, this._theme.option); // TODO Needs clone when merging to the unexisted property\n\n  zrUtil.merge(baseOption, globalDefault, false);\n  this.mergeOption(baseOption);\n}\n/**\n * @inner\n * @param {Array.<string>|string} types model types\n * @return {Object} key: {string} type, value: {Array.<Object>} models\n */\n\n\nfunction getComponentsByTypes(componentsMap, types) {\n  if (!zrUtil.isArray(types)) {\n    types = types ? [types] : [];\n  }\n\n  var ret = {};\n  each(types, function (type) {\n    ret[type] = (componentsMap.get(type) || []).slice();\n  });\n  return ret;\n}\n/**\n * @inner\n */\n\n\nfunction determineSubType(mainType, newCptOption, existComponent) {\n  var subType = newCptOption.type ? newCptOption.type : existComponent ? existComponent.subType // Use determineSubType only when there is no existComponent.\n  : ComponentModel.determineSubType(mainType, newCptOption); // tooltip, markline, markpoint may always has no subType\n\n  return subType;\n}\n/**\n * @inner\n */\n\n\nfunction createSeriesIndices(seriesModels) {\n  return map(seriesModels, function (series) {\n    return series.componentIndex;\n  }) || [];\n}\n/**\n * @inner\n */\n\n\nfunction filterBySubType(components, condition) {\n  // Using hasOwnProperty for restrict. Consider\n  // subType is undefined in user payload.\n  return condition.hasOwnProperty('subType') ? filter(components, function (cpt) {\n    return cpt.subType === condition.subType;\n  }) : components;\n}\n/**\n * @inner\n */\n\n\nfunction assertSeriesInitialized(ecModel) {}\n\nzrUtil.mixin(GlobalModel, colorPaletteMinin);\nvar _default = GlobalModel;\nmodule.exports = _default;","var makeStyleMapper = require(\"./makeStyleMapper\");\n\nvar getLineStyle = makeStyleMapper([['lineWidth', 'width'], ['stroke', 'color'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getLineStyle: function (excludes) {\n    var style = getLineStyle(this, excludes);\n    var lineDash = this.getLineDash(style.lineWidth);\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getLineDash: function (lineWidth) {\n    if (lineWidth == null) {\n      lineWidth = 1;\n    }\n\n    var lineType = this.get('type');\n    var dotSize = Math.max(lineWidth, 2);\n    var dashSize = lineWidth * 4;\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize];\n  }\n};\nmodule.exports = _default;","var makeStyleMapper = require(\"./makeStyleMapper\");\n\nvar getAreaStyle = makeStyleMapper([['fill', 'color'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['opacity'], ['shadowColor']]);\nvar _default = {\n  getAreaStyle: function (excludes, includes) {\n    return getAreaStyle(this, excludes, includes);\n  }\n};\nmodule.exports = _default;","var textContain = require(\"zrender/lib/contain/text\");\n\nvar graphicUtil = require(\"../../util/graphic\");\n\nvar PATH_COLOR = ['textStyle', 'color'];\nvar _default = {\n  /**\n   * Get color property or get color from option.textStyle.color\n   * @param {boolean} [isEmphasis]\n   * @return {string}\n   */\n  getTextColor: function (isEmphasis) {\n    var ecModel = this.ecModel;\n    return this.getShallow('color') || (!isEmphasis && ecModel ? ecModel.get(PATH_COLOR) : null);\n  },\n\n  /**\n   * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n   * @return {string}\n   */\n  getFont: function () {\n    return graphicUtil.getFont({\n      fontStyle: this.getShallow('fontStyle'),\n      fontWeight: this.getShallow('fontWeight'),\n      fontSize: this.getShallow('fontSize'),\n      fontFamily: this.getShallow('fontFamily')\n    }, this.ecModel);\n  },\n  getTextRect: function (text) {\n    return textContain.getBoundingRect(text, this.getFont(), this.getShallow('align'), this.getShallow('verticalAlign') || this.getShallow('baseline'), this.getShallow('padding'), this.getShallow('rich'), this.getShallow('truncateText'));\n  }\n};\nmodule.exports = _default;","var Path = require(\"../graphic/Path\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar transformPath = require(\"./transformPath\");\n\n// command chars\nvar cc = ['m', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z', 'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'];\nvar mathSqrt = Math.sqrt;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\n\nvar vMag = function (v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n};\n\nvar vRatio = function (u, v) {\n  return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n};\n\nvar vAngle = function (u, v) {\n  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n};\n\nfunction processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n  var psi = psiDeg * (PI / 180.0);\n  var xp = mathCos(psi) * (x1 - x2) / 2.0 + mathSin(psi) * (y1 - y2) / 2.0;\n  var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0 + mathCos(psi) * (y1 - y2) / 2.0;\n  var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n\n  if (lambda > 1) {\n    rx *= mathSqrt(lambda);\n    ry *= mathSqrt(lambda);\n  }\n\n  var f = (fa === fs ? -1 : 1) * mathSqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) / (rx * rx * (yp * yp) + ry * ry * (xp * xp))) || 0;\n  var cxp = f * rx * yp / ry;\n  var cyp = f * -ry * xp / rx;\n  var cx = (x1 + x2) / 2.0 + mathCos(psi) * cxp - mathSin(psi) * cyp;\n  var cy = (y1 + y2) / 2.0 + mathSin(psi) * cxp + mathCos(psi) * cyp;\n  var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n  var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n  var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n  var dTheta = vAngle(u, v);\n\n  if (vRatio(u, v) <= -1) {\n    dTheta = PI;\n  }\n\n  if (vRatio(u, v) >= 1) {\n    dTheta = 0;\n  }\n\n  if (fs === 0 && dTheta > 0) {\n    dTheta = dTheta - 2 * PI;\n  }\n\n  if (fs === 1 && dTheta < 0) {\n    dTheta = dTheta + 2 * PI;\n  }\n\n  path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n}\n\nfunction createPathProxyFromString(data) {\n  if (!data) {\n    return [];\n  } // command string\n\n\n  var cs = data.replace(/-/g, ' -').replace(/  /g, ' ').replace(/ /g, ',').replace(/,,/g, ',');\n  var n; // create pipes so that we can split the data\n\n  for (n = 0; n < cc.length; n++) {\n    cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n  } // create array\n\n\n  var arr = cs.split('|'); // init context point\n\n  var cpx = 0;\n  var cpy = 0;\n  var path = new PathProxy();\n  var CMD = PathProxy.CMD;\n  var prevCmd;\n\n  for (n = 1; n < arr.length; n++) {\n    var str = arr[n];\n    var c = str.charAt(0);\n    var off = 0;\n    var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n    var cmd;\n\n    if (p.length > 0 && p[0] === '') {\n      p.shift();\n    }\n\n    for (var i = 0; i < p.length; i++) {\n      p[i] = parseFloat(p[i]);\n    }\n\n    while (off < p.length && !isNaN(p[off])) {\n      if (isNaN(p[0])) {\n        break;\n      }\n\n      var ctlPtx;\n      var ctlPty;\n      var rx;\n      var ry;\n      var psi;\n      var fa;\n      var fs;\n      var x1 = cpx;\n      var y1 = cpy; // convert l, H, h, V, and v to L\n\n      switch (c) {\n        case 'l':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'L':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'm':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'l';\n          break;\n\n        case 'M':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'L';\n          break;\n\n        case 'h':\n          cpx += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'H':\n          cpx = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'v':\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'V':\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'C':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]);\n          cpx = p[off - 2];\n          cpy = p[off - 1];\n          break;\n\n        case 'c':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy);\n          cpx += p[off - 2];\n          cpy += p[off - 1];\n          break;\n\n        case 'S':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 's':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = cpx + p[off++];\n          y1 = cpy + p[off++];\n          cpx += p[off++];\n          cpy += p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 'Q':\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'q':\n          x1 = p[off++] + cpx;\n          y1 = p[off++] + cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'T':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 't':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 'A':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n\n        case 'a':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n      }\n    }\n\n    if (c === 'z' || c === 'Z') {\n      cmd = CMD.Z;\n      path.addData(cmd);\n    }\n\n    prevCmd = cmd;\n  }\n\n  path.toStatic();\n  return path;\n} // TODO Optimize double memory cost problem\n\n\nfunction createPathOptions(str, opts) {\n  var pathProxy = createPathProxyFromString(str);\n  opts = opts || {};\n\n  opts.buildPath = function (path) {\n    if (path.setData) {\n      path.setData(pathProxy.data); // Svg and vml renderer don't have context\n\n      var ctx = path.getContext();\n\n      if (ctx) {\n        path.rebuildPath(ctx);\n      }\n    } else {\n      var ctx = path;\n      pathProxy.rebuildPath(ctx);\n    }\n  };\n\n  opts.applyTransform = function (m) {\n    transformPath(pathProxy, m);\n    this.dirty(true);\n  };\n\n  return opts;\n}\n/**\n * Create a Path object from path string data\n * http://www.w3.org/TR/SVG/paths.html#PathData\n * @param  {Object} opts Other options\n */\n\n\nfunction createFromString(str, opts) {\n  return new Path(createPathOptions(str, opts));\n}\n/**\n * Create a Path class from path string data\n * @param  {string} str\n * @param  {Object} opts Other options\n */\n\n\nfunction extendFromString(str, opts) {\n  return Path.extend(createPathOptions(str, opts));\n}\n/**\n * Merge multiple paths\n */\n// TODO Apply transform\n// TODO stroke dash\n// TODO Optimize double memory cost problem\n\n\nfunction mergePath(pathEls, opts) {\n  var pathList = [];\n  var len = pathEls.length;\n\n  for (var i = 0; i < len; i++) {\n    var pathEl = pathEls[i];\n\n    if (!pathEl.path) {\n      pathEl.createPathProxy();\n    }\n\n    if (pathEl.__dirtyPath) {\n      pathEl.buildPath(pathEl.path, pathEl.shape, true);\n    }\n\n    pathList.push(pathEl.path);\n  }\n\n  var pathBundle = new Path(opts); // Need path proxy.\n\n  pathBundle.createPathProxy();\n\n  pathBundle.buildPath = function (path) {\n    path.appendPath(pathList); // Svg and vml renderer don't have context\n\n    var ctx = path.getContext();\n\n    if (ctx) {\n      path.rebuildPath(ctx);\n    }\n  };\n\n  return pathBundle;\n}\n\nexports.createFromString = createFromString;\nexports.extendFromString = extendFromString;\nexports.mergePath = mergePath;","var PathProxy = require(\"../core/PathProxy\");\n\nvar line = require(\"./line\");\n\nvar cubic = require(\"./cubic\");\n\nvar quadratic = require(\"./quadratic\");\n\nvar arc = require(\"./arc\");\n\nvar _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\n\nvar curve = require(\"../core/curve\");\n\nvar windingLine = require(\"./windingLine\");\n\nvar CMD = PathProxy.CMD;\nvar PI2 = Math.PI * 2;\nvar EPSILON = 1e-4;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n} // 临时数组\n\n\nvar roots = [-1, -1, -1];\nvar extrema = [-1, -1];\n\nfunction swapExtrema() {\n  var tmp = extrema[0];\n  extrema[0] = extrema[1];\n  extrema[1] = tmp;\n}\n\nfunction windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 && y > y3 || y < y0 && y < y1 && y < y2 && y < y3) {\n    return 0;\n  }\n\n  var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var w = 0;\n    var nExtrema = -1;\n    var y0_, y1_;\n\n    for (var i = 0; i < nRoots; i++) {\n      var t = roots[i]; // Avoid winding error when intersection point is the connect point of two line of polygon\n\n      var unit = t === 0 || t === 1 ? 0.5 : 1;\n      var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n\n      if (x_ < x) {\n        // Quick reject\n        continue;\n      }\n\n      if (nExtrema < 0) {\n        nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n\n        if (extrema[1] < extrema[0] && nExtrema > 1) {\n          swapExtrema();\n        }\n\n        y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n\n        if (nExtrema > 1) {\n          y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n        }\n      }\n\n      if (nExtrema == 2) {\n        // 分成三段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else if (t < extrema[1]) {\n          w += y1_ < y0_ ? unit : -unit;\n        } else {\n          w += y3 < y1_ ? unit : -unit;\n        }\n      } else {\n        // 分成两段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else {\n          w += y3 < y0_ ? unit : -unit;\n        }\n      }\n    }\n\n    return w;\n  }\n}\n\nfunction windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 || y < y0 && y < y1 && y < y2) {\n    return 0;\n  }\n\n  var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var t = curve.quadraticExtremum(y0, y1, y2);\n\n    if (t >= 0 && t <= 1) {\n      var w = 0;\n      var y_ = curve.quadraticAt(y0, y1, y2, t);\n\n      for (var i = 0; i < nRoots; i++) {\n        // Remove one endpoint.\n        var unit = roots[i] === 0 || roots[i] === 1 ? 0.5 : 1;\n        var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n\n        if (x_ < x) {\n          // Quick reject\n          continue;\n        }\n\n        if (roots[i] < t) {\n          w += y_ < y0 ? unit : -unit;\n        } else {\n          w += y2 < y_ ? unit : -unit;\n        }\n      }\n\n      return w;\n    } else {\n      // Remove one endpoint.\n      var unit = roots[0] === 0 || roots[0] === 1 ? 0.5 : 1;\n      var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n\n      if (x_ < x) {\n        // Quick reject\n        return 0;\n      }\n\n      return y2 < y0 ? unit : -unit;\n    }\n  }\n} // TODO\n// Arc 旋转\n\n\nfunction windingArc(cx, cy, r, startAngle, endAngle, anticlockwise, x, y) {\n  y -= cy;\n\n  if (y > r || y < -r) {\n    return 0;\n  }\n\n  var tmp = Math.sqrt(r * r - y * y);\n  roots[0] = -tmp;\n  roots[1] = tmp;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff < 1e-4) {\n    return 0;\n  }\n\n  if (diff % PI2 < 1e-4) {\n    // Is a circle\n    startAngle = 0;\n    endAngle = PI2;\n    var dir = anticlockwise ? 1 : -1;\n\n    if (x >= roots[0] + cx && x <= roots[1] + cx) {\n      return dir;\n    } else {\n      return 0;\n    }\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var w = 0;\n\n  for (var i = 0; i < 2; i++) {\n    var x_ = roots[i];\n\n    if (x_ + cx > x) {\n      var angle = Math.atan2(y, x_);\n      var dir = anticlockwise ? 1 : -1;\n\n      if (angle < 0) {\n        angle = PI2 + angle;\n      }\n\n      if (angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle) {\n        if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n          dir = -dir;\n        }\n\n        w += dir;\n      }\n    }\n  }\n\n  return w;\n}\n\nfunction containPath(data, lineWidth, isStroke, x, y) {\n  var w = 0;\n  var xi = 0;\n  var yi = 0;\n  var x0 = 0;\n  var y0 = 0;\n\n  for (var i = 0; i < data.length;) {\n    var cmd = data[i++]; // Begin a new subpath\n\n    if (cmd === CMD.M && i > 1) {\n      // Close previous subpath\n      if (!isStroke) {\n        w += windingLine(xi, yi, x0, y0, x, y);\n      } // 如果被任何一个 subpath 包含\n      // if (w !== 0) {\n      //     return true;\n      // }\n\n    }\n\n    if (i == 1) {\n      // 如果第一个命令是 L, C, Q\n      // 则 previous point 同绘制命令的第一个 point\n      //\n      // 第一个命令为 Arc 的情况下会在后面特殊处理\n      xi = data[i];\n      yi = data[i + 1];\n      x0 = xi;\n      y0 = yi;\n    }\n\n    switch (cmd) {\n      case CMD.M:\n        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n        // 在 closePath 的时候使用\n        x0 = data[i++];\n        y0 = data[i++];\n        xi = x0;\n        yi = y0;\n        break;\n\n      case CMD.L:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n          w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.C:\n        if (isStroke) {\n          if (cubic.containStroke(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.Q:\n        if (isStroke) {\n          if (quadratic.containStroke(xi, yi, data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.A:\n        // TODO Arc 判断的开销比较大\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++]; // TODO Arc 旋转\n\n        var psi = data[i++];\n        var anticlockwise = 1 - data[i++];\n        var x1 = Math.cos(theta) * rx + cx;\n        var y1 = Math.sin(theta) * ry + cy; // 不是直接使用 arc 命令\n\n        if (i > 1) {\n          w += windingLine(xi, yi, x1, y1, x, y);\n        } else {\n          // 第一个命令起点还未定义\n          x0 = x1;\n          y0 = y1;\n        } // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n\n\n        var _x = (x - cx) * ry / rx + cx;\n\n        if (isStroke) {\n          if (arc.containStroke(cx, cy, ry, theta, theta + dTheta, anticlockwise, lineWidth, _x, y)) {\n            return true;\n          }\n        } else {\n          w += windingArc(cx, cy, ry, theta, theta + dTheta, anticlockwise, _x, y);\n        }\n\n        xi = Math.cos(theta + dTheta) * rx + cx;\n        yi = Math.sin(theta + dTheta) * ry + cy;\n        break;\n\n      case CMD.R:\n        x0 = xi = data[i++];\n        y0 = yi = data[i++];\n        var width = data[i++];\n        var height = data[i++];\n        var x1 = x0 + width;\n        var y1 = y0 + height;\n\n        if (isStroke) {\n          if (line.containStroke(x0, y0, x1, y0, lineWidth, x, y) || line.containStroke(x1, y0, x1, y1, lineWidth, x, y) || line.containStroke(x1, y1, x0, y1, lineWidth, x, y) || line.containStroke(x0, y1, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // FIXME Clockwise ?\n          w += windingLine(x1, y0, x1, y1, x, y);\n          w += windingLine(x0, y1, x0, y0, x, y);\n        }\n\n        break;\n\n      case CMD.Z:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // Close a subpath\n          w += windingLine(xi, yi, x0, y0, x, y); // 如果被任何一个 subpath 包含\n          // FIXME subpaths may overlap\n          // if (w !== 0) {\n          //     return true;\n          // }\n        }\n\n        xi = x0;\n        yi = y0;\n        break;\n    }\n  }\n\n  if (!isStroke && !isAroundEqual(yi, y0)) {\n    w += windingLine(xi, yi, x0, y0, x, y) || 0;\n  }\n\n  return w !== 0;\n}\n\nfunction contain(pathData, x, y) {\n  return containPath(pathData, 0, false, x, y);\n}\n\nfunction containStroke(pathData, lineWidth, x, y) {\n  return containPath(pathData, lineWidth, true, x, y);\n}\n\nexports.contain = contain;\nexports.containStroke = containStroke;","var curve = require(\"../core/curve\");\n\n/**\n * 三次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  x3\n * @param  {number}  y3\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l) {\n    return false;\n  }\n\n  var d = curve.cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;","var _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\nvar PI2 = Math.PI * 2;\n/**\n * 圆弧描边包含判断\n * @param  {number}  cx\n * @param  {number}  cy\n * @param  {number}  r\n * @param  {number}  startAngle\n * @param  {number}  endAngle\n * @param  {boolean}  anticlockwise\n * @param  {number} lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {Boolean}\n */\n\nfunction containStroke(cx, cy, r, startAngle, endAngle, anticlockwise, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  x -= cx;\n  y -= cy;\n  var d = Math.sqrt(x * x + y * y);\n\n  if (d - _l > r || d + _l < r) {\n    return false;\n  }\n\n  if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n    // Is a circle\n    return true;\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var angle = Math.atan2(y, x);\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle;\n}\n\nexports.containStroke = containStroke;","var PathProxy = require(\"../core/PathProxy\");\n\nvar _vector = require(\"../core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar CMD = PathProxy.CMD;\nvar points = [[], [], []];\nvar mathSqrt = Math.sqrt;\nvar mathAtan2 = Math.atan2;\n\nfunction _default(path, m) {\n  var data = path.data;\n  var cmd;\n  var nPoint;\n  var i;\n  var j;\n  var k;\n  var p;\n  var M = CMD.M;\n  var C = CMD.C;\n  var L = CMD.L;\n  var R = CMD.R;\n  var A = CMD.A;\n  var Q = CMD.Q;\n\n  for (i = 0, j = 0; i < data.length;) {\n    cmd = data[i++];\n    j = i;\n    nPoint = 0;\n\n    switch (cmd) {\n      case M:\n        nPoint = 1;\n        break;\n\n      case L:\n        nPoint = 1;\n        break;\n\n      case C:\n        nPoint = 3;\n        break;\n\n      case Q:\n        nPoint = 2;\n        break;\n\n      case A:\n        var x = m[4];\n        var y = m[5];\n        var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n        var angle = mathAtan2(-m[1] / sy, m[0] / sx); // cx\n\n        data[i] *= sx;\n        data[i++] += x; // cy\n\n        data[i] *= sy;\n        data[i++] += y; // Scale rx and ry\n        // FIXME Assume psi is 0 here\n\n        data[i++] *= sx;\n        data[i++] *= sy; // Start angle\n\n        data[i++] += angle; // end angle\n\n        data[i++] += angle; // FIXME psi\n\n        i += 2;\n        j = i;\n        break;\n\n      case R:\n        // x0, y0\n        p[0] = data[i++];\n        p[1] = data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1]; // x1, y1\n\n        p[0] += data[i++];\n        p[1] += data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1];\n    }\n\n    for (k = 0; k < nPoint; k++) {\n      var p = points[k];\n      p[0] = data[i++];\n      p[1] = data[i++];\n      v2ApplyTransform(p, p, m); // Write back\n\n      data[j++] = p[0];\n      data[j++] = p[1];\n    }\n  }\n}\n\nmodule.exports = _default;","var Path = require(\"../Path\");\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\nvar _default = Path.extend({\n  type: 'circle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    // Better stroking in ShapeBundle\n    // Always do it may have performence issue ( fill may be 2x more cost)\n    if (inBundle) {\n      ctx.moveTo(shape.cx + shape.r, shape.cy);\n    } // else {\n    //     if (ctx.allocate && !ctx.data.length) {\n    //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n    //     }\n    // }\n    // Better stroking in ShapeBundle\n    // ctx.moveTo(shape.cx + shape.r, shape.cy);\n\n\n    ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n  }\n});\n\nmodule.exports = _default;","var Path = require(\"../Path\");\n\nvar fixClipWithShadow = require(\"../helper/fixClipWithShadow\");\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\nvar _default = Path.extend({\n  type: 'sector',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r0: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r0 = Math.max(shape.r0 || 0, 0);\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n    ctx.lineTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n    ctx.lineTo(Math.cos(endAngle) * r0 + x, Math.sin(endAngle) * r0 + y);\n\n    if (r0 !== 0) {\n      ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n    }\n\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;","var Path = require(\"../Path\");\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\nvar _default = Path.extend({\n  type: 'ring',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    r0: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var PI2 = Math.PI * 2;\n    ctx.moveTo(x + shape.r, y);\n    ctx.arc(x, y, shape.r, 0, PI2, false);\n    ctx.moveTo(x + shape.r0, y);\n    ctx.arc(x, y, shape.r0, 0, PI2, true);\n  }\n});\n\nmodule.exports = _default;","var Path = require(\"../Path\");\n\nvar polyHelper = require(\"../helper/poly\");\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\nvar _default = Path.extend({\n  type: 'polygon',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, true);\n  }\n});\n\nmodule.exports = _default;","var _vector = require(\"../../core/vector\");\n\nvar v2Distance = _vector.distance;\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * @inner\n */\nfunction interpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n/**\n * @alias module:zrender/shape/util/smoothSpline\n * @param {Array} points 线段顶点数组\n * @param {boolean} isLoop\n * @return {Array}\n */\n\n\nfunction _default(points, isLoop) {\n  var len = points.length;\n  var ret = [];\n  var distance = 0;\n\n  for (var i = 1; i < len; i++) {\n    distance += v2Distance(points[i - 1], points[i]);\n  }\n\n  var segs = distance / 2;\n  segs = segs < len ? len : segs;\n\n  for (var i = 0; i < segs; i++) {\n    var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n    var idx = Math.floor(pos);\n    var w = pos - idx;\n    var p0;\n    var p1 = points[idx % len];\n    var p2;\n    var p3;\n\n    if (!isLoop) {\n      p0 = points[idx === 0 ? idx : idx - 1];\n      p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n      p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n    } else {\n      p0 = points[(idx - 1 + len) % len];\n      p2 = points[(idx + 1) % len];\n      p3 = points[(idx + 2) % len];\n    }\n\n    var w2 = w * w;\n    var w3 = w * w2;\n    ret.push([interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3), interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)]);\n  }\n\n  return ret;\n}\n\nmodule.exports = _default;","var _vector = require(\"../../core/vector\");\n\nvar v2Min = _vector.min;\nvar v2Max = _vector.max;\nvar v2Scale = _vector.scale;\nvar v2Distance = _vector.distance;\nvar v2Add = _vector.add;\nvar v2Clone = _vector.clone;\nvar v2Sub = _vector.sub;\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * 贝塞尔平滑曲线\n * @alias module:zrender/shape/util/smoothBezier\n * @param {Array} points 线段顶点数组\n * @param {number} smooth 平滑等级, 0-1\n * @param {boolean} isLoop\n * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n *                           整个折线的包围盒做一个并集用来约束控制点。\n * @param {Array} 计算出来的控制点数组\n */\nfunction _default(points, smooth, isLoop, constraint) {\n  var cps = [];\n  var v = [];\n  var v1 = [];\n  var v2 = [];\n  var prevPoint;\n  var nextPoint;\n  var min, max;\n\n  if (constraint) {\n    min = [Infinity, Infinity];\n    max = [-Infinity, -Infinity];\n\n    for (var i = 0, len = points.length; i < len; i++) {\n      v2Min(min, min, points[i]);\n      v2Max(max, max, points[i]);\n    } // 与指定的包围盒做并集\n\n\n    v2Min(min, min, constraint[0]);\n    v2Max(max, max, constraint[1]);\n  }\n\n  for (var i = 0, len = points.length; i < len; i++) {\n    var point = points[i];\n\n    if (isLoop) {\n      prevPoint = points[i ? i - 1 : len - 1];\n      nextPoint = points[(i + 1) % len];\n    } else {\n      if (i === 0 || i === len - 1) {\n        cps.push(v2Clone(points[i]));\n        continue;\n      } else {\n        prevPoint = points[i - 1];\n        nextPoint = points[i + 1];\n      }\n    }\n\n    v2Sub(v, nextPoint, prevPoint); // use degree to scale the handle length\n\n    v2Scale(v, v, smooth);\n    var d0 = v2Distance(point, prevPoint);\n    var d1 = v2Distance(point, nextPoint);\n    var sum = d0 + d1;\n\n    if (sum !== 0) {\n      d0 /= sum;\n      d1 /= sum;\n    }\n\n    v2Scale(v1, v, -d0);\n    v2Scale(v2, v, d1);\n    var cp0 = v2Add([], point, v1);\n    var cp1 = v2Add([], point, v2);\n\n    if (constraint) {\n      v2Max(cp0, cp0, min);\n      v2Min(cp0, cp0, max);\n      v2Max(cp1, cp1, min);\n      v2Min(cp1, cp1, max);\n    }\n\n    cps.push(cp0);\n    cps.push(cp1);\n  }\n\n  if (isLoop) {\n    cps.push(cps.shift());\n  }\n\n  return cps;\n}\n\nmodule.exports = _default;","var Path = require(\"../Path\");\n\nvar polyHelper = require(\"../helper/poly\");\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\nvar _default = Path.extend({\n  type: 'polyline',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, false);\n  }\n});\n\nmodule.exports = _default;","var Path = require(\"../Path\");\n\nvar roundRectHelper = require(\"../helper/roundRect\");\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\nvar _default = Path.extend({\n  type: 'rect',\n  shape: {\n    // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n    // r缩写为1         相当于 [1, 1, 1, 1]\n    // r缩写为[1]       相当于 [1, 1, 1, 1]\n    // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n    // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n    r: 0,\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var width = shape.width;\n    var height = shape.height;\n\n    if (!shape.r) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, shape);\n    }\n\n    ctx.closePath();\n    return;\n  }\n});\n\nmodule.exports = _default;","var Path = require(\"../Path\");\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\nvar _default = Path.extend({\n  type: 'line',\n  shape: {\n    // Start point\n    x1: 0,\n    y1: 0,\n    // End point\n    x2: 0,\n    y2: 0,\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (percent < 1) {\n      x2 = x1 * (1 - percent) + x2 * percent;\n      y2 = y1 * (1 - percent) + y2 * percent;\n    }\n\n    ctx.lineTo(x2, y2);\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} percent\n   * @return {Array.<number>}\n   */\n  pointAt: function (p) {\n    var shape = this.shape;\n    return [shape.x1 * (1 - p) + shape.x2 * p, shape.y1 * (1 - p) + shape.y2 * p];\n  }\n});\n\nmodule.exports = _default;","var Path = require(\"../Path\");\n\nvar vec2 = require(\"../../core/vector\");\n\nvar _curve = require(\"../../core/curve\");\n\nvar quadraticSubdivide = _curve.quadraticSubdivide;\nvar cubicSubdivide = _curve.cubicSubdivide;\nvar quadraticAt = _curve.quadraticAt;\nvar cubicAt = _curve.cubicAt;\nvar quadraticDerivativeAt = _curve.quadraticDerivativeAt;\nvar cubicDerivativeAt = _curve.cubicDerivativeAt;\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\nvar out = [];\n\nfunction someVectorAt(shape, t, isTangent) {\n  var cpx2 = shape.cpx2;\n  var cpy2 = shape.cpy2;\n\n  if (cpx2 === null || cpy2 === null) {\n    return [(isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t), (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)];\n  } else {\n    return [(isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t), (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)];\n  }\n}\n\nvar _default = Path.extend({\n  type: 'bezier-curve',\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    // cpx2: 0,\n    // cpy2: 0\n    // Curve show percent, for animating\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var cpx1 = shape.cpx1;\n    var cpy1 = shape.cpy1;\n    var cpx2 = shape.cpx2;\n    var cpy2 = shape.cpy2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (cpx2 == null || cpy2 == null) {\n      if (percent < 1) {\n        quadraticSubdivide(x1, cpx1, x2, percent, out);\n        cpx1 = out[1];\n        x2 = out[2];\n        quadraticSubdivide(y1, cpy1, y2, percent, out);\n        cpy1 = out[1];\n        y2 = out[2];\n      }\n\n      ctx.quadraticCurveTo(cpx1, cpy1, x2, y2);\n    } else {\n      if (percent < 1) {\n        cubicSubdivide(x1, cpx1, cpx2, x2, percent, out);\n        cpx1 = out[1];\n        cpx2 = out[2];\n        x2 = out[3];\n        cubicSubdivide(y1, cpy1, cpy2, y2, percent, out);\n        cpy1 = out[1];\n        cpy2 = out[2];\n        y2 = out[3];\n      }\n\n      ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n    }\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  pointAt: function (t) {\n    return someVectorAt(this.shape, t, false);\n  },\n\n  /**\n   * Get tangent at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  tangentAt: function (t) {\n    var p = someVectorAt(this.shape, t, true);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;","var Path = require(\"../Path\");\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\nvar _default = Path.extend({\n  type: 'arc',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n  }\n});\n\nmodule.exports = _default;","var Path = require(\"./Path\");\n\n// CompoundPath to improve performance\nvar _default = Path.extend({\n  type: 'compound',\n  shape: {\n    paths: null\n  },\n  _updatePathDirty: function () {\n    var dirtyPath = this.__dirtyPath;\n    var paths = this.shape.paths;\n\n    for (var i = 0; i < paths.length; i++) {\n      // Mark as dirty if any subpath is dirty\n      dirtyPath = dirtyPath || paths[i].__dirtyPath;\n    }\n\n    this.__dirtyPath = dirtyPath;\n    this.__dirty = this.__dirty || dirtyPath;\n  },\n  beforeBrush: function () {\n    this._updatePathDirty();\n\n    var paths = this.shape.paths || [];\n    var scale = this.getGlobalScale(); // Update path scale\n\n    for (var i = 0; i < paths.length; i++) {\n      if (!paths[i].path) {\n        paths[i].createPathProxy();\n      }\n\n      paths[i].path.setScale(scale[0], scale[1]);\n    }\n  },\n  buildPath: function (ctx, shape) {\n    var paths = shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].buildPath(ctx, paths[i].shape, true);\n    }\n  },\n  afterBrush: function () {\n    var paths = this.shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].__dirtyPath = false;\n    }\n  },\n  getBoundingRect: function () {\n    this._updatePathDirty();\n\n    return Path.prototype.getBoundingRect.call(this);\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"../core/util\");\n\nvar Gradient = require(\"./Gradient\");\n\n/**\n * x, y, r are all percent from 0 to 1\n * @param {number} [x=0.5]\n * @param {number} [y=0.5]\n * @param {number} [r=0.5]\n * @param {Array.<Object>} [colorStops]\n * @param {boolean} [globalCoord=false]\n */\nvar RadialGradient = function (x, y, r, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'radial', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0.5 : x;\n  this.y = y == null ? 0.5 : y;\n  this.r = r == null ? 0.5 : r; // Can be cloned\n\n  this.type = 'radial'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nRadialGradient.prototype = {\n  constructor: RadialGradient\n};\nzrUtil.inherits(RadialGradient, Gradient);\nvar _default = RadialGradient;\nmodule.exports = _default;","var makeStyleMapper = require(\"./makeStyleMapper\");\n\nvar getItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor'], ['textPosition'], ['textAlign']]);\nvar _default = {\n  getItemStyle: function (excludes, includes) {\n    var style = getItemStyle(this, excludes, includes);\n    var lineDash = this.getBorderLineDash();\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getBorderLineDash: function () {\n    var lineType = this.get('borderType');\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [5, 5] : [1, 1];\n  }\n};\nmodule.exports = _default;","var _default = {\n  getBoxLayoutParams: function () {\n    return {\n      left: this.get('left'),\n      top: this.get('top'),\n      right: this.get('right'),\n      bottom: this.get('bottom'),\n      width: this.get('width'),\n      height: this.get('height')\n    };\n  }\n};\nmodule.exports = _default;","var platform = ''; // Navigator not exists in node\n\nif (typeof navigator !== 'undefined') {\n  platform = navigator.platform || '';\n}\n\nvar _default = {\n  // 全图默认背景\n  // backgroundColor: 'rgba(0,0,0,0)',\n  // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n  // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n  // 浅色\n  // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n  // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n  // 深色\n  color: ['#c23531', '#2f4554', '#61a0a8', '#d48265', '#91c7ae', '#749f83', '#ca8622', '#bda29a', '#6e7074', '#546570', '#c4ccd3'],\n  // 默认需要 Grid 配置项\n  // grid: {},\n  // 主题，主题\n  textStyle: {\n    // color: '#000',\n    // decoration: 'none',\n    // PENDING\n    fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n    // fontFamily: 'Arial, Verdana, sans-serif',\n    fontSize: 12,\n    fontStyle: 'normal',\n    fontWeight: 'normal'\n  },\n  // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n  // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n  // Default is source-over\n  blendMode: null,\n  animation: 'auto',\n  animationDuration: 1000,\n  animationDurationUpdate: 300,\n  animationEasing: 'exponentialOut',\n  animationEasingUpdate: 'cubicOut',\n  animationThreshold: 2000,\n  // Configuration for progressive/incremental rendering\n  progressiveThreshold: 3000,\n  progressive: 400,\n  // Threshold of if use single hover layer to optimize.\n  // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n  // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n  // which is unexpected.\n  // see example <echarts/test/heatmap-large.html>.\n  hoverLayerThreshold: 3000,\n  // See: module:echarts/scale/Time\n  useUTC: false\n};\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar echartsAPIList = ['getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed', 'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption', 'getViewOfComponentModel', 'getViewOfSeriesModel']; // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\nfunction ExtensionAPI(chartInstance) {\n  zrUtil.each(echartsAPIList, function (name) {\n    this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n  }, this);\n}\n\nvar _default = ExtensionAPI;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\nvar each = zrUtil.each;\nvar clone = zrUtil.clone;\nvar map = zrUtil.map;\nvar merge = zrUtil.merge;\nvar QUERY_REG = /^(min|max)?(.+)$/;\n/**\n * TERM EXPLANATIONS:\n *\n * [option]:\n *\n *     An object that contains definitions of components. For example:\n *     var option = {\n *         title: {...},\n *         legend: {...},\n *         visualMap: {...},\n *         series: [\n *             {data: [...]},\n *             {data: [...]},\n *             ...\n *         ]\n *     };\n *\n * [rawOption]:\n *\n *     An object input to echarts.setOption. 'rawOption' may be an\n *     'option', or may be an object contains multi-options. For example:\n *     var option = {\n *         baseOption: {\n *             title: {...},\n *             legend: {...},\n *             series: [\n *                 {data: [...]},\n *                 {data: [...]},\n *                 ...\n *             ]\n *         },\n *         timeline: {...},\n *         options: [\n *             {title: {...}, series: {data: [...]}},\n *             {title: {...}, series: {data: [...]}},\n *             ...\n *         ],\n *         media: [\n *             {\n *                 query: {maxWidth: 320},\n *                 option: {series: {x: 20}, visualMap: {show: false}}\n *             },\n *             {\n *                 query: {minWidth: 320, maxWidth: 720},\n *                 option: {series: {x: 500}, visualMap: {show: true}}\n *             },\n *             {\n *                 option: {series: {x: 1200}, visualMap: {show: true}}\n *             }\n *         ]\n *     };\n *\n * @alias module:echarts/model/OptionManager\n * @param {module:echarts/ExtensionAPI} api\n */\n\nfunction OptionManager(api) {\n  /**\n   * @private\n   * @type {module:echarts/ExtensionAPI}\n   */\n  this._api = api;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._timelineOptions = [];\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n\n  this._mediaList = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._mediaDefault;\n  /**\n   * -1, means default.\n   * empty means no media.\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._currentMediaIndices = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._optionBackup;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._newBaseOption;\n} // timeline.notMerge is not supported in ec3. Firstly there is rearly\n// case that notMerge is needed. Secondly supporting 'notMerge' requires\n// rawOption cloned and backuped when timeline changed, which does no\n// good to performance. What's more, that both timeline and setOption\n// method supply 'notMerge' brings complex and some problems.\n// Consider this case:\n// (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n// (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n\nOptionManager.prototype = {\n  constructor: OptionManager,\n\n  /**\n   * @public\n   * @param {Object} rawOption Raw option.\n   * @param {module:echarts/model/Global} ecModel\n   * @param {Array.<Function>} optionPreprocessorFuncs\n   * @return {Object} Init option\n   */\n  setOption: function (rawOption, optionPreprocessorFuncs) {\n    rawOption = clone(rawOption, true); // FIXME\n    // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n    var oldOptionBackup = this._optionBackup;\n    var newParsedOption = parseRawOption.call(this, rawOption, optionPreprocessorFuncs, !oldOptionBackup);\n    this._newBaseOption = newParsedOption.baseOption; // For setOption at second time (using merge mode);\n\n    if (oldOptionBackup) {\n      // Only baseOption can be merged.\n      mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption); // For simplicity, timeline options and media options do not support merge,\n      // that is, if you `setOption` twice and both has timeline options, the latter\n      // timeline opitons will not be merged to the formers, but just substitude them.\n\n      if (newParsedOption.timelineOptions.length) {\n        oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n      }\n\n      if (newParsedOption.mediaList.length) {\n        oldOptionBackup.mediaList = newParsedOption.mediaList;\n      }\n\n      if (newParsedOption.mediaDefault) {\n        oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n      }\n    } else {\n      this._optionBackup = newParsedOption;\n    }\n  },\n\n  /**\n   * @param {boolean} isRecreate\n   * @return {Object}\n   */\n  mountOption: function (isRecreate) {\n    var optionBackup = this._optionBackup; // TODO\n    // 如果没有reset功能则不clone。\n\n    this._timelineOptions = map(optionBackup.timelineOptions, clone);\n    this._mediaList = map(optionBackup.mediaList, clone);\n    this._mediaDefault = clone(optionBackup.mediaDefault);\n    this._currentMediaIndices = [];\n    return clone(isRecreate // this._optionBackup.baseOption, which is created at the first `setOption`\n    // called, and is merged into every new option by inner method `mergeOption`\n    // each time `setOption` called, can be only used in `isRecreate`, because\n    // its reliability is under suspicion. In other cases option merge is\n    // performed by `model.mergeOption`.\n    ? optionBackup.baseOption : this._newBaseOption);\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Object}\n   */\n  getTimelineOption: function (ecModel) {\n    var option;\n    var timelineOptions = this._timelineOptions;\n\n    if (timelineOptions.length) {\n      // getTimelineOption can only be called after ecModel inited,\n      // so we can get currentIndex from timelineModel.\n      var timelineModel = ecModel.getComponent('timeline');\n\n      if (timelineModel) {\n        option = clone(timelineOptions[timelineModel.getCurrentIndex()], true);\n      }\n    }\n\n    return option;\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Array.<Object>}\n   */\n  getMediaOption: function (ecModel) {\n    var ecWidth = this._api.getWidth();\n\n    var ecHeight = this._api.getHeight();\n\n    var mediaList = this._mediaList;\n    var mediaDefault = this._mediaDefault;\n    var indices = [];\n    var result = []; // No media defined.\n\n    if (!mediaList.length && !mediaDefault) {\n      return result;\n    } // Multi media may be applied, the latter defined media has higher priority.\n\n\n    for (var i = 0, len = mediaList.length; i < len; i++) {\n      if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n        indices.push(i);\n      }\n    } // FIXME\n    // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n\n\n    if (!indices.length && mediaDefault) {\n      indices = [-1];\n    }\n\n    if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n      result = map(indices, function (index) {\n        return clone(index === -1 ? mediaDefault.option : mediaList[index].option);\n      });\n    } // Otherwise return nothing.\n\n\n    this._currentMediaIndices = indices;\n    return result;\n  }\n};\n\nfunction parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n  var timelineOptions = [];\n  var mediaList = [];\n  var mediaDefault;\n  var baseOption; // Compatible with ec2.\n\n  var timelineOpt = rawOption.timeline;\n\n  if (rawOption.baseOption) {\n    baseOption = rawOption.baseOption;\n  } // For timeline\n\n\n  if (timelineOpt || rawOption.options) {\n    baseOption = baseOption || {};\n    timelineOptions = (rawOption.options || []).slice();\n  } // For media query\n\n\n  if (rawOption.media) {\n    baseOption = baseOption || {};\n    var media = rawOption.media;\n    each(media, function (singleMedia) {\n      if (singleMedia && singleMedia.option) {\n        if (singleMedia.query) {\n          mediaList.push(singleMedia);\n        } else if (!mediaDefault) {\n          // Use the first media default.\n          mediaDefault = singleMedia;\n        }\n      }\n    });\n  } // For normal option\n\n\n  if (!baseOption) {\n    baseOption = rawOption;\n  } // Set timelineOpt to baseOption in ec3,\n  // which is convenient for merge option.\n\n\n  if (!baseOption.timeline) {\n    baseOption.timeline = timelineOpt;\n  } // Preprocess.\n\n\n  each([baseOption].concat(timelineOptions).concat(zrUtil.map(mediaList, function (media) {\n    return media.option;\n  })), function (option) {\n    each(optionPreprocessorFuncs, function (preProcess) {\n      preProcess(option, isNew);\n    });\n  });\n  return {\n    baseOption: baseOption,\n    timelineOptions: timelineOptions,\n    mediaDefault: mediaDefault,\n    mediaList: mediaList\n  };\n}\n/**\n * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n * Support: width, height, aspectRatio\n * Can use max or min as prefix.\n */\n\n\nfunction applyMediaQuery(query, ecWidth, ecHeight) {\n  var realMap = {\n    width: ecWidth,\n    height: ecHeight,\n    aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n\n  };\n  var applicatable = true;\n  zrUtil.each(query, function (value, attr) {\n    var matched = attr.match(QUERY_REG);\n\n    if (!matched || !matched[1] || !matched[2]) {\n      return;\n    }\n\n    var operator = matched[1];\n    var realAttr = matched[2].toLowerCase();\n\n    if (!compare(realMap[realAttr], value, operator)) {\n      applicatable = false;\n    }\n  });\n  return applicatable;\n}\n\nfunction compare(real, expect, operator) {\n  if (operator === 'min') {\n    return real >= expect;\n  } else if (operator === 'max') {\n    return real <= expect;\n  } else {\n    // Equals\n    return real === expect;\n  }\n}\n\nfunction indicesEquals(indices1, indices2) {\n  // indices is always order by asc and has only finite number.\n  return indices1.join(',') === indices2.join(',');\n}\n/**\n * Consider case:\n * `chart.setOption(opt1);`\n * Then user do some interaction like dataZoom, dataView changing.\n * `chart.setOption(opt2);`\n * Then user press 'reset button' in toolbox.\n *\n * After doing that all of the interaction effects should be reset, the\n * chart should be the same as the result of invoke\n * `chart.setOption(opt1); chart.setOption(opt2);`.\n *\n * Although it is not able ensure that\n * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n * `chart.setOption(merge(opt1, opt2));` exactly,\n * this might be the only simple way to implement that feature.\n *\n * MEMO: We've considered some other approaches:\n * 1. Each model handle its self restoration but not uniform treatment.\n *     (Too complex in logic and error-prone)\n * 2. Use a shadow ecModel. (Performace expensive)\n */\n\n\nfunction mergeOption(oldOption, newOption) {\n  newOption = newOption || {};\n  each(newOption, function (newCptOpt, mainType) {\n    if (newCptOpt == null) {\n      return;\n    }\n\n    var oldCptOpt = oldOption[mainType];\n\n    if (!ComponentModel.hasClass(mainType)) {\n      oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n    } else {\n      newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n      oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n      var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n      oldOption[mainType] = map(mapResult, function (item) {\n        return item.option && item.exist ? merge(item.exist, item.option, true) : item.exist || item.option;\n      });\n    }\n  });\n}\n\nvar _default = OptionManager;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar isArray = _util.isArray;\nvar isObject = _util.isObject;\n\nvar compatStyle = require(\"./helper/compatStyle\");\n\nvar _model = require(\"../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\n// Compatitable with 2.0\nfunction get(opt, path) {\n  path = path.split(',');\n  var obj = opt;\n\n  for (var i = 0; i < path.length; i++) {\n    obj = obj && obj[path[i]];\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  return obj;\n}\n\nfunction set(opt, path, val, overwrite) {\n  path = path.split(',');\n  var obj = opt;\n  var key;\n\n  for (var i = 0; i < path.length - 1; i++) {\n    key = path[i];\n\n    if (obj[key] == null) {\n      obj[key] = {};\n    }\n\n    obj = obj[key];\n  }\n\n  if (overwrite || obj[path[i]] == null) {\n    obj[path[i]] = val;\n  }\n}\n\nfunction compatLayoutProperties(option) {\n  each(LAYOUT_PROPERTIES, function (prop) {\n    if (prop[0] in option && !(prop[1] in option)) {\n      option[prop[1]] = option[prop[0]];\n    }\n  });\n}\n\nvar LAYOUT_PROPERTIES = [['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']];\nvar COMPATITABLE_COMPONENTS = ['grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'];\nvar COMPATITABLE_SERIES = ['bar', 'boxplot', 'candlestick', 'chord', 'effectScatter', 'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel', 'pie', 'radar', 'sankey', 'scatter', 'treemap'];\n\nfunction _default(option, isTheme) {\n  compatStyle(option, isTheme); // Make sure series array for model initialization.\n\n  option.series = normalizeToArray(option.series);\n  each(option.series, function (seriesOpt) {\n    if (!isObject(seriesOpt)) {\n      return;\n    }\n\n    var seriesType = seriesOpt.type;\n\n    if (seriesType === 'pie' || seriesType === 'gauge') {\n      if (seriesOpt.clockWise != null) {\n        seriesOpt.clockwise = seriesOpt.clockWise;\n      }\n    }\n\n    if (seriesType === 'gauge') {\n      var pointerColor = get(seriesOpt, 'pointer.color');\n      pointerColor != null && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n    }\n\n    for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n      if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n        compatLayoutProperties(seriesOpt);\n        break;\n      }\n    }\n  }); // dataRange has changed to visualMap\n\n  if (option.dataRange) {\n    option.visualMap = option.dataRange;\n  }\n\n  each(COMPATITABLE_COMPONENTS, function (componentName) {\n    var options = option[componentName];\n\n    if (options) {\n      if (!isArray(options)) {\n        options = [options];\n      }\n\n      each(options, function (option) {\n        compatLayoutProperties(option);\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar POSSIBLE_STYLES = ['areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle', 'chordStyle', 'label', 'labelLine'];\n\nfunction compatItemStyle(opt) {\n  var itemStyleOpt = opt && opt.itemStyle;\n\n  if (!itemStyleOpt) {\n    return;\n  }\n\n  for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\n    var styleName = POSSIBLE_STYLES[i];\n    var normalItemStyleOpt = itemStyleOpt.normal;\n    var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n\n    if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].normal) {\n        opt[styleName].normal = normalItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n      }\n\n      normalItemStyleOpt[styleName] = null;\n    }\n\n    if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].emphasis) {\n        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n      }\n\n      emphasisItemStyleOpt[styleName] = null;\n    }\n  }\n}\n\nfunction compatTextStyle(opt, propName) {\n  var labelOptSingle = isObject(opt) && opt[propName];\n  var textStyle = isObject(labelOptSingle) && labelOptSingle.textStyle;\n\n  if (textStyle) {\n    for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\n      var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\n\n      if (textStyle.hasOwnProperty(propName)) {\n        labelOptSingle[propName] = textStyle[propName];\n      }\n    }\n  }\n}\n\nfunction compatLabelTextStyle(labelOpt) {\n  if (isObject(labelOpt)) {\n    compatTextStyle(labelOpt, 'normal');\n    compatTextStyle(labelOpt, 'emphasis');\n  }\n}\n\nfunction processSeries(seriesOpt) {\n  if (!isObject(seriesOpt)) {\n    return;\n  }\n\n  compatItemStyle(seriesOpt);\n  compatLabelTextStyle(seriesOpt.label); // treemap\n\n  compatLabelTextStyle(seriesOpt.upperLabel); // graph\n\n  compatLabelTextStyle(seriesOpt.edgeLabel);\n  var markPoint = seriesOpt.markPoint;\n  compatItemStyle(markPoint);\n  compatLabelTextStyle(markPoint && markPoint.label);\n  var markLine = seriesOpt.markLine;\n  compatItemStyle(seriesOpt.markLine);\n  compatLabelTextStyle(markLine && markLine.label);\n  var markArea = seriesOpt.markArea;\n  compatLabelTextStyle(markArea && markArea.label); // For gauge\n\n  compatTextStyle(seriesOpt, 'axisLabel');\n  compatTextStyle(seriesOpt, 'title');\n  compatTextStyle(seriesOpt, 'detail');\n  var data = seriesOpt.data;\n\n  if (data) {\n    for (var i = 0; i < data.length; i++) {\n      compatItemStyle(data[i]);\n      compatLabelTextStyle(data[i] && data[i].label);\n    }\n  } // mark point data\n\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint && markPoint.data) {\n    var mpData = markPoint.data;\n\n    for (var i = 0; i < mpData.length; i++) {\n      compatItemStyle(mpData[i]);\n      compatLabelTextStyle(mpData[i] && mpData[i].label);\n    }\n  } // mark line data\n\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine && markLine.data) {\n    var mlData = markLine.data;\n\n    for (var i = 0; i < mlData.length; i++) {\n      if (zrUtil.isArray(mlData[i])) {\n        compatItemStyle(mlData[i][0]);\n        compatLabelTextStyle(mlData[i][0] && mlData[i][0].label);\n        compatItemStyle(mlData[i][1]);\n        compatLabelTextStyle(mlData[i][1] && mlData[i][1].label);\n      } else {\n        compatItemStyle(mlData[i]);\n        compatLabelTextStyle(mlData[i] && mlData[i].label);\n      }\n    }\n  }\n}\n\nfunction toArr(o) {\n  return zrUtil.isArray(o) ? o : o ? [o] : [];\n}\n\nfunction toObj(o) {\n  return (zrUtil.isArray(o) ? o[0] : o) || {};\n}\n\nfunction _default(option, isTheme) {\n  each(toArr(option.series), function (seriesOpt) {\n    isObject(seriesOpt) && processSeries(seriesOpt);\n  });\n  var axes = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'];\n  isTheme && axes.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis');\n  each(axes, function (axisName) {\n    each(toArr(option[axisName]), function (axisOpt) {\n      if (axisOpt) {\n        compatTextStyle(axisOpt, 'axisLabel');\n        compatTextStyle(axisOpt.axisPointer, 'label');\n      }\n    });\n  });\n  each(toArr(option.parallel), function (parallelOpt) {\n    var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\n    compatTextStyle(parallelAxisDefault, 'axisLabel');\n    compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\n  });\n  each(toArr(option.calendar), function (calendarOpt) {\n    compatTextStyle(calendarOpt, 'dayLabel');\n    compatTextStyle(calendarOpt, 'monthLabel');\n    compatTextStyle(calendarOpt, 'yearLabel');\n  }); // radar.name.textStyle\n\n  each(toArr(option.radar), function (radarOpt) {\n    compatTextStyle(radarOpt, 'name');\n  });\n  each(toArr(option.geo), function (geoOpt) {\n    if (isObject(geoOpt)) {\n      compatLabelTextStyle(geoOpt.label);\n      each(toArr(geoOpt.regions), function (regionObj) {\n        compatLabelTextStyle(regionObj.label);\n      });\n    }\n  });\n  compatLabelTextStyle(toObj(option.timeline).label);\n  compatTextStyle(toObj(option.axisPointer), 'label');\n  compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\n}\n\nmodule.exports = _default;","var Gradient = require(\"zrender/lib/graphic/Gradient\");\n\nfunction _default(ecModel) {\n  function encodeColor(seriesModel) {\n    var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n    var data = seriesModel.getData();\n    var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n    || seriesModel.getColorFromPalette(seriesModel.get('name')); // Default color\n    // FIXME Set color function or use the platte color\n\n    data.setVisual('color', color); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof color === 'function' && !(color instanceof Gradient)) {\n        data.each(function (idx) {\n          data.setItemVisual(idx, 'color', color(seriesModel.getDataParams(idx)));\n        });\n      } // itemStyle in each data item\n\n\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        var color = itemModel.get(colorAccessPath, true);\n\n        if (color != null) {\n          data.setItemVisual(idx, 'color', color);\n        }\n      });\n    }\n  }\n\n  ecModel.eachRawSeries(encodeColor);\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\nvar PI = Math.PI;\n/**\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} [opts]\n * @param {string} [opts.text]\n * @param {string} [opts.color]\n * @param {string} [opts.textColor]\n * @return {module:zrender/Element}\n */\n\nfunction _default(api, opts) {\n  opts = opts || {};\n  zrUtil.defaults(opts, {\n    text: 'loading',\n    color: '#c23531',\n    textColor: '#000',\n    maskColor: 'rgba(255, 255, 255, 0.8)',\n    zlevel: 0\n  });\n  var mask = new graphic.Rect({\n    style: {\n      fill: opts.maskColor\n    },\n    zlevel: opts.zlevel,\n    z: 10000\n  });\n  var arc = new graphic.Arc({\n    shape: {\n      startAngle: -PI / 2,\n      endAngle: -PI / 2 + 0.1,\n      r: 10\n    },\n    style: {\n      stroke: opts.color,\n      lineCap: 'round',\n      lineWidth: 5\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  var labelRect = new graphic.Rect({\n    style: {\n      fill: 'none',\n      text: opts.text,\n      textPosition: 'right',\n      textDistance: 10,\n      textFill: opts.textColor\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  arc.animateShape(true).when(1000, {\n    endAngle: PI * 3 / 2\n  }).start('circularInOut');\n  arc.animateShape(true).when(1000, {\n    startAngle: PI * 3 / 2\n  }).delay(300).start('circularInOut');\n  var group = new graphic.Group();\n  group.add(arc);\n  group.add(labelRect);\n  group.add(mask); // Inject resize\n\n  group.resize = function () {\n    var cx = api.getWidth() / 2;\n    var cy = api.getHeight() / 2;\n    arc.setShape({\n      cx: cx,\n      cy: cy\n    });\n    var r = arc.shape.r;\n    labelRect.setShape({\n      x: cx - r,\n      y: cy - r,\n      width: r * 2,\n      height: r * 2\n    });\n    mask.setShape({\n      x: 0,\n      y: 0,\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  };\n\n  group.resize();\n  return group;\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar createListFromArray = require(\"./chart/helper/createListFromArray\");\n\nvar axisHelper = require(\"./coord/axisHelper\");\n\nvar axisModelCommonMixin = require(\"./coord/axisModelCommonMixin\");\n\nvar Model = require(\"./model/Model\");\n\nvar _completeDimensions = require(\"./data/helper/completeDimensions\");\n\nexports.completeDimensions = _completeDimensions;\n\nvar _symbol = require(\"./util/symbol\");\n\nexports.createSymbol = _symbol.createSymbol;\n\n/**\n * Create a muti dimension List structure from seriesModel.\n * @param  {module:echarts/model/Model} seriesModel\n * @return {module:echarts/data/List} list\n */\nfunction createList(seriesModel) {\n  var data = seriesModel.get('data');\n  return createListFromArray(data, seriesModel, seriesModel.ecModel);\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n */\n\n\n/**\n * Create scale\n * @param {Array.<number>} dataExtent\n * @param {Object|module:echarts/Model} option\n */\nfunction createScale(dataExtent, option) {\n  var axisModel = option;\n\n  if (!(option instanceof Model)) {\n    axisModel = new Model(option);\n    zrUtil.mixin(axisModel, axisModelCommonMixin);\n  }\n\n  var scale = axisHelper.createScaleByModel(axisModel);\n  scale.setExtent(dataExtent[0], dataExtent[1]);\n  axisHelper.niceScaleExtent(scale, axisModel);\n  return scale;\n}\n/**\n * Mixin common methods to axis model,\n *\n * Inlcude methods\n * `getFormattedLabels() => Array.<string>`\n * `getCategories() => Array.<string>`\n * `getMin(origin: boolean) => number`\n * `getMax(origin: boolean) => number`\n * `getNeedCrossZero() => boolean`\n * `setRange(start: number, end: number)`\n * `resetRange()`\n */\n\n\nfunction mixinAxisModelCommonMethods(Model) {\n  zrUtil.mixin(Model, axisModelCommonMixin);\n}\n\nexports.createList = createList;\nexports.createScale = createScale;\nexports.mixinAxisModelCommonMethods = mixinAxisModelCommonMethods;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n// FIXME only one data\nvar scaleProto = Scale.prototype;\nvar OrdinalScale = Scale.extend({\n  type: 'ordinal',\n  init: function (data, extent) {\n    this._data = data;\n    this._extent = extent || [0, data.length - 1];\n  },\n  parse: function (val) {\n    return typeof val === 'string' ? zrUtil.indexOf(this._data, val) // val might be float.\n    : Math.round(val);\n  },\n  contain: function (rank) {\n    rank = this.parse(rank);\n    return scaleProto.contain.call(this, rank) && this._data[rank] != null;\n  },\n\n  /**\n   * Normalize given rank or name to linear [0, 1]\n   * @param {number|string} [val]\n   * @return {number}\n   */\n  normalize: function (val) {\n    return scaleProto.normalize.call(this, this.parse(val));\n  },\n  scale: function (val) {\n    return Math.round(scaleProto.scale.call(this, val));\n  },\n\n  /**\n   * @return {Array}\n   */\n  getTicks: function () {\n    var ticks = [];\n    var extent = this._extent;\n    var rank = extent[0];\n\n    while (rank <= extent[1]) {\n      ticks.push(rank);\n      rank++;\n    }\n\n    return ticks;\n  },\n\n  /**\n   * Get item on rank n\n   * @param {number} n\n   * @return {string}\n   */\n  getLabel: function (n) {\n    return this._data[n];\n  },\n\n  /**\n   * @return {number}\n   */\n  count: function () {\n    return this._extent[1] - this._extent[0] + 1;\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getDataExtent(dim, false));\n  },\n  niceTicks: zrUtil.noop,\n  niceExtent: zrUtil.noop\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nOrdinalScale.create = function () {\n  return new OrdinalScale();\n};\n\nvar _default = OrdinalScale;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar formatUtil = require(\"../util/format\");\n\nvar scaleHelper = require(\"./helper\");\n\nvar IntervalScale = require(\"./Interval\");\n\n// [About UTC and local time zone]:\n// In most cases, `number.parseDate` will treat input data string as local time\n// (except time zone is specified in time string). And `format.formateTime` returns\n// local time by default. option.useUTC is false by default. This design have\n// concidered these common case:\n// (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n// in local time by default.\n// (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n// as its original time, without any time difference.\nvar intervalScaleProto = IntervalScale.prototype;\nvar mathCeil = Math.ceil;\nvar mathFloor = Math.floor;\nvar ONE_SECOND = 1000;\nvar ONE_MINUTE = ONE_SECOND * 60;\nvar ONE_HOUR = ONE_MINUTE * 60;\nvar ONE_DAY = ONE_HOUR * 24; // FIXME 公用？\n\nvar bisect = function (a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n\n    if (a[mid][1] < x) {\n      lo = mid + 1;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return lo;\n};\n/**\n * @alias module:echarts/coord/scale/Time\n * @constructor\n */\n\n\nvar TimeScale = IntervalScale.extend({\n  type: 'time',\n\n  /**\n   * @override\n   */\n  getLabel: function (val) {\n    var stepLvl = this._stepLvl;\n    var date = new Date(val);\n    return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n  },\n\n  /**\n   * @override\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      // Expand extent\n      extent[0] -= ONE_DAY;\n      extent[1] += ONE_DAY;\n    } // If there are no data and extent are [Infinity, -Infinity]\n\n\n    if (extent[1] === -Infinity && extent[0] === Infinity) {\n      var d = new Date();\n      extent[1] = +new Date(d.getFullYear(), d.getMonth(), d.getDate());\n      extent[0] = extent[1] - ONE_DAY;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n    }\n  },\n\n  /**\n   * @override\n   */\n  niceTicks: function (approxTickNum, minInterval, maxInterval) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n    var approxInterval = span / approxTickNum;\n\n    if (minInterval != null && approxInterval < minInterval) {\n      approxInterval = minInterval;\n    }\n\n    if (maxInterval != null && approxInterval > maxInterval) {\n      approxInterval = maxInterval;\n    }\n\n    var scaleLevelsLen = scaleLevels.length;\n    var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n    var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n    var interval = level[1]; // Same with interval scale if span is much larger than 1 year\n\n    if (level[0] === 'year') {\n      var yearSpan = span / interval; // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n      // var niceYearSpan = numberUtil.nice(yearSpan, false);\n\n      var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n      interval *= yearStep;\n    }\n\n    var timezoneOffset = this.getSetting('useUTC') ? 0 : new Date(+extent[0] || +extent[1]).getTimezoneOffset() * 60 * 1000;\n    var niceExtent = [Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset), Math.round(mathFloor((extent[1] - timezoneOffset) / interval) * interval + timezoneOffset)];\n    scaleHelper.fixExtent(niceExtent, extent);\n    this._stepLvl = level; // Interval will be used in getTicks\n\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n  parse: function (val) {\n    // val might be float.\n    return +numberUtil.parseDate(val);\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  TimeScale.prototype[methodName] = function (val) {\n    return intervalScaleProto[methodName].call(this, this.parse(val));\n  };\n}); // Steps from d3\n\nvar scaleLevels = [// Format              interval\n['hh:mm:ss', ONE_SECOND], // 1s\n['hh:mm:ss', ONE_SECOND * 5], // 5s\n['hh:mm:ss', ONE_SECOND * 10], // 10s\n['hh:mm:ss', ONE_SECOND * 15], // 15s\n['hh:mm:ss', ONE_SECOND * 30], // 30s\n['hh:mm\\nMM-dd', ONE_MINUTE], // 1m\n['hh:mm\\nMM-dd', ONE_MINUTE * 5], // 5m\n['hh:mm\\nMM-dd', ONE_MINUTE * 10], // 10m\n['hh:mm\\nMM-dd', ONE_MINUTE * 15], // 15m\n['hh:mm\\nMM-dd', ONE_MINUTE * 30], // 30m\n['hh:mm\\nMM-dd', ONE_HOUR], // 1h\n['hh:mm\\nMM-dd', ONE_HOUR * 2], // 2h\n['hh:mm\\nMM-dd', ONE_HOUR * 6], // 6h\n['hh:mm\\nMM-dd', ONE_HOUR * 12], // 12h\n['MM-dd\\nyyyy', ONE_DAY], // 1d\n['MM-dd\\nyyyy', ONE_DAY * 2], // 2d\n['MM-dd\\nyyyy', ONE_DAY * 3], // 3d\n['MM-dd\\nyyyy', ONE_DAY * 4], // 4d\n['MM-dd\\nyyyy', ONE_DAY * 5], // 5d\n['MM-dd\\nyyyy', ONE_DAY * 6], // 6d\n['week', ONE_DAY * 7], // 7d\n['MM-dd\\nyyyy', ONE_DAY * 10], // 10d\n['week', ONE_DAY * 14], // 2w\n['week', ONE_DAY * 21], // 3w\n['month', ONE_DAY * 31], // 1M\n['week', ONE_DAY * 42], // 6w\n['month', ONE_DAY * 62], // 2M\n['week', ONE_DAY * 42], // 10w\n['quarter', ONE_DAY * 380 / 4], // 3M\n['month', ONE_DAY * 31 * 4], // 4M\n['month', ONE_DAY * 31 * 5], // 5M\n['half-year', ONE_DAY * 380 / 2], // 6M\n['month', ONE_DAY * 31 * 8], // 8M\n['month', ONE_DAY * 31 * 10], // 10M\n['year', ONE_DAY * 380] // 1Y\n];\n/**\n * @param {module:echarts/model/Model}\n * @return {module:echarts/scale/Time}\n */\n\nTimeScale.create = function (model) {\n  return new TimeScale({\n    useUTC: model.ecModel.get('useUTC')\n  });\n};\n\nvar _default = TimeScale;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar IntervalScale = require(\"./Interval\");\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n// Use some method of IntervalScale\nvar scaleProto = Scale.prototype;\nvar intervalScaleProto = IntervalScale.prototype;\nvar getPrecisionSafe = numberUtil.getPrecisionSafe;\nvar roundingErrorFix = numberUtil.round;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar mathPow = Math.pow;\nvar mathLog = Math.log;\nvar LogScale = Scale.extend({\n  type: 'log',\n  base: 10,\n  $constructor: function () {\n    Scale.apply(this, arguments);\n    this._originalScale = new IntervalScale();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    var originalScale = this._originalScale;\n    var extent = this._extent;\n    var originalExtent = originalScale.getExtent();\n    return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n      var powVal = numberUtil.round(mathPow(this.base, val)); // Fix #4158\n\n      powVal = val === extent[0] && originalScale.__fixMin ? fixRoundingError(powVal, originalExtent[0]) : powVal;\n      powVal = val === extent[1] && originalScale.__fixMax ? fixRoundingError(powVal, originalExtent[1]) : powVal;\n      return powVal;\n    }, this);\n  },\n\n  /**\n   * @param {number} val\n   * @return {string}\n   */\n  getLabel: intervalScaleProto.getLabel,\n\n  /**\n   * @param  {number} val\n   * @return {number}\n   */\n  scale: function (val) {\n    val = scaleProto.scale.call(this, val);\n    return mathPow(this.base, val);\n  },\n\n  /**\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var base = this.base;\n    start = mathLog(start) / mathLog(base);\n    end = mathLog(end) / mathLog(base);\n    intervalScaleProto.setExtent.call(this, start, end);\n  },\n\n  /**\n   * @return {number} end\n   */\n  getExtent: function () {\n    var base = this.base;\n    var extent = scaleProto.getExtent.call(this);\n    extent[0] = mathPow(base, extent[0]);\n    extent[1] = mathPow(base, extent[1]); // Fix #4158\n\n    var originalScale = this._originalScale;\n    var originalExtent = originalScale.getExtent();\n    originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n    originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n    return extent;\n  },\n\n  /**\n   * @param  {Array.<number>} extent\n   */\n  unionExtent: function (extent) {\n    this._originalScale.unionExtent(extent);\n\n    var base = this.base;\n    extent[0] = mathLog(extent[0]) / mathLog(base);\n    extent[1] = mathLog(extent[1]) / mathLog(base);\n    scaleProto.unionExtent.call(this, extent);\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getDataExtent(dim, true, function (val) {\n      return val > 0;\n    }));\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   * @param  {number} [approxTickNum = 10] Given approx tick number\n   */\n  niceTicks: function (approxTickNum) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (span === Infinity || span <= 0) {\n      return;\n    }\n\n    var interval = numberUtil.quantity(span);\n    var err = approxTickNum / span * interval; // Filter ticks to get closer to the desired count.\n\n    if (err <= 0.5) {\n      interval *= 10;\n    } // Interval should be integer\n\n\n    while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n      interval *= 10;\n    }\n\n    var niceExtent = [numberUtil.round(mathCeil(extent[0] / interval) * interval), numberUtil.round(mathFloor(extent[1] / interval) * interval)];\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @override\n   */\n  niceExtent: function (opt) {\n    intervalScaleProto.niceExtent.call(this, opt);\n    var originalScale = this._originalScale;\n    originalScale.__fixMin = opt.fixMin;\n    originalScale.__fixMax = opt.fixMax;\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  LogScale.prototype[methodName] = function (val) {\n    val = mathLog(val) / mathLog(this.base);\n    return scaleProto[methodName].call(this, val);\n  };\n});\n\nLogScale.create = function () {\n  return new LogScale();\n};\n\nfunction fixRoundingError(val, originalVal) {\n  return roundingErrorFix(val, getPrecisionSafe(originalVal));\n}\n\nvar _default = LogScale;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./line/LineSeries\");\n\nrequire(\"./line/LineView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n\nvar dataSample = require(\"../processor/dataSample\");\n\nrequire(\"../component/gridSimple\");\n\n// In case developer forget to include grid component\necharts.registerVisual(zrUtil.curry(visualSymbol, 'line', 'circle', 'line'));\necharts.registerLayout(zrUtil.curry(layoutPoints, 'line')); // Down sample after filter\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, zrUtil.curry(dataSample, 'line'));","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.line',\n  dependencies: ['grid', 'polar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(option.data, this, ecModel);\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // stack: null\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // If clip the overflow value\n    clipOverflow: true,\n    // cursor: null,\n    label: {\n      normal: {\n        position: 'top'\n      }\n    },\n    // itemStyle: {\n    //     normal: {},\n    //     emphasis: {}\n    // },\n    lineStyle: {\n      normal: {\n        width: 2,\n        type: 'solid'\n      }\n    },\n    // areaStyle: {},\n    // false, 'start', 'end', 'middle'\n    step: false,\n    // Disabled if step is true\n    smooth: false,\n    smoothMonotone: null,\n    // 拐点图形类型\n    symbol: 'emptyCircle',\n    // 拐点图形大小\n    symbolSize: 4,\n    // 拐点图形旋转控制\n    symbolRotate: null,\n    // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n    showSymbol: true,\n    // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n    showAllSymbol: false,\n    // 是否连接断点\n    connectNulls: false,\n    // 数据过滤，'average', 'max', 'min', 'sum'\n    sampling: 'none',\n    animationEasing: 'linear',\n    // Disable progressive\n    progressive: 0,\n    hoverLayerThreshold: Infinity\n  }\n});\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar SymbolClz = require(\"../helper/Symbol\");\n\nvar lineAnimationDiff = require(\"./lineAnimationDiff\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar _poly = require(\"./poly\");\n\nvar Polyline = _poly.Polyline;\nvar Polygon = _poly.Polygon;\n\nvar ChartView = require(\"../../view/Chart\");\n\n// FIXME step not support polar\nfunction isPointsSame(points1, points2) {\n  if (points1.length !== points2.length) {\n    return;\n  }\n\n  for (var i = 0; i < points1.length; i++) {\n    var p1 = points1[i];\n    var p2 = points2[i];\n\n    if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n      return;\n    }\n  }\n\n  return true;\n}\n\nfunction getSmooth(smooth) {\n  return typeof smooth === 'number' ? smooth : smooth ? 0.3 : 0;\n}\n\nfunction getAxisExtentWithGap(axis) {\n  var extent = axis.getGlobalExtent();\n\n  if (axis.onBand) {\n    // Remove extra 1px to avoid line miter in clipped edge\n    var halfBandWidth = axis.getBandWidth() / 2 - 1;\n    var dir = extent[1] > extent[0] ? 1 : -1;\n    extent[0] += dir * halfBandWidth;\n    extent[1] -= dir * halfBandWidth;\n  }\n\n  return extent;\n}\n\nfunction sign(val) {\n  return val >= 0 ? 1 : -1;\n}\n/**\n * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n * @param {module:echarts/data/List} data\n * @param {Array.<Array.<number>>} points\n * @private\n */\n\n\nfunction getStackedOnPoints(coordSys, data) {\n  var baseAxis = coordSys.getBaseAxis();\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\n  var valueStart = 0;\n\n  if (!baseAxis.onZero) {\n    var extent = valueAxis.scale.getExtent();\n\n    if (extent[0] > 0) {\n      // Both positive\n      valueStart = extent[0];\n    } else if (extent[1] < 0) {\n      // Both negative\n      valueStart = extent[1];\n    } // If is one positive, and one negative, onZero shall be true\n\n  }\n\n  var valueDim = valueAxis.dim;\n  var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n  return data.mapArray([valueDim], function (val, idx) {\n    var stackedOnSameSign;\n    var stackedOn = data.stackedOn; // Find first stacked value with same sign\n\n    while (stackedOn && sign(stackedOn.get(valueDim, idx)) === sign(val)) {\n      stackedOnSameSign = stackedOn;\n      break;\n    }\n\n    var stackedData = [];\n    stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n    stackedData[1 - baseDataOffset] = stackedOnSameSign ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n    return coordSys.dataToPoint(stackedData);\n  }, true);\n}\n\nfunction createGridClipShape(cartesian, hasAnimation, seriesModel) {\n  var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n  var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n  var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n  var x = Math.min(xExtent[0], xExtent[1]);\n  var y = Math.min(yExtent[0], yExtent[1]);\n  var width = Math.max(xExtent[0], xExtent[1]) - x;\n  var height = Math.max(yExtent[0], yExtent[1]) - y;\n  var lineWidth = seriesModel.get('lineStyle.normal.width') || 2; // Expand clip shape to avoid clipping when line value exceeds axis\n\n  var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n\n  if (isHorizontal) {\n    y -= expandSize;\n    height += expandSize * 2;\n  } else {\n    x -= expandSize;\n    width += expandSize * 2;\n  }\n\n  var clipPath = new graphic.Rect({\n    shape: {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n    graphic.initProps(clipPath, {\n      shape: {\n        width: width,\n        height: height\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createPolarClipShape(polar, hasAnimation, seriesModel) {\n  var angleAxis = polar.getAngleAxis();\n  var radiusAxis = polar.getRadiusAxis();\n  var radiusExtent = radiusAxis.getExtent();\n  var angleExtent = angleAxis.getExtent();\n  var RADIAN = Math.PI / 180;\n  var clipPath = new graphic.Sector({\n    shape: {\n      cx: polar.cx,\n      cy: polar.cy,\n      r0: radiusExtent[0],\n      r: radiusExtent[1],\n      startAngle: -angleExtent[0] * RADIAN,\n      endAngle: -angleExtent[1] * RADIAN,\n      clockwise: angleAxis.inverse\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: -angleExtent[1] * RADIAN\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createClipShape(coordSys, hasAnimation, seriesModel) {\n  return coordSys.type === 'polar' ? createPolarClipShape(coordSys, hasAnimation, seriesModel) : createGridClipShape(coordSys, hasAnimation, seriesModel);\n}\n\nfunction turnPointsIntoStep(points, coordSys, stepTurnAt) {\n  var baseAxis = coordSys.getBaseAxis();\n  var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n  var stepPoints = [];\n\n  for (var i = 0; i < points.length - 1; i++) {\n    var nextPt = points[i + 1];\n    var pt = points[i];\n    stepPoints.push(pt);\n    var stepPt = [];\n\n    switch (stepTurnAt) {\n      case 'end':\n        stepPt[baseIndex] = nextPt[baseIndex];\n        stepPt[1 - baseIndex] = pt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n        break;\n\n      case 'middle':\n        // default is start\n        var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n        var stepPt2 = [];\n        stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt);\n        stepPoints.push(stepPt2);\n        break;\n\n      default:\n        stepPt[baseIndex] = pt[baseIndex];\n        stepPt[1 - baseIndex] = nextPt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n    }\n  } // Last points\n\n\n  points[i] && stepPoints.push(points[i]);\n  return stepPoints;\n}\n\nfunction getVisualGradient(data, coordSys) {\n  var visualMetaList = data.getVisual('visualMeta');\n\n  if (!visualMetaList || !visualMetaList.length || !data.count()) {\n    // When data.count() is 0, gradient range can not be calculated.\n    return;\n  }\n\n  var visualMeta;\n\n  for (var i = visualMetaList.length - 1; i >= 0; i--) {\n    // Can only be x or y\n    if (visualMetaList[i].dimension < 2) {\n      visualMeta = visualMetaList[i];\n      break;\n    }\n  }\n\n  if (!visualMeta || coordSys.type !== 'cartesian2d') {\n    return;\n  } // If the area to be rendered is bigger than area defined by LinearGradient,\n  // the canvas spec prescribes that the color of the first stop and the last\n  // stop should be used. But if two stops are added at offset 0, in effect\n  // browsers use the color of the second stop to render area outside\n  // LinearGradient. So we can only infinitesimally extend area defined in\n  // LinearGradient to render `outerColors`.\n\n\n  var dimension = visualMeta.dimension;\n  var dimName = data.dimensions[dimension];\n  var axis = coordSys.getAxis(dimName); // dataToCoor mapping may not be linear, but must be monotonic.\n\n  var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n    return {\n      coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n      color: stop.color\n    };\n  });\n  var stopLen = colorStops.length;\n  var outerColors = visualMeta.outerColors.slice();\n\n  if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n    colorStops.reverse();\n    outerColors.reverse();\n  }\n\n  var tinyExtent = 10; // Arbitrary value: 10px\n\n  var minCoord = colorStops[0].coord - tinyExtent;\n  var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n  var coordSpan = maxCoord - minCoord;\n\n  if (coordSpan < 1e-3) {\n    return 'transparent';\n  }\n\n  zrUtil.each(colorStops, function (stop) {\n    stop.offset = (stop.coord - minCoord) / coordSpan;\n  });\n  colorStops.push({\n    offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n    color: outerColors[1] || 'transparent'\n  });\n  colorStops.unshift({\n    // notice colorStops.length have been changed.\n    offset: stopLen ? colorStops[0].offset : 0.5,\n    color: outerColors[0] || 'transparent'\n  }); // zrUtil.each(colorStops, function (colorStop) {\n  //     // Make sure each offset has rounded px to avoid not sharp edge\n  //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n  // });\n\n  var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n  gradient[dimName] = minCoord;\n  gradient[dimName + '2'] = maxCoord;\n  return gradient;\n}\n\nvar _default = ChartView.extend({\n  type: 'line',\n  init: function () {\n    var lineGroup = new graphic.Group();\n    var symbolDraw = new SymbolDraw();\n    this.group.add(symbolDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineGroup = lineGroup;\n  },\n  render: function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var lineStyleModel = seriesModel.getModel('lineStyle.normal');\n    var areaStyleModel = seriesModel.getModel('areaStyle.normal');\n    var points = data.mapArray(data.getItemLayout, true);\n    var isCoordSysPolar = coordSys.type === 'polar';\n    var prevCoordSys = this._coordSys;\n    var symbolDraw = this._symbolDraw;\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var lineGroup = this._lineGroup;\n    var hasAnimation = seriesModel.get('animation');\n    var isAreaChart = !areaStyleModel.isEmpty();\n    var stackedOnPoints = getStackedOnPoints(coordSys, data);\n    var showSymbol = seriesModel.get('showSymbol');\n\n    var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol') && this._getSymbolIgnoreFunc(data, coordSys); // Remove temporary symbols\n\n\n    var oldData = this._data;\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    }); // Remove previous created symbols if showSymbol changed to false\n\n    if (!showSymbol) {\n      symbolDraw.remove();\n    }\n\n    group.add(lineGroup); // FIXME step not support polar\n\n    var step = !isCoordSysPolar && seriesModel.get('step'); // Initialization animation or coordinate system changed\n\n    if (!(polyline && prevCoordSys.type === coordSys.type && step === this._step)) {\n      showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n      if (step) {\n        // TODO If stacked series is not step\n        points = turnPointsIntoStep(points, coordSys, step);\n        stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n      }\n\n      polyline = this._newPolyline(points, coordSys, hasAnimation);\n\n      if (isAreaChart) {\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      }\n\n      lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n    } else {\n      if (isAreaChart && !polygon) {\n        // If areaStyle is added\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      } else if (polygon && !isAreaChart) {\n        // If areaStyle is removed\n        lineGroup.remove(polygon);\n        polygon = this._polygon = null;\n      } // Update clipPath\n\n\n      lineGroup.setClipPath(createClipShape(coordSys, false, seriesModel)); // Always update, or it is wrong in the case turning on legend\n      // because points are not changed\n\n      showSymbol && symbolDraw.updateData(data, isSymbolIgnore); // Stop symbol animation and sync with line points\n      // FIXME performance?\n\n      data.eachItemGraphicEl(function (el) {\n        el.stopAnimation(true);\n      }); // In the case data zoom triggerred refreshing frequently\n      // Data may not change if line has a category axis. So it should animate nothing\n\n      if (!isPointsSame(this._stackedOnPoints, stackedOnPoints) || !isPointsSame(this._points, points)) {\n        if (hasAnimation) {\n          this._updateAnimation(data, stackedOnPoints, coordSys, api, step);\n        } else {\n          // Not do it in update with animation\n          if (step) {\n            // TODO If stacked series is not step\n            points = turnPointsIntoStep(points, coordSys, step);\n            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n          }\n\n          polyline.setShape({\n            points: points\n          });\n          polygon && polygon.setShape({\n            points: points,\n            stackedOnPoints: stackedOnPoints\n          });\n        }\n      }\n    }\n\n    var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n    polyline.useStyle(zrUtil.defaults( // Use color in lineStyle first\n    lineStyleModel.getLineStyle(), {\n      fill: 'none',\n      stroke: visualColor,\n      lineJoin: 'bevel'\n    }));\n    var smooth = seriesModel.get('smooth');\n    smooth = getSmooth(seriesModel.get('smooth'));\n    polyline.setShape({\n      smooth: smooth,\n      smoothMonotone: seriesModel.get('smoothMonotone'),\n      connectNulls: seriesModel.get('connectNulls')\n    });\n\n    if (polygon) {\n      var stackedOn = data.stackedOn;\n      var stackedOnSmooth = 0;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: visualColor,\n        opacity: 0.7,\n        lineJoin: 'bevel'\n      }));\n\n      if (stackedOn) {\n        var stackedOnSeries = stackedOn.hostModel;\n        stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n      }\n\n      polygon.setShape({\n        smooth: smooth,\n        stackedOnSmooth: stackedOnSmooth,\n        smoothMonotone: seriesModel.get('smoothMonotone'),\n        connectNulls: seriesModel.get('connectNulls')\n      });\n    }\n\n    this._data = data; // Save the coordinate system for transition animation when data changed\n\n    this._coordSys = coordSys;\n    this._stackedOnPoints = stackedOnPoints;\n    this._points = points;\n    this._step = step;\n  },\n  dispose: function () {},\n  highlight: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (!symbol) {\n        // Create a temporary symbol if it is not exists\n        var pt = data.getItemLayout(dataIndex);\n\n        if (!pt) {\n          // Null data\n          return;\n        }\n\n        symbol = new SymbolClz(data, dataIndex);\n        symbol.position = pt;\n        symbol.setZ(seriesModel.get('zlevel'), seriesModel.get('z'));\n        symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n        symbol.__temp = true;\n        data.setItemGraphicEl(dataIndex, symbol); // Stop scale animation\n\n        symbol.stopSymbolAnimation(true);\n        this.group.add(symbol);\n      }\n\n      symbol.highlight();\n    } else {\n      // Highlight whole series\n      ChartView.prototype.highlight.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n  downplay: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (symbol) {\n        if (symbol.__temp) {\n          data.setItemGraphicEl(dataIndex, null);\n          this.group.remove(symbol);\n        } else {\n          symbol.downplay();\n        }\n      }\n    } else {\n      // FIXME\n      // can not downplay completely.\n      // Downplay whole series\n      ChartView.prototype.downplay.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolyline: function (points) {\n    var polyline = this._polyline; // Remove previous created polyline\n\n    if (polyline) {\n      this._lineGroup.remove(polyline);\n    }\n\n    polyline = new Polyline({\n      shape: {\n        points: points\n      },\n      silent: true,\n      z2: 10\n    });\n\n    this._lineGroup.add(polyline);\n\n    this._polyline = polyline;\n    return polyline;\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} stackedOnPoints\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolygon: function (points, stackedOnPoints) {\n    var polygon = this._polygon; // Remove previous created polygon\n\n    if (polygon) {\n      this._lineGroup.remove(polygon);\n    }\n\n    polygon = new Polygon({\n      shape: {\n        points: points,\n        stackedOnPoints: stackedOnPoints\n      },\n      silent: true\n    });\n\n    this._lineGroup.add(polygon);\n\n    this._polygon = polygon;\n    return polygon;\n  },\n\n  /**\n   * @private\n   */\n  _getSymbolIgnoreFunc: function (data, coordSys) {\n    var categoryAxis = coordSys.getAxesByScale('ordinal')[0]; // `getLabelInterval` is provided by echarts/component/axis\n\n    if (categoryAxis && categoryAxis.isLabelIgnored) {\n      return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n    }\n  },\n\n  /**\n   * @private\n   */\n  // FIXME Two value axis\n  _updateAnimation: function (data, stackedOnPoints, coordSys, api, step) {\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var seriesModel = data.hostModel;\n    var diff = lineAnimationDiff(this._data, data, this._stackedOnPoints, stackedOnPoints, this._coordSys, coordSys);\n    var current = diff.current;\n    var stackedOnCurrent = diff.stackedOnCurrent;\n    var next = diff.next;\n    var stackedOnNext = diff.stackedOnNext;\n\n    if (step) {\n      // TODO If stacked series is not step\n      current = turnPointsIntoStep(diff.current, coordSys, step);\n      stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n      next = turnPointsIntoStep(diff.next, coordSys, step);\n      stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n    } // `diff.current` is subset of `current` (which should be ensured by\n    // turnPointsIntoStep), so points in `__points` can be updated when\n    // points in `current` are update during animation.\n\n\n    polyline.shape.__points = diff.current;\n    polyline.shape.points = current;\n    graphic.updateProps(polyline, {\n      shape: {\n        points: next\n      }\n    }, seriesModel);\n\n    if (polygon) {\n      polygon.setShape({\n        points: current,\n        stackedOnPoints: stackedOnCurrent\n      });\n      graphic.updateProps(polygon, {\n        shape: {\n          points: next,\n          stackedOnPoints: stackedOnNext\n        }\n      }, seriesModel);\n    }\n\n    var updatedDataInfo = [];\n    var diffStatus = diff.status;\n\n    for (var i = 0; i < diffStatus.length; i++) {\n      var cmd = diffStatus[i].cmd;\n\n      if (cmd === '=') {\n        var el = data.getItemGraphicEl(diffStatus[i].idx1);\n\n        if (el) {\n          updatedDataInfo.push({\n            el: el,\n            ptIdx: i // Index of points\n\n          });\n        }\n      }\n    }\n\n    if (polyline.animators && polyline.animators.length) {\n      polyline.animators[0].during(function () {\n        for (var i = 0; i < updatedDataInfo.length; i++) {\n          var el = updatedDataInfo[i].el;\n          el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n        }\n      });\n    }\n  },\n  remove: function (ecModel) {\n    var group = this.group;\n    var oldData = this._data;\n\n    this._lineGroup.removeAll();\n\n    this._symbolDraw.remove(true); // Remove temporary created elements when highlighting\n\n\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    });\n    this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._data = null;\n  }\n});\n\nmodule.exports = _default;","// var arrayDiff = require('zrender/src/core/arrayDiff');\n// 'zrender/src/core/arrayDiff' has been used before, but it did\n// not do well in performance when roam with fixed dataZoom window.\nfunction sign(val) {\n  return val >= 0 ? 1 : -1;\n}\n\nfunction getStackedOnPoint(coordSys, data, idx) {\n  var baseAxis = coordSys.getBaseAxis();\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\n  var valueStart = baseAxis.onZero ? 0 : valueAxis.scale.getExtent()[0];\n  var valueDim = valueAxis.dim;\n  var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n  var stackedOnSameSign;\n  var stackedOn = data.stackedOn;\n  var val = data.get(valueDim, idx); // Find first stacked value with same sign\n\n  while (stackedOn && sign(stackedOn.get(valueDim, idx)) === sign(val)) {\n    stackedOnSameSign = stackedOn;\n    break;\n  }\n\n  var stackedData = [];\n  stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n  stackedData[1 - baseDataOffset] = stackedOnSameSign ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n  return coordSys.dataToPoint(stackedData);\n} // function convertToIntId(newIdList, oldIdList) {\n//     // Generate int id instead of string id.\n//     // Compare string maybe slow in score function of arrDiff\n//     // Assume id in idList are all unique\n//     var idIndicesMap = {};\n//     var idx = 0;\n//     for (var i = 0; i < newIdList.length; i++) {\n//         idIndicesMap[newIdList[i]] = idx;\n//         newIdList[i] = idx++;\n//     }\n//     for (var i = 0; i < oldIdList.length; i++) {\n//         var oldId = oldIdList[i];\n//         // Same with newIdList\n//         if (idIndicesMap[oldId]) {\n//             oldIdList[i] = idIndicesMap[oldId];\n//         }\n//         else {\n//             oldIdList[i] = idx++;\n//         }\n//     }\n// }\n\n\nfunction diffData(oldData, newData) {\n  var diffResult = [];\n  newData.diff(oldData).add(function (idx) {\n    diffResult.push({\n      cmd: '+',\n      idx: idx\n    });\n  }).update(function (newIdx, oldIdx) {\n    diffResult.push({\n      cmd: '=',\n      idx: oldIdx,\n      idx1: newIdx\n    });\n  }).remove(function (idx) {\n    diffResult.push({\n      cmd: '-',\n      idx: idx\n    });\n  }).execute();\n  return diffResult;\n}\n\nfunction _default(oldData, newData, oldStackedOnPoints, newStackedOnPoints, oldCoordSys, newCoordSys) {\n  var diff = diffData(oldData, newData); // var newIdList = newData.mapArray(newData.getId);\n  // var oldIdList = oldData.mapArray(oldData.getId);\n  // convertToIntId(newIdList, oldIdList);\n  // // FIXME One data ?\n  // diff = arrayDiff(oldIdList, newIdList);\n\n  var currPoints = [];\n  var nextPoints = []; // Points for stacking base line\n\n  var currStackedPoints = [];\n  var nextStackedPoints = [];\n  var status = [];\n  var sortedIndices = [];\n  var rawIndices = [];\n  var dims = newCoordSys.dimensions;\n\n  for (var i = 0; i < diff.length; i++) {\n    var diffItem = diff[i];\n    var pointAdded = true; // FIXME, animation is not so perfect when dataZoom window moves fast\n    // Which is in case remvoing or add more than one data in the tail or head\n\n    switch (diffItem.cmd) {\n      case '=':\n        var currentPt = oldData.getItemLayout(diffItem.idx);\n        var nextPt = newData.getItemLayout(diffItem.idx1); // If previous data is NaN, use next point directly\n\n        if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n          currentPt = nextPt.slice();\n        }\n\n        currPoints.push(currentPt);\n        nextPoints.push(nextPt);\n        currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n        nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n        rawIndices.push(newData.getRawIndex(diffItem.idx1));\n        break;\n\n      case '+':\n        var idx = diffItem.idx;\n        currPoints.push(oldCoordSys.dataToPoint([newData.get(dims[0], idx, true), newData.get(dims[1], idx, true)]));\n        nextPoints.push(newData.getItemLayout(idx).slice());\n        currStackedPoints.push(getStackedOnPoint(oldCoordSys, newData, idx));\n        nextStackedPoints.push(newStackedOnPoints[idx]);\n        rawIndices.push(newData.getRawIndex(idx));\n        break;\n\n      case '-':\n        var idx = diffItem.idx;\n        var rawIndex = oldData.getRawIndex(idx); // Data is replaced. In the case of dynamic data queue\n        // FIXME FIXME FIXME\n\n        if (rawIndex !== idx) {\n          currPoints.push(oldData.getItemLayout(idx));\n          nextPoints.push(newCoordSys.dataToPoint([oldData.get(dims[0], idx, true), oldData.get(dims[1], idx, true)]));\n          currStackedPoints.push(oldStackedOnPoints[idx]);\n          nextStackedPoints.push(getStackedOnPoint(newCoordSys, oldData, idx));\n          rawIndices.push(rawIndex);\n        } else {\n          pointAdded = false;\n        }\n\n    } // Original indices\n\n\n    if (pointAdded) {\n      status.push(diffItem);\n      sortedIndices.push(sortedIndices.length);\n    }\n  } // Diff result may be crossed if all items are changed\n  // Sort by data index\n\n\n  sortedIndices.sort(function (a, b) {\n    return rawIndices[a] - rawIndices[b];\n  });\n  var sortedCurrPoints = [];\n  var sortedNextPoints = [];\n  var sortedCurrStackedPoints = [];\n  var sortedNextStackedPoints = [];\n  var sortedStatus = [];\n\n  for (var i = 0; i < sortedIndices.length; i++) {\n    var idx = sortedIndices[i];\n    sortedCurrPoints[i] = currPoints[idx];\n    sortedNextPoints[i] = nextPoints[idx];\n    sortedCurrStackedPoints[i] = currStackedPoints[idx];\n    sortedNextStackedPoints[i] = nextStackedPoints[idx];\n    sortedStatus[i] = status[idx];\n  }\n\n  return {\n    current: sortedCurrPoints,\n    next: sortedNextPoints,\n    stackedOnCurrent: sortedCurrStackedPoints,\n    stackedOnNext: sortedNextStackedPoints,\n    status: sortedStatus\n  };\n}\n\nmodule.exports = _default;","var samplers = {\n  average: function (frame) {\n    var sum = 0;\n    var count = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      if (!isNaN(frame[i])) {\n        sum += frame[i];\n        count++;\n      }\n    } // Return NaN if count is 0\n\n\n    return count === 0 ? NaN : sum / count;\n  },\n  sum: function (frame) {\n    var sum = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      // Ignore NaN\n      sum += frame[i] || 0;\n    }\n\n    return sum;\n  },\n  max: function (frame) {\n    var max = -Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] > max && (max = frame[i]);\n    }\n\n    return max;\n  },\n  min: function (frame) {\n    var min = Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] < min && (min = frame[i]);\n    }\n\n    return min;\n  },\n  // TODO\n  // Median\n  nearest: function (frame) {\n    return frame[0];\n  }\n};\n\nvar indexSampler = function (frame, value) {\n  return Math.round(frame.length / 2);\n};\n\nfunction _default(seriesType, ecModel, api) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var sampling = seriesModel.get('sampling');\n    var coordSys = seriesModel.coordinateSystem; // Only cartesian2d support down sampling\n\n    if (coordSys.type === 'cartesian2d' && sampling) {\n      var baseAxis = coordSys.getBaseAxis();\n      var valueAxis = coordSys.getOtherAxis(baseAxis);\n      var extent = baseAxis.getExtent(); // Coordinste system has been resized\n\n      var size = extent[1] - extent[0];\n      var rate = Math.round(data.count() / size);\n\n      if (rate > 1) {\n        var sampler;\n\n        if (typeof sampling === 'string') {\n          sampler = samplers[sampling];\n        } else if (typeof sampling === 'function') {\n          sampler = sampling;\n        }\n\n        if (sampler) {\n          data = data.downSample(valueAxis.dim, 1 / rate, sampler, indexSampler);\n          seriesModel.setData(data);\n        }\n      }\n    }\n  }, this);\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Cartesian = require(\"./Cartesian\");\n\nfunction Cartesian2D(name) {\n  Cartesian.call(this, name);\n}\n\nCartesian2D.prototype = {\n  constructor: Cartesian2D,\n  type: 'cartesian2d',\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/cartesian/Axis2D}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAxis('x');\n  },\n\n  /**\n   * If contain point\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var axisX = this.getAxis('x');\n    var axisY = this.getAxis('y');\n    return axisX.contain(axisX.toLocalCoord(point[0])) && axisY.contain(axisY.toLocalCoord(point[1]));\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.getAxis('x').containData(data[0]) && this.getAxis('y').containData(data[1]);\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, clamp) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    return [xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)), yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))];\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, clamp) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    return [xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp), yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)];\n  },\n\n  /**\n   * Get other axis\n   * @param {module:echarts/coord/cartesian/Axis2D} axis\n   */\n  getOtherAxis: function (axis) {\n    return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n  }\n};\nzrUtil.inherits(Cartesian2D, Cartesian);\nvar _default = Cartesian2D;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\nfunction dimAxisMapper(dim) {\n  return this._axes[dim];\n}\n/**\n * @alias module:echarts/coord/Cartesian\n * @constructor\n */\n\n\nvar Cartesian = function (name) {\n  this._axes = {};\n  this._dimList = [];\n  /**\n   * @type {string}\n   */\n\n  this.name = name || '';\n};\n\nCartesian.prototype = {\n  constructor: Cartesian,\n  type: 'cartesian',\n\n  /**\n   * Get axis\n   * @param  {number|string} dim\n   * @return {module:echarts/coord/Cartesian~Axis}\n   */\n  getAxis: function (dim) {\n    return this._axes[dim];\n  },\n\n  /**\n   * Get axes list\n   * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n   */\n  getAxes: function () {\n    return zrUtil.map(this._dimList, dimAxisMapper, this);\n  },\n\n  /**\n   * Get axes list by given scale type\n   */\n  getAxesByScale: function (scaleType) {\n    scaleType = scaleType.toLowerCase();\n    return zrUtil.filter(this.getAxes(), function (axis) {\n      return axis.scale.type === scaleType;\n    });\n  },\n\n  /**\n   * Add axis\n   * @param {module:echarts/coord/Cartesian.Axis}\n   */\n  addAxis: function (axis) {\n    var dim = axis.dim;\n    this._axes[dim] = axis;\n\n    this._dimList.push(dim);\n  },\n\n  /**\n   * Convert data to coord in nd space\n   * @param {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  dataToCoord: function (val) {\n    return this._dataCoordConvert(val, 'dataToCoord');\n  },\n\n  /**\n   * Convert coord in nd space to data\n   * @param  {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  coordToData: function (val) {\n    return this._dataCoordConvert(val, 'coordToData');\n  },\n  _dataCoordConvert: function (input, method) {\n    var dimList = this._dimList;\n    var output = input instanceof Array ? [] : {};\n\n    for (var i = 0; i < dimList.length; i++) {\n      var dim = dimList[i];\n      var axis = this._axes[dim];\n      output[dim] = axis[method](input[dim]);\n    }\n\n    return output;\n  }\n};\nvar _default = Cartesian;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar Axis2D = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   */\n\n  this.position = position || 'bottom';\n};\n\nAxis2D.prototype = {\n  constructor: Axis2D,\n\n  /**\n   * Index of axis, can be used as key\n   */\n  index: 0,\n\n  /**\n   * If axis is on the zero position of the other axis\n   * @type {boolean}\n   */\n  onZero: false,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/cartesian/AxisModel}\n   */\n  model: null,\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * Each item cooresponds to this.getExtent(), which\n   * means globalExtent[0] may greater than globalExtent[1],\n   * unless `asc` is input.\n   *\n   * @param {boolean} [asc]\n   * @return {Array.<number>}\n   */\n  getGlobalExtent: function (asc) {\n    var ret = this.getExtent();\n    ret[0] = this.toGlobalCoord(ret[0]);\n    ret[1] = this.toGlobalCoord(ret[1]);\n    asc && ret[0] > ret[1] && ret.reverse();\n    return ret;\n  },\n  getOtherAxis: function () {\n    this.grid.getOtherAxis();\n  },\n\n  /**\n   * If label is ignored.\n   * Automatically used when axis is category and label can not be all shown\n   * @param  {number}  idx\n   * @return {boolean}\n   */\n  isLabelIgnored: function (idx) {\n    if (this.type === 'category') {\n      var labelInterval = this.getLabelInterval();\n      return typeof labelInterval === 'function' && !labelInterval(idx, this.scale.getLabel(idx)) || idx % (labelInterval + 1);\n    }\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n  },\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var localCoord = axis.toLocalCoord(80);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toLocalCoord: null,\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var globalCoord = axis.toLocalCoord(40);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toGlobalCoord: null\n};\nzrUtil.inherits(Axis2D, Axis);\nvar _default = Axis2D;\nmodule.exports = _default;","require(\"./AxisModel\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\nvar _default = ComponentModel.extend({\n  type: 'grid',\n  dependencies: ['xAxis', 'yAxis'],\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Grid}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    show: false,\n    zlevel: 0,\n    z: 0,\n    left: '10%',\n    top: 60,\n    right: '10%',\n    bottom: 60,\n    // If grid size contain label\n    containLabel: false,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderWidth: 1,\n    borderColor: '#ccc'\n  }\n});\n\nmodule.exports = _default;","require(\"../coord/cartesian/AxisModel\");\n\nrequire(\"./axis/CartesianAxisView\");","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar AxisView = require(\"./AxisView\");\n\nvar cartesianAxisHelper = require(\"./cartesianAxisHelper\");\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\nvar getInterval = AxisBuilder.getInterval;\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitArea', 'splitLine']; // function getAlignWithLabel(model, axisModel) {\n//     var alignWithLabel = model.get('alignWithLabel');\n//     if (alignWithLabel === 'auto') {\n//         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n//     }\n//     return alignWithLabel;\n// }\n\nvar CartesianAxisView = AxisView.extend({\n  type: 'cartesianAxis',\n  axisPointerClass: 'CartesianAxisPointer',\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var gridModel = axisModel.getCoordSysModel();\n    var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (axisModel.get(name + '.show')) {\n        this['_' + name](axisModel, gridModel, layout.labelInterval);\n      }\n    }, this);\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n    CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @param {number|Function} labelInterval\n   * @private\n   */\n  _splitLine: function (axisModel, gridModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineInterval = getInterval(splitLineModel, labelInterval);\n    lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords();\n    var ticks = axis.scale.getTicks();\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n    var p1 = [];\n    var p2 = []; // Simple optimization\n    // Batching the lines if color are the same\n\n    var lineStyle = lineStyleModel.getLineStyle();\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      if (ifIgnoreOnTick(axis, i, lineInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n\n      this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n        anid: 'line_' + ticks[i],\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: zrUtil.defaults({\n          stroke: lineColors[colorIndex]\n        }, lineStyle),\n        silent: true\n      })));\n    }\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @param {number|Function} labelInterval\n   * @private\n   */\n  _splitArea: function (axisModel, gridModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitAreaModel = axisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var ticksCoords = axis.getTicksCoords();\n    var ticks = axis.scale.getTicks();\n    var prevX = axis.toGlobalCoord(ticksCoords[0]);\n    var prevY = axis.toGlobalCoord(ticksCoords[0]);\n    var count = 0;\n    var areaInterval = getInterval(splitAreaModel, labelInterval);\n    var areaStyle = areaStyleModel.getAreaStyle();\n    areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      if (ifIgnoreOnTick(axis, i, areaInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (axis.isHorizontal()) {\n        x = prevX;\n        y = gridRect.y;\n        width = tickCoord - x;\n        height = gridRect.height;\n      } else {\n        x = gridRect.x;\n        y = prevY;\n        width = gridRect.width;\n        height = tickCoord - y;\n      }\n\n      var colorIndex = count++ % areaColors.length;\n\n      this._axisGroup.add(new graphic.Rect({\n        anid: 'area_' + ticks[i],\n        shape: {\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        },\n        style: zrUtil.defaults({\n          fill: areaColors[colorIndex]\n        }, areaStyle),\n        silent: true\n      }));\n\n      prevX = x + width;\n      prevY = y + height;\n    }\n  }\n});\nCartesianAxisView.extend({\n  type: 'xAxis'\n});\nCartesianAxisView.extend({\n  type: 'yAxis'\n});","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar barLayoutGrid = require(\"../layout/barGrid\");\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./bar/BarSeries\");\n\nrequire(\"./bar/BarView\");\n\nrequire(\"../component/gridSimple\");\n\n// In case developer forget to include grid component\necharts.registerLayout(zrUtil.curry(barLayoutGrid, 'bar')); // Visual coding for legend\n\necharts.registerVisual(function (ecModel) {\n  ecModel.eachSeriesByType('bar', function (seriesModel) {\n    var data = seriesModel.getData();\n    data.setVisual('legendSymbol', 'roundRect');\n  });\n});","var BaseBarSeries = require(\"./BaseBarSeries\");\n\nvar _default = BaseBarSeries.extend({\n  type: 'series.bar',\n  dependencies: ['grid', 'polar'],\n  brushSelector: 'rect'\n});\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _helper = require(\"./helper\");\n\nvar setLabel = _helper.setLabel;\n\nvar Model = require(\"../../model/Model\");\n\nvar barItemStyle = require(\"./barItemStyle\");\n\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'normal', 'barBorderWidth']; // FIXME\n// Just for compatible with ec2.\n\nzrUtil.extend(Model.prototype, barItemStyle);\n\nvar _default = echarts.extendChartView({\n  type: 'bar',\n  render: function (seriesModel, ecModel, api) {\n    var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n    if (coordinateSystemType === 'cartesian2d' || coordinateSystemType === 'polar') {\n      this._render(seriesModel, ecModel, api);\n    } else {}\n\n    return this.group;\n  },\n  dispose: zrUtil.noop,\n  _render: function (seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coord = seriesModel.coordinateSystem;\n    var baseAxis = coord.getBaseAxis();\n    var isHorizontalOrRadial;\n\n    if (coord.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n    } else if (coord.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n    }\n\n    var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n    data.diff(oldData).add(function (dataIndex) {\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var itemModel = data.getItemModel(dataIndex);\n      var layout = getLayout[coord.type](data, dataIndex, itemModel);\n      var el = elementCreator[coord.type](data, dataIndex, itemModel, layout, isHorizontalOrRadial, animationModel);\n      data.setItemGraphicEl(dataIndex, el);\n      group.add(el);\n      updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).update(function (newIndex, oldIndex) {\n      var el = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(el);\n        return;\n      }\n\n      var itemModel = data.getItemModel(newIndex);\n      var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n      if (el) {\n        graphic.updateProps(el, {\n          shape: layout\n        }, animationModel, newIndex);\n      } else {\n        el = elementCreator[coord.type](data, newIndex, itemModel, layout, isHorizontalOrRadial, animationModel, true);\n      }\n\n      data.setItemGraphicEl(newIndex, el); // Add back\n\n      group.add(el);\n      updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).remove(function (dataIndex) {\n      var el = oldData.getItemGraphicEl(dataIndex);\n\n      if (coord.type === 'cartesian2d') {\n        el && removeRect(dataIndex, animationModel, el);\n      } else {\n        el && removeSector(dataIndex, animationModel, el);\n      }\n    }).execute();\n    this._data = data;\n  },\n  remove: function (ecModel, api) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel.get('animation')) {\n      if (data) {\n        data.eachItemGraphicEl(function (el) {\n          if (el.type === 'sector') {\n            removeSector(el.dataIndex, ecModel, el);\n          } else {\n            removeRect(el.dataIndex, ecModel, el);\n          }\n        });\n      }\n    } else {\n      group.removeAll();\n    }\n  }\n});\n\nvar elementCreator = {\n  cartesian2d: function (data, dataIndex, itemModel, layout, isHorizontal, animationModel, isUpdate) {\n    var rect = new graphic.Rect({\n      shape: zrUtil.extend({}, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var rectShape = rect.shape;\n      var animateProperty = isHorizontal ? 'height' : 'width';\n      var animateTarget = {};\n      rectShape[animateProperty] = 0;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return rect;\n  },\n  polar: function (data, dataIndex, itemModel, layout, isRadial, animationModel, isUpdate) {\n    var sector = new graphic.Sector({\n      shape: zrUtil.extend({}, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var sectorShape = sector.shape;\n      var animateProperty = isRadial ? 'r' : 'endAngle';\n      var animateTarget = {};\n      sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return sector;\n  }\n};\n\nfunction removeRect(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      width: 0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nfunction removeSector(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      r: el.shape.r0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nvar getLayout = {\n  cartesian2d: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    var fixedLineWidth = getLineWidth(itemModel, layout); // fix layout with lineWidth\n\n    var signX = layout.width > 0 ? 1 : -1;\n    var signY = layout.height > 0 ? 1 : -1;\n    return {\n      x: layout.x + signX * fixedLineWidth / 2,\n      y: layout.y + signY * fixedLineWidth / 2,\n      width: layout.width - signX * fixedLineWidth,\n      height: layout.height - signY * fixedLineWidth\n    };\n  },\n  polar: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    return {\n      cx: layout.cx,\n      cy: layout.cy,\n      r0: layout.r0,\n      r: layout.r,\n      startAngle: layout.startAngle,\n      endAngle: layout.endAngle\n    };\n  }\n};\n\nfunction updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar) {\n  var color = data.getItemVisual(dataIndex, 'color');\n  var opacity = data.getItemVisual(dataIndex, 'opacity');\n  var itemStyleModel = itemModel.getModel('itemStyle.normal');\n  var hoverStyle = itemModel.getModel('itemStyle.emphasis').getBarItemStyle();\n\n  if (!isPolar) {\n    el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n  }\n\n  el.useStyle(zrUtil.defaults({\n    fill: color,\n    opacity: opacity\n  }, itemStyleModel.getBarItemStyle()));\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && el.attr('cursor', cursorStyle);\n  var labelPositionOutside = isHorizontal ? layout.height > 0 ? 'bottom' : 'top' : layout.width > 0 ? 'left' : 'right';\n\n  if (!isPolar) {\n    setLabel(el.style, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside);\n  }\n\n  graphic.setHoverStyle(el, hoverStyle);\n} // In case width or height are too small.\n\n\nfunction getLineWidth(itemModel, rawLayout) {\n  var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n  return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n}\n\nmodule.exports = _default;","var makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n\nvar getBarItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], // Compatitable with 2\n['stroke', 'barBorderColor'], ['lineWidth', 'barBorderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getBarItemStyle: function (excludes) {\n    var style = getBarItemStyle(this, excludes);\n\n    if (this.getBorderLineDash) {\n      var lineDash = this.getBorderLineDash();\n      lineDash && (style.lineDash = lineDash);\n    }\n\n    return style;\n  }\n};\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./pie/PieSeries\");\n\nrequire(\"./pie/PieView\");\n\nvar createDataSelectAction = require(\"../action/createDataSelectAction\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar pieLayout = require(\"./pie/pieLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\ncreateDataSelectAction('pie', [{\n  type: 'pieToggleSelect',\n  event: 'pieselectchanged',\n  method: 'toggleSelected'\n}, {\n  type: 'pieSelect',\n  event: 'pieselected',\n  method: 'select'\n}, {\n  type: 'pieUnSelect',\n  event: 'pieunselected',\n  method: 'unSelect'\n}]);\necharts.registerVisual(zrUtil.curry(dataColor, 'pie'));\necharts.registerLayout(zrUtil.curry(pieLayout, 'pie'));\necharts.registerProcessor(zrUtil.curry(dataFilter, 'pie'));","var echarts = require(\"../../echarts\");\n\nvar List = require(\"../../data/List\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar _number = require(\"../../util/number\");\n\nvar getPercentWithPrecision = _number.getPercentWithPrecision;\n\nvar completeDimensions = require(\"../../data/helper/completeDimensions\");\n\nvar dataSelectableMixin = require(\"../../component/helper/selectableMixin\");\n\nvar PieSeries = echarts.extendSeriesModel({\n  type: 'series.pie',\n  // Overwrite\n  init: function (option) {\n    PieSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n\n    this.updateSelectedMap(option.data);\n\n    this._defaultLabelLine(option);\n  },\n  // Overwrite\n  mergeOption: function (newOption) {\n    PieSeries.superCall(this, 'mergeOption', newOption);\n    this.updateSelectedMap(this.option.data);\n  },\n  getInitialData: function (option, ecModel) {\n    var dimensions = completeDimensions(['value'], option.data);\n    var list = new List(dimensions, this);\n    list.initData(option.data);\n    return list;\n  },\n  // Overwrite\n  getDataParams: function (dataIndex) {\n    var data = this.getData();\n    var params = PieSeries.superCall(this, 'getDataParams', dataIndex); // FIXME toFixed?\n\n    var valueList = [];\n    data.each('value', function (value) {\n      valueList.push(value);\n    });\n    params.percent = getPercentWithPrecision(valueList, dataIndex, data.hostModel.get('percentPrecision'));\n    params.$vars.push('percent');\n    return params;\n  },\n  _defaultLabelLine: function (option) {\n    // Extend labelLine emphasis\n    modelUtil.defaultEmphasis(option.labelLine, ['show']);\n    var labelLineNormalOpt = option.labelLine.normal;\n    var labelLineEmphasisOpt = option.labelLine.emphasis; // Not show label line if `label.normal.show = false`\n\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.normal.show;\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.label.emphasis.show;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    radius: [0, '75%'],\n    // 默认顺时针\n    clockwise: true,\n    startAngle: 90,\n    // 最小角度改为0\n    minAngle: 0,\n    // 选中时扇区偏移量\n    selectedOffset: 10,\n    // 高亮扇区偏移量\n    hoverOffset: 10,\n    // If use strategy to avoid label overlapping\n    avoidLabelOverlap: true,\n    // 选择模式，默认关闭，可选single，multiple\n    // selectedMode: false,\n    // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\n    // roseType: null,\n    percentPrecision: 2,\n    // If still show when all data zero.\n    stillShowZeroSum: true,\n    // cursor: null,\n    label: {\n      normal: {\n        // If rotate around circle\n        rotate: false,\n        show: true,\n        // 'outer', 'inside', 'center'\n        position: 'outer' // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n        // 默认使用全局文本样式，详见TEXTSTYLE\n        // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\n\n      },\n      emphasis: {}\n    },\n    // Enabled when label.normal.position is 'outer'\n    labelLine: {\n      normal: {\n        show: true,\n        // 引导线两段中的第一段长度\n        length: 15,\n        // 引导线两段中的第二段长度\n        length2: 15,\n        smooth: false,\n        lineStyle: {\n          // color: 各异,\n          width: 1,\n          type: 'solid'\n        }\n      }\n    },\n    itemStyle: {\n      normal: {\n        borderWidth: 1\n      },\n      emphasis: {}\n    },\n    // Animation type canbe expansion, scale\n    animationType: 'expansion',\n    animationEasing: 'cubicOut',\n    data: []\n  }\n});\nzrUtil.mixin(PieSeries, dataSelectableMixin);\nvar _default = PieSeries;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar ChartView = require(\"../../view/Chart\");\n\n/**\n * @param {module:echarts/model/Series} seriesModel\n * @param {boolean} hasAnimation\n * @inner\n */\nfunction updateDataSelected(uid, seriesModel, hasAnimation, api) {\n  var data = seriesModel.getData();\n  var dataIndex = this.dataIndex;\n  var name = data.getName(dataIndex);\n  var selectedOffset = seriesModel.get('selectedOffset');\n  api.dispatchAction({\n    type: 'pieToggleSelect',\n    from: uid,\n    name: name,\n    seriesId: seriesModel.id\n  });\n  data.each(function (idx) {\n    toggleItemSelected(data.getItemGraphicEl(idx), data.getItemLayout(idx), seriesModel.isSelected(data.getName(idx)), selectedOffset, hasAnimation);\n  });\n}\n/**\n * @param {module:zrender/graphic/Sector} el\n * @param {Object} layout\n * @param {boolean} isSelected\n * @param {number} selectedOffset\n * @param {boolean} hasAnimation\n * @inner\n */\n\n\nfunction toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\n  var midAngle = (layout.startAngle + layout.endAngle) / 2;\n  var dx = Math.cos(midAngle);\n  var dy = Math.sin(midAngle);\n  var offset = isSelected ? selectedOffset : 0;\n  var position = [dx * offset, dy * offset];\n  hasAnimation // animateTo will stop revious animation like update transition\n  ? el.animate().when(200, {\n    position: position\n  }).start('bounceOut') : el.attr('position', position);\n}\n/**\n * Piece of pie including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction PiePiece(data, idx) {\n  graphic.Group.call(this);\n  var sector = new graphic.Sector({\n    z2: 2\n  });\n  var polyline = new graphic.Polyline();\n  var text = new graphic.Text();\n  this.add(sector);\n  this.add(polyline);\n  this.add(text);\n  this.updateData(data, idx, true); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    polyline.ignore = polyline.hoverIgnore;\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    polyline.ignore = polyline.normalIgnore;\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar piePieceProto = PiePiece.prototype;\n\npiePieceProto.updateData = function (data, idx, firstCreate) {\n  var sector = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var sectorShape = zrUtil.extend({}, layout);\n  sectorShape.label = null;\n\n  if (firstCreate) {\n    sector.setShape(sectorShape);\n    var animationType = seriesModel.getShallow('animationType');\n\n    if (animationType === 'scale') {\n      sector.shape.r = layout.r0;\n      graphic.initProps(sector, {\n        shape: {\n          r: layout.r\n        }\n      }, seriesModel, idx);\n    } // Expansion\n    else {\n        sector.shape.endAngle = layout.startAngle;\n        graphic.updateProps(sector, {\n          shape: {\n            endAngle: layout.endAngle\n          }\n        }, seriesModel, idx);\n      }\n  } else {\n    graphic.updateProps(sector, {\n      shape: sectorShape\n    }, seriesModel, idx);\n  } // Update common style\n\n\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var visualColor = data.getItemVisual(idx, 'color');\n  sector.useStyle(zrUtil.defaults({\n    lineJoin: 'bevel',\n    fill: visualColor\n  }, itemStyleModel.getModel('normal').getItemStyle()));\n  sector.hoverStyle = itemStyleModel.getModel('emphasis').getItemStyle();\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && sector.attr('cursor', cursorStyle); // Toggle selected\n\n  toggleItemSelected(this, data.getItemLayout(idx), itemModel.get('selected'), seriesModel.get('selectedOffset'), seriesModel.get('animation'));\n\n  function onEmphasis() {\n    // Sector may has animation of updating data. Force to move to the last frame\n    // Or it may stopped on the wrong shape\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r + seriesModel.get('hoverOffset')\n      }\n    }, 300, 'elasticOut');\n  }\n\n  function onNormal() {\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r\n      }\n    }, 300, 'elasticOut');\n  }\n\n  sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n\n  if (itemModel.get('hoverAnimation') && seriesModel.isAnimationEnabled()) {\n    sector.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n\n  this._updateLabel(data, idx);\n\n  graphic.setHoverStyle(this);\n};\n\npiePieceProto._updateLabel = function (data, idx) {\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var labelLayout = layout.label;\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.updateProps(labelLine, {\n    shape: {\n      points: labelLayout.linePoints || [[labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]]\n    }\n  }, seriesModel, idx);\n  graphic.updateProps(labelText, {\n    style: {\n      x: labelLayout.x,\n      y: labelLayout.y\n    }\n  }, seriesModel, idx);\n  labelText.attr({\n    rotation: labelLayout.rotation,\n    origin: [labelLayout.x, labelLayout.y],\n    z2: 10\n  });\n  var labelModel = itemModel.getModel('label.normal');\n  var labelHoverModel = itemModel.getModel('label.emphasis');\n  var labelLineModel = itemModel.getModel('labelLine.normal');\n  var labelLineHoverModel = itemModel.getModel('labelLine.emphasis');\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\n    labelFetcher: data.hostModel,\n    labelDataIndex: idx,\n    defaultText: data.getName(idx),\n    autoColor: visualColor,\n    useInsideStyle: !!labelLayout.inside\n  }, {\n    textAlign: labelLayout.textAlign,\n    textVerticalAlign: labelLayout.verticalAlign,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n  labelText.hoverIgnore = !labelHoverModel.get('show');\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\n\n  labelLine.setStyle({\n    stroke: visualColor,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n  var smooth = labelLineModel.get('smooth');\n\n  if (smooth && smooth === true) {\n    smooth = 0.4;\n  }\n\n  labelLine.setShape({\n    smooth: smooth\n  });\n};\n\nzrUtil.inherits(PiePiece, graphic.Group); // Pie view\n\nvar PieView = ChartView.extend({\n  type: 'pie',\n  init: function () {\n    var sectorGroup = new graphic.Group();\n    this._sectorGroup = sectorGroup;\n  },\n  render: function (seriesModel, ecModel, api, payload) {\n    if (payload && payload.from === this.uid) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var hasAnimation = ecModel.get('animation');\n    var isFirstRender = !oldData;\n    var animationType = seriesModel.get('animationType');\n    var onSectorClick = zrUtil.curry(updateDataSelected, this.uid, seriesModel, hasAnimation, api);\n    var selectedMode = seriesModel.get('selectedMode');\n    data.diff(oldData).add(function (idx) {\n      var piePiece = new PiePiece(data, idx); // Default expansion animation\n\n      if (isFirstRender && animationType !== 'scale') {\n        piePiece.eachChild(function (child) {\n          child.stopAnimation(true);\n        });\n      }\n\n      selectedMode && piePiece.on('click', onSectorClick);\n      data.setItemGraphicEl(idx, piePiece);\n      group.add(piePiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx);\n      piePiece.off('click');\n      selectedMode && piePiece.on('click', onSectorClick);\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      group.remove(piePiece);\n    }).execute();\n\n    if (hasAnimation && isFirstRender && data.count() > 0 // Default expansion animation\n    && animationType !== 'scale') {\n      var shape = data.getItemLayout(0);\n      var r = Math.max(api.getWidth(), api.getHeight()) / 2;\n      var removeClipPath = zrUtil.bind(group.removeClipPath, group);\n      group.setClipPath(this._createClipPath(shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel));\n    }\n\n    this._data = data;\n  },\n  dispose: function () {},\n  _createClipPath: function (cx, cy, r, startAngle, clockwise, cb, seriesModel) {\n    var clipPath = new graphic.Sector({\n      shape: {\n        cx: cx,\n        cy: cy,\n        r0: 0,\n        r: r,\n        startAngle: startAngle,\n        endAngle: startAngle,\n        clockwise: clockwise\n      }\n    });\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\n      }\n    }, seriesModel, cb);\n    return clipPath;\n  },\n\n  /**\n   * @implement\n   */\n  containPoint: function (point, seriesModel) {\n    var data = seriesModel.getData();\n    var itemLayout = data.getItemLayout(0);\n\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  }\n});\nvar _default = PieView;\nmodule.exports = _default;","var _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\n\nvar labelLayout = require(\"./labelLayout\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar PI2 = Math.PI * 2;\nvar RADIAN = Math.PI / 180;\n\nfunction _default(seriesType, ecModel, api, payload) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var center = seriesModel.get('center');\n    var radius = seriesModel.get('radius');\n\n    if (!zrUtil.isArray(radius)) {\n      radius = [0, radius];\n    }\n\n    if (!zrUtil.isArray(center)) {\n      center = [center, center];\n    }\n\n    var width = api.getWidth();\n    var height = api.getHeight();\n    var size = Math.min(width, height);\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var r0 = parsePercent(radius[0], size / 2);\n    var r = parsePercent(radius[1], size / 2);\n    var data = seriesModel.getData();\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\n    var validDataCount = 0;\n    data.each('value', function (value) {\n      !isNaN(value) && validDataCount++;\n    });\n    var sum = data.getSum('value'); // Sum may be 0\n\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\n    var clockwise = seriesModel.get('clockwise');\n    var roseType = seriesModel.get('roseType');\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // [0...max]\n\n    var extent = data.getDataExtent('value');\n    extent[0] = 0; // In the case some sector angle is smaller than minAngle\n\n    var restAngle = PI2;\n    var valueSumLargerThanMinAngle = 0;\n    var currentAngle = startAngle;\n    var dir = clockwise ? 1 : -1;\n    data.each('value', function (value, idx) {\n      var angle;\n\n      if (isNaN(value)) {\n        data.setItemLayout(idx, {\n          angle: NaN,\n          startAngle: NaN,\n          endAngle: NaN,\n          clockwise: clockwise,\n          cx: cx,\n          cy: cy,\n          r0: r0,\n          r: roseType ? NaN : r\n        });\n        return;\n      } // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n\n\n      if (roseType !== 'area') {\n        angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\n      } else {\n        angle = PI2 / validDataCount;\n      }\n\n      if (angle < minAngle) {\n        angle = minAngle;\n        restAngle -= minAngle;\n      } else {\n        valueSumLargerThanMinAngle += value;\n      }\n\n      var endAngle = currentAngle + dir * angle;\n      data.setItemLayout(idx, {\n        angle: angle,\n        startAngle: currentAngle,\n        endAngle: endAngle,\n        clockwise: clockwise,\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: roseType ? linearMap(value, extent, [r0, r]) : r\n      });\n      currentAngle = endAngle;\n    }, true); // Some sector is constrained by minAngle\n    // Rest sectors needs recalculate angle\n\n    if (restAngle < PI2 && validDataCount) {\n      // Average the angle if rest angle is not enough after all angles is\n      // Constrained by minAngle\n      if (restAngle <= 1e-3) {\n        var angle = PI2 / validDataCount;\n        data.each('value', function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            layout.angle = angle;\n            layout.startAngle = startAngle + dir * idx * angle;\n            layout.endAngle = startAngle + dir * (idx + 1) * angle;\n          }\n        });\n      } else {\n        unitRadian = restAngle / valueSumLargerThanMinAngle;\n        currentAngle = startAngle;\n        data.each('value', function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            var angle = layout.angle === minAngle ? minAngle : value * unitRadian;\n            layout.startAngle = currentAngle;\n            layout.endAngle = currentAngle + dir * angle;\n            currentAngle += dir * angle;\n          }\n        });\n      }\n    }\n\n    labelLayout(seriesModel, r, width, height);\n  });\n}\n\nmodule.exports = _default;","var textContain = require(\"zrender/lib/contain/text\");\n\n// FIXME emphasis label position is not same with normal label position\nfunction adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight) {\n  list.sort(function (a, b) {\n    return a.y - b.y;\n  }); // 压\n\n  function shiftDown(start, end, delta, dir) {\n    for (var j = start; j < end; j++) {\n      list[j].y += delta;\n\n      if (j > start && j + 1 < end && list[j + 1].y > list[j].y + list[j].height) {\n        shiftUp(j, delta / 2);\n        return;\n      }\n    }\n\n    shiftUp(end - 1, delta / 2);\n  } // 弹\n\n\n  function shiftUp(end, delta) {\n    for (var j = end; j >= 0; j--) {\n      list[j].y -= delta;\n\n      if (j > 0 && list[j].y > list[j - 1].y + list[j - 1].height) {\n        break;\n      }\n    }\n  }\n\n  function changeX(list, isDownList, cx, cy, r, dir) {\n    var lastDeltaX = dir > 0 ? isDownList // 右侧\n    ? Number.MAX_VALUE // 下\n    : 0 // 上\n    : isDownList // 左侧\n    ? Number.MAX_VALUE // 下\n    : 0; // 上\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      // Not change x for center label\n      if (list[i].position === 'center') {\n        continue;\n      }\n\n      var deltaY = Math.abs(list[i].y - cy);\n      var length = list[i].len;\n      var length2 = list[i].len2;\n      var deltaX = deltaY < r + length ? Math.sqrt((r + length + length2) * (r + length + length2) - deltaY * deltaY) : Math.abs(list[i].x - cx);\n\n      if (isDownList && deltaX >= lastDeltaX) {\n        // 右下，左下\n        deltaX = lastDeltaX - 10;\n      }\n\n      if (!isDownList && deltaX <= lastDeltaX) {\n        // 右上，左上\n        deltaX = lastDeltaX + 10;\n      }\n\n      list[i].x = cx + deltaX * dir;\n      lastDeltaX = deltaX;\n    }\n  }\n\n  var lastY = 0;\n  var delta;\n  var len = list.length;\n  var upList = [];\n  var downList = [];\n\n  for (var i = 0; i < len; i++) {\n    delta = list[i].y - lastY;\n\n    if (delta < 0) {\n      shiftDown(i, len, -delta, dir);\n    }\n\n    lastY = list[i].y + list[i].height;\n  }\n\n  if (viewHeight - lastY < 0) {\n    shiftUp(len - 1, lastY - viewHeight);\n  }\n\n  for (var i = 0; i < len; i++) {\n    if (list[i].y >= cy) {\n      downList.push(list[i]);\n    } else {\n      upList.push(list[i]);\n    }\n  }\n\n  changeX(upList, false, cx, cy, r, dir);\n  changeX(downList, true, cx, cy, r, dir);\n}\n\nfunction avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight) {\n  var leftList = [];\n  var rightList = [];\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    if (labelLayoutList[i].x < cx) {\n      leftList.push(labelLayoutList[i]);\n    } else {\n      rightList.push(labelLayoutList[i]);\n    }\n  }\n\n  adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight);\n  adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight);\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    var linePoints = labelLayoutList[i].linePoints;\n\n    if (linePoints) {\n      var dist = linePoints[1][0] - linePoints[2][0];\n\n      if (labelLayoutList[i].x < cx) {\n        linePoints[2][0] = labelLayoutList[i].x + 3;\n      } else {\n        linePoints[2][0] = labelLayoutList[i].x - 3;\n      }\n\n      linePoints[1][1] = linePoints[2][1] = labelLayoutList[i].y;\n      linePoints[1][0] = linePoints[2][0] + dist;\n    }\n  }\n}\n\nfunction _default(seriesModel, r, viewWidth, viewHeight) {\n  var data = seriesModel.getData();\n  var labelLayoutList = [];\n  var cx;\n  var cy;\n  var hasLabelRotate = false;\n  data.each(function (idx) {\n    var layout = data.getItemLayout(idx);\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label.normal'); // Use position in normal or emphasis\n\n    var labelPosition = labelModel.get('position') || itemModel.get('label.emphasis.position');\n    var labelLineModel = itemModel.getModel('labelLine.normal');\n    var labelLineLen = labelLineModel.get('length');\n    var labelLineLen2 = labelLineModel.get('length2');\n    var midAngle = (layout.startAngle + layout.endAngle) / 2;\n    var dx = Math.cos(midAngle);\n    var dy = Math.sin(midAngle);\n    var textX;\n    var textY;\n    var linePoints;\n    var textAlign;\n    cx = layout.cx;\n    cy = layout.cy;\n    var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n\n    if (labelPosition === 'center') {\n      textX = layout.cx;\n      textY = layout.cy;\n      textAlign = 'center';\n    } else {\n      var x1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dx : layout.r * dx) + cx;\n      var y1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dy : layout.r * dy) + cy;\n      textX = x1 + dx * 3;\n      textY = y1 + dy * 3;\n\n      if (!isLabelInside) {\n        // For roseType\n        var x2 = x1 + dx * (labelLineLen + r - layout.r);\n        var y2 = y1 + dy * (labelLineLen + r - layout.r);\n        var x3 = x2 + (dx < 0 ? -1 : 1) * labelLineLen2;\n        var y3 = y2;\n        textX = x3 + (dx < 0 ? -5 : 5);\n        textY = y3;\n        linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n      }\n\n      textAlign = isLabelInside ? 'center' : dx > 0 ? 'left' : 'right';\n    }\n\n    var font = labelModel.getFont();\n    var labelRotate = labelModel.get('rotate') ? dx < 0 ? -midAngle + Math.PI : -midAngle : 0;\n    var text = seriesModel.getFormattedLabel(idx, 'normal') || data.getName(idx);\n    var textRect = textContain.getBoundingRect(text, font, textAlign, 'top');\n    hasLabelRotate = !!labelRotate;\n    layout.label = {\n      x: textX,\n      y: textY,\n      position: labelPosition,\n      height: textRect.height,\n      len: labelLineLen,\n      len2: labelLineLen2,\n      linePoints: linePoints,\n      textAlign: textAlign,\n      verticalAlign: 'middle',\n      rotation: labelRotate,\n      inside: isLabelInside\n    }; // Not layout the inside label\n\n    if (!isLabelInside) {\n      labelLayoutList.push(layout.label);\n    }\n  });\n\n  if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n    avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight);\n  }\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./scatter/ScatterSeries\");\n\nrequire(\"./scatter/ScatterView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n\nrequire(\"../component/gridSimple\");\n\n// In case developer forget to include grid component\necharts.registerVisual(zrUtil.curry(visualSymbol, 'scatter', 'circle', null));\necharts.registerLayout(zrUtil.curry(layoutPoints, 'scatter'));","var createListFromArray = require(\"../helper/createListFromArray\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.scatter',\n  dependencies: ['grid', 'polar', 'geo', 'singleAxis', 'calendar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(option.data, this, ecModel);\n  },\n  brushSelector: 'point',\n  defaultOption: {\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Polar coordinate system\n    // polarIndex: 0,\n    // Geo coordinate system\n    // geoIndex: 0,\n    // symbol: null,        // 图形类型\n    symbolSize: 10,\n    // 图形大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2\n    // symbolRotate: null,  // 图形旋转控制\n    large: false,\n    // Available when large is true\n    largeThreshold: 2000,\n    // cursor: null,\n    // label: {\n    // normal: {\n    // show: false\n    // distance: 5,\n    // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n    // position: 默认自适应，水平布局为'top'，垂直布局为'right'，可选为\n    //           'inside'|'left'|'right'|'top'|'bottom'\n    // 默认使用全局文本样式，详见TEXTSTYLE\n    //     }\n    // },\n    itemStyle: {\n      normal: {\n        opacity: 0.8 // color: 各异\n\n      }\n    }\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar LargeSymbolDraw = require(\"../helper/LargeSymbolDraw\");\n\necharts.extendChartView({\n  type: 'scatter',\n  init: function () {\n    this._normalSymbolDraw = new SymbolDraw();\n    this._largeSymbolDraw = new LargeSymbolDraw();\n  },\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var largeSymbolDraw = this._largeSymbolDraw;\n    var normalSymbolDraw = this._normalSymbolDraw;\n    var group = this.group;\n    var symbolDraw = seriesModel.get('large') && data.count() > seriesModel.get('largeThreshold') ? largeSymbolDraw : normalSymbolDraw;\n    this._symbolDraw = symbolDraw;\n    symbolDraw.updateData(data);\n    group.add(symbolDraw.group);\n    group.remove(symbolDraw === largeSymbolDraw ? normalSymbolDraw.group : largeSymbolDraw.group);\n  },\n  updateLayout: function (seriesModel) {\n    this._symbolDraw.updateLayout(seriesModel);\n  },\n  remove: function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove(api, true);\n  },\n  dispose: function () {}\n});","var graphic = require(\"../../util/graphic\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n// TODO Batch by color\nvar LargeSymbolPath = graphic.extendShape({\n  shape: {\n    points: null,\n    sizes: null\n  },\n  symbolProxy: null,\n  buildPath: function (path, shape) {\n    var points = shape.points;\n    var sizes = shape.sizes;\n    var symbolProxy = this.symbolProxy;\n    var symbolProxyShape = symbolProxy.shape;\n\n    for (var i = 0; i < points.length; i++) {\n      var pt = points[i];\n\n      if (isNaN(pt[0]) || isNaN(pt[1])) {\n        continue;\n      }\n\n      var size = sizes[i];\n\n      if (size[0] < 4) {\n        // Optimize for small symbol\n        path.rect(pt[0] - size[0] / 2, pt[1] - size[1] / 2, size[0], size[1]);\n      } else {\n        symbolProxyShape.x = pt[0] - size[0] / 2;\n        symbolProxyShape.y = pt[1] - size[1] / 2;\n        symbolProxyShape.width = size[0];\n        symbolProxyShape.height = size[1];\n        symbolProxy.buildPath(path, symbolProxyShape, true);\n      }\n    }\n  },\n  findDataIndex: function (x, y) {\n    var shape = this.shape;\n    var points = shape.points;\n    var sizes = shape.sizes; // Not consider transform\n    // Treat each element as a rect\n    // top down traverse\n\n    for (var i = points.length - 1; i >= 0; i--) {\n      var pt = points[i];\n      var size = sizes[i];\n      var x0 = pt[0] - size[0] / 2;\n      var y0 = pt[1] - size[1] / 2;\n\n      if (x >= x0 && y >= y0 && x <= x0 + size[0] && y <= y0 + size[1]) {\n        // i is dataIndex\n        return i;\n      }\n    }\n\n    return -1;\n  }\n});\n\nfunction LargeSymbolDraw() {\n  this.group = new graphic.Group();\n  this._symbolEl = new LargeSymbolPath({// rectHover: true,\n    // cursor: 'default'\n  });\n}\n\nvar largeSymbolProto = LargeSymbolDraw.prototype;\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n */\n\nlargeSymbolProto.updateData = function (data) {\n  this.group.removeAll();\n  var symbolEl = this._symbolEl;\n  var seriesModel = data.hostModel;\n  symbolEl.setShape({\n    points: data.mapArray(data.getItemLayout),\n    sizes: data.mapArray(function (idx) {\n      var size = data.getItemVisual(idx, 'symbolSize');\n\n      if (!(size instanceof Array)) {\n        size = [size, size];\n      }\n\n      return size;\n    })\n  }); // Create symbolProxy to build path for each data\n\n  symbolEl.symbolProxy = createSymbol(data.getVisual('symbol'), 0, 0, 0, 0); // Use symbolProxy setColor method\n\n  symbolEl.setColor = symbolEl.symbolProxy.setColor;\n  symbolEl.useStyle(seriesModel.getModel('itemStyle.normal').getItemStyle(['color']));\n  var visualColor = data.getVisual('color');\n\n  if (visualColor) {\n    symbolEl.setColor(visualColor);\n  } // Enable tooltip\n  // PENDING May have performance issue when path is extremely large\n\n\n  symbolEl.seriesIndex = seriesModel.seriesIndex;\n  symbolEl.on('mousemove', function (e) {\n    symbolEl.dataIndex = null;\n    var dataIndex = symbolEl.findDataIndex(e.offsetX, e.offsetY);\n\n    if (dataIndex >= 0) {\n      // Provide dataIndex for tooltip\n      symbolEl.dataIndex = dataIndex;\n    }\n  }); // Add back\n\n  this.group.add(symbolEl);\n};\n\nlargeSymbolProto.updateLayout = function (seriesModel) {\n  var data = seriesModel.getData();\n\n  this._symbolEl.setShape({\n    points: data.mapArray(data.getItemLayout)\n  });\n};\n\nlargeSymbolProto.remove = function () {\n  this.group.removeAll();\n};\n\nvar _default = LargeSymbolDraw;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"../component/radar\");\n\nrequire(\"./radar/RadarSeries\");\n\nrequire(\"./radar/RadarView\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar radarLayout = require(\"./radar/radarLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\nvar backwardCompat = require(\"./radar/backwardCompat\");\n\n// Must use radar component\necharts.registerVisual(zrUtil.curry(dataColor, 'radar'));\necharts.registerVisual(zrUtil.curry(visualSymbol, 'radar', 'circle', null));\necharts.registerLayout(radarLayout);\necharts.registerProcessor(zrUtil.curry(dataFilter, 'radar'));\necharts.registerPreprocessor(backwardCompat);","require(\"../coord/radar/Radar\");\n\nrequire(\"../coord/radar/RadarModel\");\n\nrequire(\"./radar/RadarView\");","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar IndicatorAxis = require(\"./IndicatorAxis\");\n\nvar IntervalScale = require(\"../../scale/Interval\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar _axisHelper = require(\"../axisHelper\");\n\nvar getScaleExtent = _axisHelper.getScaleExtent;\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n// TODO clockwise\nfunction Radar(radarModel, ecModel, api) {\n  this._model = radarModel;\n  /**\n   * Radar dimensions\n   * @type {Array.<string>}\n   */\n\n  this.dimensions = [];\n  this._indicatorAxes = zrUtil.map(radarModel.getIndicatorModels(), function (indicatorModel, idx) {\n    var dim = 'indicator_' + idx;\n    var indicatorAxis = new IndicatorAxis(dim, new IntervalScale());\n    indicatorAxis.name = indicatorModel.get('name'); // Inject model and axis\n\n    indicatorAxis.model = indicatorModel;\n    indicatorModel.axis = indicatorAxis;\n    this.dimensions.push(dim);\n    return indicatorAxis;\n  }, this);\n  this.resize(radarModel, api);\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.cx;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.cy;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.r;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.startAngle;\n}\n\nRadar.prototype.getIndicatorAxes = function () {\n  return this._indicatorAxes;\n};\n\nRadar.prototype.dataToPoint = function (value, indicatorIndex) {\n  var indicatorAxis = this._indicatorAxes[indicatorIndex];\n  return this.coordToPoint(indicatorAxis.dataToCoord(value), indicatorIndex);\n};\n\nRadar.prototype.coordToPoint = function (coord, indicatorIndex) {\n  var indicatorAxis = this._indicatorAxes[indicatorIndex];\n  var angle = indicatorAxis.angle;\n  var x = this.cx + coord * Math.cos(angle);\n  var y = this.cy - coord * Math.sin(angle);\n  return [x, y];\n};\n\nRadar.prototype.pointToData = function (pt) {\n  var dx = pt[0] - this.cx;\n  var dy = pt[1] - this.cy;\n  var radius = Math.sqrt(dx * dx + dy * dy);\n  dx /= radius;\n  dy /= radius;\n  var radian = Math.atan2(-dy, dx); // Find the closest angle\n  // FIXME index can calculated directly\n\n  var minRadianDiff = Infinity;\n  var closestAxis;\n  var closestAxisIdx = -1;\n\n  for (var i = 0; i < this._indicatorAxes.length; i++) {\n    var indicatorAxis = this._indicatorAxes[i];\n    var diff = Math.abs(radian - indicatorAxis.angle);\n\n    if (diff < minRadianDiff) {\n      closestAxis = indicatorAxis;\n      closestAxisIdx = i;\n      minRadianDiff = diff;\n    }\n  }\n\n  return [closestAxisIdx, +(closestAxis && closestAxis.coodToData(radius))];\n};\n\nRadar.prototype.resize = function (radarModel, api) {\n  var center = radarModel.get('center');\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  var viewSize = Math.min(viewWidth, viewHeight) / 2;\n  this.cx = numberUtil.parsePercent(center[0], viewWidth);\n  this.cy = numberUtil.parsePercent(center[1], viewHeight);\n  this.startAngle = radarModel.get('startAngle') * Math.PI / 180;\n  this.r = numberUtil.parsePercent(radarModel.get('radius'), viewSize);\n  zrUtil.each(this._indicatorAxes, function (indicatorAxis, idx) {\n    indicatorAxis.setExtent(0, this.r);\n    var angle = this.startAngle + idx * Math.PI * 2 / this._indicatorAxes.length; // Normalize to [-PI, PI]\n\n    angle = Math.atan2(Math.sin(angle), Math.cos(angle));\n    indicatorAxis.angle = angle;\n  }, this);\n};\n\nRadar.prototype.update = function (ecModel, api) {\n  var indicatorAxes = this._indicatorAxes;\n  var radarModel = this._model;\n  zrUtil.each(indicatorAxes, function (indicatorAxis) {\n    indicatorAxis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeriesByType('radar', function (radarSeries, idx) {\n    if (radarSeries.get('coordinateSystem') !== 'radar' || ecModel.getComponent('radar', radarSeries.get('radarIndex')) !== radarModel) {\n      return;\n    }\n\n    var data = radarSeries.getData();\n    zrUtil.each(indicatorAxes, function (indicatorAxis) {\n      indicatorAxis.scale.unionExtentFromData(data, indicatorAxis.dim);\n    });\n  }, this);\n  var splitNumber = radarModel.get('splitNumber');\n\n  function increaseInterval(interval) {\n    var exp10 = Math.pow(10, Math.floor(Math.log(interval) / Math.LN10)); // Increase interval\n\n    var f = interval / exp10;\n\n    if (f === 2) {\n      f = 5;\n    } else {\n      // f is 2 or 5\n      f *= 2;\n    }\n\n    return f * exp10;\n  } // Force all the axis fixing the maxSplitNumber.\n\n\n  zrUtil.each(indicatorAxes, function (indicatorAxis, idx) {\n    var rawExtent = getScaleExtent(indicatorAxis.scale, indicatorAxis.model);\n    niceScaleExtent(indicatorAxis.scale, indicatorAxis.model);\n    var axisModel = indicatorAxis.model;\n    var scale = indicatorAxis.scale;\n    var fixedMin = axisModel.getMin();\n    var fixedMax = axisModel.getMax();\n    var interval = scale.getInterval();\n\n    if (fixedMin != null && fixedMax != null) {\n      // User set min, max, divide to get new interval\n      scale.setExtent(+fixedMin, +fixedMax);\n      scale.setInterval((fixedMax - fixedMin) / splitNumber);\n    } else if (fixedMin != null) {\n      var max; // User set min, expand extent on the other side\n\n      do {\n        max = fixedMin + interval * splitNumber;\n        scale.setExtent(+fixedMin, max); // Interval must been set after extent\n        // FIXME\n\n        scale.setInterval(interval);\n        interval = increaseInterval(interval);\n      } while (max < rawExtent[1] && isFinite(max) && isFinite(rawExtent[1]));\n    } else if (fixedMax != null) {\n      var min; // User set min, expand extent on the other side\n\n      do {\n        min = fixedMax - interval * splitNumber;\n        scale.setExtent(min, +fixedMax);\n        scale.setInterval(interval);\n        interval = increaseInterval(interval);\n      } while (min > rawExtent[0] && isFinite(min) && isFinite(rawExtent[0]));\n    } else {\n      var nicedSplitNumber = scale.getTicks().length - 1;\n\n      if (nicedSplitNumber > splitNumber) {\n        interval = increaseInterval(interval);\n      } // PENDING\n\n\n      var center = Math.round((rawExtent[0] + rawExtent[1]) / 2 / interval) * interval;\n      var halfSplitNumber = Math.round(splitNumber / 2);\n      scale.setExtent(numberUtil.round(center - halfSplitNumber * interval), numberUtil.round(center + (splitNumber - halfSplitNumber) * interval));\n      scale.setInterval(interval);\n    }\n  });\n};\n/**\n * Radar dimensions is based on the data\n * @type {Array}\n */\n\n\nRadar.dimensions = [];\n\nRadar.create = function (ecModel, api) {\n  var radarList = [];\n  ecModel.eachComponent('radar', function (radarModel) {\n    var radar = new Radar(radarModel, ecModel, api);\n    radarList.push(radar);\n    radarModel.coordinateSystem = radar;\n  });\n  ecModel.eachSeriesByType('radar', function (radarSeries) {\n    if (radarSeries.get('coordinateSystem') === 'radar') {\n      // Inject coordinate system\n      radarSeries.coordinateSystem = radarList[radarSeries.get('radarIndex') || 0];\n    }\n  });\n  return radarList;\n};\n\nCoordinateSystem.register('radar', Radar);\nvar _default = Radar;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\nfunction IndicatorAxis(dim, scale, radiusExtent) {\n  Axis.call(this, dim, scale, radiusExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = 'value';\n  this.angle = 0;\n  /**\n   * Indicator name\n   * @type {string}\n   */\n\n  this.name = '';\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.model;\n}\n\nzrUtil.inherits(IndicatorAxis, Axis);\nvar _default = IndicatorAxis;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisDefault = require(\"../axisDefault\");\n\nvar Model = require(\"../../model/Model\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\nvar valueAxisDefault = axisDefault.valueAxis;\n\nfunction defaultsShow(opt, show) {\n  return zrUtil.defaults({\n    show: show\n  }, opt);\n}\n\nvar RadarModel = echarts.extendComponentModel({\n  type: 'radar',\n  optionUpdated: function () {\n    var boundaryGap = this.get('boundaryGap');\n    var splitNumber = this.get('splitNumber');\n    var scale = this.get('scale');\n    var axisLine = this.get('axisLine');\n    var axisTick = this.get('axisTick');\n    var axisLabel = this.get('axisLabel');\n    var nameTextStyle = this.get('name');\n    var showName = this.get('name.show');\n    var nameFormatter = this.get('name.formatter');\n    var nameGap = this.get('nameGap');\n    var triggerEvent = this.get('triggerEvent');\n    var indicatorModels = zrUtil.map(this.get('indicator') || [], function (indicatorOpt) {\n      // PENDING\n      if (indicatorOpt.max != null && indicatorOpt.max > 0 && !indicatorOpt.min) {\n        indicatorOpt.min = 0;\n      } else if (indicatorOpt.min != null && indicatorOpt.min < 0 && !indicatorOpt.max) {\n        indicatorOpt.max = 0;\n      }\n\n      var iNameTextStyle = nameTextStyle;\n\n      if (indicatorOpt.color != null) {\n        iNameTextStyle = zrUtil.defaults({\n          color: indicatorOpt.color\n        }, nameTextStyle);\n      } // Use same configuration\n\n\n      indicatorOpt = zrUtil.merge(zrUtil.clone(indicatorOpt), {\n        boundaryGap: boundaryGap,\n        splitNumber: splitNumber,\n        scale: scale,\n        axisLine: axisLine,\n        axisTick: axisTick,\n        axisLabel: axisLabel,\n        // Competitable with 2 and use text\n        name: indicatorOpt.text,\n        nameLocation: 'end',\n        nameGap: nameGap,\n        // min: 0,\n        nameTextStyle: iNameTextStyle,\n        triggerEvent: triggerEvent\n      }, false);\n\n      if (!showName) {\n        indicatorOpt.name = '';\n      }\n\n      if (typeof nameFormatter === 'string') {\n        var indName = indicatorOpt.name;\n        indicatorOpt.name = nameFormatter.replace('{value}', indName != null ? indName : '');\n      } else if (typeof nameFormatter === 'function') {\n        indicatorOpt.name = nameFormatter(indicatorOpt.name, indicatorOpt);\n      }\n\n      var model = zrUtil.extend(new Model(indicatorOpt, null, this.ecModel), axisModelCommonMixin); // For triggerEvent.\n\n      model.mainType = 'radar';\n      model.componentIndex = this.componentIndex;\n      return model;\n    }, this);\n\n    this.getIndicatorModels = function () {\n      return indicatorModels;\n    };\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    center: ['50%', '50%'],\n    radius: '75%',\n    startAngle: 90,\n    name: {\n      show: true // formatter: null\n      // textStyle: {}\n\n    },\n    boundaryGap: [0, 0],\n    splitNumber: 5,\n    nameGap: 15,\n    scale: false,\n    // Polygon or circle\n    shape: 'polygon',\n    axisLine: zrUtil.merge({\n      lineStyle: {\n        color: '#bbb'\n      }\n    }, valueAxisDefault.axisLine),\n    axisLabel: defaultsShow(valueAxisDefault.axisLabel, false),\n    axisTick: defaultsShow(valueAxisDefault.axisTick, false),\n    splitLine: defaultsShow(valueAxisDefault.splitLine, true),\n    splitArea: defaultsShow(valueAxisDefault.splitArea, true),\n    // {text, min, max}\n    indicator: []\n  }\n});\nvar _default = RadarModel;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\n\nvar _default = echarts.extendComponentView({\n  type: 'radar',\n  render: function (radarModel, ecModel, api) {\n    var group = this.group;\n    group.removeAll();\n\n    this._buildAxes(radarModel);\n\n    this._buildSplitLineAndArea(radarModel);\n  },\n  _buildAxes: function (radarModel) {\n    var radar = radarModel.coordinateSystem;\n    var indicatorAxes = radar.getIndicatorAxes();\n    var axisBuilders = zrUtil.map(indicatorAxes, function (indicatorAxis) {\n      var axisBuilder = new AxisBuilder(indicatorAxis.model, {\n        position: [radar.cx, radar.cy],\n        rotation: indicatorAxis.angle,\n        labelDirection: -1,\n        tickDirection: -1,\n        nameDirection: 1\n      });\n      return axisBuilder;\n    });\n    zrUtil.each(axisBuilders, function (axisBuilder) {\n      zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n      this.group.add(axisBuilder.getGroup());\n    }, this);\n  },\n  _buildSplitLineAndArea: function (radarModel) {\n    var radar = radarModel.coordinateSystem;\n    var indicatorAxes = radar.getIndicatorAxes();\n\n    if (!indicatorAxes.length) {\n      return;\n    }\n\n    var shape = radarModel.get('shape');\n    var splitLineModel = radarModel.getModel('splitLine');\n    var splitAreaModel = radarModel.getModel('splitArea');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var showSplitLine = splitLineModel.get('show');\n    var showSplitArea = splitAreaModel.get('show');\n    var splitLineColors = lineStyleModel.get('color');\n    var splitAreaColors = areaStyleModel.get('color');\n    splitLineColors = zrUtil.isArray(splitLineColors) ? splitLineColors : [splitLineColors];\n    splitAreaColors = zrUtil.isArray(splitAreaColors) ? splitAreaColors : [splitAreaColors];\n    var splitLines = [];\n    var splitAreas = [];\n\n    function getColorIndex(areaOrLine, areaOrLineColorList, idx) {\n      var colorIndex = idx % areaOrLineColorList.length;\n      areaOrLine[colorIndex] = areaOrLine[colorIndex] || [];\n      return colorIndex;\n    }\n\n    if (shape === 'circle') {\n      var ticksRadius = indicatorAxes[0].getTicksCoords();\n      var cx = radar.cx;\n      var cy = radar.cy;\n\n      for (var i = 0; i < ticksRadius.length; i++) {\n        if (showSplitLine) {\n          var colorIndex = getColorIndex(splitLines, splitLineColors, i);\n          splitLines[colorIndex].push(new graphic.Circle({\n            shape: {\n              cx: cx,\n              cy: cy,\n              r: ticksRadius[i]\n            }\n          }));\n        }\n\n        if (showSplitArea && i < ticksRadius.length - 1) {\n          var colorIndex = getColorIndex(splitAreas, splitAreaColors, i);\n          splitAreas[colorIndex].push(new graphic.Ring({\n            shape: {\n              cx: cx,\n              cy: cy,\n              r0: ticksRadius[i],\n              r: ticksRadius[i + 1]\n            }\n          }));\n        }\n      }\n    } // Polyyon\n    else {\n        var realSplitNumber;\n        var axesTicksPoints = zrUtil.map(indicatorAxes, function (indicatorAxis, idx) {\n          var ticksCoords = indicatorAxis.getTicksCoords();\n          realSplitNumber = realSplitNumber == null ? ticksCoords.length - 1 : Math.min(ticksCoords.length - 1, realSplitNumber);\n          return zrUtil.map(ticksCoords, function (tickCoord) {\n            return radar.coordToPoint(tickCoord, idx);\n          });\n        });\n        var prevPoints = [];\n\n        for (var i = 0; i <= realSplitNumber; i++) {\n          var points = [];\n\n          for (var j = 0; j < indicatorAxes.length; j++) {\n            points.push(axesTicksPoints[j][i]);\n          } // Close\n\n\n          if (points[0]) {\n            points.push(points[0].slice());\n          } else {}\n\n          if (showSplitLine) {\n            var colorIndex = getColorIndex(splitLines, splitLineColors, i);\n            splitLines[colorIndex].push(new graphic.Polyline({\n              shape: {\n                points: points\n              }\n            }));\n          }\n\n          if (showSplitArea && prevPoints) {\n            var colorIndex = getColorIndex(splitAreas, splitAreaColors, i - 1);\n            splitAreas[colorIndex].push(new graphic.Polygon({\n              shape: {\n                points: points.concat(prevPoints)\n              }\n            }));\n          }\n\n          prevPoints = points.slice().reverse();\n        }\n      }\n\n    var lineStyle = lineStyleModel.getLineStyle();\n    var areaStyle = areaStyleModel.getAreaStyle(); // Add splitArea before splitLine\n\n    zrUtil.each(splitAreas, function (splitAreas, idx) {\n      this.group.add(graphic.mergePath(splitAreas, {\n        style: zrUtil.defaults({\n          stroke: 'none',\n          fill: splitAreaColors[idx % splitAreaColors.length]\n        }, areaStyle),\n        silent: true\n      }));\n    }, this);\n    zrUtil.each(splitLines, function (splitLines, idx) {\n      this.group.add(graphic.mergePath(splitLines, {\n        style: zrUtil.defaults({\n          fill: 'none',\n          stroke: splitLineColors[idx % splitLineColors.length]\n        }, lineStyle),\n        silent: true\n      }));\n    }, this);\n  }\n});\n\nmodule.exports = _default;","var SeriesModel = require(\"../../model/Series\");\n\nvar List = require(\"../../data/List\");\n\nvar completeDimensions = require(\"../../data/helper/completeDimensions\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\nvar RadarSeries = SeriesModel.extend({\n  type: 'series.radar',\n  dependencies: ['radar'],\n  // Overwrite\n  init: function (option) {\n    RadarSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n  },\n  getInitialData: function (option, ecModel) {\n    var data = option.data || [];\n    var dimensions = completeDimensions([], data, {\n      extraPrefix: 'indicator_',\n      extraFromZero: true\n    });\n    var list = new List(dimensions, this);\n    list.initData(data);\n    return list;\n  },\n  formatTooltip: function (dataIndex) {\n    var value = this.getRawValue(dataIndex);\n    var coordSys = this.coordinateSystem;\n    var indicatorAxes = coordSys.getIndicatorAxes();\n    var name = this.getData().getName(dataIndex);\n    return encodeHTML(name === '' ? this.name : name) + '<br/>' + zrUtil.map(indicatorAxes, function (axis, idx) {\n      return encodeHTML(axis.name + ' : ' + value[idx]);\n    }).join('<br />');\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'radar',\n    legendHoverLink: true,\n    radarIndex: 0,\n    lineStyle: {\n      normal: {\n        width: 2,\n        type: 'solid'\n      }\n    },\n    label: {\n      normal: {\n        position: 'top'\n      }\n    },\n    // areaStyle: {\n    // },\n    // itemStyle: {}\n    symbol: 'emptyCircle',\n    symbolSize: 4 // symbolRotate: null\n\n  }\n});\nvar _default = RadarSeries;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar symbolUtil = require(\"../../util/symbol\");\n\nfunction normalizeSymbolSize(symbolSize) {\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [+symbolSize, +symbolSize];\n  }\n\n  return symbolSize;\n}\n\nvar _default = echarts.extendChartView({\n  type: 'radar',\n  render: function (seriesModel, ecModel, api) {\n    var polar = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n\n    function createSymbol(data, idx) {\n      var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n      var color = data.getItemVisual(idx, 'color');\n\n      if (symbolType === 'none') {\n        return;\n      }\n\n      var symbolSize = normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\n      var symbolPath = symbolUtil.createSymbol(symbolType, -1, -1, 2, 2, color);\n      symbolPath.attr({\n        style: {\n          strokeNoScale: true\n        },\n        z2: 100,\n        scale: [symbolSize[0] / 2, symbolSize[1] / 2]\n      });\n      return symbolPath;\n    }\n\n    function updateSymbols(oldPoints, newPoints, symbolGroup, data, idx, isInit) {\n      // Simply rerender all\n      symbolGroup.removeAll();\n\n      for (var i = 0; i < newPoints.length - 1; i++) {\n        var symbolPath = createSymbol(data, idx);\n\n        if (symbolPath) {\n          symbolPath.__dimIdx = i;\n\n          if (oldPoints[i]) {\n            symbolPath.attr('position', oldPoints[i]);\n            graphic[isInit ? 'initProps' : 'updateProps'](symbolPath, {\n              position: newPoints[i]\n            }, seriesModel, idx);\n          } else {\n            symbolPath.attr('position', newPoints[i]);\n          }\n\n          symbolGroup.add(symbolPath);\n        }\n      }\n    }\n\n    function getInitialPoints(points) {\n      return zrUtil.map(points, function (pt) {\n        return [polar.cx, polar.cy];\n      });\n    }\n\n    data.diff(oldData).add(function (idx) {\n      var points = data.getItemLayout(idx);\n\n      if (!points) {\n        return;\n      }\n\n      var polygon = new graphic.Polygon();\n      var polyline = new graphic.Polyline();\n      var target = {\n        shape: {\n          points: points\n        }\n      };\n      polygon.shape.points = getInitialPoints(points);\n      polyline.shape.points = getInitialPoints(points);\n      graphic.initProps(polygon, target, seriesModel, idx);\n      graphic.initProps(polyline, target, seriesModel, idx);\n      var itemGroup = new graphic.Group();\n      var symbolGroup = new graphic.Group();\n      itemGroup.add(polyline);\n      itemGroup.add(polygon);\n      itemGroup.add(symbolGroup);\n      updateSymbols(polyline.shape.points, points, symbolGroup, data, idx, true);\n      data.setItemGraphicEl(idx, itemGroup);\n    }).update(function (newIdx, oldIdx) {\n      var itemGroup = oldData.getItemGraphicEl(oldIdx);\n      var polyline = itemGroup.childAt(0);\n      var polygon = itemGroup.childAt(1);\n      var symbolGroup = itemGroup.childAt(2);\n      var target = {\n        shape: {\n          points: data.getItemLayout(newIdx)\n        }\n      };\n\n      if (!target.shape.points) {\n        return;\n      }\n\n      updateSymbols(polyline.shape.points, target.shape.points, symbolGroup, data, newIdx, false);\n      graphic.updateProps(polyline, target, seriesModel);\n      graphic.updateProps(polygon, target, seriesModel);\n      data.setItemGraphicEl(newIdx, itemGroup);\n    }).remove(function (idx) {\n      group.remove(oldData.getItemGraphicEl(idx));\n    }).execute();\n    data.eachItemGraphicEl(function (itemGroup, idx) {\n      var itemModel = data.getItemModel(idx);\n      var polyline = itemGroup.childAt(0);\n      var polygon = itemGroup.childAt(1);\n      var symbolGroup = itemGroup.childAt(2);\n      var color = data.getItemVisual(idx, 'color');\n      group.add(itemGroup);\n      polyline.useStyle(zrUtil.defaults(itemModel.getModel('lineStyle.normal').getLineStyle(), {\n        fill: 'none',\n        stroke: color\n      }));\n      polyline.hoverStyle = itemModel.getModel('lineStyle.emphasis').getLineStyle();\n      var areaStyleModel = itemModel.getModel('areaStyle.normal');\n      var hoverAreaStyleModel = itemModel.getModel('areaStyle.emphasis');\n      var polygonIgnore = areaStyleModel.isEmpty() && areaStyleModel.parentModel.isEmpty();\n      var hoverPolygonIgnore = hoverAreaStyleModel.isEmpty() && hoverAreaStyleModel.parentModel.isEmpty();\n      hoverPolygonIgnore = hoverPolygonIgnore && polygonIgnore;\n      polygon.ignore = polygonIgnore;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: color,\n        opacity: 0.7\n      }));\n      polygon.hoverStyle = hoverAreaStyleModel.getAreaStyle();\n      var itemStyle = itemModel.getModel('itemStyle.normal').getItemStyle(['color']);\n      var itemHoverStyle = itemModel.getModel('itemStyle.emphasis').getItemStyle();\n      var labelModel = itemModel.getModel('label.normal');\n      var labelHoverModel = itemModel.getModel('label.emphasis');\n      symbolGroup.eachChild(function (symbolPath) {\n        symbolPath.setStyle(itemStyle);\n        symbolPath.hoverStyle = zrUtil.clone(itemHoverStyle);\n        graphic.setLabelStyle(symbolPath.style, symbolPath.hoverStyle, labelModel, labelHoverModel, {\n          labelFetcher: data.hostModel,\n          labelDataIndex: idx,\n          labelDimIndex: symbolPath.__dimIdx,\n          defaultText: data.get(data.dimensions[symbolPath.__dimIdx], idx),\n          autoColor: color,\n          isRectText: true\n        });\n      });\n\n      function onEmphasis() {\n        polygon.attr('ignore', hoverPolygonIgnore);\n      }\n\n      function onNormal() {\n        polygon.attr('ignore', polygonIgnore);\n      }\n\n      itemGroup.off('mouseover').off('mouseout').off('normal').off('emphasis');\n      itemGroup.on('emphasis', onEmphasis).on('mouseover', onEmphasis).on('normal', onNormal).on('mouseout', onNormal);\n      graphic.setHoverStyle(itemGroup);\n    });\n    this._data = data;\n  },\n  remove: function () {\n    this.group.removeAll();\n    this._data = null;\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;","function _default(ecModel) {\n  ecModel.eachSeriesByType('radar', function (seriesModel) {\n    var data = seriesModel.getData();\n    var points = [];\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (!coordSys) {\n      return;\n    }\n\n    function pointsConverter(val, idx) {\n      points[idx] = points[idx] || [];\n      points[idx][i] = coordSys.dataToPoint(val, i);\n    }\n\n    for (var i = 0; i < coordSys.getIndicatorAxes().length; i++) {\n      var dim = data.dimensions[i];\n      data.each(dim, pointsConverter);\n    }\n\n    data.each(function (idx) {\n      // Close polygon\n      points[idx][0] && points[idx].push(points[idx][0].slice());\n      data.setItemLayout(idx, points[idx]);\n    });\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n// Backward compat for radar chart in 2\nfunction _default(option) {\n  var polarOptArr = option.polar;\n\n  if (polarOptArr) {\n    if (!zrUtil.isArray(polarOptArr)) {\n      polarOptArr = [polarOptArr];\n    }\n\n    var polarNotRadar = [];\n    zrUtil.each(polarOptArr, function (polarOpt, idx) {\n      if (polarOpt.indicator) {\n        if (polarOpt.type && !polarOpt.shape) {\n          polarOpt.shape = polarOpt.type;\n        }\n\n        option.radar = option.radar || [];\n\n        if (!zrUtil.isArray(option.radar)) {\n          option.radar = [option.radar];\n        }\n\n        option.radar.push(polarOpt);\n      } else {\n        polarNotRadar.push(polarOpt);\n      }\n    });\n    option.polar = polarNotRadar;\n  }\n\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'radar' && seriesOpt.polarIndex) {\n      seriesOpt.radarIndex = seriesOpt.polarIndex;\n    }\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./map/MapSeries\");\n\nrequire(\"./map/MapView\");\n\nrequire(\"../action/geoRoam\");\n\nrequire(\"../coord/geo/geoCreator\");\n\nvar mapSymbolLayout = require(\"./map/mapSymbolLayout\");\n\nvar mapVisual = require(\"./map/mapVisual\");\n\nvar mapDataStatistic = require(\"./map/mapDataStatistic\");\n\nvar backwardCompat = require(\"./map/backwardCompat\");\n\nvar createDataSelectAction = require(\"../action/createDataSelectAction\");\n\necharts.registerLayout(mapSymbolLayout);\necharts.registerVisual(mapVisual);\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, mapDataStatistic);\necharts.registerPreprocessor(backwardCompat);\ncreateDataSelectAction('map', [{\n  type: 'mapToggleSelect',\n  event: 'mapselectchanged',\n  method: 'toggleSelected'\n}, {\n  type: 'mapSelect',\n  event: 'mapselected',\n  method: 'select'\n}, {\n  type: 'mapUnSelect',\n  event: 'mapunselected',\n  method: 'unSelect'\n}]);","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar completeDimensions = require(\"../../data/helper/completeDimensions\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\n\nvar dataSelectableMixin = require(\"../../component/helper/selectableMixin\");\n\nvar geoCreator = require(\"../../coord/geo/geoCreator\");\n\nvar MapSeries = SeriesModel.extend({\n  type: 'series.map',\n  dependencies: ['geo'],\n  layoutMode: 'box',\n\n  /**\n   * Only first map series of same mapType will drawMap\n   * @type {boolean}\n   */\n  needsDrawMap: false,\n\n  /**\n   * Group of all map series with same mapType\n   * @type {boolean}\n   */\n  seriesGroup: [],\n  init: function (option) {\n    this._fillOption(option, this.getMapType()); // this.option = option;\n\n\n    MapSeries.superApply(this, 'init', arguments);\n    this.updateSelectedMap(option.data);\n  },\n  getInitialData: function (option) {\n    var dimensions = completeDimensions(['value'], option.data || []);\n    var list = new List(dimensions, this);\n    list.initData(option.data);\n    return list;\n  },\n  mergeOption: function (newOption) {\n    this._fillOption(newOption, this.getMapType());\n\n    MapSeries.superApply(this, 'mergeOption', arguments);\n    this.updateSelectedMap(this.option.data);\n  },\n\n  /**\n   * If no host geo model, return null, which means using a\n   * inner exclusive geo model.\n   */\n  getHostGeoModel: function () {\n    var geoIndex = this.option.geoIndex;\n    return geoIndex != null ? this.dependentModels.geo[geoIndex] : null;\n  },\n  getMapType: function () {\n    return (this.getHostGeoModel() || this).option.map;\n  },\n  _fillOption: function (option, mapName) {\n    // Shallow clone\n    // option = zrUtil.extend({}, option);\n    option.data = geoCreator.getFilledRegions(option.data, mapName, option.nameMap); // return option;\n  },\n  getRawValue: function (dataIndex) {\n    // Use value stored in data instead because it is calculated from multiple series\n    // FIXME Provide all value of multiple series ?\n    return this.getData().get('value', dataIndex);\n  },\n\n  /**\n   * Get model of region\n   * @param  {string} name\n   * @return {module:echarts/model/Model}\n   */\n  getRegionModel: function (regionName) {\n    var data = this.getData();\n    return data.getItemModel(data.indexOfName(regionName));\n  },\n\n  /**\n   * Map tooltip formatter\n   *\n   * @param {number} dataIndex\n   */\n  formatTooltip: function (dataIndex) {\n    // FIXME orignalData and data is a bit confusing\n    var data = this.getData();\n    var formattedValue = addCommas(this.getRawValue(dataIndex));\n    var name = data.getName(dataIndex);\n    var seriesGroup = this.seriesGroup;\n    var seriesNames = [];\n\n    for (var i = 0; i < seriesGroup.length; i++) {\n      var otherIndex = seriesGroup[i].originalData.indexOfName(name);\n\n      if (!isNaN(seriesGroup[i].originalData.get('value', otherIndex))) {\n        seriesNames.push(encodeHTML(seriesGroup[i].name));\n      }\n    }\n\n    return seriesNames.join(', ') + '<br />' + encodeHTML(name + ' : ' + formattedValue);\n  },\n\n  /**\n   * @implement\n   */\n  getTooltipPosition: function (dataIndex) {\n    if (dataIndex != null) {\n      var name = this.getData().getName(dataIndex);\n      var geo = this.coordinateSystem;\n      var region = geo.getRegion(name);\n      return region && geo.dataToPoint(region.center);\n    }\n  },\n  setZoom: function (zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function (center) {\n    this.option.center = center;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 2,\n    coordinateSystem: 'geo',\n    // map should be explicitly specified since ec3.\n    map: '',\n    // If `geoIndex` is not specified, a exclusive geo will be\n    // created. Otherwise use the specified geo component, and\n    // `map` and `mapType` are ignored.\n    // geoIndex: 0,\n    // 'center' | 'left' | 'right' | 'x%' | {number}\n    left: 'center',\n    // 'center' | 'top' | 'bottom' | 'x%' | {number}\n    top: 'center',\n    // right\n    // bottom\n    // width:\n    // height\n    // Aspect is width / height. Inited to be geoJson bbox aspect\n    // This parameter is used for scale this aspect\n    aspectScale: 0.75,\n    ///// Layout with center and size\n    // If you wan't to put map in a fixed size box with right aspect ratio\n    // This two properties may more conveninet\n    // layoutCenter: [50%, 50%]\n    // layoutSize: 100\n    // 数值合并方式，默认加和，可选为：\n    // 'sum' | 'average' | 'max' | 'min'\n    // mapValueCalculation: 'sum',\n    // 地图数值计算结果小数精度\n    // mapValuePrecision: 0,\n    // 显示图例颜色标识（系列标识的小圆点），图例开启时有效\n    showLegendSymbol: true,\n    // 选择模式，默认关闭，可选single，multiple\n    // selectedMode: false,\n    dataRangeHoverLink: true,\n    // 是否开启缩放及漫游模式\n    // roam: false,\n    // Define left-top, right-bottom coords to control view\n    // For example, [ [180, 90], [-180, -90] ],\n    // higher priority than center and zoom\n    boundingCoords: null,\n    // Default on center of map\n    center: null,\n    zoom: 1,\n    scaleLimit: null,\n    label: {\n      normal: {\n        show: false,\n        color: '#000'\n      },\n      emphasis: {\n        show: true,\n        color: 'rgb(100,0,0)'\n      }\n    },\n    // scaleLimit: null,\n    itemStyle: {\n      normal: {\n        // color: 各异,\n        borderWidth: 0.5,\n        borderColor: '#444',\n        areaColor: '#eee'\n      },\n      // 也是选中样式\n      emphasis: {\n        areaColor: 'rgba(255,215,0,0.8)'\n      }\n    }\n  }\n});\nzrUtil.mixin(MapSeries, dataSelectableMixin);\nvar _default = MapSeries;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar parseGeoJson = require(\"./parseGeoJson\");\n\nvar View = require(\"../View\");\n\nvar fixNanhai = require(\"./fix/nanhai\");\n\nvar fixTextCoord = require(\"./fix/textCoord\");\n\nvar fixGeoCoord = require(\"./fix/geoCoord\");\n\nvar fixDiaoyuIsland = require(\"./fix/diaoyuIsland\");\n\n// Geo fix functions\nvar geoFixFuncs = [fixNanhai, fixTextCoord, fixGeoCoord, fixDiaoyuIsland];\n/**\n * [Geo description]\n * @param {string} name Geo name\n * @param {string} map Map type\n * @param {Object} geoJson\n * @param {Object} [specialAreas]\n *        Specify the positioned areas by left, top, width, height\n * @param {Object.<string, string>} [nameMap]\n *        Specify name alias\n */\n\nfunction Geo(name, map, geoJson, specialAreas, nameMap) {\n  View.call(this, name);\n  /**\n   * Map type\n   * @type {string}\n   */\n\n  this.map = map;\n  this._nameCoordMap = zrUtil.createHashMap();\n  this.loadGeoJson(geoJson, specialAreas, nameMap);\n}\n\nGeo.prototype = {\n  constructor: Geo,\n  type: 'geo',\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['lng', 'lat'],\n\n  /**\n   * If contain given lng,lat coord\n   * @param {Array.<number>}\n   * @readOnly\n   */\n  containCoord: function (coord) {\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      if (regions[i].contain(coord)) {\n        return true;\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @param {Object} geoJson\n   * @param {Object} [specialAreas]\n   *        Specify the positioned areas by left, top, width, height\n   * @param {Object.<string, string>} [nameMap]\n   *        Specify name alias\n   */\n  loadGeoJson: function (geoJson, specialAreas, nameMap) {\n    // https://jsperf.com/try-catch-performance-overhead\n    try {\n      this.regions = geoJson ? parseGeoJson(geoJson) : [];\n    } catch (e) {\n      throw 'Invalid geoJson format\\n' + e.message;\n    }\n\n    specialAreas = specialAreas || {};\n    nameMap = nameMap || {};\n    var regions = this.regions;\n    var regionsMap = zrUtil.createHashMap();\n\n    for (var i = 0; i < regions.length; i++) {\n      var regionName = regions[i].name; // Try use the alias in nameMap\n\n      regionName = nameMap.hasOwnProperty(regionName) ? nameMap[regionName] : regionName;\n      regions[i].name = regionName;\n      regionsMap.set(regionName, regions[i]); // Add geoJson\n\n      this.addGeoCoord(regionName, regions[i].center); // Some area like Alaska in USA map needs to be tansformed\n      // to look better\n\n      var specialArea = specialAreas[regionName];\n\n      if (specialArea) {\n        regions[i].transformTo(specialArea.left, specialArea.top, specialArea.width, specialArea.height);\n      }\n    }\n\n    this._regionsMap = regionsMap;\n    this._rect = null;\n    zrUtil.each(geoFixFuncs, function (fixFunc) {\n      fixFunc(this);\n    }, this);\n  },\n  // Overwrite\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    rect = rect.clone(); // Longitute is inverted\n\n    rect.y = -rect.y - rect.height;\n    var viewTransform = this._viewTransform;\n    viewTransform.transform = rect.calculateTransform(new BoundingRect(x, y, width, height));\n    viewTransform.decomposeTransform();\n    var scale = viewTransform.scale;\n    scale[1] = -scale[1];\n    viewTransform.updateTransform();\n\n    this._updateTransform();\n  },\n\n  /**\n   * @param {string} name\n   * @return {module:echarts/coord/geo/Region}\n   */\n  getRegion: function (name) {\n    return this._regionsMap.get(name);\n  },\n  getRegionByCoord: function (coord) {\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      if (regions[i].contain(coord)) {\n        return regions[i];\n      }\n    }\n  },\n\n  /**\n   * Add geoCoord for indexing by name\n   * @param {string} name\n   * @param {Array.<number>} geoCoord\n   */\n  addGeoCoord: function (name, geoCoord) {\n    this._nameCoordMap.set(name, geoCoord);\n  },\n\n  /**\n   * Get geoCoord by name\n   * @param {string} name\n   * @return {Array.<number>}\n   */\n  getGeoCoord: function (name) {\n    return this._nameCoordMap.get(name);\n  },\n  // Overwrite\n  getBoundingRect: function () {\n    if (this._rect) {\n      return this._rect;\n    }\n\n    var rect;\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      var regionRect = regions[i].getBoundingRect();\n      rect = rect || regionRect.clone();\n      rect.union(regionRect);\n    } // FIXME Always return new ?\n\n\n    return this._rect = rect || new BoundingRect(0, 0, 0, 0);\n  },\n\n  /**\n   * @param {string|Array.<number>} data\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data) {\n    if (typeof data === 'string') {\n      // Map area name to geoCoord\n      data = this.getGeoCoord(data);\n    }\n\n    if (data) {\n      return View.prototype.dataToPoint.call(this, data);\n    }\n  },\n\n  /**\n   * @inheritDoc\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @inheritDoc\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData')\n};\nzrUtil.mixin(Geo, View);\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var geoModel = finder.geoModel;\n  var seriesModel = finder.seriesModel;\n  var coordSys = geoModel ? geoModel.coordinateSystem : seriesModel ? seriesModel.coordinateSystem // For map.\n  || (seriesModel.getReferringComponents('geo')[0] || {}).coordinateSystem : null;\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nvar _default = Geo;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Region = require(\"../Region\");\n\n// Fix for 南海诸岛\nvar geoCoord = [126, 25];\nvar points = [[[0, 3.5], [7, 11.2], [15, 11.9], [30, 7], [42, 0.7], [52, 0.7], [56, 7.7], [59, 0.7], [64, 0.7], [64, 0], [5, 0], [0, 3.5]], [[13, 16.1], [19, 14.7], [16, 21.7], [11, 23.1], [13, 16.1]], [[12, 32.2], [14, 38.5], [15, 38.5], [13, 32.2], [12, 32.2]], [[16, 47.6], [12, 53.2], [13, 53.2], [18, 47.6], [16, 47.6]], [[6, 64.4], [8, 70], [9, 70], [8, 64.4], [6, 64.4]], [[23, 82.6], [29, 79.8], [30, 79.8], [25, 82.6], [23, 82.6]], [[37, 70.7], [43, 62.3], [44, 62.3], [39, 70.7], [37, 70.7]], [[48, 51.1], [51, 45.5], [53, 45.5], [50, 51.1], [48, 51.1]], [[51, 35], [51, 28.7], [53, 28.7], [53, 35], [51, 35]], [[52, 22.4], [55, 17.5], [56, 17.5], [53, 22.4], [52, 22.4]], [[58, 12.6], [62, 7], [63, 7], [60, 12.6], [58, 12.6]], [[0, 3.5], [0, 93.1], [64, 93.1], [64, 0], [63, 0], [63, 92.4], [1, 92.4], [1, 3.5], [0, 3.5]]];\n\nfor (var i = 0; i < points.length; i++) {\n  for (var k = 0; k < points[i].length; k++) {\n    points[i][k][0] /= 10.5;\n    points[i][k][1] /= -10.5 / 0.75;\n    points[i][k][0] += geoCoord[0];\n    points[i][k][1] += geoCoord[1];\n  }\n}\n\nfunction _default(geo) {\n  if (geo.map === 'china') {\n    geo.regions.push(new Region('南海诸岛', zrUtil.map(points, function (exterior) {\n      return {\n        type: 'polygon',\n        exterior: exterior\n      };\n    }), geoCoord));\n  }\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar coordsOffsetMap = {\n  '南海诸岛': [32, 80],\n  // 全国\n  '广东': [0, -10],\n  '香港': [10, 5],\n  '澳门': [-10, 10],\n  //'北京': [-10, 0],\n  '天津': [5, 5]\n};\n\nfunction _default(geo) {\n  zrUtil.each(geo.regions, function (region) {\n    var coordFix = coordsOffsetMap[region.name];\n\n    if (coordFix) {\n      var cp = region.center;\n      cp[0] += coordFix[0] / 10.5;\n      cp[1] += -coordFix[1] / (10.5 / 0.75);\n    }\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar geoCoordMap = {\n  'Russia': [100, 60],\n  'United States': [-99, 38],\n  'United States of America': [-99, 38]\n};\n\nfunction _default(geo) {\n  zrUtil.each(geo.regions, function (region) {\n    var geoCoord = geoCoordMap[region.name];\n\n    if (geoCoord) {\n      var cp = region.center;\n      cp[0] = geoCoord[0];\n      cp[1] = geoCoord[1];\n    }\n  });\n}\n\nmodule.exports = _default;","// Fix for 钓鱼岛\n// var Region = require('../Region');\n// var zrUtil = require('zrender/src/core/util');\n// var geoCoord = [126, 25];\nvar points = [[[123.45165252685547, 25.73527164402261], [123.49731445312499, 25.73527164402261], [123.49731445312499, 25.750734064600884], [123.45165252685547, 25.750734064600884], [123.45165252685547, 25.73527164402261]]];\n\nfunction _default(geo) {\n  if (geo.map === 'china') {\n    for (var i = 0, len = geo.regions.length; i < len; ++i) {\n      if (geo.regions[i].name === '台湾') {\n        geo.regions[i].geometries.push({\n          type: 'polygon',\n          exterior: points[0]\n        });\n      }\n    }\n  }\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar MapDraw = require(\"../../component/helper/MapDraw\");\n\nvar _default = echarts.extendChartView({\n  type: 'map',\n  render: function (mapModel, ecModel, api, payload) {\n    // Not render if it is an toggleSelect action from self\n    if (payload && payload.type === 'mapToggleSelect' && payload.from === this.uid) {\n      return;\n    }\n\n    var group = this.group;\n    group.removeAll();\n\n    if (mapModel.getHostGeoModel()) {\n      return;\n    } // Not update map if it is an roam action from self\n\n\n    if (!(payload && payload.type === 'geoRoam' && payload.componentType === 'series' && payload.seriesId === mapModel.id)) {\n      if (mapModel.needsDrawMap) {\n        var mapDraw = this._mapDraw || new MapDraw(api, true);\n        group.add(mapDraw.group);\n        mapDraw.draw(mapModel, ecModel, api, this, payload);\n        this._mapDraw = mapDraw;\n      } else {\n        // Remove drawed map\n        this._mapDraw && this._mapDraw.remove();\n        this._mapDraw = null;\n      }\n    } else {\n      var mapDraw = this._mapDraw;\n      mapDraw && group.add(mapDraw.group);\n    }\n\n    mapModel.get('showLegendSymbol') && ecModel.getComponent('legend') && this._renderSymbols(mapModel, ecModel, api);\n  },\n  remove: function () {\n    this._mapDraw && this._mapDraw.remove();\n    this._mapDraw = null;\n    this.group.removeAll();\n  },\n  dispose: function () {\n    this._mapDraw && this._mapDraw.remove();\n    this._mapDraw = null;\n  },\n  _renderSymbols: function (mapModel, ecModel, api) {\n    var originalData = mapModel.originalData;\n    var group = this.group;\n    originalData.each('value', function (value, idx) {\n      if (isNaN(value)) {\n        return;\n      }\n\n      var layout = originalData.getItemLayout(idx);\n\n      if (!layout || !layout.point) {\n        // Not exists in map\n        return;\n      }\n\n      var point = layout.point;\n      var offset = layout.offset;\n      var circle = new graphic.Circle({\n        style: {\n          // Because the special of map draw.\n          // Which needs statistic of multiple series and draw on one map.\n          // And each series also need a symbol with legend color\n          //\n          // Layout and visual are put one the different data\n          fill: mapModel.getData().getVisual('color')\n        },\n        shape: {\n          cx: point[0] + offset * 9,\n          cy: point[1],\n          r: 3\n        },\n        silent: true,\n        // Do not overlap the first series, on which labels are displayed.\n        z2: !offset ? 10 : 8\n      }); // First data on the same region\n\n      if (!offset) {\n        var fullData = mapModel.mainSeries.getData();\n        var name = originalData.getName(idx);\n        var fullIndex = fullData.indexOfName(name);\n        var itemModel = originalData.getItemModel(idx);\n        var labelModel = itemModel.getModel('label.normal');\n        var hoverLabelModel = itemModel.getModel('label.emphasis');\n        var polygonGroups = fullData.getItemGraphicEl(fullIndex);\n        var normalText = zrUtil.retrieve2(mapModel.getFormattedLabel(idx, 'normal'), name);\n        var emphasisText = zrUtil.retrieve2(mapModel.getFormattedLabel(idx, 'emphasis'), normalText);\n\n        var onEmphasis = function () {\n          var hoverStyle = graphic.setTextStyle({}, hoverLabelModel, {\n            text: hoverLabelModel.get('show') ? emphasisText : null\n          }, {\n            isRectText: true,\n            useInsideStyle: false\n          }, true);\n          circle.style.extendFrom(hoverStyle); // Make label upper than others if overlaps.\n\n          circle.__mapOriginalZ2 = circle.z2;\n          circle.z2 += 1;\n        };\n\n        var onNormal = function () {\n          graphic.setTextStyle(circle.style, labelModel, {\n            text: labelModel.get('show') ? normalText : null,\n            textPosition: labelModel.getShallow('position') || 'bottom'\n          }, {\n            isRectText: true,\n            useInsideStyle: false\n          });\n\n          if (circle.__mapOriginalZ2 != null) {\n            circle.z2 = circle.__mapOriginalZ2;\n            circle.__mapOriginalZ2 = null;\n          }\n        };\n\n        polygonGroups.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n        onNormal();\n      }\n\n      group.add(circle);\n    });\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction _default(ecModel) {\n  var processedMapType = {};\n  ecModel.eachSeriesByType('map', function (mapSeries) {\n    var mapType = mapSeries.getMapType();\n\n    if (mapSeries.getHostGeoModel() || processedMapType[mapType]) {\n      return;\n    }\n\n    var mapSymbolOffsets = {};\n    zrUtil.each(mapSeries.seriesGroup, function (subMapSeries) {\n      var geo = subMapSeries.coordinateSystem;\n      var data = subMapSeries.originalData;\n\n      if (subMapSeries.get('showLegendSymbol') && ecModel.getComponent('legend')) {\n        data.each('value', function (value, idx) {\n          var name = data.getName(idx);\n          var region = geo.getRegion(name); // If input series.data is [11, 22, '-'/null/undefined, 44],\n          // it will be filled with NaN: [11, 22, NaN, 44] and NaN will\n          // not be drawn. So here must validate if value is NaN.\n\n          if (!region || isNaN(value)) {\n            return;\n          }\n\n          var offset = mapSymbolOffsets[name] || 0;\n          var point = geo.dataToPoint(region.center);\n          mapSymbolOffsets[name] = offset + 1;\n          data.setItemLayout(idx, {\n            point: point,\n            offset: offset\n          });\n        });\n      }\n    }); // Show label of those region not has legendSymbol(which is offset 0)\n\n    var data = mapSeries.getData();\n    data.each(function (idx) {\n      var name = data.getName(idx);\n      var layout = data.getItemLayout(idx) || {};\n      layout.showLabel = !mapSymbolOffsets[name];\n      data.setItemLayout(idx, layout);\n    });\n    processedMapType[mapType] = true;\n  });\n}\n\nmodule.exports = _default;","function _default(ecModel) {\n  ecModel.eachSeriesByType('map', function (seriesModel) {\n    var colorList = seriesModel.get('color');\n    var itemStyleModel = seriesModel.getModel('itemStyle.normal');\n    var areaColor = itemStyleModel.get('areaColor');\n    var color = itemStyleModel.get('color') || colorList[seriesModel.seriesIndex % colorList.length];\n    seriesModel.getData().setVisual({\n      'areaColor': areaColor,\n      'color': color\n    });\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n// FIXME 公用？\n\n/**\n * @param {Array.<module:echarts/data/List>} datas\n * @param {string} statisticType 'average' 'sum'\n * @inner\n */\nfunction dataStatistics(datas, statisticType) {\n  var dataNameMap = {};\n  var dims = ['value'];\n  zrUtil.each(datas, function (data) {\n    data.each(dims, function (value, idx) {\n      // Add prefix to avoid conflict with Object.prototype.\n      var mapKey = 'ec-' + data.getName(idx);\n      dataNameMap[mapKey] = dataNameMap[mapKey] || [];\n\n      if (!isNaN(value)) {\n        dataNameMap[mapKey].push(value);\n      }\n    });\n  });\n  return datas[0].map(dims, function (value, idx) {\n    var mapKey = 'ec-' + datas[0].getName(idx);\n    var sum = 0;\n    var min = Infinity;\n    var max = -Infinity;\n    var len = dataNameMap[mapKey].length;\n\n    for (var i = 0; i < len; i++) {\n      min = Math.min(min, dataNameMap[mapKey][i]);\n      max = Math.max(max, dataNameMap[mapKey][i]);\n      sum += dataNameMap[mapKey][i];\n    }\n\n    var result;\n\n    if (statisticType === 'min') {\n      result = min;\n    } else if (statisticType === 'max') {\n      result = max;\n    } else if (statisticType === 'average') {\n      result = sum / len;\n    } else {\n      result = sum;\n    }\n\n    return len === 0 ? NaN : result;\n  });\n}\n\nfunction _default(ecModel) {\n  var seriesGroups = {};\n  ecModel.eachSeriesByType('map', function (seriesModel) {\n    var hostGeoModel = seriesModel.getHostGeoModel();\n    var key = hostGeoModel ? 'o' + hostGeoModel.id : 'i' + seriesModel.getMapType();\n    (seriesGroups[key] = seriesGroups[key] || []).push(seriesModel);\n  });\n  zrUtil.each(seriesGroups, function (seriesList, key) {\n    var data = dataStatistics(zrUtil.map(seriesList, function (seriesModel) {\n      return seriesModel.getData();\n    }), seriesList[0].get('mapValueCalculation'));\n\n    for (var i = 0; i < seriesList.length; i++) {\n      seriesList[i].originalData = seriesList[i].getData();\n    } // FIXME Put where?\n\n\n    for (var i = 0; i < seriesList.length; i++) {\n      seriesList[i].seriesGroup = seriesList;\n      seriesList[i].needsDrawMap = i === 0 && !seriesList[i].getHostGeoModel();\n      seriesList[i].setData(data.cloneShallow());\n      seriesList[i].mainSeries = seriesList[0];\n    }\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction _default(option) {\n  // Save geoCoord\n  var mapSeries = [];\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'map') {\n      mapSeries.push(seriesOpt);\n      seriesOpt.map = seriesOpt.map || seriesOpt.mapType; // Put x, y, width, height, x2, y2 in the top level\n\n      zrUtil.defaults(seriesOpt, seriesOpt.mapLocation);\n    }\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./tree/TreeSeries\");\n\nrequire(\"./tree/TreeView\");\n\nrequire(\"./tree/treeAction\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar orthogonalLayout = require(\"./tree/orthogonalLayout\");\n\nvar radialLayout = require(\"./tree/radialLayout\");\n\necharts.registerVisual(zrUtil.curry(visualSymbol, 'tree', 'circle', null));\necharts.registerLayout(orthogonalLayout);\necharts.registerLayout(radialLayout);","var SeriesModel = require(\"../../model/Series\");\n\nvar Tree = require(\"../../data/Tree\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\n/**\n * @file Create data struct and define tree view's series model\n */\nvar _default = SeriesModel.extend({\n  type: 'series.tree',\n  layoutInfo: null,\n  // can support the position parameters 'left', 'top','right','bottom', 'width',\n  // 'height' in the setOption() with 'merge' mode normal.\n  layoutMode: 'box',\n\n  /**\n   * Init a tree data structure from data in option series\n   * @param  {Object} option  the object used to config echarts view\n   * @return {module:echarts/data/List} storage initial data\n   */\n  getInitialData: function (option) {\n    //create an virtual root\n    var root = {\n      name: option.name,\n      children: option.data\n    };\n    var leaves = option.leaves || {};\n    var treeOption = {};\n    treeOption.leaves = leaves;\n    var tree = Tree.createTree(root, this, treeOption);\n    var treeDepth = 0;\n    tree.eachNode('preorder', function (node) {\n      if (node.depth > treeDepth) {\n        treeDepth = node.depth;\n      }\n    });\n    var expandAndCollapse = option.expandAndCollapse;\n    var expandTreeDepth = expandAndCollapse && option.initialTreeDepth >= 0 ? option.initialTreeDepth : treeDepth;\n    tree.root.eachNode('preorder', function (node) {\n      var item = node.hostTree.data.getRawDataItem(node.dataIndex);\n      node.isExpand = item && item.collapsed != null ? !item.collapsed : node.depth <= expandTreeDepth;\n    });\n    return tree.data;\n  },\n\n  /**\n   * @override\n   * @param {number} dataIndex\n   */\n  formatTooltip: function (dataIndex) {\n    var tree = this.getData().tree;\n    var realRoot = tree.root.children[0];\n    var node = tree.getNodeByDataIndex(dataIndex);\n    var value = node.getValue();\n    var name = node.name;\n\n    while (node && node !== realRoot) {\n      name = node.parentNode.name + '.' + name;\n      node = node.parentNode;\n    }\n\n    return encodeHTML(name + (isNaN(value) || value == null ? '' : ' : ' + value));\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    // the position of the whole view\n    left: '12%',\n    top: '12%',\n    right: '12%',\n    bottom: '12%',\n    // the layout of the tree, two value can be selected, 'orthogonal' or 'radial'\n    layout: 'orthogonal',\n    // the orient of orthoginal layout, can be setted to 'horizontal' or 'vertical'\n    orient: 'horizontal',\n    symbol: 'emptyCircle',\n    symbolSize: 7,\n    expandAndCollapse: true,\n    initialTreeDepth: 2,\n    lineStyle: {\n      normal: {\n        color: '#ccc',\n        width: 1.5,\n        curveness: 0.5\n      }\n    },\n    itemStyle: {\n      normal: {\n        color: 'lightsteelblue',\n        borderColor: '#c23531',\n        borderWidth: 1.5\n      }\n    },\n    label: {\n      normal: {\n        show: true,\n        color: '#555'\n      }\n    },\n    leaves: {\n      label: {\n        normal: {\n          show: true\n        }\n      }\n    },\n    animationEasing: 'linear',\n    animationDuration: 700,\n    animationDurationUpdate: 1000\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar SymbolClz = require(\"../helper/Symbol\");\n\nvar _layoutHelper = require(\"./layoutHelper\");\n\nvar radialCoordinate = _layoutHelper.radialCoordinate;\n\nvar echarts = require(\"../../echarts\");\n\n/**\n * @file  This file used to draw tree view\n */\nvar _default = echarts.extendChartView({\n  type: 'tree',\n\n  /**\n   * Init the chart\n   * @override\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {\n    /**\n     * @private\n     * @type {module:echarts/data/Tree}\n     */\n    this._oldTree;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this._mainGroup = new graphic.Group();\n    this.group.add(this._mainGroup);\n  },\n  render: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var layoutInfo = seriesModel.layoutInfo;\n    var group = this._mainGroup;\n    var layout = seriesModel.get('layout');\n\n    if (layout === 'radial') {\n      group.attr('position', [layoutInfo.x + layoutInfo.width / 2, layoutInfo.y + layoutInfo.height / 2]);\n    } else {\n      group.attr('position', [layoutInfo.x, layoutInfo.y]);\n    }\n\n    var oldData = this._data;\n    var seriesScope = {\n      expandAndCollapse: seriesModel.get('expandAndCollapse'),\n      layout: layout,\n      orient: seriesModel.get('orient'),\n      curvature: seriesModel.get('lineStyle.normal.curveness'),\n      symbolRotate: seriesModel.get('symbolRotate'),\n      symbolOffset: seriesModel.get('symbolOffset'),\n      hoverAnimation: seriesModel.get('hoverAnimation'),\n      useNameLabel: true,\n      fadeIn: true\n    };\n    data.diff(oldData).add(function (newIdx) {\n      if (symbolNeedsDraw(data, newIdx)) {\n        // create node and edge\n        updateNode(data, newIdx, null, group, seriesModel, seriesScope);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx);\n\n      if (!symbolNeedsDraw(data, newIdx)) {\n        symbolEl && removeNode(data, newIdx, symbolEl, group, seriesModel, seriesScope);\n        return;\n      } // update  node and edge\n\n\n      updateNode(data, newIdx, symbolEl, group, seriesModel, seriesScope);\n    }).remove(function (oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx);\n      removeNode(data, oldIdx, symbolEl, group, seriesModel, seriesScope);\n    }).execute();\n\n    if (seriesScope.expandAndCollapse === true) {\n      data.eachItemGraphicEl(function (el, dataIndex) {\n        el.off('click').on('click', function () {\n          api.dispatchAction({\n            type: 'treeExpandAndCollapse',\n            seriesId: seriesModel.id,\n            dataIndex: dataIndex\n          });\n        });\n      });\n    }\n\n    this._data = data;\n  },\n  dispose: function () {},\n  remove: function () {\n    this._mainGroup.removeAll();\n\n    this._data = null;\n  }\n});\n\nfunction symbolNeedsDraw(data, dataIndex) {\n  var layout = data.getItemLayout(dataIndex);\n  return layout && !isNaN(layout.x) && !isNaN(layout.y) && data.getItemVisual(dataIndex, 'symbol') !== 'none';\n}\n\nfunction getTreeNodeStyle(node, itemModel, seriesScope) {\n  seriesScope.itemModel = itemModel;\n  seriesScope.itemStyle = itemModel.getModel('itemStyle.normal').getItemStyle();\n  seriesScope.hoverItemStyle = itemModel.getModel('itemStyle.emphasis').getItemStyle();\n  seriesScope.lineStyle = itemModel.getModel('lineStyle.normal').getLineStyle();\n  seriesScope.labelModel = itemModel.getModel('label.normal');\n  seriesScope.hoverLabelModel = itemModel.getModel('label.emphasis');\n\n  if (node.isExpand === false && node.children.length !== 0) {\n    seriesScope.symbolInnerColor = seriesScope.itemStyle.fill;\n  } else {\n    seriesScope.symbolInnerColor = '#fff';\n  }\n\n  return seriesScope;\n}\n\nfunction updateNode(data, dataIndex, symbolEl, group, seriesModel, seriesScope) {\n  var isInit = !symbolEl;\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var itemModel = node.getModel();\n  var seriesScope = getTreeNodeStyle(node, itemModel, seriesScope);\n  var virtualRoot = data.tree.root;\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var sourceSymbolEl = data.getItemGraphicEl(source.dataIndex);\n  var sourceLayout = source.getLayout();\n  var sourceOldLayout = sourceSymbolEl ? {\n    x: sourceSymbolEl.position[0],\n    y: sourceSymbolEl.position[1],\n    rawX: sourceSymbolEl.__radialOldRawX,\n    rawY: sourceSymbolEl.__radialOldRawY\n  } : sourceLayout;\n  var targetLayout = node.getLayout();\n\n  if (isInit) {\n    symbolEl = new SymbolClz(data, dataIndex, seriesScope);\n    symbolEl.attr('position', [sourceOldLayout.x, sourceOldLayout.y]);\n  } else {\n    symbolEl.updateData(data, dataIndex, seriesScope);\n  }\n\n  symbolEl.__radialOldRawX = symbolEl.__radialRawX;\n  symbolEl.__radialOldRawY = symbolEl.__radialRawY;\n  symbolEl.__radialRawX = targetLayout.rawX;\n  symbolEl.__radialRawY = targetLayout.rawY;\n  group.add(symbolEl);\n  data.setItemGraphicEl(dataIndex, symbolEl);\n  graphic.updateProps(symbolEl, {\n    position: [targetLayout.x, targetLayout.y]\n  }, seriesModel);\n  var symbolPath = symbolEl.getSymbolPath();\n\n  if (seriesScope.layout === 'radial') {\n    var realRoot = virtualRoot.children[0];\n    var rootLayout = realRoot.getLayout();\n    var length = realRoot.children.length;\n    var rad;\n    var isLeft;\n\n    if (targetLayout.x === rootLayout.x && node.isExpand === true) {\n      var center = {};\n      center.x = (realRoot.children[0].getLayout().x + realRoot.children[length - 1].getLayout().x) / 2;\n      center.y = (realRoot.children[0].getLayout().y + realRoot.children[length - 1].getLayout().y) / 2;\n      rad = Math.atan2(center.y - rootLayout.y, center.x - rootLayout.x);\n\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n\n      isLeft = center.x < rootLayout.x;\n\n      if (isLeft) {\n        rad = rad - Math.PI;\n      }\n    } else {\n      rad = Math.atan2(targetLayout.y - rootLayout.y, targetLayout.x - rootLayout.x);\n\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n\n      if (node.children.length === 0 || node.children.length !== 0 && node.isExpand === false) {\n        isLeft = targetLayout.x < rootLayout.x;\n\n        if (isLeft) {\n          rad = rad - Math.PI;\n        }\n      } else {\n        isLeft = targetLayout.x > rootLayout.x;\n\n        if (!isLeft) {\n          rad = rad - Math.PI;\n        }\n      }\n    }\n\n    var textPosition = isLeft ? 'left' : 'right';\n    symbolPath.setStyle({\n      textPosition: textPosition,\n      textRotation: -rad,\n      textOrigin: 'center',\n      verticalAlign: 'middle'\n    });\n  }\n\n  if (node.parentNode && node.parentNode !== virtualRoot) {\n    var edge = symbolEl.__edge;\n\n    if (!edge) {\n      edge = symbolEl.__edge = new graphic.BezierCurve({\n        shape: getEdgeShape(seriesScope, sourceOldLayout, sourceOldLayout),\n        style: zrUtil.defaults({\n          opacity: 0\n        }, seriesScope.lineStyle)\n      });\n    }\n\n    graphic.updateProps(edge, {\n      shape: getEdgeShape(seriesScope, sourceLayout, targetLayout),\n      style: {\n        opacity: 1\n      }\n    }, seriesModel);\n    group.add(edge);\n  }\n}\n\nfunction removeNode(data, dataIndex, symbolEl, group, seriesModel, seriesScope) {\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var virtualRoot = data.tree.root;\n  var itemModel = node.getModel();\n  var seriesScope = getTreeNodeStyle(node, itemModel, seriesScope);\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var sourceLayout;\n\n  while (sourceLayout = source.getLayout(), sourceLayout == null) {\n    source = source.parentNode === virtualRoot ? source : source.parentNode || source;\n  }\n\n  graphic.updateProps(symbolEl, {\n    position: [sourceLayout.x + 1, sourceLayout.y + 1]\n  }, seriesModel, function () {\n    group.remove(symbolEl);\n    data.setItemGraphicEl(dataIndex, null);\n  });\n  symbolEl.fadeOut(null, {\n    keepLabel: true\n  });\n  var edge = symbolEl.__edge;\n\n  if (edge) {\n    graphic.updateProps(edge, {\n      shape: getEdgeShape(seriesScope, sourceLayout, sourceLayout),\n      style: {\n        opacity: 0\n      }\n    }, seriesModel, function () {\n      group.remove(edge);\n    });\n  }\n}\n\nfunction getEdgeShape(seriesScope, sourceLayout, targetLayout) {\n  var cpx1;\n  var cpy1;\n  var cpx2;\n  var cpy2;\n  var orient = seriesScope.orient;\n\n  if (seriesScope.layout === 'radial') {\n    var x1 = sourceLayout.rawX;\n    var y1 = sourceLayout.rawY;\n    var x2 = targetLayout.rawX;\n    var y2 = targetLayout.rawY;\n    var radialCoor1 = radialCoordinate(x1, y1);\n    var radialCoor2 = radialCoordinate(x1, y1 + (y2 - y1) * seriesScope.curvature);\n    var radialCoor3 = radialCoordinate(x2, y2 + (y1 - y2) * seriesScope.curvature);\n    var radialCoor4 = radialCoordinate(x2, y2);\n    return {\n      x1: radialCoor1.x,\n      y1: radialCoor1.y,\n      x2: radialCoor4.x,\n      y2: radialCoor4.y,\n      cpx1: radialCoor2.x,\n      cpy1: radialCoor2.y,\n      cpx2: radialCoor3.x,\n      cpy2: radialCoor3.y\n    };\n  } else {\n    var x1 = sourceLayout.x;\n    var y1 = sourceLayout.y;\n    var x2 = targetLayout.x;\n    var y2 = targetLayout.y;\n\n    if (orient === 'horizontal') {\n      cpx1 = x1 + (x2 - x1) * seriesScope.curvature;\n      cpy1 = y1;\n      cpx2 = x2 + (x1 - x2) * seriesScope.curvature;\n      cpy2 = y2;\n    }\n\n    if (orient === 'vertical') {\n      cpx1 = x1;\n      cpy1 = y1 + (y2 - y1) * seriesScope.curvature;\n      cpx2 = x2;\n      cpy2 = y2 + (y1 - y2) * seriesScope.curvature;\n    }\n\n    return {\n      x1: x1,\n      y1: y1,\n      x2: x2,\n      y2: y2,\n      cpx1: cpx1,\n      cpy1: cpy1,\n      cpx2: cpx2,\n      cpy2: cpy2\n    };\n  }\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\necharts.registerAction({\n  type: 'treeExpandAndCollapse',\n  event: 'treeExpandAndCollapse',\n  update: 'update'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'tree',\n    query: payload\n  }, function (seriesModel) {\n    var dataIndex = payload.dataIndex;\n    var tree = seriesModel.getData().tree;\n    var node = tree.getNodeByDataIndex(dataIndex);\n    node.isExpand = !node.isExpand;\n  });\n});","var commonLayout = require(\"./commonLayout\");\n\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('tree', function (seriesModel) {\n    commonLayout(seriesModel, api);\n  });\n}\n\nmodule.exports = _default;","/**\n * Traverse the tree from bottom to top and do something\n * @param  {module:echarts/data/Tree~TreeNode} root  The real root of the tree\n * @param  {Function} callback\n */\nfunction eachAfter(root, callback, separation) {\n  var nodes = [root];\n  var next = [];\n  var node;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    next.push(node);\n\n    if (node.isExpand) {\n      var children = node.children;\n\n      if (children.length) {\n        for (var i = 0; i < children.length; i++) {\n          nodes.push(children[i]);\n        }\n      }\n    }\n  }\n\n  while (node = next.pop()) {\n    // jshint ignore:line\n    callback(node, separation);\n  }\n}\n/**\n * Traverse the tree from top to bottom and do something\n * @param  {module:echarts/data/Tree~TreeNode} root  The real root of the tree\n * @param  {Function} callback\n */\n\n\nfunction eachBefore(root, callback) {\n  var nodes = [root];\n  var node;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    callback(node);\n\n    if (node.isExpand) {\n      var children = node.children;\n\n      if (children.length) {\n        for (var i = children.length - 1; i >= 0; i--) {\n          nodes.push(children[i]);\n        }\n      }\n    }\n  }\n}\n\nexports.eachAfter = eachAfter;\nexports.eachBefore = eachBefore;","var commonLayout = require(\"./commonLayout\");\n\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('tree', function (seriesModel) {\n    commonLayout(seriesModel, api);\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./treemap/TreemapSeries\");\n\nrequire(\"./treemap/TreemapView\");\n\nrequire(\"./treemap/treemapAction\");\n\nvar treemapVisual = require(\"./treemap/treemapVisual\");\n\nvar treemapLayout = require(\"./treemap/treemapLayout\");\n\necharts.registerVisual(treemapVisual);\necharts.registerLayout(treemapLayout);","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar Tree = require(\"../../data/Tree\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\n\nvar _helper = require(\"./helper\");\n\nvar wrapTreePathInfo = _helper.wrapTreePathInfo;\n\nvar _default = SeriesModel.extend({\n  type: 'series.treemap',\n  layoutMode: 'box',\n  dependencies: ['grid', 'polar'],\n\n  /**\n   * @type {module:echarts/data/Tree~Node}\n   */\n  _viewRoot: null,\n  defaultOption: {\n    // Disable progressive rendering\n    progressive: 0,\n    hoverLayerThreshold: Infinity,\n    // center: ['50%', '50%'],          // not supported in ec3.\n    // size: ['80%', '80%'],            // deprecated, compatible with ec2.\n    left: 'center',\n    top: 'middle',\n    right: null,\n    bottom: null,\n    width: '80%',\n    height: '80%',\n    sort: true,\n    // Can be null or false or true\n    // (order by desc default, asc not supported yet (strange effect))\n    clipWindow: 'origin',\n    // Size of clipped window when zooming. 'origin' or 'fullscreen'\n    squareRatio: 0.5 * (1 + Math.sqrt(5)),\n    // golden ratio\n    leafDepth: null,\n    // Nodes on depth from root are regarded as leaves.\n    // Count from zero (zero represents only view root).\n    drillDownIcon: '▶',\n    // Use html character temporarily because it is complicated\n    // to align specialized icon. ▷▶❒❐▼✚\n    zoomToNodeRatio: 0.32 * 0.32,\n    // Be effective when using zoomToNode. Specify the proportion of the\n    // target node area in the view area.\n    roam: true,\n    // true, false, 'scale' or 'zoom', 'move'.\n    nodeClick: 'zoomToNode',\n    // Leaf node click behaviour: 'zoomToNode', 'link', false.\n    // If leafDepth is set and clicking a node which has children but\n    // be on left depth, the behaviour would be changing root. Otherwise\n    // use behavious defined above.\n    animation: true,\n    animationDurationUpdate: 900,\n    animationEasing: 'quinticInOut',\n    breadcrumb: {\n      show: true,\n      height: 22,\n      left: 'center',\n      top: 'bottom',\n      // right\n      // bottom\n      emptyItemWidth: 25,\n      // Width of empty node.\n      itemStyle: {\n        normal: {\n          color: 'rgba(0,0,0,0.7)',\n          //'#5793f3',\n          borderColor: 'rgba(255,255,255,0.7)',\n          borderWidth: 1,\n          shadowColor: 'rgba(150,150,150,1)',\n          shadowBlur: 3,\n          shadowOffsetX: 0,\n          shadowOffsetY: 0,\n          textStyle: {\n            color: '#fff'\n          }\n        },\n        emphasis: {\n          textStyle: {}\n        }\n      }\n    },\n    label: {\n      normal: {\n        show: true,\n        // Do not use textDistance, for ellipsis rect just the same as treemap node rect.\n        distance: 0,\n        padding: 5,\n        position: 'inside',\n        // Can be [5, '5%'] or position stirng like 'insideTopLeft', ...\n        // formatter: null,\n        color: '#fff',\n        ellipsis: true // align\n        // verticalAlign\n\n      }\n    },\n    upperLabel: {\n      // Label when node is parent.\n      normal: {\n        show: false,\n        position: [0, '50%'],\n        height: 20,\n        // formatter: null,\n        color: '#fff',\n        ellipsis: true,\n        // align: null,\n        verticalAlign: 'middle'\n      },\n      emphasis: {\n        show: true,\n        position: [0, '50%'],\n        color: '#fff',\n        ellipsis: true,\n        verticalAlign: 'middle'\n      }\n    },\n    itemStyle: {\n      normal: {\n        color: null,\n        // Can be 'none' if not necessary.\n        colorAlpha: null,\n        // Can be 'none' if not necessary.\n        colorSaturation: null,\n        // Can be 'none' if not necessary.\n        borderWidth: 0,\n        gapWidth: 0,\n        borderColor: '#fff',\n        borderColorSaturation: null // If specified, borderColor will be ineffective, and the\n        // border color is evaluated by color of current node and\n        // borderColorSaturation.\n\n      },\n      emphasis: {}\n    },\n    visualDimension: 0,\n    // Can be 0, 1, 2, 3.\n    visualMin: null,\n    visualMax: null,\n    color: [],\n    // + treemapSeries.color should not be modified. Please only modified\n    // level[n].color (if necessary).\n    // + Specify color list of each level. level[0].color would be global\n    // color list if not specified. (see method `setDefault`).\n    // + But set as a empty array to forbid fetch color from global palette\n    // when using nodeModel.get('color'), otherwise nodes on deep level\n    // will always has color palette set and are not able to inherit color\n    // from parent node.\n    // + TreemapSeries.color can not be set as 'none', otherwise effect\n    // legend color fetching (see seriesColor.js).\n    colorAlpha: null,\n    // Array. Specify color alpha range of each level, like [0.2, 0.8]\n    colorSaturation: null,\n    // Array. Specify color saturation of each level, like [0.2, 0.5]\n    colorMappingBy: 'index',\n    // 'value' or 'index' or 'id'.\n    visibleMin: 10,\n    // If area less than this threshold (unit: pixel^2), node will not\n    // be rendered. Only works when sort is 'asc' or 'desc'.\n    childrenVisibleMin: null,\n    // If area of a node less than this threshold (unit: pixel^2),\n    // grandchildren will not show.\n    // Why grandchildren? If not grandchildren but children,\n    // some siblings show children and some not,\n    // the appearance may be mess and not consistent,\n    levels: [] // Each item: {\n    //     visibleMin, itemStyle, visualDimension, label\n    // }\n    // data: {\n    //      value: [],\n    //      children: [],\n    //      link: 'http://xxx.xxx.xxx',\n    //      target: 'blank' or 'self'\n    // }\n\n  },\n\n  /**\n   * @override\n   */\n  getInitialData: function (option, ecModel) {\n    // Create a virtual root.\n    var root = {\n      name: option.name,\n      children: option.data\n    };\n    completeTreeValue(root);\n    var levels = option.levels || [];\n    levels = option.levels = setDefault(levels, ecModel);\n    var treeOption = {};\n    treeOption.levels = levels; // Make sure always a new tree is created when setOption,\n    // in TreemapView, we check whether oldTree === newTree\n    // to choose mappings approach among old shapes and new shapes.\n\n    return Tree.createTree(root, this, treeOption).data;\n  },\n  optionUpdated: function () {\n    this.resetViewRoot();\n  },\n\n  /**\n   * @override\n   * @param {number} dataIndex\n   * @param {boolean} [mutipleSeries=false]\n   */\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? addCommas(value[0]) : addCommas(value);\n    var name = data.getName(dataIndex);\n    return encodeHTML(name + ': ' + formattedValue);\n  },\n\n  /**\n   * Add tree path to tooltip param\n   *\n   * @override\n   * @param {number} dataIndex\n   * @return {Object}\n   */\n  getDataParams: function (dataIndex) {\n    var params = SeriesModel.prototype.getDataParams.apply(this, arguments);\n    var node = this.getData().tree.getNodeByDataIndex(dataIndex);\n    params.treePathInfo = wrapTreePathInfo(node, this);\n    return params;\n  },\n\n  /**\n   * @public\n   * @param {Object} layoutInfo {\n   *                                x: containerGroup x\n   *                                y: containerGroup y\n   *                                width: containerGroup width\n   *                                height: containerGroup height\n   *                            }\n   */\n  setLayoutInfo: function (layoutInfo) {\n    /**\n     * @readOnly\n     * @type {Object}\n     */\n    this.layoutInfo = this.layoutInfo || {};\n    zrUtil.extend(this.layoutInfo, layoutInfo);\n  },\n\n  /**\n   * @param  {string} id\n   * @return {number} index\n   */\n  mapIdToIndex: function (id) {\n    // A feature is implemented:\n    // index is monotone increasing with the sequence of\n    // input id at the first time.\n    // This feature can make sure that each data item and its\n    // mapped color have the same index between data list and\n    // color list at the beginning, which is useful for user\n    // to adjust data-color mapping.\n\n    /**\n     * @private\n     * @type {Object}\n     */\n    var idIndexMap = this._idIndexMap;\n\n    if (!idIndexMap) {\n      idIndexMap = this._idIndexMap = zrUtil.createHashMap();\n      /**\n       * @private\n       * @type {number}\n       */\n\n      this._idIndexMapCount = 0;\n    }\n\n    var index = idIndexMap.get(id);\n\n    if (index == null) {\n      idIndexMap.set(id, index = this._idIndexMapCount++);\n    }\n\n    return index;\n  },\n  getViewRoot: function () {\n    return this._viewRoot;\n  },\n\n  /**\n   * @param {module:echarts/data/Tree~Node} [viewRoot]\n   */\n  resetViewRoot: function (viewRoot) {\n    viewRoot ? this._viewRoot = viewRoot : viewRoot = this._viewRoot;\n    var root = this.getData().tree.root;\n\n    if (!viewRoot || viewRoot !== root && !root.contains(viewRoot)) {\n      this._viewRoot = root;\n    }\n  }\n});\n/**\n * @param {Object} dataNode\n */\n\n\nfunction completeTreeValue(dataNode) {\n  // Postorder travel tree.\n  // If value of none-leaf node is not set,\n  // calculate it by suming up the value of all children.\n  var sum = 0;\n  zrUtil.each(dataNode.children, function (child) {\n    completeTreeValue(child);\n    var childValue = child.value;\n    zrUtil.isArray(childValue) && (childValue = childValue[0]);\n    sum += childValue;\n  });\n  var thisValue = dataNode.value;\n\n  if (zrUtil.isArray(thisValue)) {\n    thisValue = thisValue[0];\n  }\n\n  if (thisValue == null || isNaN(thisValue)) {\n    thisValue = sum;\n  } // Value should not less than 0.\n\n\n  if (thisValue < 0) {\n    thisValue = 0;\n  }\n\n  zrUtil.isArray(dataNode.value) ? dataNode.value[0] = thisValue : dataNode.value = thisValue;\n}\n/**\n * set default to level configuration\n */\n\n\nfunction setDefault(levels, ecModel) {\n  var globalColorList = ecModel.get('color');\n\n  if (!globalColorList) {\n    return;\n  }\n\n  levels = levels || [];\n  var hasColorDefine;\n  zrUtil.each(levels, function (levelDefine) {\n    var model = new Model(levelDefine);\n    var modelColor = model.get('color');\n\n    if (model.get('itemStyle.normal.color') || modelColor && modelColor !== 'none') {\n      hasColorDefine = true;\n    }\n  });\n\n  if (!hasColorDefine) {\n    var level0 = levels[0] || (levels[0] = {});\n    level0.color = globalColorList.slice();\n  }\n\n  return levels;\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\nvar helper = require(\"./helper\");\n\nvar Breadcrumb = require(\"./Breadcrumb\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar animationUtil = require(\"../../util/animation\");\n\nvar makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n\nvar bind = zrUtil.bind;\nvar Group = graphic.Group;\nvar Rect = graphic.Rect;\nvar each = zrUtil.each;\nvar DRAG_THRESHOLD = 3;\nvar PATH_LABEL_NOAMAL = ['label', 'normal'];\nvar PATH_LABEL_EMPHASIS = ['label', 'emphasis'];\nvar PATH_UPPERLABEL_NORMAL = ['upperLabel', 'normal'];\nvar PATH_UPPERLABEL_EMPHASIS = ['upperLabel', 'emphasis'];\nvar Z_BASE = 10; // Should bigger than every z.\n\nvar Z_BG = 1;\nvar Z_CONTENT = 2;\nvar getItemStyleEmphasis = makeStyleMapper([['fill', 'color'], // `borderColor` and `borderWidth` has been occupied,\n// so use `stroke` to indicate the stroke of the rect.\n['stroke', 'strokeColor'], ['lineWidth', 'strokeWidth'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\n\nvar getItemStyleNormal = function (model) {\n  // Normal style props should include emphasis style props.\n  var itemStyle = getItemStyleEmphasis(model); // Clear styles set by emphasis.\n\n  itemStyle.stroke = itemStyle.fill = itemStyle.lineWidth = null;\n  return itemStyle;\n};\n\nvar _default = echarts.extendChartView({\n  type: 'treemap',\n\n  /**\n   * @override\n   */\n  init: function (o, api) {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this._containerGroup;\n    /**\n     * @private\n     * @type {Object.<string, Array.<module:zrender/container/Group>>}\n     */\n\n    this._storage = createStorage();\n    /**\n     * @private\n     * @type {module:echarts/data/Tree}\n     */\n\n    this._oldTree;\n    /**\n     * @private\n     * @type {module:echarts/chart/treemap/Breadcrumb}\n     */\n\n    this._breadcrumb;\n    /**\n     * @private\n     * @type {module:echarts/component/helper/RoamController}\n     */\n\n    this._controller;\n    /**\n     * 'ready', 'animating'\n     * @private\n     */\n\n    this._state = 'ready';\n  },\n\n  /**\n   * @override\n   */\n  render: function (seriesModel, ecModel, api, payload) {\n    var models = ecModel.findComponents({\n      mainType: 'series',\n      subType: 'treemap',\n      query: payload\n    });\n\n    if (zrUtil.indexOf(models, seriesModel) < 0) {\n      return;\n    }\n\n    this.seriesModel = seriesModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    var targetInfo = helper.retrieveTargetInfo(payload, seriesModel);\n    var payloadType = payload && payload.type;\n    var layoutInfo = seriesModel.layoutInfo;\n    var isInit = !this._oldTree;\n    var thisStorage = this._storage; // Mark new root when action is treemapRootToNode.\n\n    var reRoot = payloadType === 'treemapRootToNode' && targetInfo && thisStorage ? {\n      rootNodeGroup: thisStorage.nodeGroup[targetInfo.node.getRawIndex()],\n      direction: payload.direction\n    } : null;\n\n    var containerGroup = this._giveContainerGroup(layoutInfo);\n\n    var renderResult = this._doRender(containerGroup, seriesModel, reRoot);\n\n    !isInit && (!payloadType || payloadType === 'treemapZoomToNode' || payloadType === 'treemapRootToNode') ? this._doAnimation(containerGroup, renderResult, seriesModel, reRoot) : renderResult.renderFinally();\n\n    this._resetController(api);\n\n    this._renderBreadcrumb(seriesModel, api, targetInfo);\n  },\n\n  /**\n   * @private\n   */\n  _giveContainerGroup: function (layoutInfo) {\n    var containerGroup = this._containerGroup;\n\n    if (!containerGroup) {\n      // FIXME\n      // 加一层containerGroup是为了clip，但是现在clip功能并没有实现。\n      containerGroup = this._containerGroup = new Group();\n\n      this._initEvents(containerGroup);\n\n      this.group.add(containerGroup);\n    }\n\n    containerGroup.attr('position', [layoutInfo.x, layoutInfo.y]);\n    return containerGroup;\n  },\n\n  /**\n   * @private\n   */\n  _doRender: function (containerGroup, seriesModel, reRoot) {\n    var thisTree = seriesModel.getData().tree;\n    var oldTree = this._oldTree; // Clear last shape records.\n\n    var lastsForAnimation = createStorage();\n    var thisStorage = createStorage();\n    var oldStorage = this._storage;\n    var willInvisibleEls = [];\n    var doRenderNode = zrUtil.curry(renderNode, seriesModel, thisStorage, oldStorage, reRoot, lastsForAnimation, willInvisibleEls); // Notice: when thisTree and oldTree are the same tree (see list.cloneShallow),\n    // the oldTree is actually losted, so we can not find all of the old graphic\n    // elements from tree. So we use this stragegy: make element storage, move\n    // from old storage to new storage, clear old storage.\n\n    dualTravel(thisTree.root ? [thisTree.root] : [], oldTree && oldTree.root ? [oldTree.root] : [], containerGroup, thisTree === oldTree || !oldTree, 0); // Process all removing.\n\n    var willDeleteEls = clearStorage(oldStorage);\n    this._oldTree = thisTree;\n    this._storage = thisStorage;\n    return {\n      lastsForAnimation: lastsForAnimation,\n      willDeleteEls: willDeleteEls,\n      renderFinally: renderFinally\n    };\n\n    function dualTravel(thisViewChildren, oldViewChildren, parentGroup, sameTree, depth) {\n      // When 'render' is triggered by action,\n      // 'this' and 'old' may be the same tree,\n      // we use rawIndex in that case.\n      if (sameTree) {\n        oldViewChildren = thisViewChildren;\n        each(thisViewChildren, function (child, index) {\n          !child.isRemoved() && processNode(index, index);\n        });\n      } // Diff hierarchically (diff only in each subtree, but not whole).\n      // because, consistency of view is important.\n      else {\n          new DataDiffer(oldViewChildren, thisViewChildren, getKey, getKey).add(processNode).update(processNode).remove(zrUtil.curry(processNode, null)).execute();\n        }\n\n      function getKey(node) {\n        // Identify by name or raw index.\n        return node.getId();\n      }\n\n      function processNode(newIndex, oldIndex) {\n        var thisNode = newIndex != null ? thisViewChildren[newIndex] : null;\n        var oldNode = oldIndex != null ? oldViewChildren[oldIndex] : null;\n        var group = doRenderNode(thisNode, oldNode, parentGroup, depth);\n        group && dualTravel(thisNode && thisNode.viewChildren || [], oldNode && oldNode.viewChildren || [], group, sameTree, depth + 1);\n      }\n    }\n\n    function clearStorage(storage) {\n      var willDeleteEls = createStorage();\n      storage && each(storage, function (store, storageName) {\n        var delEls = willDeleteEls[storageName];\n        each(store, function (el) {\n          el && (delEls.push(el), el.__tmWillDelete = 1);\n        });\n      });\n      return willDeleteEls;\n    }\n\n    function renderFinally() {\n      each(willDeleteEls, function (els) {\n        each(els, function (el) {\n          el.parent && el.parent.remove(el);\n        });\n      });\n      each(willInvisibleEls, function (el) {\n        el.invisible = true; // Setting invisible is for optimizing, so no need to set dirty,\n        // just mark as invisible.\n\n        el.dirty();\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _doAnimation: function (containerGroup, renderResult, seriesModel, reRoot) {\n    if (!seriesModel.get('animation')) {\n      return;\n    }\n\n    var duration = seriesModel.get('animationDurationUpdate');\n    var easing = seriesModel.get('animationEasing');\n    var animationWrap = animationUtil.createWrap(); // Make delete animations.\n\n    each(renderResult.willDeleteEls, function (store, storageName) {\n      each(store, function (el, rawIndex) {\n        if (el.invisible) {\n          return;\n        }\n\n        var parent = el.parent; // Always has parent, and parent is nodeGroup.\n\n        var target;\n\n        if (reRoot && reRoot.direction === 'drillDown') {\n          target = parent === reRoot.rootNodeGroup // This is the content element of view root.\n          // Only `content` will enter this branch, because\n          // `background` and `nodeGroup` will not be deleted.\n          ? {\n            shape: {\n              x: 0,\n              y: 0,\n              width: parent.__tmNodeWidth,\n              height: parent.__tmNodeHeight\n            },\n            style: {\n              opacity: 0\n            } // Others.\n\n          } : {\n            style: {\n              opacity: 0\n            }\n          };\n        } else {\n          var targetX = 0;\n          var targetY = 0;\n\n          if (!parent.__tmWillDelete) {\n            // Let node animate to right-bottom corner, cooperating with fadeout,\n            // which is appropriate for user understanding.\n            // Divided by 2 for reRoot rolling up effect.\n            targetX = parent.__tmNodeWidth / 2;\n            targetY = parent.__tmNodeHeight / 2;\n          }\n\n          target = storageName === 'nodeGroup' ? {\n            position: [targetX, targetY],\n            style: {\n              opacity: 0\n            }\n          } : {\n            shape: {\n              x: targetX,\n              y: targetY,\n              width: 0,\n              height: 0\n            },\n            style: {\n              opacity: 0\n            }\n          };\n        }\n\n        target && animationWrap.add(el, target, duration, easing);\n      });\n    }); // Make other animations\n\n    each(this._storage, function (store, storageName) {\n      each(store, function (el, rawIndex) {\n        var last = renderResult.lastsForAnimation[storageName][rawIndex];\n        var target = {};\n\n        if (!last) {\n          return;\n        }\n\n        if (storageName === 'nodeGroup') {\n          if (last.old) {\n            target.position = el.position.slice();\n            el.attr('position', last.old);\n          }\n        } else {\n          if (last.old) {\n            target.shape = zrUtil.extend({}, el.shape);\n            el.setShape(last.old);\n          }\n\n          if (last.fadein) {\n            el.setStyle('opacity', 0);\n            target.style = {\n              opacity: 1\n            };\n          } // When animation is stopped for succedent animation starting,\n          // el.style.opacity might not be 1\n          else if (el.style.opacity !== 1) {\n              target.style = {\n                opacity: 1\n              };\n            }\n        }\n\n        animationWrap.add(el, target, duration, easing);\n      });\n    }, this);\n    this._state = 'animating';\n    animationWrap.done(bind(function () {\n      this._state = 'ready';\n      renderResult.renderFinally();\n    }, this)).start();\n  },\n\n  /**\n   * @private\n   */\n  _resetController: function (api) {\n    var controller = this._controller; // Init controller.\n\n    if (!controller) {\n      controller = this._controller = new RoamController(api.getZr());\n      controller.enable(this.seriesModel.get('roam'));\n      controller.on('pan', bind(this._onPan, this));\n      controller.on('zoom', bind(this._onZoom, this));\n    }\n\n    var rect = new BoundingRect(0, 0, api.getWidth(), api.getHeight());\n    controller.setPointerChecker(function (e, x, y) {\n      return rect.contain(x, y);\n    });\n  },\n\n  /**\n   * @private\n   */\n  _clearController: function () {\n    var controller = this._controller;\n\n    if (controller) {\n      controller.dispose();\n      controller = null;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _onPan: function (dx, dy) {\n    if (this._state !== 'animating' && (Math.abs(dx) > DRAG_THRESHOLD || Math.abs(dy) > DRAG_THRESHOLD)) {\n      // These param must not be cached.\n      var root = this.seriesModel.getData().tree.root;\n\n      if (!root) {\n        return;\n      }\n\n      var rootLayout = root.getLayout();\n\n      if (!rootLayout) {\n        return;\n      }\n\n      this.api.dispatchAction({\n        type: 'treemapMove',\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        rootRect: {\n          x: rootLayout.x + dx,\n          y: rootLayout.y + dy,\n          width: rootLayout.width,\n          height: rootLayout.height\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _onZoom: function (scale, mouseX, mouseY) {\n    if (this._state !== 'animating') {\n      // These param must not be cached.\n      var root = this.seriesModel.getData().tree.root;\n\n      if (!root) {\n        return;\n      }\n\n      var rootLayout = root.getLayout();\n\n      if (!rootLayout) {\n        return;\n      }\n\n      var rect = new BoundingRect(rootLayout.x, rootLayout.y, rootLayout.width, rootLayout.height);\n      var layoutInfo = this.seriesModel.layoutInfo; // Transform mouse coord from global to containerGroup.\n\n      mouseX -= layoutInfo.x;\n      mouseY -= layoutInfo.y; // Scale root bounding rect.\n\n      var m = matrix.create();\n      matrix.translate(m, m, [-mouseX, -mouseY]);\n      matrix.scale(m, m, [scale, scale]);\n      matrix.translate(m, m, [mouseX, mouseY]);\n      rect.applyTransform(m);\n      this.api.dispatchAction({\n        type: 'treemapRender',\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        rootRect: {\n          x: rect.x,\n          y: rect.y,\n          width: rect.width,\n          height: rect.height\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _initEvents: function (containerGroup) {\n    containerGroup.on('click', function (e) {\n      if (this._state !== 'ready') {\n        return;\n      }\n\n      var nodeClick = this.seriesModel.get('nodeClick', true);\n\n      if (!nodeClick) {\n        return;\n      }\n\n      var targetInfo = this.findTarget(e.offsetX, e.offsetY);\n\n      if (!targetInfo) {\n        return;\n      }\n\n      var node = targetInfo.node;\n\n      if (node.getLayout().isLeafRoot) {\n        this._rootToNode(targetInfo);\n      } else {\n        if (nodeClick === 'zoomToNode') {\n          this._zoomToNode(targetInfo);\n        } else if (nodeClick === 'link') {\n          var itemModel = node.hostTree.data.getItemModel(node.dataIndex);\n          var link = itemModel.get('link', true);\n          var linkTarget = itemModel.get('target', true) || 'blank';\n          link && window.open(link, linkTarget);\n        }\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _renderBreadcrumb: function (seriesModel, api, targetInfo) {\n    if (!targetInfo) {\n      targetInfo = seriesModel.get('leafDepth', true) != null ? {\n        node: seriesModel.getViewRoot() // FIXME\n        // better way?\n        // Find breadcrumb tail on center of containerGroup.\n\n      } : this.findTarget(api.getWidth() / 2, api.getHeight() / 2);\n\n      if (!targetInfo) {\n        targetInfo = {\n          node: seriesModel.getData().tree.root\n        };\n      }\n    }\n\n    (this._breadcrumb || (this._breadcrumb = new Breadcrumb(this.group))).render(seriesModel, api, targetInfo.node, bind(onSelect, this));\n\n    function onSelect(node) {\n      if (this._state !== 'animating') {\n        helper.aboveViewRoot(seriesModel.getViewRoot(), node) ? this._rootToNode({\n          node: node\n        }) : this._zoomToNode({\n          node: node\n        });\n      }\n    }\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._clearController();\n\n    this._containerGroup && this._containerGroup.removeAll();\n    this._storage = createStorage();\n    this._state = 'ready';\n    this._breadcrumb && this._breadcrumb.remove();\n  },\n  dispose: function () {\n    this._clearController();\n  },\n\n  /**\n   * @private\n   */\n  _zoomToNode: function (targetInfo) {\n    this.api.dispatchAction({\n      type: 'treemapZoomToNode',\n      from: this.uid,\n      seriesId: this.seriesModel.id,\n      targetNode: targetInfo.node\n    });\n  },\n\n  /**\n   * @private\n   */\n  _rootToNode: function (targetInfo) {\n    this.api.dispatchAction({\n      type: 'treemapRootToNode',\n      from: this.uid,\n      seriesId: this.seriesModel.id,\n      targetNode: targetInfo.node\n    });\n  },\n\n  /**\n   * @public\n   * @param {number} x Global coord x.\n   * @param {number} y Global coord y.\n   * @return {Object} info If not found, return undefined;\n   * @return {number} info.node Target node.\n   * @return {number} info.offsetX x refer to target node.\n   * @return {number} info.offsetY y refer to target node.\n   */\n  findTarget: function (x, y) {\n    var targetInfo;\n    var viewRoot = this.seriesModel.getViewRoot();\n    viewRoot.eachNode({\n      attr: 'viewChildren',\n      order: 'preorder'\n    }, function (node) {\n      var bgEl = this._storage.background[node.getRawIndex()]; // If invisible, there might be no element.\n\n\n      if (bgEl) {\n        var point = bgEl.transformCoordToLocal(x, y);\n        var shape = bgEl.shape; // For performance consideration, dont use 'getBoundingRect'.\n\n        if (shape.x <= point[0] && point[0] <= shape.x + shape.width && shape.y <= point[1] && point[1] <= shape.y + shape.height) {\n          targetInfo = {\n            node: node,\n            offsetX: point[0],\n            offsetY: point[1]\n          };\n        } else {\n          return false; // Suppress visit subtree.\n        }\n      }\n    }, this);\n    return targetInfo;\n  }\n});\n/**\n * @inner\n */\n\n\nfunction createStorage() {\n  return {\n    nodeGroup: [],\n    background: [],\n    content: []\n  };\n}\n/**\n * @inner\n * @return Return undefined means do not travel further.\n */\n\n\nfunction renderNode(seriesModel, thisStorage, oldStorage, reRoot, lastsForAnimation, willInvisibleEls, thisNode, oldNode, parentGroup, depth) {\n  // Whether under viewRoot.\n  if (!thisNode) {\n    // Deleting nodes will be performed finally. This method just find\n    // element from old storage, or create new element, set them to new\n    // storage, and set styles.\n    return;\n  } // -------------------------------------------------------------------\n  // Start of closure variables available in \"Procedures in renderNode\".\n\n\n  var thisLayout = thisNode.getLayout();\n\n  if (!thisLayout || !thisLayout.isInView) {\n    return;\n  }\n\n  var thisWidth = thisLayout.width;\n  var thisHeight = thisLayout.height;\n  var borderWidth = thisLayout.borderWidth;\n  var thisInvisible = thisLayout.invisible;\n  var thisRawIndex = thisNode.getRawIndex();\n  var oldRawIndex = oldNode && oldNode.getRawIndex();\n  var thisViewChildren = thisNode.viewChildren;\n  var upperHeight = thisLayout.upperHeight;\n  var isParent = thisViewChildren && thisViewChildren.length;\n  var itemStyleNormalModel = thisNode.getModel('itemStyle.normal');\n  var itemStyleEmphasisModel = thisNode.getModel('itemStyle.emphasis'); // End of closure ariables available in \"Procedures in renderNode\".\n  // -----------------------------------------------------------------\n  // Node group\n\n  var group = giveGraphic('nodeGroup', Group);\n\n  if (!group) {\n    return;\n  }\n\n  parentGroup.add(group); // x,y are not set when el is above view root.\n\n  group.attr('position', [thisLayout.x || 0, thisLayout.y || 0]);\n  group.__tmNodeWidth = thisWidth;\n  group.__tmNodeHeight = thisHeight;\n\n  if (thisLayout.isAboveViewRoot) {\n    return group;\n  } // Background\n\n\n  var bg = giveGraphic('background', Rect, depth, Z_BG);\n  bg && renderBackground(group, bg, isParent && thisLayout.upperHeight); // No children, render content.\n\n  if (!isParent) {\n    var content = giveGraphic('content', Rect, depth, Z_CONTENT);\n    content && renderContent(group, content);\n  }\n\n  return group; // ----------------------------\n  // | Procedures in renderNode |\n  // ----------------------------\n\n  function renderBackground(group, bg, useUpperLabel) {\n    // For tooltip.\n    bg.dataIndex = thisNode.dataIndex;\n    bg.seriesIndex = seriesModel.seriesIndex;\n    bg.setShape({\n      x: 0,\n      y: 0,\n      width: thisWidth,\n      height: thisHeight\n    });\n    var visualBorderColor = thisNode.getVisual('borderColor', true);\n    var emphasisBorderColor = itemStyleEmphasisModel.get('borderColor');\n    updateStyle(bg, function () {\n      var normalStyle = getItemStyleNormal(itemStyleNormalModel);\n      normalStyle.fill = visualBorderColor;\n      var emphasisStyle = getItemStyleEmphasis(itemStyleEmphasisModel);\n      emphasisStyle.fill = emphasisBorderColor;\n\n      if (useUpperLabel) {\n        var upperLabelWidth = thisWidth - 2 * borderWidth;\n        prepareText(normalStyle, emphasisStyle, visualBorderColor, upperLabelWidth, upperHeight, {\n          x: borderWidth,\n          y: 0,\n          width: upperLabelWidth,\n          height: upperHeight\n        });\n      } // For old bg.\n      else {\n          normalStyle.text = emphasisStyle.text = null;\n        }\n\n      bg.setStyle(normalStyle);\n      graphic.setHoverStyle(bg, emphasisStyle);\n    });\n    group.add(bg);\n  }\n\n  function renderContent(group, content) {\n    // For tooltip.\n    content.dataIndex = thisNode.dataIndex;\n    content.seriesIndex = seriesModel.seriesIndex;\n    var contentWidth = Math.max(thisWidth - 2 * borderWidth, 0);\n    var contentHeight = Math.max(thisHeight - 2 * borderWidth, 0);\n    content.culling = true;\n    content.setShape({\n      x: borderWidth,\n      y: borderWidth,\n      width: contentWidth,\n      height: contentHeight\n    });\n    var visualColor = thisNode.getVisual('color', true);\n    updateStyle(content, function () {\n      var normalStyle = getItemStyleNormal(itemStyleNormalModel);\n      normalStyle.fill = visualColor;\n      var emphasisStyle = getItemStyleEmphasis(itemStyleEmphasisModel);\n      prepareText(normalStyle, emphasisStyle, visualColor, contentWidth, contentHeight);\n      content.setStyle(normalStyle);\n      graphic.setHoverStyle(content, emphasisStyle);\n    });\n    group.add(content);\n  }\n\n  function updateStyle(element, cb) {\n    if (!thisInvisible) {\n      // If invisible, do not set visual, otherwise the element will\n      // change immediately before animation. We think it is OK to\n      // remain its origin color when moving out of the view window.\n      cb();\n\n      if (!element.__tmWillVisible) {\n        element.invisible = false;\n      }\n    } else {\n      // Delay invisible setting utill animation finished,\n      // avoid element vanish suddenly before animation.\n      !element.invisible && willInvisibleEls.push(element);\n    }\n  }\n\n  function prepareText(normalStyle, emphasisStyle, visualColor, width, height, upperLabelRect) {\n    var nodeModel = thisNode.getModel();\n    var text = zrUtil.retrieve(seriesModel.getFormattedLabel(thisNode.dataIndex, 'normal', null, null, upperLabelRect ? 'upperLabel' : 'label'), nodeModel.get('name'));\n\n    if (!upperLabelRect && thisLayout.isLeafRoot) {\n      var iconChar = seriesModel.get('drillDownIcon', true);\n      text = iconChar ? iconChar + ' ' + text : text;\n    }\n\n    var normalLabelModel = nodeModel.getModel(upperLabelRect ? PATH_UPPERLABEL_NORMAL : PATH_LABEL_NOAMAL);\n    var emphasisLabelModel = nodeModel.getModel(upperLabelRect ? PATH_UPPERLABEL_EMPHASIS : PATH_LABEL_EMPHASIS);\n    var isShow = normalLabelModel.getShallow('show');\n    graphic.setLabelStyle(normalStyle, emphasisStyle, normalLabelModel, emphasisLabelModel, {\n      defaultText: isShow ? text : null,\n      autoColor: visualColor,\n      isRectText: true\n    });\n    upperLabelRect && (normalStyle.textRect = zrUtil.clone(upperLabelRect));\n    normalStyle.truncate = isShow && normalLabelModel.get('ellipsis') ? {\n      outerWidth: width,\n      outerHeight: height,\n      minChar: 2\n    } : null;\n  }\n\n  function giveGraphic(storageName, Ctor, depth, z) {\n    var element = oldRawIndex != null && oldStorage[storageName][oldRawIndex];\n    var lasts = lastsForAnimation[storageName];\n\n    if (element) {\n      // Remove from oldStorage\n      oldStorage[storageName][oldRawIndex] = null;\n      prepareAnimationWhenHasOld(lasts, element, storageName);\n    } // If invisible and no old element, do not create new element (for optimizing).\n    else if (!thisInvisible) {\n        element = new Ctor({\n          z: calculateZ(depth, z)\n        });\n        element.__tmDepth = depth;\n        element.__tmStorageName = storageName;\n        prepareAnimationWhenNoOld(lasts, element, storageName);\n      } // Set to thisStorage\n\n\n    return thisStorage[storageName][thisRawIndex] = element;\n  }\n\n  function prepareAnimationWhenHasOld(lasts, element, storageName) {\n    var lastCfg = lasts[thisRawIndex] = {};\n    lastCfg.old = storageName === 'nodeGroup' ? element.position.slice() : zrUtil.extend({}, element.shape);\n  } // If a element is new, we need to find the animation start point carefully,\n  // otherwise it will looks strange when 'zoomToNode'.\n\n\n  function prepareAnimationWhenNoOld(lasts, element, storageName) {\n    var lastCfg = lasts[thisRawIndex] = {};\n    var parentNode = thisNode.parentNode;\n\n    if (parentNode && (!reRoot || reRoot.direction === 'drillDown')) {\n      var parentOldX = 0;\n      var parentOldY = 0; // New nodes appear from right-bottom corner in 'zoomToNode' animation.\n      // For convenience, get old bounding rect from background.\n\n      var parentOldBg = lastsForAnimation.background[parentNode.getRawIndex()];\n\n      if (!reRoot && parentOldBg && parentOldBg.old) {\n        parentOldX = parentOldBg.old.width;\n        parentOldY = parentOldBg.old.height;\n      } // When no parent old shape found, its parent is new too,\n      // so we can just use {x:0, y:0}.\n\n\n      lastCfg.old = storageName === 'nodeGroup' ? [0, parentOldY] : {\n        x: parentOldX,\n        y: parentOldY,\n        width: 0,\n        height: 0\n      };\n    } // Fade in, user can be aware that these nodes are new.\n\n\n    lastCfg.fadein = storageName !== 'nodeGroup';\n  }\n} // We can not set all backgroud with the same z, Because the behaviour of\n// drill down and roll up differ background creation sequence from tree\n// hierarchy sequence, which cause that lowser background element overlap\n// upper ones. So we calculate z based on depth.\n// Moreover, we try to shrink down z interval to [0, 1] to avoid that\n// treemap with large z overlaps other components.\n\n\nfunction calculateZ(depth, zInLevel) {\n  var zb = depth * Z_BASE + zInLevel;\n  return (zb - 1) / zb;\n}\n\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar layout = require(\"../../util/layout\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _helper = require(\"./helper\");\n\nvar wrapTreePathInfo = _helper.wrapTreePathInfo;\nvar TEXT_PADDING = 8;\nvar ITEM_GAP = 8;\nvar ARRAY_LENGTH = 5;\n\nfunction Breadcrumb(containerGroup) {\n  /**\n   * @private\n   * @type {module:zrender/container/Group}\n   */\n  this.group = new graphic.Group();\n  containerGroup.add(this.group);\n}\n\nBreadcrumb.prototype = {\n  constructor: Breadcrumb,\n  render: function (seriesModel, api, targetNode, onSelect) {\n    var model = seriesModel.getModel('breadcrumb');\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n\n    if (!model.get('show') || !targetNode) {\n      return;\n    }\n\n    var normalStyleModel = model.getModel('itemStyle.normal'); // var emphasisStyleModel = model.getModel('itemStyle.emphasis');\n\n    var textStyleModel = normalStyleModel.getModel('textStyle');\n    var layoutParam = {\n      pos: {\n        left: model.get('left'),\n        right: model.get('right'),\n        top: model.get('top'),\n        bottom: model.get('bottom')\n      },\n      box: {\n        width: api.getWidth(),\n        height: api.getHeight()\n      },\n      emptyItemWidth: model.get('emptyItemWidth'),\n      totalWidth: 0,\n      renderList: []\n    };\n\n    this._prepare(targetNode, layoutParam, textStyleModel);\n\n    this._renderContent(seriesModel, layoutParam, normalStyleModel, textStyleModel, onSelect);\n\n    layout.positionElement(thisGroup, layoutParam.pos, layoutParam.box);\n  },\n\n  /**\n   * Prepare render list and total width\n   * @private\n   */\n  _prepare: function (targetNode, layoutParam, textStyleModel) {\n    for (var node = targetNode; node; node = node.parentNode) {\n      var text = node.getModel().get('name');\n      var textRect = textStyleModel.getTextRect(text);\n      var itemWidth = Math.max(textRect.width + TEXT_PADDING * 2, layoutParam.emptyItemWidth);\n      layoutParam.totalWidth += itemWidth + ITEM_GAP;\n      layoutParam.renderList.push({\n        node: node,\n        text: text,\n        width: itemWidth\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderContent: function (seriesModel, layoutParam, normalStyleModel, textStyleModel, onSelect) {\n    // Start rendering.\n    var lastX = 0;\n    var emptyItemWidth = layoutParam.emptyItemWidth;\n    var height = seriesModel.get('breadcrumb.height');\n    var availableSize = layout.getAvailableSize(layoutParam.pos, layoutParam.box);\n    var totalWidth = layoutParam.totalWidth;\n    var renderList = layoutParam.renderList;\n\n    for (var i = renderList.length - 1; i >= 0; i--) {\n      var item = renderList[i];\n      var itemNode = item.node;\n      var itemWidth = item.width;\n      var text = item.text; // Hdie text and shorten width if necessary.\n\n      if (totalWidth > availableSize.width) {\n        totalWidth -= itemWidth - emptyItemWidth;\n        itemWidth = emptyItemWidth;\n        text = null;\n      }\n\n      var el = new graphic.Polygon({\n        shape: {\n          points: makeItemPoints(lastX, 0, itemWidth, height, i === renderList.length - 1, i === 0)\n        },\n        style: zrUtil.defaults(normalStyleModel.getItemStyle(), {\n          lineJoin: 'bevel',\n          text: text,\n          textFill: textStyleModel.getTextColor(),\n          textFont: textStyleModel.getFont()\n        }),\n        z: 10,\n        onclick: zrUtil.curry(onSelect, itemNode)\n      });\n      this.group.add(el);\n      packEventData(el, seriesModel, itemNode);\n      lastX += itemWidth + ITEM_GAP;\n    }\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this.group.removeAll();\n  }\n};\n\nfunction makeItemPoints(x, y, itemWidth, itemHeight, head, tail) {\n  var points = [[head ? x : x - ARRAY_LENGTH, y], [x + itemWidth, y], [x + itemWidth, y + itemHeight], [head ? x : x - ARRAY_LENGTH, y + itemHeight]];\n  !tail && points.splice(2, 0, [x + itemWidth + ARRAY_LENGTH, y + itemHeight / 2]);\n  !head && points.push([x, y + itemHeight / 2]);\n  return points;\n} // Package custom mouse event.\n\n\nfunction packEventData(el, seriesModel, itemNode) {\n  el.eventData = {\n    componentType: 'series',\n    componentSubType: 'treemap',\n    seriesIndex: seriesModel.componentIndex,\n    seriesName: seriesModel.name,\n    seriesType: 'treemap',\n    selfType: 'breadcrumb',\n    // Distinguish with click event on treemap node.\n    nodeData: {\n      dataIndex: itemNode && itemNode.dataIndex,\n      name: itemNode && itemNode.name\n    },\n    treePathInfo: itemNode && wrapTreePathInfo(itemNode, seriesModel)\n  };\n}\n\nvar _default = Breadcrumb;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @param {number} [time=500] Time in ms\n * @param {string} [easing='linear']\n * @param {number} [delay=0]\n * @param {Function} [callback]\n *\n * @example\n *  // Animate position\n *  animation\n *      .createWrap()\n *      .add(el1, {position: [10, 10]})\n *      .add(el2, {shape: {width: 500}, style: {fill: 'red'}}, 400)\n *      .done(function () { // done })\n *      .start('cubicOut');\n */\nfunction createWrap() {\n  var storage = [];\n  var elExistsMap = {};\n  var doneCallback;\n  return {\n    /**\n     * Caution: a el can only be added once, otherwise 'done'\n     * might not be called. This method checks this (by el.id),\n     * suppresses adding and returns false when existing el found.\n     *\n     * @param {modele:zrender/Element} el\n     * @param {Object} target\n     * @param {number} [time=500]\n     * @param {number} [delay=0]\n     * @param {string} [easing='linear']\n     * @return {boolean} Whether adding succeeded.\n     *\n     * @example\n     *     add(el, target, time, delay, easing);\n     *     add(el, target, time, easing);\n     *     add(el, target, time);\n     *     add(el, target);\n     */\n    add: function (el, target, time, delay, easing) {\n      if (zrUtil.isString(delay)) {\n        easing = delay;\n        delay = 0;\n      }\n\n      if (elExistsMap[el.id]) {\n        return false;\n      }\n\n      elExistsMap[el.id] = 1;\n      storage.push({\n        el: el,\n        target: target,\n        time: time,\n        delay: delay,\n        easing: easing\n      });\n      return true;\n    },\n\n    /**\n     * Only execute when animation finished. Will not execute when any\n     * of 'stop' or 'stopAnimation' called.\n     *\n     * @param {Function} callback\n     */\n    done: function (callback) {\n      doneCallback = callback;\n      return this;\n    },\n\n    /**\n     * Will stop exist animation firstly.\n     */\n    start: function () {\n      var count = storage.length;\n\n      for (var i = 0, len = storage.length; i < len; i++) {\n        var item = storage[i];\n        item.el.animateTo(item.target, item.time, item.delay, item.easing, done);\n      }\n\n      return this;\n\n      function done() {\n        count--;\n\n        if (!count) {\n          storage.length = 0;\n          elExistsMap = {};\n          doneCallback && doneCallback();\n        }\n      }\n    }\n  };\n}\n\nexports.createWrap = createWrap;","var echarts = require(\"../../echarts\");\n\nvar helper = require(\"./helper\");\n\n/**\n * @file Treemap action\n */\nvar noop = function () {};\n\nvar actionTypes = ['treemapZoomToNode', 'treemapRender', 'treemapMove'];\n\nfor (var i = 0; i < actionTypes.length; i++) {\n  echarts.registerAction({\n    type: actionTypes[i],\n    update: 'updateView'\n  }, noop);\n}\n\necharts.registerAction({\n  type: 'treemapRootToNode',\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'treemap',\n    query: payload\n  }, handleRootToNode);\n\n  function handleRootToNode(model, index) {\n    var targetInfo = helper.retrieveTargetInfo(payload, model);\n\n    if (targetInfo) {\n      var originViewRoot = model.getViewRoot();\n\n      if (originViewRoot) {\n        payload.direction = helper.aboveViewRoot(originViewRoot, targetInfo.node) ? 'rollUp' : 'drillDown';\n      }\n\n      model.resetViewRoot(targetInfo.node);\n    }\n  }\n});","var VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar isArray = zrUtil.isArray;\nvar ITEM_STYLE_NORMAL = 'itemStyle.normal';\n\nfunction _default(ecModel, api, payload) {\n  var condition = {\n    mainType: 'series',\n    subType: 'treemap',\n    query: payload\n  };\n  ecModel.eachComponent(condition, function (seriesModel) {\n    var tree = seriesModel.getData().tree;\n    var root = tree.root;\n    var seriesItemStyleModel = seriesModel.getModel(ITEM_STYLE_NORMAL);\n\n    if (root.isRemoved()) {\n      return;\n    }\n\n    var levelItemStyles = zrUtil.map(tree.levelModels, function (levelModel) {\n      return levelModel ? levelModel.get(ITEM_STYLE_NORMAL) : null;\n    });\n    travelTree(root, // Visual should calculate from tree root but not view root.\n    {}, levelItemStyles, seriesItemStyleModel, seriesModel.getViewRoot().getAncestors(), seriesModel);\n  });\n}\n\nfunction travelTree(node, designatedVisual, levelItemStyles, seriesItemStyleModel, viewRootAncestors, seriesModel) {\n  var nodeModel = node.getModel();\n  var nodeLayout = node.getLayout(); // Optimize\n\n  if (!nodeLayout || nodeLayout.invisible || !nodeLayout.isInView) {\n    return;\n  }\n\n  var nodeItemStyleModel = node.getModel(ITEM_STYLE_NORMAL);\n  var levelItemStyle = levelItemStyles[node.depth];\n  var visuals = buildVisuals(nodeItemStyleModel, designatedVisual, levelItemStyle, seriesItemStyleModel); // calculate border color\n\n  var borderColor = nodeItemStyleModel.get('borderColor');\n  var borderColorSaturation = nodeItemStyleModel.get('borderColorSaturation');\n  var thisNodeColor;\n\n  if (borderColorSaturation != null) {\n    // For performance, do not always execute 'calculateColor'.\n    thisNodeColor = calculateColor(visuals, node);\n    borderColor = calculateBorderColor(borderColorSaturation, thisNodeColor);\n  }\n\n  node.setVisual('borderColor', borderColor);\n  var viewChildren = node.viewChildren;\n\n  if (!viewChildren || !viewChildren.length) {\n    thisNodeColor = calculateColor(visuals, node); // Apply visual to this node.\n\n    node.setVisual('color', thisNodeColor);\n  } else {\n    var mapping = buildVisualMapping(node, nodeModel, nodeLayout, nodeItemStyleModel, visuals, viewChildren); // Designate visual to children.\n\n    zrUtil.each(viewChildren, function (child, index) {\n      // If higher than viewRoot, only ancestors of viewRoot is needed to visit.\n      if (child.depth >= viewRootAncestors.length || child === viewRootAncestors[child.depth]) {\n        var childVisual = mapVisual(nodeModel, visuals, child, index, mapping, seriesModel);\n        travelTree(child, childVisual, levelItemStyles, seriesItemStyleModel, viewRootAncestors, seriesModel);\n      }\n    });\n  }\n}\n\nfunction buildVisuals(nodeItemStyleModel, designatedVisual, levelItemStyle, seriesItemStyleModel) {\n  var visuals = zrUtil.extend({}, designatedVisual);\n  zrUtil.each(['color', 'colorAlpha', 'colorSaturation'], function (visualName) {\n    // Priority: thisNode > thisLevel > parentNodeDesignated > seriesModel\n    var val = nodeItemStyleModel.get(visualName, true); // Ignore parent\n\n    val == null && levelItemStyle && (val = levelItemStyle[visualName]);\n    val == null && (val = designatedVisual[visualName]);\n    val == null && (val = seriesItemStyleModel.get(visualName));\n    val != null && (visuals[visualName] = val);\n  });\n  return visuals;\n}\n\nfunction calculateColor(visuals) {\n  var color = getValueVisualDefine(visuals, 'color');\n\n  if (color) {\n    var colorAlpha = getValueVisualDefine(visuals, 'colorAlpha');\n    var colorSaturation = getValueVisualDefine(visuals, 'colorSaturation');\n\n    if (colorSaturation) {\n      color = zrColor.modifyHSL(color, null, null, colorSaturation);\n    }\n\n    if (colorAlpha) {\n      color = zrColor.modifyAlpha(color, colorAlpha);\n    }\n\n    return color;\n  }\n}\n\nfunction calculateBorderColor(borderColorSaturation, thisNodeColor) {\n  return thisNodeColor != null ? zrColor.modifyHSL(thisNodeColor, null, null, borderColorSaturation) : null;\n}\n\nfunction getValueVisualDefine(visuals, name) {\n  var value = visuals[name];\n\n  if (value != null && value !== 'none') {\n    return value;\n  }\n}\n\nfunction buildVisualMapping(node, nodeModel, nodeLayout, nodeItemStyleModel, visuals, viewChildren) {\n  if (!viewChildren || !viewChildren.length) {\n    return;\n  }\n\n  var rangeVisual = getRangeVisual(nodeModel, 'color') || visuals.color != null && visuals.color !== 'none' && (getRangeVisual(nodeModel, 'colorAlpha') || getRangeVisual(nodeModel, 'colorSaturation'));\n\n  if (!rangeVisual) {\n    return;\n  }\n\n  var visualMin = nodeModel.get('visualMin');\n  var visualMax = nodeModel.get('visualMax');\n  var dataExtent = nodeLayout.dataExtent.slice();\n  visualMin != null && visualMin < dataExtent[0] && (dataExtent[0] = visualMin);\n  visualMax != null && visualMax > dataExtent[1] && (dataExtent[1] = visualMax);\n  var colorMappingBy = nodeModel.get('colorMappingBy');\n  var opt = {\n    type: rangeVisual.name,\n    dataExtent: dataExtent,\n    visual: rangeVisual.range\n  };\n\n  if (opt.type === 'color' && (colorMappingBy === 'index' || colorMappingBy === 'id')) {\n    opt.mappingMethod = 'category';\n    opt.loop = true; // categories is ordinal, so do not set opt.categories.\n  } else {\n    opt.mappingMethod = 'linear';\n  }\n\n  var mapping = new VisualMapping(opt);\n  mapping.__drColorMappingBy = colorMappingBy;\n  return mapping;\n} // Notice: If we dont have the attribute 'colorRange', but only use\n// attribute 'color' to represent both concepts of 'colorRange' and 'color',\n// (It means 'colorRange' when 'color' is Array, means 'color' when not array),\n// this problem will be encountered:\n// If a level-1 node dont have children, and its siblings has children,\n// and colorRange is set on level-1, then the node can not be colored.\n// So we separate 'colorRange' and 'color' to different attributes.\n\n\nfunction getRangeVisual(nodeModel, name) {\n  // 'colorRange', 'colorARange', 'colorSRange'.\n  // If not exsits on this node, fetch from levels and series.\n  var range = nodeModel.get(name);\n  return isArray(range) && range.length ? {\n    name: name,\n    range: range\n  } : null;\n}\n\nfunction mapVisual(nodeModel, visuals, child, index, mapping, seriesModel) {\n  var childVisuals = zrUtil.extend({}, visuals);\n\n  if (mapping) {\n    var mappingType = mapping.type;\n    var colorMappingBy = mappingType === 'color' && mapping.__drColorMappingBy;\n    var value = colorMappingBy === 'index' ? index : colorMappingBy === 'id' ? seriesModel.mapIdToIndex(child.getId()) : child.getValue(nodeModel.get('visualDimension'));\n    childVisuals[mappingType] = mapping.mapValueToVisual(value);\n  }\n\n  return childVisuals;\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar MAX_SAFE_INTEGER = _number.MAX_SAFE_INTEGER;\n\nvar layout = require(\"../../util/layout\");\n\nvar helper = require(\"./helper\");\n\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar retrieveValue = zrUtil.retrieve;\nvar each = zrUtil.each;\nvar PATH_BORDER_WIDTH = ['itemStyle', 'normal', 'borderWidth'];\nvar PATH_GAP_WIDTH = ['itemStyle', 'normal', 'gapWidth'];\nvar PATH_UPPER_LABEL_SHOW = ['upperLabel', 'normal', 'show'];\nvar PATH_UPPER_LABEL_HEIGHT = ['upperLabel', 'normal', 'height'];\n/**\n * @public\n */\n\nfunction _default(ecModel, api, payload) {\n  // Layout result in each node:\n  // {x, y, width, height, area, borderWidth}\n  var condition = {\n    mainType: 'series',\n    subType: 'treemap',\n    query: payload\n  };\n  ecModel.eachComponent(condition, function (seriesModel) {\n    var ecWidth = api.getWidth();\n    var ecHeight = api.getHeight();\n    var seriesOption = seriesModel.option;\n    var layoutInfo = layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n    var size = seriesOption.size || []; // Compatible with ec2.\n\n    var containerWidth = parsePercent(retrieveValue(layoutInfo.width, size[0]), ecWidth);\n    var containerHeight = parsePercent(retrieveValue(layoutInfo.height, size[1]), ecHeight); // Fetch payload info.\n\n    var payloadType = payload && payload.type;\n    var targetInfo = helper.retrieveTargetInfo(payload, seriesModel);\n    var rootRect = payloadType === 'treemapRender' || payloadType === 'treemapMove' ? payload.rootRect : null;\n    var viewRoot = seriesModel.getViewRoot();\n    var viewAbovePath = helper.getPathToRoot(viewRoot);\n\n    if (payloadType !== 'treemapMove') {\n      var rootSize = payloadType === 'treemapZoomToNode' ? estimateRootSize(seriesModel, targetInfo, viewRoot, containerWidth, containerHeight) : rootRect ? [rootRect.width, rootRect.height] : [containerWidth, containerHeight];\n      var sort = seriesOption.sort;\n\n      if (sort && sort !== 'asc' && sort !== 'desc') {\n        sort = 'desc';\n      }\n\n      var options = {\n        squareRatio: seriesOption.squareRatio,\n        sort: sort,\n        leafDepth: seriesOption.leafDepth\n      }; // layout should be cleared because using updateView but not update.\n\n      viewRoot.hostTree.clearLayouts(); // TODO\n      // optimize: if out of view clip, do not layout.\n      // But take care that if do not render node out of view clip,\n      // how to calculate start po\n\n      var viewRootLayout = {\n        x: 0,\n        y: 0,\n        width: rootSize[0],\n        height: rootSize[1],\n        area: rootSize[0] * rootSize[1]\n      };\n      viewRoot.setLayout(viewRootLayout);\n      squarify(viewRoot, options, false, 0); // Supplement layout.\n\n      var viewRootLayout = viewRoot.getLayout();\n      each(viewAbovePath, function (node, index) {\n        var childValue = (viewAbovePath[index + 1] || viewRoot).getValue();\n        node.setLayout(zrUtil.extend({\n          dataExtent: [childValue, childValue],\n          borderWidth: 0,\n          upperHeight: 0\n        }, viewRootLayout));\n      });\n    }\n\n    var treeRoot = seriesModel.getData().tree.root;\n    treeRoot.setLayout(calculateRootPosition(layoutInfo, rootRect, targetInfo), true);\n    seriesModel.setLayoutInfo(layoutInfo); // FIXME\n    // 现在没有clip功能，暂时取ec高宽。\n\n    prunning(treeRoot, // Transform to base element coordinate system.\n    new BoundingRect(-layoutInfo.x, -layoutInfo.y, ecWidth, ecHeight), viewAbovePath, viewRoot, 0);\n  });\n}\n/**\n * Layout treemap with squarify algorithm.\n * @see https://graphics.ethz.ch/teaching/scivis_common/Literature/squarifiedTreeMaps.pdf\n * @see https://github.com/mbostock/d3/blob/master/src/layout/treemap.js\n *\n * @protected\n * @param {module:echarts/data/Tree~TreeNode} node\n * @param {Object} options\n * @param {string} options.sort 'asc' or 'desc'\n * @param {number} options.squareRatio\n * @param {boolean} hideChildren\n * @param {number} depth\n */\n\n\nfunction squarify(node, options, hideChildren, depth) {\n  var width;\n  var height;\n\n  if (node.isRemoved()) {\n    return;\n  }\n\n  var thisLayout = node.getLayout();\n  width = thisLayout.width;\n  height = thisLayout.height; // Considering border and gap\n\n  var nodeModel = node.getModel();\n  var borderWidth = nodeModel.get(PATH_BORDER_WIDTH);\n  var halfGapWidth = nodeModel.get(PATH_GAP_WIDTH) / 2;\n  var upperLabelHeight = getUpperLabelHeight(nodeModel);\n  var upperHeight = Math.max(borderWidth, upperLabelHeight);\n  var layoutOffset = borderWidth - halfGapWidth;\n  var layoutOffsetUpper = upperHeight - halfGapWidth;\n  var nodeModel = node.getModel();\n  node.setLayout({\n    borderWidth: borderWidth,\n    upperHeight: upperHeight,\n    upperLabelHeight: upperLabelHeight\n  }, true);\n  width = mathMax(width - 2 * layoutOffset, 0);\n  height = mathMax(height - layoutOffset - layoutOffsetUpper, 0);\n  var totalArea = width * height;\n  var viewChildren = initChildren(node, nodeModel, totalArea, options, hideChildren, depth);\n\n  if (!viewChildren.length) {\n    return;\n  }\n\n  var rect = {\n    x: layoutOffset,\n    y: layoutOffsetUpper,\n    width: width,\n    height: height\n  };\n  var rowFixedLength = mathMin(width, height);\n  var best = Infinity; // the best row score so far\n\n  var row = [];\n  row.area = 0;\n\n  for (var i = 0, len = viewChildren.length; i < len;) {\n    var child = viewChildren[i];\n    row.push(child);\n    row.area += child.getLayout().area;\n    var score = worst(row, rowFixedLength, options.squareRatio); // continue with this orientation\n\n    if (score <= best) {\n      i++;\n      best = score;\n    } // abort, and try a different orientation\n    else {\n        row.area -= row.pop().getLayout().area;\n        position(row, rowFixedLength, rect, halfGapWidth, false);\n        rowFixedLength = mathMin(rect.width, rect.height);\n        row.length = row.area = 0;\n        best = Infinity;\n      }\n  }\n\n  if (row.length) {\n    position(row, rowFixedLength, rect, halfGapWidth, true);\n  }\n\n  if (!hideChildren) {\n    var childrenVisibleMin = nodeModel.get('childrenVisibleMin');\n\n    if (childrenVisibleMin != null && totalArea < childrenVisibleMin) {\n      hideChildren = true;\n    }\n  }\n\n  for (var i = 0, len = viewChildren.length; i < len; i++) {\n    squarify(viewChildren[i], options, hideChildren, depth + 1);\n  }\n}\n/**\n * Set area to each child, and calculate data extent for visual coding.\n */\n\n\nfunction initChildren(node, nodeModel, totalArea, options, hideChildren, depth) {\n  var viewChildren = node.children || [];\n  var orderBy = options.sort;\n  orderBy !== 'asc' && orderBy !== 'desc' && (orderBy = null);\n  var overLeafDepth = options.leafDepth != null && options.leafDepth <= depth; // leafDepth has higher priority.\n\n  if (hideChildren && !overLeafDepth) {\n    return node.viewChildren = [];\n  } // Sort children, order by desc.\n\n\n  viewChildren = zrUtil.filter(viewChildren, function (child) {\n    return !child.isRemoved();\n  });\n  sort(viewChildren, orderBy);\n  var info = statistic(nodeModel, viewChildren, orderBy);\n\n  if (info.sum === 0) {\n    return node.viewChildren = [];\n  }\n\n  info.sum = filterByThreshold(nodeModel, totalArea, info.sum, orderBy, viewChildren);\n\n  if (info.sum === 0) {\n    return node.viewChildren = [];\n  } // Set area to each child.\n\n\n  for (var i = 0, len = viewChildren.length; i < len; i++) {\n    var area = viewChildren[i].getValue() / info.sum * totalArea; // Do not use setLayout({...}, true), because it is needed to clear last layout.\n\n    viewChildren[i].setLayout({\n      area: area\n    });\n  }\n\n  if (overLeafDepth) {\n    viewChildren.length && node.setLayout({\n      isLeafRoot: true\n    }, true);\n    viewChildren.length = 0;\n  }\n\n  node.viewChildren = viewChildren;\n  node.setLayout({\n    dataExtent: info.dataExtent\n  }, true);\n  return viewChildren;\n}\n/**\n * Consider 'visibleMin'. Modify viewChildren and get new sum.\n */\n\n\nfunction filterByThreshold(nodeModel, totalArea, sum, orderBy, orderedChildren) {\n  // visibleMin is not supported yet when no option.sort.\n  if (!orderBy) {\n    return sum;\n  }\n\n  var visibleMin = nodeModel.get('visibleMin');\n  var len = orderedChildren.length;\n  var deletePoint = len; // Always travel from little value to big value.\n\n  for (var i = len - 1; i >= 0; i--) {\n    var value = orderedChildren[orderBy === 'asc' ? len - i - 1 : i].getValue();\n\n    if (value / sum * totalArea < visibleMin) {\n      deletePoint = i;\n      sum -= value;\n    }\n  }\n\n  orderBy === 'asc' ? orderedChildren.splice(0, len - deletePoint) : orderedChildren.splice(deletePoint, len - deletePoint);\n  return sum;\n}\n/**\n * Sort\n */\n\n\nfunction sort(viewChildren, orderBy) {\n  if (orderBy) {\n    viewChildren.sort(function (a, b) {\n      var diff = orderBy === 'asc' ? a.getValue() - b.getValue() : b.getValue() - a.getValue();\n      return diff === 0 ? orderBy === 'asc' ? a.dataIndex - b.dataIndex : b.dataIndex - a.dataIndex : diff;\n    });\n  }\n\n  return viewChildren;\n}\n/**\n * Statistic\n */\n\n\nfunction statistic(nodeModel, children, orderBy) {\n  // Calculate sum.\n  var sum = 0;\n\n  for (var i = 0, len = children.length; i < len; i++) {\n    sum += children[i].getValue();\n  } // Statistic data extent for latter visual coding.\n  // Notice: data extent should be calculate based on raw children\n  // but not filtered view children, otherwise visual mapping will not\n  // be stable when zoom (where children is filtered by visibleMin).\n\n\n  var dimension = nodeModel.get('visualDimension');\n  var dataExtent; // The same as area dimension.\n\n  if (!children || !children.length) {\n    dataExtent = [NaN, NaN];\n  } else if (dimension === 'value' && orderBy) {\n    dataExtent = [children[children.length - 1].getValue(), children[0].getValue()];\n    orderBy === 'asc' && dataExtent.reverse();\n  } // Other dimension.\n  else {\n      var dataExtent = [Infinity, -Infinity];\n      each(children, function (child) {\n        var value = child.getValue(dimension);\n        value < dataExtent[0] && (dataExtent[0] = value);\n        value > dataExtent[1] && (dataExtent[1] = value);\n      });\n    }\n\n  return {\n    sum: sum,\n    dataExtent: dataExtent\n  };\n}\n/**\n * Computes the score for the specified row,\n * as the worst aspect ratio.\n */\n\n\nfunction worst(row, rowFixedLength, ratio) {\n  var areaMax = 0;\n  var areaMin = Infinity;\n\n  for (var i = 0, area, len = row.length; i < len; i++) {\n    area = row[i].getLayout().area;\n\n    if (area) {\n      area < areaMin && (areaMin = area);\n      area > areaMax && (areaMax = area);\n    }\n  }\n\n  var squareArea = row.area * row.area;\n  var f = rowFixedLength * rowFixedLength * ratio;\n  return squareArea ? mathMax(f * areaMax / squareArea, squareArea / (f * areaMin)) : Infinity;\n}\n/**\n * Positions the specified row of nodes. Modifies `rect`.\n */\n\n\nfunction position(row, rowFixedLength, rect, halfGapWidth, flush) {\n  // When rowFixedLength === rect.width,\n  // it is horizontal subdivision,\n  // rowFixedLength is the width of the subdivision,\n  // rowOtherLength is the height of the subdivision,\n  // and nodes will be positioned from left to right.\n  // wh[idx0WhenH] means: when horizontal,\n  //      wh[idx0WhenH] => wh[0] => 'width'.\n  //      xy[idx1WhenH] => xy[1] => 'y'.\n  var idx0WhenH = rowFixedLength === rect.width ? 0 : 1;\n  var idx1WhenH = 1 - idx0WhenH;\n  var xy = ['x', 'y'];\n  var wh = ['width', 'height'];\n  var last = rect[xy[idx0WhenH]];\n  var rowOtherLength = rowFixedLength ? row.area / rowFixedLength : 0;\n\n  if (flush || rowOtherLength > rect[wh[idx1WhenH]]) {\n    rowOtherLength = rect[wh[idx1WhenH]]; // over+underflow\n  }\n\n  for (var i = 0, rowLen = row.length; i < rowLen; i++) {\n    var node = row[i];\n    var nodeLayout = {};\n    var step = rowOtherLength ? node.getLayout().area / rowOtherLength : 0;\n    var wh1 = nodeLayout[wh[idx1WhenH]] = mathMax(rowOtherLength - 2 * halfGapWidth, 0); // We use Math.max/min to avoid negative width/height when considering gap width.\n\n    var remain = rect[xy[idx0WhenH]] + rect[wh[idx0WhenH]] - last;\n    var modWH = i === rowLen - 1 || remain < step ? remain : step;\n    var wh0 = nodeLayout[wh[idx0WhenH]] = mathMax(modWH - 2 * halfGapWidth, 0);\n    nodeLayout[xy[idx1WhenH]] = rect[xy[idx1WhenH]] + mathMin(halfGapWidth, wh1 / 2);\n    nodeLayout[xy[idx0WhenH]] = last + mathMin(halfGapWidth, wh0 / 2);\n    last += modWH;\n    node.setLayout(nodeLayout, true);\n  }\n\n  rect[xy[idx1WhenH]] += rowOtherLength;\n  rect[wh[idx1WhenH]] -= rowOtherLength;\n} // Return [containerWidth, containerHeight] as defualt.\n\n\nfunction estimateRootSize(seriesModel, targetInfo, viewRoot, containerWidth, containerHeight) {\n  // If targetInfo.node exists, we zoom to the node,\n  // so estimate whold width and heigth by target node.\n  var currNode = (targetInfo || {}).node;\n  var defaultSize = [containerWidth, containerHeight];\n\n  if (!currNode || currNode === viewRoot) {\n    return defaultSize;\n  }\n\n  var parent;\n  var viewArea = containerWidth * containerHeight;\n  var area = viewArea * seriesModel.option.zoomToNodeRatio;\n\n  while (parent = currNode.parentNode) {\n    // jshint ignore:line\n    var sum = 0;\n    var siblings = parent.children;\n\n    for (var i = 0, len = siblings.length; i < len; i++) {\n      sum += siblings[i].getValue();\n    }\n\n    var currNodeValue = currNode.getValue();\n\n    if (currNodeValue === 0) {\n      return defaultSize;\n    }\n\n    area *= sum / currNodeValue; // Considering border, suppose aspect ratio is 1.\n\n    var parentModel = parent.getModel();\n    var borderWidth = parentModel.get(PATH_BORDER_WIDTH);\n    var upperHeight = Math.max(borderWidth, getUpperLabelHeight(parentModel, borderWidth));\n    area += 4 * borderWidth * borderWidth + (3 * borderWidth + upperHeight) * Math.pow(area, 0.5);\n    area > MAX_SAFE_INTEGER && (area = MAX_SAFE_INTEGER);\n    currNode = parent;\n  }\n\n  area < viewArea && (area = viewArea);\n  var scale = Math.pow(area / viewArea, 0.5);\n  return [containerWidth * scale, containerHeight * scale];\n} // Root postion base on coord of containerGroup\n\n\nfunction calculateRootPosition(layoutInfo, rootRect, targetInfo) {\n  if (rootRect) {\n    return {\n      x: rootRect.x,\n      y: rootRect.y\n    };\n  }\n\n  var defaultPosition = {\n    x: 0,\n    y: 0\n  };\n\n  if (!targetInfo) {\n    return defaultPosition;\n  } // If targetInfo is fetched by 'retrieveTargetInfo',\n  // old tree and new tree are the same tree,\n  // so the node still exists and we can visit it.\n\n\n  var targetNode = targetInfo.node;\n  var layout = targetNode.getLayout();\n\n  if (!layout) {\n    return defaultPosition;\n  } // Transform coord from local to container.\n\n\n  var targetCenter = [layout.width / 2, layout.height / 2];\n  var node = targetNode;\n\n  while (node) {\n    var nodeLayout = node.getLayout();\n    targetCenter[0] += nodeLayout.x;\n    targetCenter[1] += nodeLayout.y;\n    node = node.parentNode;\n  }\n\n  return {\n    x: layoutInfo.width / 2 - targetCenter[0],\n    y: layoutInfo.height / 2 - targetCenter[1]\n  };\n} // Mark nodes visible for prunning when visual coding and rendering.\n// Prunning depends on layout and root position, so we have to do it after layout.\n\n\nfunction prunning(node, clipRect, viewAbovePath, viewRoot, depth) {\n  var nodeLayout = node.getLayout();\n  var nodeInViewAbovePath = viewAbovePath[depth];\n  var isAboveViewRoot = nodeInViewAbovePath && nodeInViewAbovePath === node;\n\n  if (nodeInViewAbovePath && !isAboveViewRoot || depth === viewAbovePath.length && node !== viewRoot) {\n    return;\n  }\n\n  node.setLayout({\n    // isInView means: viewRoot sub tree + viewAbovePath\n    isInView: true,\n    // invisible only means: outside view clip so that the node can not\n    // see but still layout for animation preparation but not render.\n    invisible: !isAboveViewRoot && !clipRect.intersect(nodeLayout),\n    isAboveViewRoot: isAboveViewRoot\n  }, true); // Transform to child coordinate.\n\n  var childClipRect = new BoundingRect(clipRect.x - nodeLayout.x, clipRect.y - nodeLayout.y, clipRect.width, clipRect.height);\n  each(node.viewChildren || [], function (child) {\n    prunning(child, childClipRect, viewAbovePath, viewRoot, depth + 1);\n  });\n}\n\nfunction getUpperLabelHeight(model) {\n  return model.get(PATH_UPPER_LABEL_SHOW) ? model.get(PATH_UPPER_LABEL_HEIGHT) : 0;\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./graph/GraphSeries\");\n\nrequire(\"./graph/GraphView\");\n\nrequire(\"./graph/graphAction\");\n\nvar categoryFilter = require(\"./graph/categoryFilter\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar categoryVisual = require(\"./graph/categoryVisual\");\n\nvar edgeVisual = require(\"./graph/edgeVisual\");\n\nvar simpleLayout = require(\"./graph/simpleLayout\");\n\nvar circularLayout = require(\"./graph/circularLayout\");\n\nvar forceLayout = require(\"./graph/forceLayout\");\n\nvar createView = require(\"./graph/createView\");\n\necharts.registerProcessor(categoryFilter);\necharts.registerVisual(zrUtil.curry(visualSymbol, 'graph', 'circle', null));\necharts.registerVisual(categoryVisual);\necharts.registerVisual(edgeVisual);\necharts.registerLayout(simpleLayout);\necharts.registerLayout(circularLayout);\necharts.registerLayout(forceLayout); // Graph view coordinate system\n\necharts.registerCoordinateSystem('graphView', {\n  create: createView\n});","var echarts = require(\"../../echarts\");\n\nvar List = require(\"../../data/List\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar defaultEmphasis = _model.defaultEmphasis;\n\nvar Model = require(\"../../model/Model\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar createGraphFromNodeEdge = require(\"../helper/createGraphFromNodeEdge\");\n\nvar GraphSeries = echarts.extendSeriesModel({\n  type: 'series.graph',\n  init: function (option) {\n    GraphSeries.superApply(this, 'init', arguments); // Provide data for legend select\n\n    this.legendDataProvider = function () {\n      return this._categoriesData;\n    };\n\n    this.fillDataTextStyle(option.edges || option.links);\n\n    this._updateCategoriesData();\n  },\n  mergeOption: function (option) {\n    GraphSeries.superApply(this, 'mergeOption', arguments);\n    this.fillDataTextStyle(option.edges || option.links);\n\n    this._updateCategoriesData();\n  },\n  mergeDefaultAndTheme: function (option) {\n    GraphSeries.superApply(this, 'mergeDefaultAndTheme', arguments);\n    defaultEmphasis(option.edgeLabel, ['show']);\n  },\n  getInitialData: function (option, ecModel) {\n    var edges = option.edges || option.links || [];\n    var nodes = option.data || option.nodes || [];\n    var self = this;\n\n    if (nodes && edges) {\n      return createGraphFromNodeEdge(nodes, edges, this, true, beforeLink).data;\n    }\n\n    function beforeLink(nodeData, edgeData) {\n      // Overwrite nodeData.getItemModel to\n      nodeData.wrapMethod('getItemModel', function (model) {\n        var categoriesModels = self._categoriesModels;\n        var categoryIdx = model.getShallow('category');\n        var categoryModel = categoriesModels[categoryIdx];\n\n        if (categoryModel) {\n          categoryModel.parentModel = model.parentModel;\n          model.parentModel = categoryModel;\n        }\n\n        return model;\n      });\n      var edgeLabelModel = self.getModel('edgeLabel'); // For option `edgeLabel` can be found by label.xxx.xxx on item mode.\n\n      var fakeSeriesModel = new Model({\n        label: edgeLabelModel.option\n      }, edgeLabelModel.parentModel, ecModel);\n      edgeData.wrapMethod('getItemModel', function (model) {\n        model.customizeGetParent(edgeGetParent);\n        return model;\n      });\n\n      function edgeGetParent(path) {\n        path = this.parsePath(path);\n        return path && path[0] === 'label' ? fakeSeriesModel : this.parentModel;\n      }\n    }\n  },\n\n  /**\n   * @return {module:echarts/data/Graph}\n   */\n  getGraph: function () {\n    return this.getData().graph;\n  },\n\n  /**\n   * @return {module:echarts/data/List}\n   */\n  getEdgeData: function () {\n    return this.getGraph().edgeData;\n  },\n\n  /**\n   * @return {module:echarts/data/List}\n   */\n  getCategoriesData: function () {\n    return this._categoriesData;\n  },\n\n  /**\n   * @override\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    if (dataType === 'edge') {\n      var nodeData = this.getData();\n      var params = this.getDataParams(dataIndex, dataType);\n      var edge = nodeData.graph.getEdgeByIndex(dataIndex);\n      var sourceName = nodeData.getName(edge.node1.dataIndex);\n      var targetName = nodeData.getName(edge.node2.dataIndex);\n      var html = [];\n      sourceName != null && html.push(sourceName);\n      targetName != null && html.push(targetName);\n      html = encodeHTML(html.join(' > '));\n\n      if (params.value) {\n        html += ' : ' + encodeHTML(params.value);\n      }\n\n      return html;\n    } else {\n      // dataType === 'node' or empty\n      return GraphSeries.superApply(this, 'formatTooltip', arguments);\n    }\n  },\n  _updateCategoriesData: function () {\n    var categories = zrUtil.map(this.option.categories || [], function (category) {\n      // Data must has value\n      return category.value != null ? category : zrUtil.extend({\n        value: 0\n      }, category);\n    });\n    var categoriesData = new List(['value'], this);\n    categoriesData.initData(categories);\n    this._categoriesData = categoriesData;\n    this._categoriesModels = categoriesData.mapArray(function (idx) {\n      return categoriesData.getItemModel(idx, true);\n    });\n  },\n  setZoom: function (zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function (center) {\n    this.option.center = center;\n  },\n  isAnimationEnabled: function () {\n    return GraphSeries.superCall(this, 'isAnimationEnabled') // Not enable animation when do force layout\n    && !(this.get('layout') === 'force' && this.get('force.layoutAnimation'));\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'view',\n    // Default option for all coordinate systems\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // geoIndex: 0,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    layout: null,\n    focusNodeAdjacency: false,\n    // Configuration of circular layout\n    circular: {\n      rotateLabel: false\n    },\n    // Configuration of force directed layout\n    force: {\n      initLayout: null,\n      // Node repulsion. Can be an array to represent range.\n      repulsion: [0, 50],\n      gravity: 0.1,\n      // Edge length. Can be an array to represent range.\n      edgeLength: 30,\n      layoutAnimation: true\n    },\n    left: 'center',\n    top: 'center',\n    // right: null,\n    // bottom: null,\n    // width: '80%',\n    // height: '80%',\n    symbol: 'circle',\n    symbolSize: 10,\n    edgeSymbol: ['none', 'none'],\n    edgeSymbolSize: 10,\n    edgeLabel: {\n      normal: {\n        position: 'middle'\n      },\n      emphasis: {}\n    },\n    draggable: false,\n    roam: false,\n    // Default on center of graph\n    center: null,\n    zoom: 1,\n    // Symbol size scale ratio in roam\n    nodeScaleRatio: 0.6,\n    // cursor: null,\n    // categories: [],\n    // data: []\n    // Or\n    // nodes: []\n    //\n    // links: []\n    // Or\n    // edges: []\n    label: {\n      normal: {\n        show: false,\n        formatter: '{b}'\n      },\n      emphasis: {\n        show: true\n      }\n    },\n    itemStyle: {\n      normal: {},\n      emphasis: {}\n    },\n    lineStyle: {\n      normal: {\n        color: '#aaa',\n        width: 1,\n        curveness: 0,\n        opacity: 0.5\n      },\n      emphasis: {}\n    }\n  }\n});\nvar _default = GraphSeries;\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * Graph data structure\n *\n * @module echarts/data/Graph\n * @author Yi Shen(https://www.github.com/pissang)\n */\n// id may be function name of Object, add a prefix to avoid this problem.\nfunction generateNodeKey(id) {\n  return '_EC_' + id;\n}\n/**\n * @alias module:echarts/data/Graph\n * @constructor\n * @param {boolean} directed\n */\n\n\nvar Graph = function (directed) {\n  /**\n   * 是否是有向图\n   * @type {boolean}\n   * @private\n   */\n  this._directed = directed || false;\n  /**\n   * @type {Array.<module:echarts/data/Graph.Node>}\n   * @readOnly\n   */\n\n  this.nodes = [];\n  /**\n   * @type {Array.<module:echarts/data/Graph.Edge>}\n   * @readOnly\n   */\n\n  this.edges = [];\n  /**\n   * @type {Object.<string, module:echarts/data/Graph.Node>}\n   * @private\n   */\n\n  this._nodesMap = {};\n  /**\n   * @type {Object.<string, module:echarts/data/Graph.Edge>}\n   * @private\n   */\n\n  this._edgesMap = {};\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.data;\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.edgeData;\n};\n\nvar graphProto = Graph.prototype;\n/**\n * @type {string}\n */\n\ngraphProto.type = 'graph';\n/**\n * If is directed graph\n * @return {boolean}\n */\n\ngraphProto.isDirected = function () {\n  return this._directed;\n};\n/**\n * Add a new node\n * @param {string} id\n * @param {number} [dataIndex]\n */\n\n\ngraphProto.addNode = function (id, dataIndex) {\n  id = id || '' + dataIndex;\n  var nodesMap = this._nodesMap;\n\n  if (nodesMap[generateNodeKey(id)]) {\n    return;\n  }\n\n  var node = new Node(id, dataIndex);\n  node.hostGraph = this;\n  this.nodes.push(node);\n  nodesMap[generateNodeKey(id)] = node;\n  return node;\n};\n/**\n * Get node by data index\n * @param  {number} dataIndex\n * @return {module:echarts/data/Graph~Node}\n */\n\n\ngraphProto.getNodeByIndex = function (dataIndex) {\n  var rawIdx = this.data.getRawIndex(dataIndex);\n  return this.nodes[rawIdx];\n};\n/**\n * Get node by id\n * @param  {string} id\n * @return {module:echarts/data/Graph.Node}\n */\n\n\ngraphProto.getNodeById = function (id) {\n  return this._nodesMap[generateNodeKey(id)];\n};\n/**\n * Add a new edge\n * @param {number|string|module:echarts/data/Graph.Node} n1\n * @param {number|string|module:echarts/data/Graph.Node} n2\n * @param {number} [dataIndex=-1]\n * @return {module:echarts/data/Graph.Edge}\n */\n\n\ngraphProto.addEdge = function (n1, n2, dataIndex) {\n  var nodesMap = this._nodesMap;\n  var edgesMap = this._edgesMap; // PNEDING\n\n  if (typeof n1 === 'number') {\n    n1 = this.nodes[n1];\n  }\n\n  if (typeof n2 === 'number') {\n    n2 = this.nodes[n2];\n  }\n\n  if (!(n1 instanceof Node)) {\n    n1 = nodesMap[generateNodeKey(n1)];\n  }\n\n  if (!(n2 instanceof Node)) {\n    n2 = nodesMap[generateNodeKey(n2)];\n  }\n\n  if (!n1 || !n2) {\n    return;\n  }\n\n  var key = n1.id + '-' + n2.id; // PENDING\n\n  if (edgesMap[key]) {\n    return;\n  }\n\n  var edge = new Edge(n1, n2, dataIndex);\n  edge.hostGraph = this;\n\n  if (this._directed) {\n    n1.outEdges.push(edge);\n    n2.inEdges.push(edge);\n  }\n\n  n1.edges.push(edge);\n\n  if (n1 !== n2) {\n    n2.edges.push(edge);\n  }\n\n  this.edges.push(edge);\n  edgesMap[key] = edge;\n  return edge;\n};\n/**\n * Get edge by data index\n * @param  {number} dataIndex\n * @return {module:echarts/data/Graph~Node}\n */\n\n\ngraphProto.getEdgeByIndex = function (dataIndex) {\n  var rawIdx = this.edgeData.getRawIndex(dataIndex);\n  return this.edges[rawIdx];\n};\n/**\n * Get edge by two linked nodes\n * @param  {module:echarts/data/Graph.Node|string} n1\n * @param  {module:echarts/data/Graph.Node|string} n2\n * @return {module:echarts/data/Graph.Edge}\n */\n\n\ngraphProto.getEdge = function (n1, n2) {\n  if (n1 instanceof Node) {\n    n1 = n1.id;\n  }\n\n  if (n2 instanceof Node) {\n    n2 = n2.id;\n  }\n\n  var edgesMap = this._edgesMap;\n\n  if (this._directed) {\n    return edgesMap[n1 + '-' + n2];\n  } else {\n    return edgesMap[n1 + '-' + n2] || edgesMap[n2 + '-' + n1];\n  }\n};\n/**\n * Iterate all nodes\n * @param  {Function} cb\n * @param  {*} [context]\n */\n\n\ngraphProto.eachNode = function (cb, context) {\n  var nodes = this.nodes;\n  var len = nodes.length;\n\n  for (var i = 0; i < len; i++) {\n    if (nodes[i].dataIndex >= 0) {\n      cb.call(context, nodes[i], i);\n    }\n  }\n};\n/**\n * Iterate all edges\n * @param  {Function} cb\n * @param  {*} [context]\n */\n\n\ngraphProto.eachEdge = function (cb, context) {\n  var edges = this.edges;\n  var len = edges.length;\n\n  for (var i = 0; i < len; i++) {\n    if (edges[i].dataIndex >= 0 && edges[i].node1.dataIndex >= 0 && edges[i].node2.dataIndex >= 0) {\n      cb.call(context, edges[i], i);\n    }\n  }\n};\n/**\n * Breadth first traverse\n * @param {Function} cb\n * @param {module:echarts/data/Graph.Node} startNode\n * @param {string} [direction='none'] 'none'|'in'|'out'\n * @param {*} [context]\n */\n\n\ngraphProto.breadthFirstTraverse = function (cb, startNode, direction, context) {\n  if (!(startNode instanceof Node)) {\n    startNode = this._nodesMap[generateNodeKey(startNode)];\n  }\n\n  if (!startNode) {\n    return;\n  }\n\n  var edgeType = direction === 'out' ? 'outEdges' : direction === 'in' ? 'inEdges' : 'edges';\n\n  for (var i = 0; i < this.nodes.length; i++) {\n    this.nodes[i].__visited = false;\n  }\n\n  if (cb.call(context, startNode, null)) {\n    return;\n  }\n\n  var queue = [startNode];\n\n  while (queue.length) {\n    var currentNode = queue.shift();\n    var edges = currentNode[edgeType];\n\n    for (var i = 0; i < edges.length; i++) {\n      var e = edges[i];\n      var otherNode = e.node1 === currentNode ? e.node2 : e.node1;\n\n      if (!otherNode.__visited) {\n        if (cb.call(context, otherNode, currentNode)) {\n          // Stop traversing\n          return;\n        }\n\n        queue.push(otherNode);\n        otherNode.__visited = true;\n      }\n    }\n  }\n}; // TODO\n// graphProto.depthFirstTraverse = function (\n//     cb, startNode, direction, context\n// ) {\n// };\n// Filter update\n\n\ngraphProto.update = function () {\n  var data = this.data;\n  var edgeData = this.edgeData;\n  var nodes = this.nodes;\n  var edges = this.edges;\n\n  for (var i = 0, len = nodes.length; i < len; i++) {\n    nodes[i].dataIndex = -1;\n  }\n\n  for (var i = 0, len = data.count(); i < len; i++) {\n    nodes[data.getRawIndex(i)].dataIndex = i;\n  }\n\n  edgeData.filterSelf(function (idx) {\n    var edge = edges[edgeData.getRawIndex(idx)];\n    return edge.node1.dataIndex >= 0 && edge.node2.dataIndex >= 0;\n  }); // Update edge\n\n  for (var i = 0, len = edges.length; i < len; i++) {\n    edges[i].dataIndex = -1;\n  }\n\n  for (var i = 0, len = edgeData.count(); i < len; i++) {\n    edges[edgeData.getRawIndex(i)].dataIndex = i;\n  }\n};\n/**\n * @return {module:echarts/data/Graph}\n */\n\n\ngraphProto.clone = function () {\n  var graph = new Graph(this._directed);\n  var nodes = this.nodes;\n  var edges = this.edges;\n\n  for (var i = 0; i < nodes.length; i++) {\n    graph.addNode(nodes[i].id, nodes[i].dataIndex);\n  }\n\n  for (var i = 0; i < edges.length; i++) {\n    var e = edges[i];\n    graph.addEdge(e.node1.id, e.node2.id, e.dataIndex);\n  }\n\n  return graph;\n};\n/**\n * @alias module:echarts/data/Graph.Node\n */\n\n\nfunction Node(id, dataIndex) {\n  /**\n  * @type {string}\n  */\n  this.id = id == null ? '' : id;\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.inEdges = [];\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.outEdges = [];\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.edges = [];\n  /**\n   * @type {module:echarts/data/Graph}\n   */\n\n  this.hostGraph;\n  /**\n   * @type {number}\n   */\n\n  this.dataIndex = dataIndex == null ? -1 : dataIndex;\n}\n\nNode.prototype = {\n  constructor: Node,\n\n  /**\n   * @return {number}\n   */\n  degree: function () {\n    return this.edges.length;\n  },\n\n  /**\n   * @return {number}\n   */\n  inDegree: function () {\n    return this.inEdges.length;\n  },\n\n  /**\n  * @return {number}\n  */\n  outDegree: function () {\n    return this.outEdges.length;\n  },\n\n  /**\n   * @param {string} [path]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path) {\n    if (this.dataIndex < 0) {\n      return;\n    }\n\n    var graph = this.hostGraph;\n    var itemModel = graph.data.getItemModel(this.dataIndex);\n    return itemModel.getModel(path);\n  }\n};\n/**\n * 图边\n * @alias module:echarts/data/Graph.Edge\n * @param {module:echarts/data/Graph.Node} n1\n * @param {module:echarts/data/Graph.Node} n2\n * @param {number} [dataIndex=-1]\n */\n\nfunction Edge(n1, n2, dataIndex) {\n  /**\n   * 节点1，如果是有向图则为源节点\n   * @type {module:echarts/data/Graph.Node}\n   */\n  this.node1 = n1;\n  /**\n   * 节点2，如果是有向图则为目标节点\n   * @type {module:echarts/data/Graph.Node}\n   */\n\n  this.node2 = n2;\n  this.dataIndex = dataIndex == null ? -1 : dataIndex;\n}\n/**\n * @param {string} [path]\n * @return {module:echarts/model/Model}\n */\n\n\nEdge.prototype.getModel = function (path) {\n  if (this.dataIndex < 0) {\n    return;\n  }\n\n  var graph = this.hostGraph;\n  var itemModel = graph.edgeData.getItemModel(this.dataIndex);\n  return itemModel.getModel(path);\n};\n\nvar createGraphDataProxyMixin = function (hostName, dataName) {\n  return {\n    /**\n     * @param {string=} [dimension='value'] Default 'value'. can be 'a', 'b', 'c', 'd', 'e'.\n     * @return {number}\n     */\n    getValue: function (dimension) {\n      var data = this[hostName][dataName];\n      return data.get(data.getDimension(dimension || 'value'), this.dataIndex);\n    },\n\n    /**\n     * @param {Object|string} key\n     * @param {*} [value]\n     */\n    setVisual: function (key, value) {\n      this.dataIndex >= 0 && this[hostName][dataName].setItemVisual(this.dataIndex, key, value);\n    },\n\n    /**\n     * @param {string} key\n     * @return {boolean}\n     */\n    getVisual: function (key, ignoreParent) {\n      return this[hostName][dataName].getItemVisual(this.dataIndex, key, ignoreParent);\n    },\n\n    /**\n     * @param {Object} layout\n     * @return {boolean} [merge=false]\n     */\n    setLayout: function (layout, merge) {\n      this.dataIndex >= 0 && this[hostName][dataName].setItemLayout(this.dataIndex, layout, merge);\n    },\n\n    /**\n     * @return {Object}\n     */\n    getLayout: function () {\n      return this[hostName][dataName].getItemLayout(this.dataIndex);\n    },\n\n    /**\n     * @return {module:zrender/Element}\n     */\n    getGraphicEl: function () {\n      return this[hostName][dataName].getItemGraphicEl(this.dataIndex);\n    },\n\n    /**\n     * @return {number}\n     */\n    getRawIndex: function () {\n      return this[hostName][dataName].getRawIndex(this.dataIndex);\n    }\n  };\n};\n\nzrUtil.mixin(Node, createGraphDataProxyMixin('hostGraph', 'data'));\nzrUtil.mixin(Edge, createGraphDataProxyMixin('hostGraph', 'edgeData'));\nGraph.Node = Node;\nGraph.Edge = Edge;\nvar _default = Graph;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar LineDraw = require(\"../helper/LineDraw\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar roamHelper = require(\"../../component/helper/roamHelper\");\n\nvar _cursorHelper = require(\"../../component/helper/cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar adjustEdge = require(\"./adjustEdge\");\n\nvar nodeOpacityPath = ['itemStyle', 'normal', 'opacity'];\nvar lineOpacityPath = ['lineStyle', 'normal', 'opacity'];\n\nfunction getItemOpacity(item, opacityPath) {\n  return item.getVisual('opacity') || item.getModel().get(opacityPath);\n}\n\nfunction fadeOutItem(item, opacityPath, opacityRatio) {\n  var el = item.getGraphicEl();\n  var opacity = getItemOpacity(item, opacityPath);\n\n  if (opacityRatio != null) {\n    opacity == null && (opacity = 1);\n    opacity *= opacityRatio;\n  }\n\n  el.downplay && el.downplay();\n  el.traverse(function (child) {\n    if (child.type !== 'group') {\n      child.setStyle('opacity', opacity);\n    }\n  });\n}\n\nfunction fadeInItem(item, opacityPath) {\n  var opacity = getItemOpacity(item, opacityPath);\n  var el = item.getGraphicEl();\n  el.highlight && el.highlight();\n  el.traverse(function (child) {\n    if (child.type !== 'group') {\n      child.setStyle('opacity', opacity);\n    }\n  });\n}\n\nvar _default = echarts.extendChartView({\n  type: 'graph',\n  init: function (ecModel, api) {\n    var symbolDraw = new SymbolDraw();\n    var lineDraw = new LineDraw();\n    var group = this.group;\n    this._controller = new RoamController(api.getZr());\n    this._controllerHost = {\n      target: group\n    };\n    group.add(symbolDraw.group);\n    group.add(lineDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineDraw = lineDraw;\n    this._firstRender = true;\n  },\n  render: function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    this._model = seriesModel;\n    this._nodeScaleRatio = seriesModel.get('nodeScaleRatio');\n    var symbolDraw = this._symbolDraw;\n    var lineDraw = this._lineDraw;\n    var group = this.group;\n\n    if (coordSys.type === 'view') {\n      var groupNewProp = {\n        position: coordSys.position,\n        scale: coordSys.scale\n      };\n\n      if (this._firstRender) {\n        group.attr(groupNewProp);\n      } else {\n        graphic.updateProps(group, groupNewProp, seriesModel);\n      }\n    } // Fix edge contact point with node\n\n\n    adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n    var data = seriesModel.getData();\n    symbolDraw.updateData(data);\n    var edgeData = seriesModel.getEdgeData();\n    lineDraw.updateData(edgeData);\n\n    this._updateNodeAndLinkScale();\n\n    this._updateController(seriesModel, ecModel, api);\n\n    clearTimeout(this._layoutTimeout);\n    var forceLayout = seriesModel.forceLayout;\n    var layoutAnimation = seriesModel.get('force.layoutAnimation');\n\n    if (forceLayout) {\n      this._startForceLayoutIteration(forceLayout, layoutAnimation);\n    }\n\n    data.eachItemGraphicEl(function (el, idx) {\n      var itemModel = data.getItemModel(idx); // Update draggable\n\n      el.off('drag').off('dragend');\n      var draggable = data.getItemModel(idx).get('draggable');\n\n      if (draggable) {\n        el.on('drag', function () {\n          if (forceLayout) {\n            forceLayout.warmUp();\n            !this._layouting && this._startForceLayoutIteration(forceLayout, layoutAnimation);\n            forceLayout.setFixed(idx); // Write position back to layout\n\n            data.setItemLayout(idx, el.position);\n          }\n        }, this).on('dragend', function () {\n          if (forceLayout) {\n            forceLayout.setUnfixed(idx);\n          }\n        }, this);\n      }\n\n      el.setDraggable(draggable && forceLayout);\n      el.off('mouseover', el.__focusNodeAdjacency);\n      el.off('mouseout', el.__unfocusNodeAdjacency);\n\n      if (itemModel.get('focusNodeAdjacency')) {\n        el.on('mouseover', el.__focusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'focusNodeAdjacency',\n            seriesId: seriesModel.id,\n            dataIndex: el.dataIndex\n          });\n        });\n        el.on('mouseout', el.__unfocusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'unfocusNodeAdjacency',\n            seriesId: seriesModel.id\n          });\n        });\n      }\n    }, this);\n    data.graph.eachEdge(function (edge) {\n      var el = edge.getGraphicEl();\n      el.off('mouseover', el.__focusNodeAdjacency);\n      el.off('mouseout', el.__unfocusNodeAdjacency);\n\n      if (edge.getModel().get('focusNodeAdjacency')) {\n        el.on('mouseover', el.__focusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'focusNodeAdjacency',\n            seriesId: seriesModel.id,\n            edgeDataIndex: edge.dataIndex\n          });\n        });\n        el.on('mouseout', el.__unfocusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'unfocusNodeAdjacency',\n            seriesId: seriesModel.id\n          });\n        });\n      }\n    });\n    var circularRotateLabel = seriesModel.get('layout') === 'circular' && seriesModel.get('circular.rotateLabel');\n    var cx = data.getLayout('cx');\n    var cy = data.getLayout('cy');\n    data.eachItemGraphicEl(function (el, idx) {\n      var symbolPath = el.getSymbolPath();\n\n      if (circularRotateLabel) {\n        var pos = data.getItemLayout(idx);\n        var rad = Math.atan2(pos[1] - cy, pos[0] - cx);\n\n        if (rad < 0) {\n          rad = Math.PI * 2 + rad;\n        }\n\n        var isLeft = pos[0] < cx;\n\n        if (isLeft) {\n          rad = rad - Math.PI;\n        }\n\n        var textPosition = isLeft ? 'left' : 'right';\n        symbolPath.setStyle({\n          textRotation: -rad,\n          textPosition: textPosition,\n          textOrigin: 'center'\n        });\n        symbolPath.hoverStyle && (symbolPath.hoverStyle.textPosition = textPosition);\n      } else {\n        symbolPath.setStyle({\n          textRotation: 0\n        });\n      }\n    });\n    this._firstRender = false;\n  },\n  dispose: function () {\n    this._controller && this._controller.dispose();\n    this._controllerHost = {};\n  },\n  focusNodeAdjacency: function (seriesModel, ecModel, api, payload) {\n    var data = this._model.getData();\n\n    var graph = data.graph;\n    var dataIndex = payload.dataIndex;\n    var edgeDataIndex = payload.edgeDataIndex;\n    var node = graph.getNodeByIndex(dataIndex);\n    var edge = graph.getEdgeByIndex(edgeDataIndex);\n\n    if (!node && !edge) {\n      return;\n    }\n\n    graph.eachNode(function (node) {\n      fadeOutItem(node, nodeOpacityPath, 0.1);\n    });\n    graph.eachEdge(function (edge) {\n      fadeOutItem(edge, lineOpacityPath, 0.1);\n    });\n\n    if (node) {\n      fadeInItem(node, nodeOpacityPath);\n      zrUtil.each(node.edges, function (adjacentEdge) {\n        if (adjacentEdge.dataIndex < 0) {\n          return;\n        }\n\n        fadeInItem(adjacentEdge, lineOpacityPath);\n        fadeInItem(adjacentEdge.node1, nodeOpacityPath);\n        fadeInItem(adjacentEdge.node2, nodeOpacityPath);\n      });\n    }\n\n    if (edge) {\n      fadeInItem(edge, lineOpacityPath);\n      fadeInItem(edge.node1, nodeOpacityPath);\n      fadeInItem(edge.node2, nodeOpacityPath);\n    }\n  },\n  unfocusNodeAdjacency: function (seriesModel, ecModel, api, payload) {\n    var graph = this._model.getData().graph;\n\n    graph.eachNode(function (node) {\n      fadeOutItem(node, nodeOpacityPath);\n    });\n    graph.eachEdge(function (edge) {\n      fadeOutItem(edge, lineOpacityPath);\n    });\n  },\n  _startForceLayoutIteration: function (forceLayout, layoutAnimation) {\n    var self = this;\n\n    (function step() {\n      forceLayout.step(function (stopped) {\n        self.updateLayout(self._model);\n        (self._layouting = !stopped) && (layoutAnimation ? self._layoutTimeout = setTimeout(step, 16) : step());\n      });\n    })();\n  },\n  _updateController: function (seriesModel, ecModel, api) {\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    var group = this.group;\n    controller.setPointerChecker(function (e, x, y) {\n      var rect = group.getBoundingRect();\n      rect.applyTransform(group.transform);\n      return rect.contain(x, y) && !onIrrelevantElement(e, api, seriesModel);\n    });\n\n    if (seriesModel.coordinateSystem.type !== 'view') {\n      controller.disable();\n      return;\n    }\n\n    controller.enable(seriesModel.get('roam'));\n    controllerHost.zoomLimit = seriesModel.get('scaleLimit');\n    controllerHost.zoom = seriesModel.coordinateSystem.getZoom();\n    controller.off('pan').off('zoom').on('pan', function (dx, dy) {\n      roamHelper.updateViewOnPan(controllerHost, dx, dy);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'graphRoam',\n        dx: dx,\n        dy: dy\n      });\n    }).on('zoom', function (zoom, mouseX, mouseY) {\n      roamHelper.updateViewOnZoom(controllerHost, zoom, mouseX, mouseY);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'graphRoam',\n        zoom: zoom,\n        originX: mouseX,\n        originY: mouseY\n      });\n\n      this._updateNodeAndLinkScale();\n\n      adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n\n      this._lineDraw.updateLayout();\n    }, this);\n  },\n  _updateNodeAndLinkScale: function () {\n    var seriesModel = this._model;\n    var data = seriesModel.getData();\n\n    var nodeScale = this._getNodeGlobalScale(seriesModel);\n\n    var invScale = [nodeScale, nodeScale];\n    data.eachItemGraphicEl(function (el, idx) {\n      el.attr('scale', invScale);\n    });\n  },\n  _getNodeGlobalScale: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys.type !== 'view') {\n      return 1;\n    }\n\n    var nodeScaleRatio = this._nodeScaleRatio;\n    var groupScale = coordSys.scale;\n    var groupZoom = groupScale && groupScale[0] || 1; // Scale node when zoom changes\n\n    var roamZoom = coordSys.getZoom();\n    var nodeScale = (roamZoom - 1) * nodeScaleRatio + 1;\n    return nodeScale / groupZoom;\n  },\n  updateLayout: function (seriesModel) {\n    adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n\n    this._symbolDraw.updateLayout();\n\n    this._lineDraw.updateLayout();\n  },\n  remove: function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove();\n    this._lineDraw && this._lineDraw.remove();\n  }\n});\n\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\n/**\n * Line path for bezier and straight line draw\n */\nvar straightLineProto = graphic.Line.prototype;\nvar bezierCurveProto = graphic.BezierCurve.prototype;\n\nfunction isLine(shape) {\n  return isNaN(+shape.cpx1) || isNaN(+shape.cpy1);\n}\n\nvar _default = graphic.extendShape({\n  type: 'ec-line',\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    percent: 1,\n    cpx1: null,\n    cpy1: null\n  },\n  buildPath: function (ctx, shape) {\n    (isLine(shape) ? straightLineProto : bezierCurveProto).buildPath(ctx, shape);\n  },\n  pointAt: function (t) {\n    return isLine(this.shape) ? straightLineProto.pointAt.call(this, t) : bezierCurveProto.pointAt.call(this, t);\n  },\n  tangentAt: function (t) {\n    var shape = this.shape;\n    var p = isLine(shape) ? [shape.x2 - shape.x1, shape.y2 - shape.y1] : bezierCurveProto.tangentAt.call(this, t);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;","var curveTool = require(\"zrender/lib/core/curve\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar v1 = [];\nvar v2 = [];\nvar v3 = [];\nvar quadraticAt = curveTool.quadraticAt;\nvar v2DistSquare = vec2.distSquare;\nvar mathAbs = Math.abs;\n\nfunction intersectCurveCircle(curvePoints, center, radius) {\n  var p0 = curvePoints[0];\n  var p1 = curvePoints[1];\n  var p2 = curvePoints[2];\n  var d = Infinity;\n  var t;\n  var radiusSquare = radius * radius;\n  var interval = 0.1;\n\n  for (var _t = 0.1; _t <= 0.9; _t += 0.1) {\n    v1[0] = quadraticAt(p0[0], p1[0], p2[0], _t);\n    v1[1] = quadraticAt(p0[1], p1[1], p2[1], _t);\n    var diff = mathAbs(v2DistSquare(v1, center) - radiusSquare);\n\n    if (diff < d) {\n      d = diff;\n      t = _t;\n    }\n  } // Assume the segment is monotone，Find root through Bisection method\n  // At most 32 iteration\n\n\n  for (var i = 0; i < 32; i++) {\n    // var prev = t - interval;\n    var next = t + interval; // v1[0] = quadraticAt(p0[0], p1[0], p2[0], prev);\n    // v1[1] = quadraticAt(p0[1], p1[1], p2[1], prev);\n\n    v2[0] = quadraticAt(p0[0], p1[0], p2[0], t);\n    v2[1] = quadraticAt(p0[1], p1[1], p2[1], t);\n    v3[0] = quadraticAt(p0[0], p1[0], p2[0], next);\n    v3[1] = quadraticAt(p0[1], p1[1], p2[1], next);\n    var diff = v2DistSquare(v2, center) - radiusSquare;\n\n    if (mathAbs(diff) < 1e-2) {\n      break;\n    } // var prevDiff = v2DistSquare(v1, center) - radiusSquare;\n\n\n    var nextDiff = v2DistSquare(v3, center) - radiusSquare;\n    interval /= 2;\n\n    if (diff < 0) {\n      if (nextDiff >= 0) {\n        t = t + interval;\n      } else {\n        t = t - interval;\n      }\n    } else {\n      if (nextDiff >= 0) {\n        t = t - interval;\n      } else {\n        t = t + interval;\n      }\n    }\n  }\n\n  return t;\n} // Adjust edge to avoid\n\n\nfunction _default(graph, scale) {\n  var tmp0 = [];\n  var quadraticSubdivide = curveTool.quadraticSubdivide;\n  var pts = [[], [], []];\n  var pts2 = [[], []];\n  var v = [];\n  scale /= 2;\n\n  function getSymbolSize(node) {\n    var symbolSize = node.getVisual('symbolSize');\n\n    if (symbolSize instanceof Array) {\n      symbolSize = (symbolSize[0] + symbolSize[1]) / 2;\n    }\n\n    return symbolSize;\n  }\n\n  graph.eachEdge(function (edge, idx) {\n    var linePoints = edge.getLayout();\n    var fromSymbol = edge.getVisual('fromSymbol');\n    var toSymbol = edge.getVisual('toSymbol');\n\n    if (!linePoints.__original) {\n      linePoints.__original = [vec2.clone(linePoints[0]), vec2.clone(linePoints[1])];\n\n      if (linePoints[2]) {\n        linePoints.__original.push(vec2.clone(linePoints[2]));\n      }\n    }\n\n    var originalPoints = linePoints.__original; // Quadratic curve\n\n    if (linePoints[2] != null) {\n      vec2.copy(pts[0], originalPoints[0]);\n      vec2.copy(pts[1], originalPoints[2]);\n      vec2.copy(pts[2], originalPoints[1]);\n\n      if (fromSymbol && fromSymbol != 'none') {\n        var symbolSize = getSymbolSize(edge.node1);\n        var t = intersectCurveCircle(pts, originalPoints[0], symbolSize * scale); // Subdivide and get the second\n\n        quadraticSubdivide(pts[0][0], pts[1][0], pts[2][0], t, tmp0);\n        pts[0][0] = tmp0[3];\n        pts[1][0] = tmp0[4];\n        quadraticSubdivide(pts[0][1], pts[1][1], pts[2][1], t, tmp0);\n        pts[0][1] = tmp0[3];\n        pts[1][1] = tmp0[4];\n      }\n\n      if (toSymbol && toSymbol != 'none') {\n        var symbolSize = getSymbolSize(edge.node2);\n        var t = intersectCurveCircle(pts, originalPoints[1], symbolSize * scale); // Subdivide and get the first\n\n        quadraticSubdivide(pts[0][0], pts[1][0], pts[2][0], t, tmp0);\n        pts[1][0] = tmp0[1];\n        pts[2][0] = tmp0[2];\n        quadraticSubdivide(pts[0][1], pts[1][1], pts[2][1], t, tmp0);\n        pts[1][1] = tmp0[1];\n        pts[2][1] = tmp0[2];\n      } // Copy back to layout\n\n\n      vec2.copy(linePoints[0], pts[0]);\n      vec2.copy(linePoints[1], pts[2]);\n      vec2.copy(linePoints[2], pts[1]);\n    } // Line\n    else {\n        vec2.copy(pts2[0], originalPoints[0]);\n        vec2.copy(pts2[1], originalPoints[1]);\n        vec2.sub(v, pts2[1], pts2[0]);\n        vec2.normalize(v, v);\n\n        if (fromSymbol && fromSymbol != 'none') {\n          var symbolSize = getSymbolSize(edge.node1);\n          vec2.scaleAndAdd(pts2[0], pts2[0], v, symbolSize * scale);\n        }\n\n        if (toSymbol && toSymbol != 'none') {\n          var symbolSize = getSymbolSize(edge.node2);\n          vec2.scaleAndAdd(pts2[1], pts2[1], v, -symbolSize * scale);\n        }\n\n        vec2.copy(linePoints[0], pts2[0]);\n        vec2.copy(linePoints[1], pts2[1]);\n      }\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar _roamHelper = require(\"../../action/roamHelper\");\n\nvar updateCenterAndZoom = _roamHelper.updateCenterAndZoom;\nvar actionInfo = {\n  type: 'graphRoam',\n  event: 'graphRoam',\n  update: 'none'\n};\n/**\n * @payload\n * @property {string} name Series name\n * @property {number} [dx]\n * @property {number} [dy]\n * @property {number} [zoom]\n * @property {number} [originX]\n * @property {number} [originY]\n */\n\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    query: payload\n  }, function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var res = updateCenterAndZoom(coordSys, payload);\n    seriesModel.setCenter && seriesModel.setCenter(res.center);\n    seriesModel.setZoom && seriesModel.setZoom(res.zoom);\n  });\n});\n/**\n * @payload\n * @property {number} [seriesIndex]\n * @property {string} [seriesId]\n * @property {string} [seriesName]\n * @property {number} [dataIndex]\n */\n\necharts.registerAction({\n  type: 'focusNodeAdjacency',\n  event: 'focusNodeAdjacency',\n  update: 'series.graph:focusNodeAdjacency'\n}, function () {});\n/**\n * @payload\n * @property {number} [seriesIndex]\n * @property {string} [seriesId]\n * @property {string} [seriesName]\n */\n\necharts.registerAction({\n  type: 'unfocusNodeAdjacency',\n  event: 'unfocusNodeAdjacency',\n  update: 'series.graph:unfocusNodeAdjacency'\n}, function () {});","function _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (!legendModels || !legendModels.length) {\n    return;\n  }\n\n  ecModel.eachSeriesByType('graph', function (graphSeries) {\n    var categoriesData = graphSeries.getCategoriesData();\n    var graph = graphSeries.getGraph();\n    var data = graph.data;\n    var categoryNames = categoriesData.mapArray(categoriesData.getName);\n    data.filterSelf(function (idx) {\n      var model = data.getItemModel(idx);\n      var category = model.getShallow('category');\n\n      if (category != null) {\n        if (typeof category === 'number') {\n          category = categoryNames[category];\n        } // If in any legend component the status is not selected.\n\n\n        for (var i = 0; i < legendModels.length; i++) {\n          if (!legendModels[i].isSelected(category)) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    });\n  }, this);\n}\n\nmodule.exports = _default;","function _default(ecModel) {\n  var paletteScope = {};\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var categoriesData = seriesModel.getCategoriesData();\n    var data = seriesModel.getData();\n    var categoryNameIdxMap = {};\n    categoriesData.each(function (idx) {\n      var name = categoriesData.getName(idx); // Add prefix to avoid conflict with Object.prototype.\n\n      categoryNameIdxMap['ec-' + name] = idx;\n      var itemModel = categoriesData.getItemModel(idx);\n      var color = itemModel.get('itemStyle.normal.color') || seriesModel.getColorFromPalette(name, paletteScope);\n      categoriesData.setItemVisual(idx, 'color', color);\n    }); // Assign category color to visual\n\n    if (categoriesData.count()) {\n      data.each(function (idx) {\n        var model = data.getItemModel(idx);\n        var category = model.getShallow('category');\n\n        if (category != null) {\n          if (typeof category === 'string') {\n            category = categoryNameIdxMap['ec-' + category];\n          }\n\n          if (!data.getItemVisual(idx, 'color', true)) {\n            data.setItemVisual(idx, 'color', categoriesData.getItemVisual(category, 'color'));\n          }\n        }\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","function normalize(a) {\n  if (!(a instanceof Array)) {\n    a = [a, a];\n  }\n\n  return a;\n}\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var graph = seriesModel.getGraph();\n    var edgeData = seriesModel.getEdgeData();\n    var symbolType = normalize(seriesModel.get('edgeSymbol'));\n    var symbolSize = normalize(seriesModel.get('edgeSymbolSize'));\n    var colorQuery = 'lineStyle.normal.color'.split('.');\n    var opacityQuery = 'lineStyle.normal.opacity'.split('.');\n    edgeData.setVisual('fromSymbol', symbolType && symbolType[0]);\n    edgeData.setVisual('toSymbol', symbolType && symbolType[1]);\n    edgeData.setVisual('fromSymbolSize', symbolSize && symbolSize[0]);\n    edgeData.setVisual('toSymbolSize', symbolSize && symbolSize[1]);\n    edgeData.setVisual('color', seriesModel.get(colorQuery));\n    edgeData.setVisual('opacity', seriesModel.get(opacityQuery));\n    edgeData.each(function (idx) {\n      var itemModel = edgeData.getItemModel(idx);\n      var edge = graph.getEdgeByIndex(idx);\n      var symbolType = normalize(itemModel.getShallow('symbol', true));\n      var symbolSize = normalize(itemModel.getShallow('symbolSize', true)); // Edge visual must after node visual\n\n      var color = itemModel.get(colorQuery);\n      var opacity = itemModel.get(opacityQuery);\n\n      switch (color) {\n        case 'source':\n          color = edge.node1.getVisual('color');\n          break;\n\n        case 'target':\n          color = edge.node2.getVisual('color');\n          break;\n      }\n\n      symbolType[0] && edge.setVisual('fromSymbol', symbolType[0]);\n      symbolType[1] && edge.setVisual('toSymbol', symbolType[1]);\n      symbolSize[0] && edge.setVisual('fromSymbolSize', symbolSize[0]);\n      symbolSize[1] && edge.setVisual('toSymbolSize', symbolSize[1]);\n      edge.setVisual('color', color);\n      edge.setVisual('opacity', opacity);\n    });\n  });\n}\n\nmodule.exports = _default;","var _simpleLayoutHelper = require(\"./simpleLayoutHelper\");\n\nvar simpleLayout = _simpleLayoutHelper.simpleLayout;\nvar simpleLayoutEdge = _simpleLayoutHelper.simpleLayoutEdge;\n\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var layout = seriesModel.get('layout');\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.type !== 'view') {\n      var data = seriesModel.getData();\n      var dimensions = coordSys.dimensions;\n      data.each(dimensions, function () {\n        var hasValue;\n        var args = arguments;\n        var value = [];\n\n        for (var i = 0; i < dimensions.length; i++) {\n          if (!isNaN(args[i])) {\n            hasValue = true;\n          }\n\n          value.push(args[i]);\n        }\n\n        var idx = args[args.length - 1];\n\n        if (hasValue) {\n          data.setItemLayout(idx, coordSys.dataToPoint(value));\n        } else {\n          // Also {Array.<number>}, not undefined to avoid if...else... statement\n          data.setItemLayout(idx, [NaN, NaN]);\n        }\n      });\n      simpleLayoutEdge(data.graph);\n    } else if (!layout || layout === 'none') {\n      simpleLayout(seriesModel);\n    }\n  });\n}\n\nmodule.exports = _default;","var _circularLayoutHelper = require(\"./circularLayoutHelper\");\n\nvar circularLayout = _circularLayoutHelper.circularLayout;\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    if (seriesModel.get('layout') === 'circular') {\n      circularLayout(seriesModel);\n    }\n  });\n}\n\nmodule.exports = _default;","var _forceHelper = require(\"./forceHelper\");\n\nvar forceLayout = _forceHelper.forceLayout;\n\nvar _simpleLayoutHelper = require(\"./simpleLayoutHelper\");\n\nvar simpleLayout = _simpleLayoutHelper.simpleLayout;\n\nvar _circularLayoutHelper = require(\"./circularLayoutHelper\");\n\nvar circularLayout = _circularLayoutHelper.circularLayout;\n\nvar _number = require(\"../../util/number\");\n\nvar linearMap = _number.linearMap;\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (graphSeries) {\n    var coordSys = graphSeries.coordinateSystem;\n\n    if (coordSys && coordSys.type !== 'view') {\n      return;\n    }\n\n    if (graphSeries.get('layout') === 'force') {\n      var preservedPoints = graphSeries.preservedPoints || {};\n      var graph = graphSeries.getGraph();\n      var nodeData = graph.data;\n      var edgeData = graph.edgeData;\n      var forceModel = graphSeries.getModel('force');\n      var initLayout = forceModel.get('initLayout');\n\n      if (graphSeries.preservedPoints) {\n        nodeData.each(function (idx) {\n          var id = nodeData.getId(idx);\n          nodeData.setItemLayout(idx, preservedPoints[id] || [NaN, NaN]);\n        });\n      } else if (!initLayout || initLayout === 'none') {\n        simpleLayout(graphSeries);\n      } else if (initLayout === 'circular') {\n        circularLayout(graphSeries);\n      }\n\n      var nodeDataExtent = nodeData.getDataExtent('value');\n      var edgeDataExtent = edgeData.getDataExtent('value'); // var edgeDataExtent = edgeData.getDataExtent('value');\n\n      var repulsion = forceModel.get('repulsion');\n      var edgeLength = forceModel.get('edgeLength');\n\n      if (!zrUtil.isArray(repulsion)) {\n        repulsion = [repulsion, repulsion];\n      }\n\n      if (!zrUtil.isArray(edgeLength)) {\n        edgeLength = [edgeLength, edgeLength];\n      } // Larger value has smaller length\n\n\n      edgeLength = [edgeLength[1], edgeLength[0]];\n      var nodes = nodeData.mapArray('value', function (value, idx) {\n        var point = nodeData.getItemLayout(idx);\n        var rep = linearMap(value, nodeDataExtent, repulsion);\n\n        if (isNaN(rep)) {\n          rep = (repulsion[0] + repulsion[1]) / 2;\n        }\n\n        return {\n          w: rep,\n          rep: rep,\n          fixed: nodeData.getItemModel(idx).get('fixed'),\n          p: !point || isNaN(point[0]) || isNaN(point[1]) ? null : point\n        };\n      });\n      var edges = edgeData.mapArray('value', function (value, idx) {\n        var edge = graph.getEdgeByIndex(idx);\n        var d = linearMap(value, edgeDataExtent, edgeLength);\n\n        if (isNaN(d)) {\n          d = (edgeLength[0] + edgeLength[1]) / 2;\n        }\n\n        return {\n          n1: nodes[edge.node1.dataIndex],\n          n2: nodes[edge.node2.dataIndex],\n          d: d,\n          curveness: edge.getModel().get('lineStyle.normal.curveness') || 0\n        };\n      });\n      var coordSys = graphSeries.coordinateSystem;\n      var rect = coordSys.getBoundingRect();\n      var forceInstance = forceLayout(nodes, edges, {\n        rect: rect,\n        gravity: forceModel.get('gravity')\n      });\n      var oldStep = forceInstance.step;\n\n      forceInstance.step = function (cb) {\n        for (var i = 0, l = nodes.length; i < l; i++) {\n          if (nodes[i].fixed) {\n            // Write back to layout instance\n            vec2.copy(nodes[i].p, graph.getNodeByIndex(i).getLayout());\n          }\n        }\n\n        oldStep(function (nodes, edges, stopped) {\n          for (var i = 0, l = nodes.length; i < l; i++) {\n            if (!nodes[i].fixed) {\n              graph.getNodeByIndex(i).setLayout(nodes[i].p);\n            }\n\n            preservedPoints[nodeData.getId(i)] = nodes[i].p;\n          }\n\n          for (var i = 0, l = edges.length; i < l; i++) {\n            var e = edges[i];\n            var edge = graph.getEdgeByIndex(i);\n            var p1 = e.n1.p;\n            var p2 = e.n2.p;\n            var points = edge.getLayout();\n            points = points ? points.slice() : [];\n            points[0] = points[0] || [];\n            points[1] = points[1] || [];\n            vec2.copy(points[0], p1);\n            vec2.copy(points[1], p2);\n\n            if (+e.curveness) {\n              points[2] = [(p1[0] + p2[0]) / 2 - (p1[1] - p2[1]) * e.curveness, (p1[1] + p2[1]) / 2 - (p2[0] - p1[0]) * e.curveness];\n            }\n\n            edge.setLayout(points);\n          } // Update layout\n\n\n          cb && cb(stopped);\n        });\n      };\n\n      graphSeries.forceLayout = forceInstance;\n      graphSeries.preservedPoints = preservedPoints; // Step to get the layout\n\n      forceInstance.step();\n    } else {\n      // Remove prev injected forceLayout instance\n      graphSeries.forceLayout = null;\n    }\n  });\n}\n\nmodule.exports = _default;","var vec2 = require(\"zrender/lib/core/vector\");\n\nvar scaleAndAdd = vec2.scaleAndAdd; // function adjacentNode(n, e) {\n//     return e.n1 === n ? e.n2 : e.n1;\n// }\n\nfunction forceLayout(nodes, edges, opts) {\n  var rect = opts.rect;\n  var width = rect.width;\n  var height = rect.height;\n  var center = [rect.x + width / 2, rect.y + height / 2]; // var scale = opts.scale || 1;\n\n  var gravity = opts.gravity == null ? 0.1 : opts.gravity; // for (var i = 0; i < edges.length; i++) {\n  //     var e = edges[i];\n  //     var n1 = e.n1;\n  //     var n2 = e.n2;\n  //     n1.edges = n1.edges || [];\n  //     n2.edges = n2.edges || [];\n  //     n1.edges.push(e);\n  //     n2.edges.push(e);\n  // }\n  // Init position\n\n  for (var i = 0; i < nodes.length; i++) {\n    var n = nodes[i];\n\n    if (!n.p) {\n      // Use the position from first adjecent node with defined position\n      // Or use a random position\n      // From d3\n      // if (n.edges) {\n      //     var j = -1;\n      //     while (++j < n.edges.length) {\n      //         var e = n.edges[j];\n      //         var other = adjacentNode(n, e);\n      //         if (other.p) {\n      //             n.p = vec2.clone(other.p);\n      //             break;\n      //         }\n      //     }\n      // }\n      // if (!n.p) {\n      n.p = vec2.create(width * (Math.random() - 0.5) + center[0], height * (Math.random() - 0.5) + center[1]); // }\n    }\n\n    n.pp = vec2.clone(n.p);\n    n.edges = null;\n  } // Formula in 'Graph Drawing by Force-directed Placement'\n  // var k = scale * Math.sqrt(width * height / nodes.length);\n  // var k2 = k * k;\n\n\n  var friction = 0.6;\n  return {\n    warmUp: function () {\n      friction = 0.5;\n    },\n    setFixed: function (idx) {\n      nodes[idx].fixed = true;\n    },\n    setUnfixed: function (idx) {\n      nodes[idx].fixed = false;\n    },\n    step: function (cb) {\n      var v12 = [];\n      var nLen = nodes.length;\n\n      for (var i = 0; i < edges.length; i++) {\n        var e = edges[i];\n        var n1 = e.n1;\n        var n2 = e.n2;\n        vec2.sub(v12, n2.p, n1.p);\n        var d = vec2.len(v12) - e.d;\n        var w = n2.w / (n1.w + n2.w);\n\n        if (isNaN(w)) {\n          w = 0;\n        }\n\n        vec2.normalize(v12, v12);\n        !n1.fixed && scaleAndAdd(n1.p, n1.p, v12, w * d * friction);\n        !n2.fixed && scaleAndAdd(n2.p, n2.p, v12, -(1 - w) * d * friction);\n      } // Gravity\n\n\n      for (var i = 0; i < nLen; i++) {\n        var n = nodes[i];\n\n        if (!n.fixed) {\n          vec2.sub(v12, center, n.p); // var d = vec2.len(v12);\n          // vec2.scale(v12, v12, 1 / d);\n          // var gravityFactor = gravity;\n\n          scaleAndAdd(n.p, n.p, v12, gravity * friction);\n        }\n      } // Repulsive\n      // PENDING\n\n\n      for (var i = 0; i < nLen; i++) {\n        var n1 = nodes[i];\n\n        for (var j = i + 1; j < nLen; j++) {\n          var n2 = nodes[j];\n          vec2.sub(v12, n2.p, n1.p);\n          var d = vec2.len(v12);\n\n          if (d === 0) {\n            // Random repulse\n            vec2.set(v12, Math.random() - 0.5, Math.random() - 0.5);\n            d = 1;\n          }\n\n          var repFact = (n1.rep + n2.rep) / d / d;\n          !n1.fixed && scaleAndAdd(n1.pp, n1.pp, v12, repFact);\n          !n2.fixed && scaleAndAdd(n2.pp, n2.pp, v12, -repFact);\n        }\n      }\n\n      var v = [];\n\n      for (var i = 0; i < nLen; i++) {\n        var n = nodes[i];\n\n        if (!n.fixed) {\n          vec2.sub(v, n.p, n.pp);\n          scaleAndAdd(n.p, n.p, v, friction);\n          vec2.copy(n.pp, n.p);\n        }\n      }\n\n      friction = friction * 0.992;\n      cb && cb(nodes, edges, friction < 0.01);\n    }\n  };\n}\n\nexports.forceLayout = forceLayout;","var View = require(\"../../coord/View\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar bbox = require(\"zrender/lib/core/bbox\");\n\n// FIXME Where to create the simple view coordinate system\nfunction getViewRect(seriesModel, api, aspect) {\n  var option = seriesModel.getBoxLayoutParams();\n  option.aspect = aspect;\n  return getLayoutRect(option, {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction _default(ecModel, api) {\n  var viewList = [];\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var coordSysType = seriesModel.get('coordinateSystem');\n\n    if (!coordSysType || coordSysType === 'view') {\n      var data = seriesModel.getData();\n      var positions = data.mapArray(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        return [+itemModel.get('x'), +itemModel.get('y')];\n      });\n      var min = [];\n      var max = [];\n      bbox.fromPoints(positions, min, max); // If width or height is 0\n\n      if (max[0] - min[0] === 0) {\n        max[0] += 1;\n        min[0] -= 1;\n      }\n\n      if (max[1] - min[1] === 0) {\n        max[1] += 1;\n        min[1] -= 1;\n      }\n\n      var aspect = (max[0] - min[0]) / (max[1] - min[1]); // FIXME If get view rect after data processed?\n\n      var viewRect = getViewRect(seriesModel, api, aspect); // Position may be NaN, use view rect instead\n\n      if (isNaN(aspect)) {\n        min = [viewRect.x, viewRect.y];\n        max = [viewRect.x + viewRect.width, viewRect.y + viewRect.height];\n      }\n\n      var bbWidth = max[0] - min[0];\n      var bbHeight = max[1] - min[1];\n      var viewWidth = viewRect.width;\n      var viewHeight = viewRect.height;\n      var viewCoordSys = seriesModel.coordinateSystem = new View();\n      viewCoordSys.zoomLimit = seriesModel.get('scaleLimit');\n      viewCoordSys.setBoundingRect(min[0], min[1], bbWidth, bbHeight);\n      viewCoordSys.setViewRect(viewRect.x, viewRect.y, viewWidth, viewHeight); // Update roam info\n\n      viewCoordSys.setCenter(seriesModel.get('center'));\n      viewCoordSys.setZoom(seriesModel.get('zoom'));\n      viewList.push(viewCoordSys);\n    }\n  });\n  return viewList;\n}\n\nmodule.exports = _default;","require(\"./gauge/GaugeSeries\");\n\nrequire(\"./gauge/GaugeView\");","var List = require(\"../../data/List\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar GaugeSeries = SeriesModel.extend({\n  type: 'series.gauge',\n  getInitialData: function (option, ecModel) {\n    var list = new List(['value'], this);\n    var dataOpt = option.data || [];\n\n    if (!zrUtil.isArray(dataOpt)) {\n      dataOpt = [dataOpt];\n    } // Only use the first data item\n\n\n    list.initData(dataOpt);\n    return list;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    legendHoverLink: true,\n    radius: '75%',\n    startAngle: 225,\n    endAngle: -45,\n    clockwise: true,\n    // 最小值\n    min: 0,\n    // 最大值\n    max: 100,\n    // 分割段数，默认为10\n    splitNumber: 10,\n    // 坐标轴线\n    axisLine: {\n      // 默认显示，属性show控制显示与否\n      show: true,\n      lineStyle: {\n        // 属性lineStyle控制线条样式\n        color: [[0.2, '#91c7ae'], [0.8, '#63869e'], [1, '#c23531']],\n        width: 30\n      }\n    },\n    // 分隔线\n    splitLine: {\n      // 默认显示，属性show控制显示与否\n      show: true,\n      // 属性length控制线长\n      length: 30,\n      // 属性lineStyle（详见lineStyle）控制线条样式\n      lineStyle: {\n        color: '#eee',\n        width: 2,\n        type: 'solid'\n      }\n    },\n    // 坐标轴小标记\n    axisTick: {\n      // 属性show控制显示与否，默认不显示\n      show: true,\n      // 每份split细分多少段\n      splitNumber: 5,\n      // 属性length控制线长\n      length: 8,\n      // 属性lineStyle控制线条样式\n      lineStyle: {\n        color: '#eee',\n        width: 1,\n        type: 'solid'\n      }\n    },\n    axisLabel: {\n      show: true,\n      distance: 5,\n      // formatter: null,\n      color: 'auto'\n    },\n    pointer: {\n      show: true,\n      length: '80%',\n      width: 8\n    },\n    itemStyle: {\n      normal: {\n        color: 'auto'\n      }\n    },\n    title: {\n      show: true,\n      // x, y，单位px\n      offsetCenter: [0, '-40%'],\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: '#333',\n      fontSize: 15\n    },\n    detail: {\n      show: true,\n      backgroundColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      borderColor: '#ccc',\n      width: 100,\n      height: null,\n      // self-adaption\n      padding: [5, 10],\n      // x, y，单位px\n      offsetCenter: [0, '40%'],\n      // formatter: null,\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: 'auto',\n      fontSize: 30\n    }\n  }\n});\nvar _default = GaugeSeries;\nmodule.exports = _default;","var PointerPath = require(\"./PointerPath\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar round = _number.round;\nvar linearMap = _number.linearMap;\n\nfunction parsePosition(seriesModel, api) {\n  var center = seriesModel.get('center');\n  var width = api.getWidth();\n  var height = api.getHeight();\n  var size = Math.min(width, height);\n  var cx = parsePercent(center[0], api.getWidth());\n  var cy = parsePercent(center[1], api.getHeight());\n  var r = parsePercent(seriesModel.get('radius'), size / 2);\n  return {\n    cx: cx,\n    cy: cy,\n    r: r\n  };\n}\n\nfunction formatLabel(label, labelFormatter) {\n  if (labelFormatter) {\n    if (typeof labelFormatter === 'string') {\n      label = labelFormatter.replace('{value}', label != null ? label : '');\n    } else if (typeof labelFormatter === 'function') {\n      label = labelFormatter(label);\n    }\n  }\n\n  return label;\n}\n\nvar PI2 = Math.PI * 2;\nvar GaugeView = ChartView.extend({\n  type: 'gauge',\n  render: function (seriesModel, ecModel, api) {\n    this.group.removeAll();\n    var colorList = seriesModel.get('axisLine.lineStyle.color');\n    var posInfo = parsePosition(seriesModel, api);\n\n    this._renderMain(seriesModel, ecModel, api, colorList, posInfo);\n  },\n  dispose: function () {},\n  _renderMain: function (seriesModel, ecModel, api, colorList, posInfo) {\n    var group = this.group;\n    var axisLineModel = seriesModel.getModel('axisLine');\n    var lineStyleModel = axisLineModel.getModel('lineStyle');\n    var clockwise = seriesModel.get('clockwise');\n    var startAngle = -seriesModel.get('startAngle') / 180 * Math.PI;\n    var endAngle = -seriesModel.get('endAngle') / 180 * Math.PI;\n    var angleRangeSpan = (endAngle - startAngle) % PI2;\n    var prevEndAngle = startAngle;\n    var axisLineWidth = lineStyleModel.get('width');\n\n    for (var i = 0; i < colorList.length; i++) {\n      // Clamp\n      var percent = Math.min(Math.max(colorList[i][0], 0), 1);\n      var endAngle = startAngle + angleRangeSpan * percent;\n      var sector = new graphic.Sector({\n        shape: {\n          startAngle: prevEndAngle,\n          endAngle: endAngle,\n          cx: posInfo.cx,\n          cy: posInfo.cy,\n          clockwise: clockwise,\n          r0: posInfo.r - axisLineWidth,\n          r: posInfo.r\n        },\n        silent: true\n      });\n      sector.setStyle({\n        fill: colorList[i][1]\n      });\n      sector.setStyle(lineStyleModel.getLineStyle( // Because we use sector to simulate arc\n      // so the properties for stroking are useless\n      ['color', 'borderWidth', 'borderColor']));\n      group.add(sector);\n      prevEndAngle = endAngle;\n    }\n\n    var getColor = function (percent) {\n      // Less than 0\n      if (percent <= 0) {\n        return colorList[0][1];\n      }\n\n      for (var i = 0; i < colorList.length; i++) {\n        if (colorList[i][0] >= percent && (i === 0 ? 0 : colorList[i - 1][0]) < percent) {\n          return colorList[i][1];\n        }\n      } // More than 1\n\n\n      return colorList[i - 1][1];\n    };\n\n    if (!clockwise) {\n      var tmp = startAngle;\n      startAngle = endAngle;\n      endAngle = tmp;\n    }\n\n    this._renderTicks(seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise);\n\n    this._renderPointer(seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise);\n\n    this._renderTitle(seriesModel, ecModel, api, getColor, posInfo);\n\n    this._renderDetail(seriesModel, ecModel, api, getColor, posInfo);\n  },\n  _renderTicks: function (seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise) {\n    var group = this.group;\n    var cx = posInfo.cx;\n    var cy = posInfo.cy;\n    var r = posInfo.r;\n    var minVal = +seriesModel.get('min');\n    var maxVal = +seriesModel.get('max');\n    var splitLineModel = seriesModel.getModel('splitLine');\n    var tickModel = seriesModel.getModel('axisTick');\n    var labelModel = seriesModel.getModel('axisLabel');\n    var splitNumber = seriesModel.get('splitNumber');\n    var subSplitNumber = tickModel.get('splitNumber');\n    var splitLineLen = parsePercent(splitLineModel.get('length'), r);\n    var tickLen = parsePercent(tickModel.get('length'), r);\n    var angle = startAngle;\n    var step = (endAngle - startAngle) / splitNumber;\n    var subStep = step / subSplitNumber;\n    var splitLineStyle = splitLineModel.getModel('lineStyle').getLineStyle();\n    var tickLineStyle = tickModel.getModel('lineStyle').getLineStyle();\n\n    for (var i = 0; i <= splitNumber; i++) {\n      var unitX = Math.cos(angle);\n      var unitY = Math.sin(angle); // Split line\n\n      if (splitLineModel.get('show')) {\n        var splitLine = new graphic.Line({\n          shape: {\n            x1: unitX * r + cx,\n            y1: unitY * r + cy,\n            x2: unitX * (r - splitLineLen) + cx,\n            y2: unitY * (r - splitLineLen) + cy\n          },\n          style: splitLineStyle,\n          silent: true\n        });\n\n        if (splitLineStyle.stroke === 'auto') {\n          splitLine.setStyle({\n            stroke: getColor(i / splitNumber)\n          });\n        }\n\n        group.add(splitLine);\n      } // Label\n\n\n      if (labelModel.get('show')) {\n        var label = formatLabel(round(i / splitNumber * (maxVal - minVal) + minVal), labelModel.get('formatter'));\n        var distance = labelModel.get('distance');\n        var autoColor = getColor(i / splitNumber);\n        group.add(new graphic.Text({\n          style: graphic.setTextStyle({}, labelModel, {\n            text: label,\n            x: unitX * (r - splitLineLen - distance) + cx,\n            y: unitY * (r - splitLineLen - distance) + cy,\n            textVerticalAlign: unitY < -0.4 ? 'top' : unitY > 0.4 ? 'bottom' : 'middle',\n            textAlign: unitX < -0.4 ? 'left' : unitX > 0.4 ? 'right' : 'center'\n          }, {\n            autoColor: autoColor\n          }),\n          silent: true\n        }));\n      } // Axis tick\n\n\n      if (tickModel.get('show') && i !== splitNumber) {\n        for (var j = 0; j <= subSplitNumber; j++) {\n          var unitX = Math.cos(angle);\n          var unitY = Math.sin(angle);\n          var tickLine = new graphic.Line({\n            shape: {\n              x1: unitX * r + cx,\n              y1: unitY * r + cy,\n              x2: unitX * (r - tickLen) + cx,\n              y2: unitY * (r - tickLen) + cy\n            },\n            silent: true,\n            style: tickLineStyle\n          });\n\n          if (tickLineStyle.stroke === 'auto') {\n            tickLine.setStyle({\n              stroke: getColor((i + j / subSplitNumber) / splitNumber)\n            });\n          }\n\n          group.add(tickLine);\n          angle += subStep;\n        }\n\n        angle -= subStep;\n      } else {\n        angle += step;\n      }\n    }\n  },\n  _renderPointer: function (seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise) {\n    var group = this.group;\n    var oldData = this._data;\n\n    if (!seriesModel.get('pointer.show')) {\n      // Remove old element\n      oldData && oldData.eachItemGraphicEl(function (el) {\n        group.remove(el);\n      });\n      return;\n    }\n\n    var valueExtent = [+seriesModel.get('min'), +seriesModel.get('max')];\n    var angleExtent = [startAngle, endAngle];\n    var data = seriesModel.getData();\n    data.diff(oldData).add(function (idx) {\n      var pointer = new PointerPath({\n        shape: {\n          angle: startAngle\n        }\n      });\n      graphic.initProps(pointer, {\n        shape: {\n          angle: linearMap(data.get('value', idx), valueExtent, angleExtent, true)\n        }\n      }, seriesModel);\n      group.add(pointer);\n      data.setItemGraphicEl(idx, pointer);\n    }).update(function (newIdx, oldIdx) {\n      var pointer = oldData.getItemGraphicEl(oldIdx);\n      graphic.updateProps(pointer, {\n        shape: {\n          angle: linearMap(data.get('value', newIdx), valueExtent, angleExtent, true)\n        }\n      }, seriesModel);\n      group.add(pointer);\n      data.setItemGraphicEl(newIdx, pointer);\n    }).remove(function (idx) {\n      var pointer = oldData.getItemGraphicEl(idx);\n      group.remove(pointer);\n    }).execute();\n    data.eachItemGraphicEl(function (pointer, idx) {\n      var itemModel = data.getItemModel(idx);\n      var pointerModel = itemModel.getModel('pointer');\n      pointer.setShape({\n        x: posInfo.cx,\n        y: posInfo.cy,\n        width: parsePercent(pointerModel.get('width'), posInfo.r),\n        r: parsePercent(pointerModel.get('length'), posInfo.r)\n      });\n      pointer.useStyle(itemModel.getModel('itemStyle.normal').getItemStyle());\n\n      if (pointer.style.fill === 'auto') {\n        pointer.setStyle('fill', getColor(linearMap(data.get('value', idx), valueExtent, [0, 1], true)));\n      }\n\n      graphic.setHoverStyle(pointer, itemModel.getModel('itemStyle.emphasis').getItemStyle());\n    });\n    this._data = data;\n  },\n  _renderTitle: function (seriesModel, ecModel, api, getColor, posInfo) {\n    var titleModel = seriesModel.getModel('title');\n\n    if (titleModel.get('show')) {\n      var offsetCenter = titleModel.get('offsetCenter');\n      var x = posInfo.cx + parsePercent(offsetCenter[0], posInfo.r);\n      var y = posInfo.cy + parsePercent(offsetCenter[1], posInfo.r);\n      var minVal = +seriesModel.get('min');\n      var maxVal = +seriesModel.get('max');\n      var value = seriesModel.getData().get('value', 0);\n      var autoColor = getColor(linearMap(value, [minVal, maxVal], [0, 1], true));\n      this.group.add(new graphic.Text({\n        silent: true,\n        style: graphic.setTextStyle({}, titleModel, {\n          x: x,\n          y: y,\n          // FIXME First data name ?\n          text: seriesModel.getData().getName(0),\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        }, {\n          autoColor: autoColor,\n          forceRich: true\n        })\n      }));\n    }\n  },\n  _renderDetail: function (seriesModel, ecModel, api, getColor, posInfo) {\n    var detailModel = seriesModel.getModel('detail');\n    var minVal = +seriesModel.get('min');\n    var maxVal = +seriesModel.get('max');\n\n    if (detailModel.get('show')) {\n      var offsetCenter = detailModel.get('offsetCenter');\n      var x = posInfo.cx + parsePercent(offsetCenter[0], posInfo.r);\n      var y = posInfo.cy + parsePercent(offsetCenter[1], posInfo.r);\n      var width = parsePercent(detailModel.get('width'), posInfo.r);\n      var height = parsePercent(detailModel.get('height'), posInfo.r);\n      var value = seriesModel.getData().get('value', 0);\n      var autoColor = getColor(linearMap(value, [minVal, maxVal], [0, 1], true));\n      this.group.add(new graphic.Text({\n        silent: true,\n        style: graphic.setTextStyle({}, detailModel, {\n          x: x,\n          y: y,\n          text: formatLabel( // FIXME First data name ?\n          value, detailModel.get('formatter')),\n          textWidth: isNaN(width) ? null : width,\n          textHeight: isNaN(height) ? null : height,\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        }, {\n          autoColor: autoColor,\n          forceRich: true\n        })\n      }));\n    }\n  }\n});\nvar _default = GaugeView;\nmodule.exports = _default;","var Path = require(\"zrender/lib/graphic/Path\");\n\nvar _default = Path.extend({\n  type: 'echartsGaugePointer',\n  shape: {\n    angle: 0,\n    width: 10,\n    r: 10,\n    x: 0,\n    y: 0\n  },\n  buildPath: function (ctx, shape) {\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var r = shape.r;\n    var width = shape.width;\n    var angle = shape.angle;\n    var x = shape.x - mathCos(angle) * width * (width >= r / 3 ? 1 : 2);\n    var y = shape.y - mathSin(angle) * width * (width >= r / 3 ? 1 : 2);\n    angle = shape.angle - Math.PI / 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(shape.x + mathCos(angle) * width, shape.y + mathSin(angle) * width);\n    ctx.lineTo(shape.x + mathCos(shape.angle) * r, shape.y + mathSin(shape.angle) * r);\n    ctx.lineTo(shape.x - mathCos(angle) * width, shape.y - mathSin(angle) * width);\n    ctx.lineTo(x, y);\n    return;\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./funnel/FunnelSeries\");\n\nrequire(\"./funnel/FunnelView\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar funnelLayout = require(\"./funnel/funnelLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\necharts.registerVisual(zrUtil.curry(dataColor, 'funnel'));\necharts.registerLayout(funnelLayout);\necharts.registerProcessor(zrUtil.curry(dataFilter, 'funnel'));","var echarts = require(\"../../echarts\");\n\nvar List = require(\"../../data/List\");\n\nvar _model = require(\"../../util/model\");\n\nvar defaultEmphasis = _model.defaultEmphasis;\n\nvar completeDimensions = require(\"../../data/helper/completeDimensions\");\n\nvar FunnelSeries = echarts.extendSeriesModel({\n  type: 'series.funnel',\n  init: function (option) {\n    FunnelSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    }; // Extend labelLine emphasis\n\n\n    this._defaultLabelLine(option);\n  },\n  getInitialData: function (option, ecModel) {\n    var dimensions = completeDimensions(['value'], option.data);\n    var list = new List(dimensions, this);\n    list.initData(option.data);\n    return list;\n  },\n  _defaultLabelLine: function (option) {\n    // Extend labelLine emphasis\n    defaultEmphasis(option.labelLine, ['show']);\n    var labelLineNormalOpt = option.labelLine.normal;\n    var labelLineEmphasisOpt = option.labelLine.emphasis; // Not show label line if `label.normal.show = false`\n\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.normal.show;\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.label.emphasis.show;\n  },\n  // Overwrite\n  getDataParams: function (dataIndex) {\n    var data = this.getData();\n    var params = FunnelSeries.superCall(this, 'getDataParams', dataIndex);\n    var sum = data.getSum('value'); // Percent is 0 if sum is 0\n\n    params.percent = !sum ? 0 : +(data.get('value', dataIndex) / sum * 100).toFixed(2);\n    params.$vars.push('percent');\n    return params;\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    legendHoverLink: true,\n    left: 80,\n    top: 60,\n    right: 80,\n    bottom: 60,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    // 默认取数据最小最大值\n    // min: 0,\n    // max: 100,\n    minSize: '0%',\n    maxSize: '100%',\n    sort: 'descending',\n    // 'ascending', 'descending'\n    gap: 0,\n    funnelAlign: 'center',\n    label: {\n      normal: {\n        show: true,\n        position: 'outer' // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n\n      },\n      emphasis: {\n        show: true\n      }\n    },\n    labelLine: {\n      normal: {\n        show: true,\n        length: 20,\n        lineStyle: {\n          // color: 各异,\n          width: 1,\n          type: 'solid'\n        }\n      },\n      emphasis: {}\n    },\n    itemStyle: {\n      normal: {\n        // color: 各异,\n        borderColor: '#fff',\n        borderWidth: 1\n      },\n      emphasis: {// color: 各异,\n      }\n    }\n  }\n});\nvar _default = FunnelSeries;\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\n/**\n * Piece of pie including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\nfunction FunnelPiece(data, idx) {\n  graphic.Group.call(this);\n  var polygon = new graphic.Polygon();\n  var labelLine = new graphic.Polyline();\n  var text = new graphic.Text();\n  this.add(polygon);\n  this.add(labelLine);\n  this.add(text);\n  this.updateData(data, idx, true); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    labelLine.ignore = labelLine.hoverIgnore;\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    labelLine.ignore = labelLine.normalIgnore;\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar funnelPieceProto = FunnelPiece.prototype;\nvar opacityAccessPath = ['itemStyle', 'normal', 'opacity'];\n\nfunnelPieceProto.updateData = function (data, idx, firstCreate) {\n  var polygon = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var opacity = data.getItemModel(idx).get(opacityAccessPath);\n  opacity = opacity == null ? 1 : opacity; // Reset style\n\n  polygon.useStyle({});\n\n  if (firstCreate) {\n    polygon.setShape({\n      points: layout.points\n    });\n    polygon.setStyle({\n      opacity: 0\n    });\n    graphic.initProps(polygon, {\n      style: {\n        opacity: opacity\n      }\n    }, seriesModel, idx);\n  } else {\n    graphic.updateProps(polygon, {\n      style: {\n        opacity: opacity\n      },\n      shape: {\n        points: layout.points\n      }\n    }, seriesModel, idx);\n  } // Update common style\n\n\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var visualColor = data.getItemVisual(idx, 'color');\n  polygon.setStyle(zrUtil.defaults({\n    lineJoin: 'round',\n    fill: visualColor\n  }, itemStyleModel.getModel('normal').getItemStyle(['opacity'])));\n  polygon.hoverStyle = itemStyleModel.getModel('emphasis').getItemStyle();\n\n  this._updateLabel(data, idx);\n\n  graphic.setHoverStyle(this);\n};\n\nfunnelPieceProto._updateLabel = function (data, idx) {\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var labelLayout = layout.label;\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.updateProps(labelLine, {\n    shape: {\n      points: labelLayout.linePoints || labelLayout.linePoints\n    }\n  }, seriesModel, idx);\n  graphic.updateProps(labelText, {\n    style: {\n      x: labelLayout.x,\n      y: labelLayout.y\n    }\n  }, seriesModel, idx);\n  labelText.attr({\n    rotation: labelLayout.rotation,\n    origin: [labelLayout.x, labelLayout.y],\n    z2: 10\n  });\n  var labelModel = itemModel.getModel('label.normal');\n  var labelHoverModel = itemModel.getModel('label.emphasis');\n  var labelLineModel = itemModel.getModel('labelLine.normal');\n  var labelLineHoverModel = itemModel.getModel('labelLine.emphasis');\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\n    labelFetcher: data.hostModel,\n    labelDataIndex: idx,\n    defaultText: data.getName(idx),\n    autoColor: visualColor,\n    useInsideStyle: !!labelLayout.inside\n  }, {\n    textAlign: labelLayout.textAlign,\n    textVerticalAlign: labelLayout.verticalAlign\n  });\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n  labelText.hoverIgnore = !labelHoverModel.get('show');\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\n\n  labelLine.setStyle({\n    stroke: visualColor\n  });\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n};\n\nzrUtil.inherits(FunnelPiece, graphic.Group);\nvar FunnelView = ChartView.extend({\n  type: 'funnel',\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    data.diff(oldData).add(function (idx) {\n      var funnelPiece = new FunnelPiece(data, idx);\n      data.setItemGraphicEl(idx, funnelPiece);\n      group.add(funnelPiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx);\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      group.remove(piePiece);\n    }).execute();\n    this._data = data;\n  },\n  remove: function () {\n    this.group.removeAll();\n    this._data = null;\n  },\n  dispose: function () {}\n});\nvar _default = FunnelView;\nmodule.exports = _default;","var layout = require(\"../../util/layout\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\n\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction getSortedIndices(data, sort) {\n  var valueArr = data.mapArray('value', function (val) {\n    return val;\n  });\n  var indices = [];\n  var isAscending = sort === 'ascending';\n\n  for (var i = 0, len = data.count(); i < len; i++) {\n    indices[i] = i;\n  } // Add custom sortable function & none sortable opetion by \"options.sort\"\n\n\n  if (typeof sort === 'function') {\n    indices.sort(sort);\n  } else if (sort !== 'none') {\n    indices.sort(function (a, b) {\n      return isAscending ? valueArr[a] - valueArr[b] : valueArr[b] - valueArr[a];\n    });\n  }\n\n  return indices;\n}\n\nfunction labelLayout(data) {\n  data.each(function (idx) {\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label.normal');\n    var labelPosition = labelModel.get('position');\n    var labelLineModel = itemModel.getModel('labelLine.normal');\n    var layout = data.getItemLayout(idx);\n    var points = layout.points;\n    var isLabelInside = labelPosition === 'inner' || labelPosition === 'inside' || labelPosition === 'center';\n    var textAlign;\n    var textX;\n    var textY;\n    var linePoints;\n\n    if (isLabelInside) {\n      textX = (points[0][0] + points[1][0] + points[2][0] + points[3][0]) / 4;\n      textY = (points[0][1] + points[1][1] + points[2][1] + points[3][1]) / 4;\n      textAlign = 'center';\n      linePoints = [[textX, textY], [textX, textY]];\n    } else {\n      var x1;\n      var y1;\n      var x2;\n      var labelLineLen = labelLineModel.get('length');\n\n      if (labelPosition === 'left') {\n        // Left side\n        x1 = (points[3][0] + points[0][0]) / 2;\n        y1 = (points[3][1] + points[0][1]) / 2;\n        x2 = x1 - labelLineLen;\n        textX = x2 - 5;\n        textAlign = 'right';\n      } else {\n        // Right side\n        x1 = (points[1][0] + points[2][0]) / 2;\n        y1 = (points[1][1] + points[2][1]) / 2;\n        x2 = x1 + labelLineLen;\n        textX = x2 + 5;\n        textAlign = 'left';\n      }\n\n      var y2 = y1;\n      linePoints = [[x1, y1], [x2, y2]];\n      textY = y2;\n    }\n\n    layout.label = {\n      linePoints: linePoints,\n      x: textX,\n      y: textY,\n      verticalAlign: 'middle',\n      textAlign: textAlign,\n      inside: isLabelInside\n    };\n  });\n}\n\nfunction _default(ecModel, api, payload) {\n  ecModel.eachSeriesByType('funnel', function (seriesModel) {\n    var data = seriesModel.getData();\n    var sort = seriesModel.get('sort');\n    var viewRect = getViewRect(seriesModel, api);\n    var indices = getSortedIndices(data, sort);\n    var sizeExtent = [parsePercent(seriesModel.get('minSize'), viewRect.width), parsePercent(seriesModel.get('maxSize'), viewRect.width)];\n    var dataExtent = data.getDataExtent('value');\n    var min = seriesModel.get('min');\n    var max = seriesModel.get('max');\n\n    if (min == null) {\n      min = Math.min(dataExtent[0], 0);\n    }\n\n    if (max == null) {\n      max = dataExtent[1];\n    }\n\n    var funnelAlign = seriesModel.get('funnelAlign');\n    var gap = seriesModel.get('gap');\n    var itemHeight = (viewRect.height - gap * (data.count() - 1)) / data.count();\n    var y = viewRect.y;\n\n    var getLinePoints = function (idx, offY) {\n      // End point index is data.count() and we assign it 0\n      var val = data.get('value', idx) || 0;\n      var itemWidth = linearMap(val, [min, max], sizeExtent, true);\n      var x0;\n\n      switch (funnelAlign) {\n        case 'left':\n          x0 = viewRect.x;\n          break;\n\n        case 'center':\n          x0 = viewRect.x + (viewRect.width - itemWidth) / 2;\n          break;\n\n        case 'right':\n          x0 = viewRect.x + viewRect.width - itemWidth;\n          break;\n      }\n\n      return [[x0, offY], [x0 + itemWidth, offY]];\n    };\n\n    if (sort === 'ascending') {\n      // From bottom to top\n      itemHeight = -itemHeight;\n      gap = -gap;\n      y += viewRect.height;\n      indices = indices.reverse();\n    }\n\n    for (var i = 0; i < indices.length; i++) {\n      var idx = indices[i];\n      var nextIdx = indices[i + 1];\n      var start = getLinePoints(idx, y);\n      var end = getLinePoints(nextIdx, y + itemHeight);\n      y += itemHeight + gap;\n      data.setItemLayout(idx, {\n        points: start.concat(end.slice().reverse())\n      });\n    }\n\n    labelLayout(data);\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"../component/parallel\");\n\nrequire(\"./parallel/ParallelSeries\");\n\nrequire(\"./parallel/ParallelView\");\n\nvar parallelVisual = require(\"./parallel/parallelVisual\");\n\necharts.registerVisual(parallelVisual);","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nfunction _default(option) {\n  createParallelIfNeeded(option);\n  mergeAxisOptionFromParallel(option);\n}\n/**\n * Create a parallel coordinate if not exists.\n * @inner\n */\n\n\nfunction createParallelIfNeeded(option) {\n  if (option.parallel) {\n    return;\n  }\n\n  var hasParallelSeries = false;\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'parallel') {\n      hasParallelSeries = true;\n    }\n  });\n\n  if (hasParallelSeries) {\n    option.parallel = [{}];\n  }\n}\n/**\n * Merge aixs definition from parallel option (if exists) to axis option.\n * @inner\n */\n\n\nfunction mergeAxisOptionFromParallel(option) {\n  var axes = modelUtil.normalizeToArray(option.parallelAxis);\n  zrUtil.each(axes, function (axisOption) {\n    if (!zrUtil.isObject(axisOption)) {\n      return;\n    }\n\n    var parallelIndex = axisOption.parallelIndex || 0;\n    var parallelOption = modelUtil.normalizeToArray(option.parallel)[parallelIndex];\n\n    if (parallelOption && parallelOption.parallelAxisDefault) {\n      zrUtil.merge(axisOption, parallelOption.parallelAxisDefault, false);\n    }\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar ParallelAxis = require(\"./ParallelAxis\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar sliderMove = require(\"../../component/helper/sliderMove\");\n\n/**\n * Parallel Coordinates\n * <https://en.wikipedia.org/wiki/Parallel_coordinates>\n */\nvar each = zrUtil.each;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar round = numberUtil.round;\nvar PI = Math.PI;\n\nfunction Parallel(parallelModel, ecModel, api) {\n  /**\n   * key: dimension\n   * @type {Object.<string, module:echarts/coord/parallel/Axis>}\n   * @private\n   */\n  this._axesMap = zrUtil.createHashMap();\n  /**\n   * key: dimension\n   * value: {position: [], rotation, }\n   * @type {Object.<string, Object>}\n   * @private\n   */\n\n  this._axesLayout = {};\n  /**\n   * Always follow axis order.\n   * @type {Array.<string>}\n   * @readOnly\n   */\n\n  this.dimensions = parallelModel.dimensions;\n  /**\n   * @type {module:zrender/core/BoundingRect}\n   */\n\n  this._rect;\n  /**\n   * @type {module:echarts/coord/parallel/ParallelModel}\n   */\n\n  this._model = parallelModel;\n\n  this._init(parallelModel, ecModel, api);\n}\n\nParallel.prototype = {\n  type: 'parallel',\n  constructor: Parallel,\n\n  /**\n   * Initialize cartesian coordinate systems\n   * @private\n   */\n  _init: function (parallelModel, ecModel, api) {\n    var dimensions = parallelModel.dimensions;\n    var parallelAxisIndex = parallelModel.parallelAxisIndex;\n    each(dimensions, function (dim, idx) {\n      var axisIndex = parallelAxisIndex[idx];\n      var axisModel = ecModel.getComponent('parallelAxis', axisIndex);\n\n      var axis = this._axesMap.set(dim, new ParallelAxis(dim, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisIndex));\n\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse'); // Injection\n\n      axisModel.axis = axis;\n      axis.model = axisModel;\n      axis.coordinateSystem = axisModel.coordinateSystem = this;\n    }, this);\n  },\n\n  /**\n   * Update axis scale after data processed\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  update: function (ecModel, api) {\n    this._updateAxesFromSeries(this._model, ecModel);\n  },\n\n  /**\n   * @override\n   */\n  containPoint: function (point) {\n    var layoutInfo = this._makeLayoutInfo();\n\n    var axisBase = layoutInfo.axisBase;\n    var layoutBase = layoutInfo.layoutBase;\n    var pixelDimIndex = layoutInfo.pixelDimIndex;\n    var pAxis = point[1 - pixelDimIndex];\n    var pLayout = point[pixelDimIndex];\n    return pAxis >= axisBase && pAxis <= axisBase + layoutInfo.axisLength && pLayout >= layoutBase && pLayout <= layoutBase + layoutInfo.layoutLength;\n  },\n  getModel: function () {\n    return this._model;\n  },\n\n  /**\n   * Update properties from series\n   * @private\n   */\n  _updateAxesFromSeries: function (parallelModel, ecModel) {\n    ecModel.eachSeries(function (seriesModel) {\n      if (!parallelModel.contains(seriesModel, ecModel)) {\n        return;\n      }\n\n      var data = seriesModel.getData();\n      each(this.dimensions, function (dim) {\n        var axis = this._axesMap.get(dim);\n\n        axis.scale.unionExtentFromData(data, dim);\n        axisHelper.niceScaleExtent(axis.scale, axis.model);\n      }, this);\n    }, this);\n  },\n\n  /**\n   * Resize the parallel coordinate system.\n   * @param {module:echarts/coord/parallel/ParallelModel} parallelModel\n   * @param {module:echarts/ExtensionAPI} api\n   */\n  resize: function (parallelModel, api) {\n    this._rect = layoutUtil.getLayoutRect(parallelModel.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n\n    this._layoutAxes();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getRect: function () {\n    return this._rect;\n  },\n\n  /**\n   * @private\n   */\n  _makeLayoutInfo: function () {\n    var parallelModel = this._model;\n    var rect = this._rect;\n    var xy = ['x', 'y'];\n    var wh = ['width', 'height'];\n    var layout = parallelModel.get('layout');\n    var pixelDimIndex = layout === 'horizontal' ? 0 : 1;\n    var layoutLength = rect[wh[pixelDimIndex]];\n    var layoutExtent = [0, layoutLength];\n    var axisCount = this.dimensions.length;\n    var axisExpandWidth = restrict(parallelModel.get('axisExpandWidth'), layoutExtent);\n    var axisExpandCount = restrict(parallelModel.get('axisExpandCount') || 0, [0, axisCount]);\n    var axisExpandable = parallelModel.get('axisExpandable') && axisCount > 3 && axisCount > axisExpandCount && axisExpandCount > 1 && axisExpandWidth > 0 && layoutLength > 0; // `axisExpandWindow` is According to the coordinates of [0, axisExpandLength],\n    // for sake of consider the case that axisCollapseWidth is 0 (when screen is narrow),\n    // where collapsed axes should be overlapped.\n\n    var axisExpandWindow = parallelModel.get('axisExpandWindow');\n    var winSize;\n\n    if (!axisExpandWindow) {\n      winSize = restrict(axisExpandWidth * (axisExpandCount - 1), layoutExtent);\n      var axisExpandCenter = parallelModel.get('axisExpandCenter') || mathFloor(axisCount / 2);\n      axisExpandWindow = [axisExpandWidth * axisExpandCenter - winSize / 2];\n      axisExpandWindow[1] = axisExpandWindow[0] + winSize;\n    } else {\n      winSize = restrict(axisExpandWindow[1] - axisExpandWindow[0], layoutExtent);\n      axisExpandWindow[1] = axisExpandWindow[0] + winSize;\n    }\n\n    var axisCollapseWidth = (layoutLength - winSize) / (axisCount - axisExpandCount); // Avoid axisCollapseWidth is too small.\n\n    axisCollapseWidth < 3 && (axisCollapseWidth = 0); // Find the first and last indices > ewin[0] and < ewin[1].\n\n    var winInnerIndices = [mathFloor(round(axisExpandWindow[0] / axisExpandWidth, 1)) + 1, mathCeil(round(axisExpandWindow[1] / axisExpandWidth, 1)) - 1]; // Pos in ec coordinates.\n\n    var axisExpandWindow0Pos = axisCollapseWidth / axisExpandWidth * axisExpandWindow[0];\n    return {\n      layout: layout,\n      pixelDimIndex: pixelDimIndex,\n      layoutBase: rect[xy[pixelDimIndex]],\n      layoutLength: layoutLength,\n      axisBase: rect[xy[1 - pixelDimIndex]],\n      axisLength: rect[wh[1 - pixelDimIndex]],\n      axisExpandable: axisExpandable,\n      axisExpandWidth: axisExpandWidth,\n      axisCollapseWidth: axisCollapseWidth,\n      axisExpandWindow: axisExpandWindow,\n      axisCount: axisCount,\n      winInnerIndices: winInnerIndices,\n      axisExpandWindow0Pos: axisExpandWindow0Pos\n    };\n  },\n\n  /**\n   * @private\n   */\n  _layoutAxes: function () {\n    var rect = this._rect;\n    var axes = this._axesMap;\n    var dimensions = this.dimensions;\n\n    var layoutInfo = this._makeLayoutInfo();\n\n    var layout = layoutInfo.layout;\n    axes.each(function (axis) {\n      var axisExtent = [0, layoutInfo.axisLength];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(axisExtent[idx], axisExtent[1 - idx]);\n    });\n    each(dimensions, function (dim, idx) {\n      var posInfo = (layoutInfo.axisExpandable ? layoutAxisWithExpand : layoutAxisWithoutExpand)(idx, layoutInfo);\n      var positionTable = {\n        horizontal: {\n          x: posInfo.position,\n          y: layoutInfo.axisLength\n        },\n        vertical: {\n          x: 0,\n          y: posInfo.position\n        }\n      };\n      var rotationTable = {\n        horizontal: PI / 2,\n        vertical: 0\n      };\n      var position = [positionTable[layout].x + rect.x, positionTable[layout].y + rect.y];\n      var rotation = rotationTable[layout];\n      var transform = matrix.create();\n      matrix.rotate(transform, transform, rotation);\n      matrix.translate(transform, transform, position); // TODO\n      // tick等排布信息。\n      // TODO\n      // 根据axis order 更新 dimensions顺序。\n\n      this._axesLayout[dim] = {\n        position: position,\n        rotation: rotation,\n        transform: transform,\n        axisNameAvailableWidth: posInfo.axisNameAvailableWidth,\n        axisLabelShow: posInfo.axisLabelShow,\n        nameTruncateMaxWidth: posInfo.nameTruncateMaxWidth,\n        tickDirection: 1,\n        labelDirection: 1,\n        labelInterval: axes.get(dim).getLabelInterval()\n      };\n    }, this);\n  },\n\n  /**\n   * Get axis by dim.\n   * @param {string} dim\n   * @return {module:echarts/coord/parallel/ParallelAxis} [description]\n   */\n  getAxis: function (dim) {\n    return this._axesMap.get(dim);\n  },\n\n  /**\n   * Convert a dim value of a single item of series data to Point.\n   * @param {*} value\n   * @param {string} dim\n   * @return {Array}\n   */\n  dataToPoint: function (value, dim) {\n    return this.axisCoordToPoint(this._axesMap.get(dim).dataToCoord(value), dim);\n  },\n\n  /**\n   * Travel data for one time, get activeState of each data item.\n   * @param {module:echarts/data/List} data\n   * @param {Functio} cb param: {string} activeState 'active' or 'inactive' or 'normal'\n   *                            {number} dataIndex\n   * @param {Object} context\n   */\n  eachActiveState: function (data, callback, context) {\n    var dimensions = this.dimensions;\n    var axesMap = this._axesMap;\n    var hasActiveSet = this.hasAxisBrushed();\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      var values = data.getValues(dimensions, i);\n      var activeState;\n\n      if (!hasActiveSet) {\n        activeState = 'normal';\n      } else {\n        activeState = 'active';\n\n        for (var j = 0, lenj = dimensions.length; j < lenj; j++) {\n          var dimName = dimensions[j];\n          var state = axesMap.get(dimName).model.getActiveState(values[j], j);\n\n          if (state === 'inactive') {\n            activeState = 'inactive';\n            break;\n          }\n        }\n      }\n\n      callback.call(context, activeState, i);\n    }\n  },\n\n  /**\n   * Whether has any activeSet.\n   * @return {boolean}\n   */\n  hasAxisBrushed: function () {\n    var dimensions = this.dimensions;\n    var axesMap = this._axesMap;\n    var hasActiveSet = false;\n\n    for (var j = 0, lenj = dimensions.length; j < lenj; j++) {\n      if (axesMap.get(dimensions[j]).model.getActiveState() !== 'normal') {\n        hasActiveSet = true;\n      }\n    }\n\n    return hasActiveSet;\n  },\n\n  /**\n   * Convert coords of each axis to Point.\n   *  Return point. For example: [10, 20]\n   * @param {Array.<number>} coords\n   * @param {string} dim\n   * @return {Array.<number>}\n   */\n  axisCoordToPoint: function (coord, dim) {\n    var axisLayout = this._axesLayout[dim];\n    return graphic.applyTransform([coord, 0], axisLayout.transform);\n  },\n\n  /**\n   * Get axis layout.\n   */\n  getAxisLayout: function (dim) {\n    return zrUtil.clone(this._axesLayout[dim]);\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @return {Object} {axisExpandWindow, delta, behavior: 'jump' | 'slide' | 'none'}.\n   */\n  getSlidedAxisExpandWindow: function (point) {\n    var layoutInfo = this._makeLayoutInfo();\n\n    var pixelDimIndex = layoutInfo.pixelDimIndex;\n    var axisExpandWindow = layoutInfo.axisExpandWindow.slice();\n    var winSize = axisExpandWindow[1] - axisExpandWindow[0];\n    var extent = [0, layoutInfo.axisExpandWidth * (layoutInfo.axisCount - 1)]; // Out of the area of coordinate system.\n\n    if (!this.containPoint(point)) {\n      return {\n        behavior: 'none',\n        axisExpandWindow: axisExpandWindow\n      };\n    } // Conver the point from global to expand coordinates.\n\n\n    var pointCoord = point[pixelDimIndex] - layoutInfo.layoutBase - layoutInfo.axisExpandWindow0Pos; // For dragging operation convenience, the window should not be\n    // slided when mouse is the center area of the window.\n\n    var delta;\n    var behavior = 'slide';\n    var axisCollapseWidth = layoutInfo.axisCollapseWidth;\n\n    var triggerArea = this._model.get('axisExpandSlideTriggerArea'); // But consider touch device, jump is necessary.\n\n\n    var useJump = triggerArea[0] != null;\n\n    if (axisCollapseWidth) {\n      if (useJump && axisCollapseWidth && pointCoord < winSize * triggerArea[0]) {\n        behavior = 'jump';\n        delta = pointCoord - winSize * triggerArea[2];\n      } else if (useJump && axisCollapseWidth && pointCoord > winSize * (1 - triggerArea[0])) {\n        behavior = 'jump';\n        delta = pointCoord - winSize * (1 - triggerArea[2]);\n      } else {\n        (delta = pointCoord - winSize * triggerArea[1]) >= 0 && (delta = pointCoord - winSize * (1 - triggerArea[1])) <= 0 && (delta = 0);\n      }\n\n      delta *= layoutInfo.axisExpandWidth / axisCollapseWidth;\n      delta ? sliderMove(delta, axisExpandWindow, extent, 'all') // Avoid nonsense triger on mousemove.\n      : behavior = 'none';\n    } // When screen is too narrow, make it visible and slidable, although it is hard to interact.\n    else {\n        var winSize = axisExpandWindow[1] - axisExpandWindow[0];\n        var pos = extent[1] * pointCoord / winSize;\n        axisExpandWindow = [mathMax(0, pos - winSize / 2)];\n        axisExpandWindow[1] = mathMin(extent[1], axisExpandWindow[0] + winSize);\n        axisExpandWindow[0] = axisExpandWindow[1] - winSize;\n      }\n\n    return {\n      axisExpandWindow: axisExpandWindow,\n      behavior: behavior\n    };\n  }\n};\n\nfunction restrict(len, extent) {\n  return mathMin(mathMax(len, extent[0]), extent[1]);\n}\n\nfunction layoutAxisWithoutExpand(axisIndex, layoutInfo) {\n  var step = layoutInfo.layoutLength / (layoutInfo.axisCount - 1);\n  return {\n    position: step * axisIndex,\n    axisNameAvailableWidth: step,\n    axisLabelShow: true\n  };\n}\n\nfunction layoutAxisWithExpand(axisIndex, layoutInfo) {\n  var layoutLength = layoutInfo.layoutLength;\n  var axisExpandWidth = layoutInfo.axisExpandWidth;\n  var axisCount = layoutInfo.axisCount;\n  var axisCollapseWidth = layoutInfo.axisCollapseWidth;\n  var winInnerIndices = layoutInfo.winInnerIndices;\n  var position;\n  var axisNameAvailableWidth = axisCollapseWidth;\n  var axisLabelShow = false;\n  var nameTruncateMaxWidth;\n\n  if (axisIndex < winInnerIndices[0]) {\n    position = axisIndex * axisCollapseWidth;\n    nameTruncateMaxWidth = axisCollapseWidth;\n  } else if (axisIndex <= winInnerIndices[1]) {\n    position = layoutInfo.axisExpandWindow0Pos + axisIndex * axisExpandWidth - layoutInfo.axisExpandWindow[0];\n    axisNameAvailableWidth = axisExpandWidth;\n    axisLabelShow = true;\n  } else {\n    position = layoutLength - (axisCount - 1 - axisIndex) * axisCollapseWidth;\n    nameTruncateMaxWidth = axisCollapseWidth;\n  }\n\n  return {\n    position: position,\n    axisNameAvailableWidth: axisNameAvailableWidth,\n    axisLabelShow: axisLabelShow,\n    nameTruncateMaxWidth: nameTruncateMaxWidth\n  };\n}\n\nvar _default = Parallel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/**\n * @constructor module:echarts/coord/parallel/ParallelAxis\n * @extends {module:echarts/coord/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n */\nvar ParallelAxis = function (dim, scale, coordExtent, axisType, axisIndex) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.axisIndex = axisIndex;\n};\n\nParallelAxis.prototype = {\n  constructor: ParallelAxis,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/parallel/AxisModel}\n   */\n  model: null,\n\n  /**\n   * @override\n   */\n  isHorizontal: function () {\n    return this.coordinateSystem.getModel().get('layout') !== 'horizontal';\n  }\n};\nzrUtil.inherits(ParallelAxis, Axis);\nvar _default = ParallelAxis;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Component = require(\"../../model/Component\");\n\nrequire(\"./AxisModel\");\n\nvar _default = Component.extend({\n  type: 'parallel',\n  dependencies: ['parallelAxis'],\n\n  /**\n   * @type {module:echarts/coord/parallel/Parallel}\n   */\n  coordinateSystem: null,\n\n  /**\n   * Each item like: 'dim0', 'dim1', 'dim2', ...\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: null,\n\n  /**\n   * Coresponding to dimensions.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n  parallelAxisIndex: null,\n  layoutMode: 'box',\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    left: 80,\n    top: 60,\n    right: 80,\n    bottom: 60,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    layout: 'horizontal',\n    // 'horizontal' or 'vertical'\n    // FIXME\n    // naming?\n    axisExpandable: false,\n    axisExpandCenter: null,\n    axisExpandCount: 0,\n    axisExpandWidth: 50,\n    // FIXME '10%' ?\n    axisExpandRate: 17,\n    axisExpandDebounce: 50,\n    // [out, in, jumpTarget]. In percentage. If use [null, 0.05], null means full.\n    // Do not doc to user until necessary.\n    axisExpandSlideTriggerArea: [-0.15, 0.05, 0.4],\n    axisExpandTriggerOn: 'click',\n    // 'mousemove' or 'click'\n    parallelAxisDefault: null\n  },\n\n  /**\n   * @override\n   */\n  init: function () {\n    Component.prototype.init.apply(this, arguments);\n    this.mergeOption({});\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (newOption) {\n    var thisOption = this.option;\n    newOption && zrUtil.merge(thisOption, newOption, true);\n\n    this._initDimensions();\n  },\n\n  /**\n   * Whether series or axis is in this coordinate system.\n   * @param {module:echarts/model/Series|module:echarts/coord/parallel/AxisModel} model\n   * @param {module:echarts/model/Global} ecModel\n   */\n  contains: function (model, ecModel) {\n    var parallelIndex = model.get('parallelIndex');\n    return parallelIndex != null && ecModel.getComponent('parallel', parallelIndex) === this;\n  },\n  setAxisExpand: function (opt) {\n    zrUtil.each(['axisExpandable', 'axisExpandCenter', 'axisExpandCount', 'axisExpandWidth', 'axisExpandWindow'], function (name) {\n      if (opt.hasOwnProperty(name)) {\n        this.option[name] = opt[name];\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _initDimensions: function () {\n    var dimensions = this.dimensions = [];\n    var parallelAxisIndex = this.parallelAxisIndex = [];\n    var axisModels = zrUtil.filter(this.dependentModels.parallelAxis, function (axisModel) {\n      // Can not use this.contains here, because\n      // initialization has not been completed yet.\n      return (axisModel.get('parallelIndex') || 0) === this.componentIndex;\n    }, this);\n    zrUtil.each(axisModels, function (axisModel) {\n      dimensions.push('dim' + axisModel.get('dim'));\n      parallelAxisIndex.push(axisModel.componentIndex);\n    });\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\nvar AxisModel = ComponentModel.extend({\n  type: 'baseParallelAxis',\n\n  /**\n   * @type {module:echarts/coord/parallel/Axis}\n   */\n  axis: null,\n\n  /**\n   * @type {Array.<Array.<number>}\n   * @readOnly\n   */\n  activeIntervals: [],\n\n  /**\n   * @return {Object}\n   */\n  getAreaSelectStyle: function () {\n    return makeStyleMapper([['fill', 'color'], ['lineWidth', 'borderWidth'], ['stroke', 'borderColor'], ['width', 'width'], ['opacity', 'opacity']])(this.getModel('areaSelectStyle'));\n  },\n\n  /**\n   * The code of this feature is put on AxisModel but not ParallelAxis,\n   * because axisModel can be alive after echarts updating but instance of\n   * ParallelAxis having been disposed. this._activeInterval should be kept\n   * when action dispatched (i.e. legend click).\n   *\n   * @param {Array.<Array<number>>} intervals interval.length === 0\n   *                                          means set all active.\n   * @public\n   */\n  setActiveIntervals: function (intervals) {\n    var activeIntervals = this.activeIntervals = zrUtil.clone(intervals); // Normalize\n\n    if (activeIntervals) {\n      for (var i = activeIntervals.length - 1; i >= 0; i--) {\n        numberUtil.asc(activeIntervals[i]);\n      }\n    }\n  },\n\n  /**\n   * @param {number|string} [value] When attempting to detect 'no activeIntervals set',\n   *                         value can not be input.\n   * @return {string} 'normal': no activeIntervals set,\n   *                  'active',\n   *                  'inactive'.\n   * @public\n   */\n  getActiveState: function (value) {\n    var activeIntervals = this.activeIntervals;\n\n    if (!activeIntervals.length) {\n      return 'normal';\n    }\n\n    if (value == null) {\n      return 'inactive';\n    }\n\n    for (var i = 0, len = activeIntervals.length; i < len; i++) {\n      if (activeIntervals[i][0] <= value && value <= activeIntervals[i][1]) {\n        return 'active';\n      }\n    }\n\n    return 'inactive';\n  }\n});\nvar defaultOption = {\n  type: 'value',\n\n  /**\n   * @type {Array.<number>}\n   */\n  dim: null,\n  // 0, 1, 2, ...\n  // parallelIndex: null,\n  areaSelectStyle: {\n    width: 20,\n    borderWidth: 1,\n    borderColor: 'rgba(160,197,232)',\n    color: 'rgba(160,197,232)',\n    opacity: 0.3\n  },\n  realtime: true,\n  // Whether realtime update view when select.\n  z: 10\n};\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\n\nfunction getAxisType(axisName, option) {\n  return option.type || (option.data ? 'category' : 'value');\n}\n\naxisModelCreator('parallel', AxisModel, getAxisType, defaultOption);\nvar _default = AxisModel;\nmodule.exports = _default;","require(\"../coord/parallel/parallelCreator\");\n\nrequire(\"./axis/parallelAxisAction\");\n\nrequire(\"./axis/ParallelAxisView\");","var echarts = require(\"../../echarts\");\n\n/**\n * @payload\n * @property {string} parallelAxisId\n * @property {Array.<Array.<number>>} intervals\n */\nvar actionInfo = {\n  type: 'axisAreaSelect',\n  event: 'axisAreaSelected',\n  update: 'updateVisual'\n};\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'parallelAxis',\n    query: payload\n  }, function (parallelAxisModel) {\n    parallelAxisModel.axis.model.setActiveIntervals(payload.intervals);\n  });\n});\n/**\n * @payload\n */\n\necharts.registerAction('parallelAxisExpand', function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'parallel',\n    query: payload\n  }, function (parallelModel) {\n    parallelModel.setAxisExpand(payload);\n  });\n});","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar BrushController = require(\"../helper/BrushController\");\n\nvar brushHelper = require(\"../helper/brushHelper\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar elementList = ['axisLine', 'axisTickLabel', 'axisName'];\nvar AxisView = echarts.extendComponentView({\n  type: 'parallelAxis',\n\n  /**\n   * @override\n   */\n  init: function (ecModel, api) {\n    AxisView.superApply(this, 'init', arguments);\n    /**\n     * @type {module:echarts/component/helper/BrushController}\n     */\n\n    (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this));\n  },\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    if (fromAxisAreaSelect(axisModel, ecModel, payload)) {\n      return;\n    }\n\n    this.axisModel = axisModel;\n    this.api = api;\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var coordSysModel = getCoordSysModel(axisModel, ecModel);\n    var coordSys = coordSysModel.coordinateSystem;\n    var areaSelectStyle = axisModel.getAreaSelectStyle();\n    var areaWidth = areaSelectStyle.width;\n    var dim = axisModel.axis.dim;\n    var axisLayout = coordSys.getAxisLayout(dim);\n    var builderOpt = zrUtil.extend({\n      strokeContainThreshold: areaWidth\n    }, axisLayout);\n    var axisBuilder = new AxisBuilder(axisModel, builderOpt);\n    zrUtil.each(elementList, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    this._refreshBrushController(builderOpt, areaSelectStyle, axisModel, coordSysModel, areaWidth, api);\n\n    var animationModel = payload && payload.animation === false ? null : axisModel;\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, animationModel);\n  },\n\n  /**\n   * @override\n   */\n  updateVisual: function (axisModel, ecModel, api, payload) {\n    this._brushController && this._brushController.updateCovers(getCoverInfoList(axisModel));\n  },\n  _refreshBrushController: function (builderOpt, areaSelectStyle, axisModel, coordSysModel, areaWidth, api) {\n    // After filtering, axis may change, select area needs to be update.\n    var extent = axisModel.axis.getExtent();\n    var extentLen = extent[1] - extent[0];\n    var extra = Math.min(30, Math.abs(extentLen) * 0.1); // Arbitrary value.\n    // width/height might be negative, which will be\n    // normalized in BoundingRect.\n\n    var rect = graphic.BoundingRect.create({\n      x: extent[0],\n      y: -areaWidth / 2,\n      width: extentLen,\n      height: areaWidth\n    });\n    rect.x -= extra;\n    rect.width += 2 * extra;\n\n    this._brushController.mount({\n      enableGlobalPan: true,\n      rotation: builderOpt.rotation,\n      position: builderOpt.position\n    }).setPanels([{\n      panelId: 'pl',\n      clipPath: brushHelper.makeRectPanelClipPath(rect),\n      isTargetByCursor: brushHelper.makeRectIsTargetByCursor(rect, api, coordSysModel),\n      getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect, 0)\n    }]).enableBrush({\n      brushType: 'lineX',\n      brushStyle: areaSelectStyle,\n      removeOnClick: true\n    }).updateCovers(getCoverInfoList(axisModel));\n  },\n  _onBrush: function (coverInfoList, opt) {\n    // Do not cache these object, because the mey be changed.\n    var axisModel = this.axisModel;\n    var axis = axisModel.axis;\n    var intervals = zrUtil.map(coverInfoList, function (coverInfo) {\n      return [axis.coordToData(coverInfo.range[0], true), axis.coordToData(coverInfo.range[1], true)];\n    }); // If realtime is true, action is not dispatched on drag end, because\n    // the drag end emits the same params with the last drag move event,\n    // and may have some delay when using touch pad.\n\n    if (!axisModel.option.realtime === opt.isEnd || opt.removeOnClick) {\n      // jshint ignore:line\n      this.api.dispatchAction({\n        type: 'axisAreaSelect',\n        parallelAxisId: axisModel.id,\n        intervals: intervals\n      });\n    }\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._brushController.dispose();\n  }\n});\n\nfunction fromAxisAreaSelect(axisModel, ecModel, payload) {\n  return payload && payload.type === 'axisAreaSelect' && ecModel.findComponents({\n    mainType: 'parallelAxis',\n    query: payload\n  })[0] === axisModel;\n}\n\nfunction getCoverInfoList(axisModel) {\n  var axis = axisModel.axis;\n  return zrUtil.map(axisModel.activeIntervals, function (interval) {\n    return {\n      brushType: 'lineX',\n      panelId: 'pl',\n      range: [axis.dataToCoord(interval[0], true), axis.dataToCoord(interval[1], true)]\n    };\n  });\n}\n\nfunction getCoordSysModel(axisModel, ecModel) {\n  return ecModel.getComponent('parallel', axisModel.get('parallelIndex'));\n}\n\nvar _default = AxisView;\nmodule.exports = _default;","var List = require(\"../../data/List\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar completeDimensions = require(\"../../data/helper/completeDimensions\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.parallel',\n  dependencies: ['parallel'],\n  visualColorAccessPath: 'lineStyle.normal.color',\n  getInitialData: function (option, ecModel) {\n    var parallelModel = ecModel.getComponent('parallel', this.get('parallelIndex'));\n    var parallelAxisIndices = parallelModel.parallelAxisIndex;\n    var rawData = option.data;\n    var modelDims = parallelModel.dimensions;\n    var dataDims = generateDataDims(modelDims, rawData);\n    var dataDimsInfo = zrUtil.map(dataDims, function (dim, dimIndex) {\n      var modelDimsIndex = zrUtil.indexOf(modelDims, dim);\n      var axisModel = modelDimsIndex >= 0 && ecModel.getComponent('parallelAxis', parallelAxisIndices[modelDimsIndex]);\n\n      if (axisModel && axisModel.get('type') === 'category') {\n        translateCategoryValue(axisModel, dim, rawData);\n        return {\n          name: dim,\n          type: 'ordinal'\n        };\n      } else if (modelDimsIndex < 0) {\n        return completeDimensions.guessOrdinal(rawData, dimIndex) ? {\n          name: dim,\n          type: 'ordinal'\n        } : dim;\n      } else {\n        return dim;\n      }\n    });\n    var list = new List(dataDimsInfo, this);\n    list.initData(rawData); // Anication is forbiden in progressive data mode.\n\n    if (this.option.progressive) {\n      this.option.animation = false;\n    }\n\n    return list;\n  },\n\n  /**\n   * User can get data raw indices on 'axisAreaSelected' event received.\n   *\n   * @public\n   * @param {string} activeState 'active' or 'inactive' or 'normal'\n   * @return {Array.<number>} Raw indices\n   */\n  getRawIndicesByActiveState: function (activeState) {\n    var coordSys = this.coordinateSystem;\n    var data = this.getData();\n    var indices = [];\n    coordSys.eachActiveState(data, function (theActiveState, dataIndex) {\n      if (activeState === theActiveState) {\n        indices.push(data.getRawIndex(dataIndex));\n      }\n    });\n    return indices;\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'parallel',\n    parallelIndex: 0,\n    label: {\n      normal: {\n        show: false\n      },\n      emphasis: {\n        show: false\n      }\n    },\n    inactiveOpacity: 0.05,\n    activeOpacity: 1,\n    lineStyle: {\n      normal: {\n        width: 1,\n        opacity: 0.45,\n        type: 'solid'\n      }\n    },\n    progressive: false,\n    // 100\n    smooth: false,\n    animationEasing: 'linear'\n  }\n});\n\nfunction translateCategoryValue(axisModel, dim, rawData) {\n  var axisData = axisModel.get('data');\n  var numberDim = convertDimNameToNumber(dim);\n\n  if (axisData && axisData.length) {\n    zrUtil.each(rawData, function (dataItem) {\n      if (!dataItem) {\n        return;\n      } // FIXME\n      // time consuming, should use hash?\n\n\n      var index = zrUtil.indexOf(axisData, dataItem[numberDim]);\n      dataItem[numberDim] = index >= 0 ? index : NaN;\n    });\n  } // FIXME\n  // 如果没有设置axis data, 应自动算出，或者提示。\n\n}\n\nfunction convertDimNameToNumber(dimName) {\n  return +dimName.replace('dim', '');\n}\n\nfunction generateDataDims(modelDims, rawData) {\n  // parallelModel.dimension should not be regarded as data\n  // dimensions. Consider dimensions = ['dim4', 'dim2', 'dim6'];\n  // We detect max dim by parallelModel.dimensions and fist\n  // item in rawData arbitrarily.\n  var maxDimNum = 0;\n  zrUtil.each(modelDims, function (dimName) {\n    var numberDim = convertDimNameToNumber(dimName);\n    numberDim > maxDimNum && (maxDimNum = numberDim);\n  });\n  var firstItem = rawData[0];\n\n  if (firstItem && firstItem.length - 1 > maxDimNum) {\n    maxDimNum = firstItem.length - 1;\n  }\n\n  var dataDims = [];\n\n  for (var i = 0; i <= maxDimNum; i++) {\n    dataDims.push('dim' + i);\n  }\n\n  return dataDims;\n}\n\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar SMOOTH = 0.3;\nvar ParallelView = ChartView.extend({\n  type: 'parallel',\n  init: function () {\n    /**\n     * @type {module:zrender/container/Group}\n     * @private\n     */\n    this._dataGroup = new graphic.Group();\n    this.group.add(this._dataGroup);\n    /**\n     * @type {module:echarts/data/List}\n     */\n\n    this._data;\n  },\n\n  /**\n   * @override\n   */\n  render: function (seriesModel, ecModel, api, payload) {\n    this._renderForNormal(seriesModel, payload); // this[\n    //     seriesModel.option.progressive\n    //         ? '_renderForProgressive'\n    //         : '_renderForNormal'\n    // ](seriesModel);\n\n  },\n  dispose: function () {},\n\n  /**\n   * @private\n   */\n  _renderForNormal: function (seriesModel, payload) {\n    var dataGroup = this._dataGroup;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coordSys = seriesModel.coordinateSystem;\n    var dimensions = coordSys.dimensions;\n    var option = seriesModel.option;\n    var smooth = option.smooth ? SMOOTH : null; // Consider switch between progressive and not.\n    // oldData && oldData.__plProgressive && dataGroup.removeAll();\n\n    data.diff(oldData).add(add).update(update).remove(remove).execute(); // Update style\n\n    updateElCommon(data, smooth); // First create\n\n    if (!this._data) {\n      var clipPath = createGridClipShape(coordSys, seriesModel, function () {\n        // Callback will be invoked immediately if there is no animation\n        setTimeout(function () {\n          dataGroup.removeClipPath();\n        });\n      });\n      dataGroup.setClipPath(clipPath);\n    }\n\n    this._data = data;\n\n    function add(newDataIndex) {\n      addEl(data, dataGroup, newDataIndex, dimensions, coordSys, null, smooth);\n    }\n\n    function update(newDataIndex, oldDataIndex) {\n      var line = oldData.getItemGraphicEl(oldDataIndex);\n      var points = createLinePoints(data, newDataIndex, dimensions, coordSys);\n      data.setItemGraphicEl(newDataIndex, line);\n      var animationModel = payload && payload.animation === false ? null : seriesModel;\n      graphic.updateProps(line, {\n        shape: {\n          points: points\n        }\n      }, animationModel, newDataIndex);\n    }\n\n    function remove(oldDataIndex) {\n      var line = oldData.getItemGraphicEl(oldDataIndex);\n      dataGroup.remove(line);\n    }\n  },\n\n  /**\n   * @private\n   */\n  // _renderForProgressive: function (seriesModel) {\n  //     var dataGroup = this._dataGroup;\n  //     var data = seriesModel.getData();\n  //     var oldData = this._data;\n  //     var coordSys = seriesModel.coordinateSystem;\n  //     var dimensions = coordSys.dimensions;\n  //     var option = seriesModel.option;\n  //     var progressive = option.progressive;\n  //     var smooth = option.smooth ? SMOOTH : null;\n  //     // In progressive animation is disabled, so use simple data diff,\n  //     // which effects performance less.\n  //     // (Typically performance for data with length 7000+ like:\n  //     // simpleDiff: 60ms, addEl: 184ms,\n  //     // in RMBP 2.4GHz intel i7, OSX 10.9 chrome 50.0.2661.102 (64-bit))\n  //     if (simpleDiff(oldData, data, dimensions)) {\n  //         dataGroup.removeAll();\n  //         data.each(function (dataIndex) {\n  //             addEl(data, dataGroup, dataIndex, dimensions, coordSys);\n  //         });\n  //     }\n  //     updateElCommon(data, progressive, smooth);\n  //     // Consider switch between progressive and not.\n  //     data.__plProgressive = true;\n  //     this._data = data;\n  // },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._dataGroup && this._dataGroup.removeAll();\n    this._data = null;\n  }\n});\n\nfunction createGridClipShape(coordSys, seriesModel, cb) {\n  var parallelModel = coordSys.model;\n  var rect = coordSys.getRect();\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    }\n  });\n  var dim = parallelModel.get('layout') === 'horizontal' ? 'width' : 'height';\n  rectEl.setShape(dim, 0);\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width,\n      height: rect.height\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nfunction createLinePoints(data, dataIndex, dimensions, coordSys) {\n  var points = [];\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimName = dimensions[i];\n    var value = data.get(dimName, dataIndex);\n\n    if (!isEmptyValue(value, coordSys.getAxis(dimName).type)) {\n      points.push(coordSys.dataToPoint(value, dimName));\n    }\n  }\n\n  return points;\n}\n\nfunction addEl(data, dataGroup, dataIndex, dimensions, coordSys) {\n  var points = createLinePoints(data, dataIndex, dimensions, coordSys);\n  var line = new graphic.Polyline({\n    shape: {\n      points: points\n    },\n    silent: true,\n    z2: 10\n  });\n  dataGroup.add(line);\n  data.setItemGraphicEl(dataIndex, line);\n}\n\nfunction updateElCommon(data, smooth) {\n  var seriesStyleModel = data.hostModel.getModel('lineStyle.normal');\n  var lineStyle = seriesStyleModel.getLineStyle();\n  data.eachItemGraphicEl(function (line, dataIndex) {\n    if (data.hasItemOption) {\n      var itemModel = data.getItemModel(dataIndex);\n      var lineStyleModel = itemModel.getModel('lineStyle.normal', seriesStyleModel);\n      lineStyle = lineStyleModel.getLineStyle(['color', 'stroke']);\n    }\n\n    line.useStyle(zrUtil.extend(lineStyle, {\n      fill: null,\n      // lineStyle.color have been set to itemVisual in module:echarts/visual/seriesColor.\n      stroke: data.getItemVisual(dataIndex, 'color'),\n      // lineStyle.opacity have been set to itemVisual in parallelVisual.\n      opacity: data.getItemVisual(dataIndex, 'opacity')\n    }));\n    line.shape.smooth = smooth;\n  });\n} // function simpleDiff(oldData, newData, dimensions) {\n//     var oldLen;\n//     if (!oldData\n//         || !oldData.__plProgressive\n//         || (oldLen = oldData.count()) !== newData.count()\n//     ) {\n//         return true;\n//     }\n//     var dimLen = dimensions.length;\n//     for (var i = 0; i < oldLen; i++) {\n//         for (var j = 0; j < dimLen; j++) {\n//             if (oldData.get(dimensions[j], i) !== newData.get(dimensions[j], i)) {\n//                 return true;\n//             }\n//         }\n//     }\n//     return false;\n// }\n// FIXME\n// 公用方法?\n\n\nfunction isEmptyValue(val, axisType) {\n  return axisType === 'category' ? val == null : val == null || isNaN(val); // axisType === 'value'\n}\n\nvar _default = ParallelView;\nmodule.exports = _default;","var opacityAccessPath = ['lineStyle', 'normal', 'opacity'];\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('parallel', function (seriesModel) {\n    var itemStyleModel = seriesModel.getModel('itemStyle.normal');\n    var lineStyleModel = seriesModel.getModel('lineStyle.normal');\n    var globalColors = ecModel.get('color');\n    var color = lineStyleModel.get('color') || itemStyleModel.get('color') || globalColors[seriesModel.seriesIndex % globalColors.length];\n    var inactiveOpacity = seriesModel.get('inactiveOpacity');\n    var activeOpacity = seriesModel.get('activeOpacity');\n    var lineStyle = seriesModel.getModel('lineStyle.normal').getLineStyle();\n    var coordSys = seriesModel.coordinateSystem;\n    var data = seriesModel.getData();\n    var opacityMap = {\n      normal: lineStyle.opacity,\n      active: activeOpacity,\n      inactive: inactiveOpacity\n    };\n    coordSys.eachActiveState(data, function (activeState, dataIndex) {\n      var itemModel = data.getItemModel(dataIndex);\n      var opacity = opacityMap[activeState];\n\n      if (activeState === 'normal') {\n        var itemOpacity = itemModel.get(opacityAccessPath, true);\n        itemOpacity != null && (opacity = itemOpacity);\n      }\n\n      data.setItemVisual(dataIndex, 'opacity', opacity);\n    });\n    data.setVisual('color', color);\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./sankey/SankeySeries\");\n\nrequire(\"./sankey/SankeyView\");\n\nvar sankeyLayout = require(\"./sankey/sankeyLayout\");\n\nvar sankeyVisual = require(\"./sankey/sankeyVisual\");\n\necharts.registerLayout(sankeyLayout);\necharts.registerVisual(sankeyVisual);","var SeriesModel = require(\"../../model/Series\");\n\nvar createGraphFromNodeEdge = require(\"../helper/createGraphFromNodeEdge\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\n/**\n * @file Get initial data and define sankey view's series model\n * @author Deqing Li(annong035@gmail.com)\n */\nvar SankeySeries = SeriesModel.extend({\n  type: 'series.sankey',\n  layoutInfo: null,\n\n  /**\n   * Init a graph data structure from data in option series\n   *\n   * @param  {Object} option  the object used to config echarts view\n   * @return {module:echarts/data/List} storage initial data\n   */\n  getInitialData: function (option) {\n    var links = option.edges || option.links;\n    var nodes = option.data || option.nodes;\n\n    if (nodes && links) {\n      var graph = createGraphFromNodeEdge(nodes, links, this, true);\n      return graph.data;\n    }\n  },\n\n  /**\n   * Return the graphic data structure\n   *\n   * @return {module:echarts/data/Graph} graphic data structure\n   */\n  getGraph: function () {\n    return this.getData().graph;\n  },\n\n  /**\n   * Get edge data of graphic data structure\n   *\n   * @return {module:echarts/data/List} data structure of list\n   */\n  getEdgeData: function () {\n    return this.getGraph().edgeData;\n  },\n\n  /**\n   * @override\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    // dataType === 'node' or empty do not show tooltip by default\n    if (dataType === 'edge') {\n      var params = this.getDataParams(dataIndex, dataType);\n      var rawDataOpt = params.data;\n      var html = rawDataOpt.source + ' -- ' + rawDataOpt.target;\n\n      if (params.value) {\n        html += ' : ' + params.value;\n      }\n\n      return encodeHTML(html);\n    }\n\n    return SankeySeries.superCall(this, 'formatTooltip', dataIndex, multipleSeries);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'view',\n    layout: null,\n    // the position of the whole view\n    left: '5%',\n    top: '5%',\n    right: '20%',\n    bottom: '5%',\n    // the dx of the node\n    nodeWidth: 20,\n    // the vertical distance between two nodes\n    nodeGap: 8,\n    // the number of iterations to change the position of the node\n    layoutIterations: 32,\n    label: {\n      normal: {\n        show: true,\n        position: 'right',\n        color: '#000',\n        fontSize: 12\n      },\n      emphasis: {\n        show: true\n      }\n    },\n    itemStyle: {\n      normal: {\n        borderWidth: 1,\n        borderColor: '#333'\n      }\n    },\n    lineStyle: {\n      normal: {\n        color: '#314656',\n        opacity: 0.2,\n        curveness: 0.5\n      },\n      emphasis: {\n        opacity: 0.6\n      }\n    },\n    animationEasing: 'linear',\n    animationDuration: 1000\n  }\n});\nvar _default = SankeySeries;\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar echarts = require(\"../../echarts\");\n\n/**\n * @file  The file used to draw sankey view\n * @author  Deqing Li(annong035@gmail.com)\n */\nvar SankeyShape = graphic.extendShape({\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    cpx2: 0,\n    cpy2: 0,\n    extent: 0\n  },\n  buildPath: function (ctx, shape) {\n    var halfExtent = shape.extent / 2;\n    ctx.moveTo(shape.x1, shape.y1 - halfExtent);\n    ctx.bezierCurveTo(shape.cpx1, shape.cpy1 - halfExtent, shape.cpx2, shape.cpy2 - halfExtent, shape.x2, shape.y2 - halfExtent);\n    ctx.lineTo(shape.x2, shape.y2 + halfExtent);\n    ctx.bezierCurveTo(shape.cpx2, shape.cpy2 + halfExtent, shape.cpx1, shape.cpy1 + halfExtent, shape.x1, shape.y1 + halfExtent);\n    ctx.closePath();\n  }\n});\n\nvar _default = echarts.extendChartView({\n  type: 'sankey',\n\n  /**\n   * @private\n   * @type {module:echarts/chart/sankey/SankeySeries}\n   */\n  _model: null,\n  render: function (seriesModel, ecModel, api) {\n    var graph = seriesModel.getGraph();\n    var group = this.group;\n    var layoutInfo = seriesModel.layoutInfo;\n    var nodeData = seriesModel.getData();\n    var edgeData = seriesModel.getData('edge');\n    this._model = seriesModel;\n    group.removeAll();\n    group.attr('position', [layoutInfo.x, layoutInfo.y]); // generate a bezire Curve for each edge\n\n    graph.eachEdge(function (edge) {\n      var curve = new SankeyShape();\n      curve.dataIndex = edge.dataIndex;\n      curve.seriesIndex = seriesModel.seriesIndex;\n      curve.dataType = 'edge';\n      var lineStyleModel = edge.getModel('lineStyle.normal');\n      var curvature = lineStyleModel.get('curveness');\n      var n1Layout = edge.node1.getLayout();\n      var n2Layout = edge.node2.getLayout();\n      var edgeLayout = edge.getLayout();\n      curve.shape.extent = Math.max(1, edgeLayout.dy);\n      var x1 = n1Layout.x + n1Layout.dx;\n      var y1 = n1Layout.y + edgeLayout.sy + edgeLayout.dy / 2;\n      var x2 = n2Layout.x;\n      var y2 = n2Layout.y + edgeLayout.ty + edgeLayout.dy / 2;\n      var cpx1 = x1 * (1 - curvature) + x2 * curvature;\n      var cpy1 = y1;\n      var cpx2 = x1 * curvature + x2 * (1 - curvature);\n      var cpy2 = y2;\n      curve.setShape({\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        cpx1: cpx1,\n        cpy1: cpy1,\n        cpx2: cpx2,\n        cpy2: cpy2\n      });\n      curve.setStyle(lineStyleModel.getItemStyle()); // Special color, use source node color or target node color\n\n      switch (curve.style.fill) {\n        case 'source':\n          curve.style.fill = edge.node1.getVisual('color');\n          break;\n\n        case 'target':\n          curve.style.fill = edge.node2.getVisual('color');\n          break;\n      }\n\n      graphic.setHoverStyle(curve, edge.getModel('lineStyle.emphasis').getItemStyle());\n      group.add(curve);\n      edgeData.setItemGraphicEl(edge.dataIndex, curve);\n    }); // generate a rect  for each node\n\n    graph.eachNode(function (node) {\n      var layout = node.getLayout();\n      var itemModel = node.getModel();\n      var labelModel = itemModel.getModel('label.normal');\n      var labelHoverModel = itemModel.getModel('label.emphasis');\n      var rect = new graphic.Rect({\n        shape: {\n          x: layout.x,\n          y: layout.y,\n          width: node.getLayout().dx,\n          height: node.getLayout().dy\n        },\n        style: itemModel.getModel('itemStyle.normal').getItemStyle()\n      });\n      var hoverStyle = node.getModel('itemStyle.emphasis').getItemStyle();\n      graphic.setLabelStyle(rect.style, hoverStyle, labelModel, labelHoverModel, {\n        labelFetcher: seriesModel,\n        labelDataIndex: node.dataIndex,\n        defaultText: node.id,\n        isRectText: true\n      });\n      rect.setStyle('fill', node.getVisual('color'));\n      graphic.setHoverStyle(rect, hoverStyle);\n      group.add(rect);\n      nodeData.setItemGraphicEl(node.dataIndex, rect);\n      rect.dataType = 'node';\n    });\n\n    if (!this._data && seriesModel.get('animation')) {\n      group.setClipPath(createGridClipShape(group.getBoundingRect(), seriesModel, function () {\n        group.removeClipPath();\n      }));\n    }\n\n    this._data = seriesModel.getData();\n  },\n  dispose: function () {}\n}); // add animation to the view\n\n\nfunction createGridClipShape(rect, seriesModel, cb) {\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x - 10,\n      y: rect.y - 10,\n      width: 0,\n      height: rect.height + 20\n    }\n  });\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width + 20,\n      height: rect.height + 20\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nmodule.exports = _default;","var layout = require(\"../../util/layout\");\n\nvar nest = require(\"../../util/array/nest\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @file The layout algorithm of sankey view\n * @author  Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel, api, payload) {\n  ecModel.eachSeriesByType('sankey', function (seriesModel) {\n    var nodeWidth = seriesModel.get('nodeWidth');\n    var nodeGap = seriesModel.get('nodeGap');\n    var layoutInfo = getViewRect(seriesModel, api);\n    seriesModel.layoutInfo = layoutInfo;\n    var width = layoutInfo.width;\n    var height = layoutInfo.height;\n    var graph = seriesModel.getGraph();\n    var nodes = graph.nodes;\n    var edges = graph.edges;\n    computeNodeValues(nodes);\n    var filteredNodes = zrUtil.filter(nodes, function (node) {\n      return node.getLayout().value === 0;\n    });\n    var iterations = filteredNodes.length !== 0 ? 0 : seriesModel.get('layoutIterations');\n    layoutSankey(nodes, edges, nodeWidth, nodeGap, width, height, iterations);\n  });\n}\n/**\n * Get the layout position of the whole view\n *\n * @param {module:echarts/model/Series} seriesModel  the model object of sankey series\n * @param {module:echarts/ExtensionAPI} api  provide the API list that the developer can call\n * @return {module:zrender/core/BoundingRect}  size of rect to draw the sankey view\n */\n\n\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction layoutSankey(nodes, edges, nodeWidth, nodeGap, width, height, iterations) {\n  computeNodeBreadths(nodes, nodeWidth, width);\n  computeNodeDepths(nodes, edges, height, nodeGap, iterations);\n  computeEdgeDepths(nodes);\n}\n/**\n * Compute the value of each node by summing the associated edge's value\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n */\n\n\nfunction computeNodeValues(nodes) {\n  zrUtil.each(nodes, function (node) {\n    var value1 = sum(node.outEdges, getEdgeValue);\n    var value2 = sum(node.inEdges, getEdgeValue);\n    var value = Math.max(value1, value2);\n    node.setLayout({\n      value: value\n    }, true);\n  });\n}\n/**\n * Compute the x-position for each node\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param  {number} nodeWidth  the dx of the node\n * @param  {number} width  the whole width of the area to draw the view\n */\n\n\nfunction computeNodeBreadths(nodes, nodeWidth, width) {\n  var remainNodes = nodes;\n  var nextNode = null;\n  var x = 0;\n  var kx = 0;\n\n  while (remainNodes.length) {\n    nextNode = [];\n\n    for (var i = 0, len = remainNodes.length; i < len; i++) {\n      var node = remainNodes[i];\n      node.setLayout({\n        x: x\n      }, true);\n      node.setLayout({\n        dx: nodeWidth\n      }, true);\n\n      for (var j = 0, lenj = node.outEdges.length; j < lenj; j++) {\n        nextNode.push(node.outEdges[j].node2);\n      }\n    }\n\n    remainNodes = nextNode;\n    ++x;\n  }\n\n  moveSinksRight(nodes, x);\n  kx = (width - nodeWidth) / (x - 1);\n  scaleNodeBreadths(nodes, kx);\n}\n/**\n * All the node without outEgdes are assigned maximum x-position and\n *     be aligned in the last column.\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {number} x  value (x-1) use to assign to node without outEdges\n *     as x-position\n */\n\n\nfunction moveSinksRight(nodes, x) {\n  zrUtil.each(nodes, function (node) {\n    if (!node.outEdges.length) {\n      node.setLayout({\n        x: x - 1\n      }, true);\n    }\n  });\n}\n/**\n * Scale node x-position to the width\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {number} kx   multiple used to scale nodes\n */\n\n\nfunction scaleNodeBreadths(nodes, kx) {\n  zrUtil.each(nodes, function (node) {\n    var nodeX = node.getLayout().x * kx;\n    node.setLayout({\n      x: nodeX\n    }, true);\n  });\n}\n/**\n * Using Gauss-Seidel iterations method to compute the node depth(y-position)\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {module:echarts/data/Graph~Edge} edges  edge of sankey view\n * @param {number} height  the whole height of the area to draw the view\n * @param {number} nodeGap  the vertical distance between two nodes\n *     in the same column.\n * @param {number} iterations  the number of iterations for the algorithm\n */\n\n\nfunction computeNodeDepths(nodes, edges, height, nodeGap, iterations) {\n  var nodesByBreadth = nest().key(function (d) {\n    return d.getLayout().x;\n  }).sortKeys(ascending).entries(nodes).map(function (d) {\n    return d.values;\n  });\n  initializeNodeDepth(nodes, nodesByBreadth, edges, height, nodeGap);\n  resolveCollisions(nodesByBreadth, nodeGap, height);\n\n  for (var alpha = 1; iterations > 0; iterations--) {\n    // 0.99 is a experience parameter, ensure that each iterations of\n    // changes as small as possible.\n    alpha *= 0.99;\n    relaxRightToLeft(nodesByBreadth, alpha);\n    resolveCollisions(nodesByBreadth, nodeGap, height);\n    relaxLeftToRight(nodesByBreadth, alpha);\n    resolveCollisions(nodesByBreadth, nodeGap, height);\n  }\n}\n/**\n * Compute the original y-position for each node\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the nodes x-position.\n * @param {module:echarts/data/Graph~Edge} edges  edge of sankey view\n * @param {number} height  the whole height of the area to draw the view\n * @param {number} nodeGap  the vertical distance between two nodes\n */\n\n\nfunction initializeNodeDepth(nodes, nodesByBreadth, edges, height, nodeGap) {\n  var kyArray = [];\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    var n = nodes.length;\n    var sum = 0;\n    zrUtil.each(nodes, function (node) {\n      sum += node.getLayout().value;\n    });\n    var ky = (height - (n - 1) * nodeGap) / sum;\n    kyArray.push(ky);\n  });\n  kyArray.sort(function (a, b) {\n    return a - b;\n  });\n  var ky0 = kyArray[0];\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    zrUtil.each(nodes, function (node, i) {\n      node.setLayout({\n        y: i\n      }, true);\n      var nodeDy = node.getLayout().value * ky0;\n      node.setLayout({\n        dy: nodeDy\n      }, true);\n    });\n  });\n  zrUtil.each(edges, function (edge) {\n    var edgeDy = +edge.getValue() * ky0;\n    edge.setLayout({\n      dy: edgeDy\n    }, true);\n  });\n}\n/**\n * Resolve the collision of initialized depth (y-position)\n *\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the nodes x-position.\n * @param {number} nodeGap  the vertical distance between two nodes\n * @param {number} height  the whole height of the area to draw the view\n */\n\n\nfunction resolveCollisions(nodesByBreadth, nodeGap, height) {\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    var node;\n    var dy;\n    var y0 = 0;\n    var n = nodes.length;\n    var i;\n    nodes.sort(ascendingDepth);\n\n    for (i = 0; i < n; i++) {\n      node = nodes[i];\n      dy = y0 - node.getLayout().y;\n\n      if (dy > 0) {\n        var nodeY = node.getLayout().y + dy;\n        node.setLayout({\n          y: nodeY\n        }, true);\n      }\n\n      y0 = node.getLayout().y + node.getLayout().dy + nodeGap;\n    } // if the bottommost node goes outside the bounds, push it back up\n\n\n    dy = y0 - nodeGap - height;\n\n    if (dy > 0) {\n      var nodeY = node.getLayout().y - dy;\n      node.setLayout({\n        y: nodeY\n      }, true);\n      y0 = node.getLayout().y;\n\n      for (i = n - 2; i >= 0; --i) {\n        node = nodes[i];\n        dy = node.getLayout().y + node.getLayout().dy + nodeGap - y0;\n\n        if (dy > 0) {\n          nodeY = node.getLayout().y - dy;\n          node.setLayout({\n            y: nodeY\n          }, true);\n        }\n\n        y0 = node.getLayout().y;\n      }\n    }\n  });\n}\n/**\n * Change the y-position of the nodes, except most the right side nodes\n *\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the node x-position.\n * @param {number} alpha  parameter used to adjust the nodes y-position\n */\n\n\nfunction relaxRightToLeft(nodesByBreadth, alpha) {\n  zrUtil.each(nodesByBreadth.slice().reverse(), function (nodes) {\n    zrUtil.each(nodes, function (node) {\n      if (node.outEdges.length) {\n        var y = sum(node.outEdges, weightedTarget) / sum(node.outEdges, getEdgeValue);\n        var nodeY = node.getLayout().y + (y - center(node)) * alpha;\n        node.setLayout({\n          y: nodeY\n        }, true);\n      }\n    });\n  });\n}\n\nfunction weightedTarget(edge) {\n  return center(edge.node2) * edge.getValue();\n}\n/**\n * Change the y-position of the nodes, except most the left side nodes\n *\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the node x-position.\n * @param {number} alpha  parameter used to adjust the nodes y-position\n */\n\n\nfunction relaxLeftToRight(nodesByBreadth, alpha) {\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    zrUtil.each(nodes, function (node) {\n      if (node.inEdges.length) {\n        var y = sum(node.inEdges, weightedSource) / sum(node.inEdges, getEdgeValue);\n        var nodeY = node.getLayout().y + (y - center(node)) * alpha;\n        node.setLayout({\n          y: nodeY\n        }, true);\n      }\n    });\n  });\n}\n\nfunction weightedSource(edge) {\n  return center(edge.node1) * edge.getValue();\n}\n/**\n * Compute the depth(y-position) of each edge\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n */\n\n\nfunction computeEdgeDepths(nodes) {\n  zrUtil.each(nodes, function (node) {\n    node.outEdges.sort(ascendingTargetDepth);\n    node.inEdges.sort(ascendingSourceDepth);\n  });\n  zrUtil.each(nodes, function (node) {\n    var sy = 0;\n    var ty = 0;\n    zrUtil.each(node.outEdges, function (edge) {\n      edge.setLayout({\n        sy: sy\n      }, true);\n      sy += edge.getLayout().dy;\n    });\n    zrUtil.each(node.inEdges, function (edge) {\n      edge.setLayout({\n        ty: ty\n      }, true);\n      ty += edge.getLayout().dy;\n    });\n  });\n}\n\nfunction ascendingTargetDepth(a, b) {\n  return a.node2.getLayout().y - b.node2.getLayout().y;\n}\n\nfunction ascendingSourceDepth(a, b) {\n  return a.node1.getLayout().y - b.node1.getLayout().y;\n}\n\nfunction sum(array, f) {\n  var sum = 0;\n  var len = array.length;\n  var i = -1;\n\n  while (++i < len) {\n    var value = +f.call(array, array[i], i);\n\n    if (!isNaN(value)) {\n      sum += value;\n    }\n  }\n\n  return sum;\n}\n\nfunction center(node) {\n  return node.getLayout().y + node.getLayout().dy / 2;\n}\n\nfunction ascendingDepth(a, b) {\n  return a.getLayout().y - b.getLayout().y;\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a === b ? 0 : NaN;\n}\n\nfunction getEdgeValue(edge) {\n  return edge.getValue();\n}\n\nmodule.exports = _default;","var VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @file Visual encoding for sankey view\n * @author  Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel, payload) {\n  ecModel.eachSeriesByType('sankey', function (seriesModel) {\n    var graph = seriesModel.getGraph();\n    var nodes = graph.nodes;\n    nodes.sort(function (a, b) {\n      return a.getLayout().value - b.getLayout().value;\n    });\n    var minValue = nodes[0].getLayout().value;\n    var maxValue = nodes[nodes.length - 1].getLayout().value;\n    zrUtil.each(nodes, function (node) {\n      var mapping = new VisualMapping({\n        type: 'color',\n        mappingMethod: 'linear',\n        dataExtent: [minValue, maxValue],\n        visual: seriesModel.get('color')\n      });\n      var mapValueToColor = mapping.mapValueToVisual(node.getLayout().value);\n      node.setVisual('color', mapValueToColor); // If set itemStyle.normal.color\n\n      var itemModel = node.getModel();\n      var customColor = itemModel.get('itemStyle.normal.color');\n\n      if (customColor != null) {\n        node.setVisual('color', customColor);\n      }\n    });\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./boxplot/BoxplotSeries\");\n\nrequire(\"./boxplot/BoxplotView\");\n\nvar boxplotVisual = require(\"./boxplot/boxplotVisual\");\n\nvar boxplotLayout = require(\"./boxplot/boxplotLayout\");\n\necharts.registerVisual(boxplotVisual);\necharts.registerLayout(boxplotLayout);","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _whiskerBoxCommon = require(\"../helper/whiskerBoxCommon\");\n\nvar seriesModelMixin = _whiskerBoxCommon.seriesModelMixin;\nvar BoxplotSeries = SeriesModel.extend({\n  type: 'series.boxplot',\n  dependencies: ['xAxis', 'yAxis', 'grid'],\n  // TODO\n  // box width represents group size, so dimension should have 'size'.\n\n  /**\n   * @see <https://en.wikipedia.org/wiki/Box_plot>\n   * The meanings of 'min' and 'max' depend on user,\n   * and echarts do not need to know it.\n   * @readOnly\n   */\n  defaultValueDimensions: ['min', 'Q1', 'median', 'Q3', 'max'],\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: null,\n\n  /**\n   * @override\n   */\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    layout: null,\n    // 'horizontal' or 'vertical'\n    boxWidth: [7, 50],\n    // [min, max] can be percent of band width.\n    itemStyle: {\n      normal: {\n        color: '#fff',\n        borderWidth: 1\n      },\n      emphasis: {\n        borderWidth: 2,\n        shadowBlur: 5,\n        shadowOffsetX: 2,\n        shadowOffsetY: 2,\n        shadowColor: 'rgba(0,0,0,0.4)'\n      }\n    },\n    animationEasing: 'elasticOut',\n    animationDuration: 800\n  }\n});\nzrUtil.mixin(BoxplotSeries, seriesModelMixin, true);\nvar _default = BoxplotSeries;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\n/**\n * @module echarts/chart/helper/Symbol\n */\nvar WhiskerPath = Path.extend({\n  type: 'whiskerInBox',\n  shape: {},\n  buildPath: function (ctx, shape) {\n    for (var i in shape) {\n      if (shape.hasOwnProperty(i) && i.indexOf('ends') === 0) {\n        var pts = shape[i];\n        ctx.moveTo(pts[0][0], pts[0][1]);\n        ctx.lineTo(pts[1][0], pts[1][1]);\n      }\n    }\n  }\n});\n/**\n * @constructor\n * @alias {module:echarts/chart/helper/WhiskerBox}\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Function} styleUpdater\n * @param {boolean} isInit\n * @extends {module:zrender/graphic/Group}\n */\n\nfunction WhiskerBox(data, idx, styleUpdater, isInit) {\n  graphic.Group.call(this);\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.bodyIndex;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.whiskerIndex;\n  /**\n   * @type {Function}\n   */\n\n  this.styleUpdater = styleUpdater;\n\n  this._createContent(data, idx, isInit);\n\n  this.updateData(data, idx, isInit);\n  /**\n   * Last series model.\n   * @type {module:echarts/model/Series}\n   */\n\n  this._seriesModel;\n}\n\nvar whiskerBoxProto = WhiskerBox.prototype;\n\nwhiskerBoxProto._createContent = function (data, idx, isInit) {\n  var itemLayout = data.getItemLayout(idx);\n  var constDim = itemLayout.chartLayout === 'horizontal' ? 1 : 0;\n  var count = 0; // Whisker element.\n\n  this.add(new graphic.Polygon({\n    shape: {\n      points: isInit ? transInit(itemLayout.bodyEnds, constDim, itemLayout) : itemLayout.bodyEnds\n    },\n    style: {\n      strokeNoScale: true\n    },\n    z2: 100\n  }));\n  this.bodyIndex = count++; // Box element.\n\n  var whiskerEnds = zrUtil.map(itemLayout.whiskerEnds, function (ends) {\n    return isInit ? transInit(ends, constDim, itemLayout) : ends;\n  });\n  this.add(new WhiskerPath({\n    shape: makeWhiskerEndsShape(whiskerEnds),\n    style: {\n      strokeNoScale: true\n    },\n    z2: 100\n  }));\n  this.whiskerIndex = count++;\n};\n\nfunction transInit(points, dim, itemLayout) {\n  return zrUtil.map(points, function (point) {\n    point = point.slice();\n    point[dim] = itemLayout.initBaseline;\n    return point;\n  });\n}\n\nfunction makeWhiskerEndsShape(whiskerEnds) {\n  // zr animation only support 2-dim array.\n  var shape = {};\n  zrUtil.each(whiskerEnds, function (ends, i) {\n    shape['ends' + i] = ends;\n  });\n  return shape;\n}\n/**\n * Update symbol properties\n * @param  {module:echarts/data/List} data\n * @param  {number} idx\n */\n\n\nwhiskerBoxProto.updateData = function (data, idx, isInit) {\n  var seriesModel = this._seriesModel = data.hostModel;\n  var itemLayout = data.getItemLayout(idx);\n  var updateMethod = graphic[isInit ? 'initProps' : 'updateProps']; // this.childAt(this.bodyIndex).stopAnimation(true);\n  // this.childAt(this.whiskerIndex).stopAnimation(true);\n\n  updateMethod(this.childAt(this.bodyIndex), {\n    shape: {\n      points: itemLayout.bodyEnds\n    }\n  }, seriesModel, idx);\n  updateMethod(this.childAt(this.whiskerIndex), {\n    shape: makeWhiskerEndsShape(itemLayout.whiskerEnds)\n  }, seriesModel, idx);\n  this.styleUpdater.call(null, this, data, idx);\n};\n\nzrUtil.inherits(WhiskerBox, graphic.Group);\n/**\n * @constructor\n * @alias module:echarts/chart/helper/WhiskerBoxDraw\n */\n\nfunction WhiskerBoxDraw(styleUpdater) {\n  this.group = new graphic.Group();\n  this.styleUpdater = styleUpdater;\n}\n\nvar whiskerBoxDrawProto = WhiskerBoxDraw.prototype;\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n */\n\nwhiskerBoxDrawProto.updateData = function (data) {\n  var group = this.group;\n  var oldData = this._data;\n  var styleUpdater = this.styleUpdater;\n  data.diff(oldData).add(function (newIdx) {\n    if (data.hasValue(newIdx)) {\n      var symbolEl = new WhiskerBox(data, newIdx, styleUpdater, true);\n      data.setItemGraphicEl(newIdx, symbolEl);\n      group.add(symbolEl);\n    }\n  }).update(function (newIdx, oldIdx) {\n    var symbolEl = oldData.getItemGraphicEl(oldIdx); // Empty data\n\n    if (!data.hasValue(newIdx)) {\n      group.remove(symbolEl);\n      return;\n    }\n\n    if (!symbolEl) {\n      symbolEl = new WhiskerBox(data, newIdx, styleUpdater);\n    } else {\n      symbolEl.updateData(data, newIdx);\n    } // Add back\n\n\n    group.add(symbolEl);\n    data.setItemGraphicEl(newIdx, symbolEl);\n  }).remove(function (oldIdx) {\n    var el = oldData.getItemGraphicEl(oldIdx);\n    el && group.remove(el);\n  }).execute();\n  this._data = data;\n};\n/**\n * Remove symbols.\n * @param {module:echarts/data/List} data\n */\n\n\nwhiskerBoxDrawProto.remove = function () {\n  var group = this.group;\n  var data = this._data;\n  this._data = null;\n  data && data.eachItemGraphicEl(function (el) {\n    el && group.remove(el);\n  });\n};\n\nvar _default = WhiskerBoxDraw;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _whiskerBoxCommon = require(\"../helper/whiskerBoxCommon\");\n\nvar viewMixin = _whiskerBoxCommon.viewMixin;\nvar BoxplotView = ChartView.extend({\n  type: 'boxplot',\n  getStyleUpdater: function () {\n    return updateStyle;\n  },\n  dispose: zrUtil.noop\n});\nzrUtil.mixin(BoxplotView, viewMixin, true); // Update common properties\n\nvar normalStyleAccessPath = ['itemStyle', 'normal'];\nvar emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\n\nfunction updateStyle(itemGroup, data, idx) {\n  var itemModel = data.getItemModel(idx);\n  var normalItemStyleModel = itemModel.getModel(normalStyleAccessPath);\n  var borderColor = data.getItemVisual(idx, 'color'); // Exclude borderColor.\n\n  var itemStyle = normalItemStyleModel.getItemStyle(['borderColor']);\n  var whiskerEl = itemGroup.childAt(itemGroup.whiskerIndex);\n  whiskerEl.style.set(itemStyle);\n  whiskerEl.style.stroke = borderColor;\n  whiskerEl.dirty();\n  var bodyEl = itemGroup.childAt(itemGroup.bodyIndex);\n  bodyEl.style.set(itemStyle);\n  bodyEl.style.stroke = borderColor;\n  bodyEl.dirty();\n  var hoverStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n  graphic.setHoverStyle(itemGroup, hoverStyle);\n}\n\nvar _default = BoxplotView;\nmodule.exports = _default;","var borderColorQuery = ['itemStyle', 'normal', 'borderColor'];\n\nfunction _default(ecModel, api) {\n  var globalColors = ecModel.get('color');\n  ecModel.eachRawSeriesByType('boxplot', function (seriesModel) {\n    var defaulColor = globalColors[seriesModel.seriesIndex % globalColors.length];\n    var data = seriesModel.getData();\n    data.setVisual({\n      legendSymbol: 'roundRect',\n      // Use name 'color' but not 'borderColor' for legend usage and\n      // visual coding from other component like dataRange.\n      color: seriesModel.get(borderColorQuery) || defaulColor\n    }); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        data.setItemVisual(idx, {\n          color: itemModel.get(borderColorQuery, true)\n        });\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar each = zrUtil.each;\n\nfunction _default(ecModel) {\n  var groupResult = groupSeriesByAxis(ecModel);\n  each(groupResult, function (groupItem) {\n    var seriesModels = groupItem.seriesModels;\n\n    if (!seriesModels.length) {\n      return;\n    }\n\n    calculateBase(groupItem);\n    each(seriesModels, function (seriesModel, idx) {\n      layoutSingleSeries(seriesModel, groupItem.boxOffsetList[idx], groupItem.boxWidthList[idx]);\n    });\n  });\n}\n/**\n * Group series by axis.\n */\n\n\nfunction groupSeriesByAxis(ecModel) {\n  var result = [];\n  var axisList = [];\n  ecModel.eachSeriesByType('boxplot', function (seriesModel) {\n    var baseAxis = seriesModel.getBaseAxis();\n    var idx = zrUtil.indexOf(axisList, baseAxis);\n\n    if (idx < 0) {\n      idx = axisList.length;\n      axisList[idx] = baseAxis;\n      result[idx] = {\n        axis: baseAxis,\n        seriesModels: []\n      };\n    }\n\n    result[idx].seriesModels.push(seriesModel);\n  });\n  return result;\n}\n/**\n * Calculate offset and box width for each series.\n */\n\n\nfunction calculateBase(groupItem) {\n  var extent;\n  var baseAxis = groupItem.axis;\n  var seriesModels = groupItem.seriesModels;\n  var seriesCount = seriesModels.length;\n  var boxWidthList = groupItem.boxWidthList = [];\n  var boxOffsetList = groupItem.boxOffsetList = [];\n  var boundList = [];\n  var bandWidth;\n\n  if (baseAxis.type === 'category') {\n    bandWidth = baseAxis.getBandWidth();\n  } else {\n    var maxDataCount = 0;\n    each(seriesModels, function (seriesModel) {\n      maxDataCount = Math.max(maxDataCount, seriesModel.getData().count());\n    });\n    extent = baseAxis.getExtent(), Math.abs(extent[1] - extent[0]) / maxDataCount;\n  }\n\n  each(seriesModels, function (seriesModel) {\n    var boxWidthBound = seriesModel.get('boxWidth');\n\n    if (!zrUtil.isArray(boxWidthBound)) {\n      boxWidthBound = [boxWidthBound, boxWidthBound];\n    }\n\n    boundList.push([parsePercent(boxWidthBound[0], bandWidth) || 0, parsePercent(boxWidthBound[1], bandWidth) || 0]);\n  });\n  var availableWidth = bandWidth * 0.8 - 2;\n  var boxGap = availableWidth / seriesCount * 0.3;\n  var boxWidth = (availableWidth - boxGap * (seriesCount - 1)) / seriesCount;\n  var base = boxWidth / 2 - availableWidth / 2;\n  each(seriesModels, function (seriesModel, idx) {\n    boxOffsetList.push(base);\n    base += boxGap + boxWidth;\n    boxWidthList.push(Math.min(Math.max(boxWidth, boundList[idx][0]), boundList[idx][1]));\n  });\n}\n/**\n * Calculate points location for each series.\n */\n\n\nfunction layoutSingleSeries(seriesModel, offset, boxWidth) {\n  var coordSys = seriesModel.coordinateSystem;\n  var data = seriesModel.getData();\n  var halfWidth = boxWidth / 2;\n  var chartLayout = seriesModel.get('layout');\n  var variableDim = chartLayout === 'horizontal' ? 0 : 1;\n  var constDim = 1 - variableDim;\n  var coordDims = ['x', 'y'];\n  var vDims = [];\n  var cDim;\n  zrUtil.each(data.dimensions, function (dimName) {\n    var dimInfo = data.getDimensionInfo(dimName);\n    var coordDim = dimInfo.coordDim;\n\n    if (coordDim === coordDims[constDim]) {\n      vDims.push(dimName);\n    } else if (coordDim === coordDims[variableDim]) {\n      cDim = dimName;\n    }\n  });\n\n  if (cDim == null || vDims.length < 5) {\n    return;\n  }\n\n  data.each([cDim].concat(vDims), function () {\n    var args = arguments;\n    var axisDimVal = args[0];\n    var idx = args[vDims.length + 1];\n    var median = getPoint(args[3]);\n    var end1 = getPoint(args[1]);\n    var end5 = getPoint(args[5]);\n    var whiskerEnds = [[end1, getPoint(args[2])], [end5, getPoint(args[4])]];\n    layEndLine(end1);\n    layEndLine(end5);\n    layEndLine(median);\n    var bodyEnds = [];\n    addBodyEnd(whiskerEnds[0][1], 0);\n    addBodyEnd(whiskerEnds[1][1], 1);\n    data.setItemLayout(idx, {\n      chartLayout: chartLayout,\n      initBaseline: median[constDim],\n      median: median,\n      bodyEnds: bodyEnds,\n      whiskerEnds: whiskerEnds\n    });\n\n    function getPoint(val) {\n      var p = [];\n      p[variableDim] = axisDimVal;\n      p[constDim] = val;\n      var point;\n\n      if (isNaN(axisDimVal) || isNaN(val)) {\n        point = [NaN, NaN];\n      } else {\n        point = coordSys.dataToPoint(p);\n        point[variableDim] += offset;\n      }\n\n      return point;\n    }\n\n    function addBodyEnd(point, start) {\n      var point1 = point.slice();\n      var point2 = point.slice();\n      point1[variableDim] += halfWidth;\n      point2[variableDim] -= halfWidth;\n      start ? bodyEnds.push(point1, point2) : bodyEnds.push(point2, point1);\n    }\n\n    function layEndLine(endCenter) {\n      var line = [endCenter.slice(), endCenter.slice()];\n      line[0][variableDim] -= halfWidth;\n      line[1][variableDim] += halfWidth;\n      whiskerEnds.push(line);\n    }\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./candlestick/CandlestickSeries\");\n\nrequire(\"./candlestick/CandlestickView\");\n\nvar preprocessor = require(\"./candlestick/preprocessor\");\n\nvar candlestickVisual = require(\"./candlestick/candlestickVisual\");\n\nvar candlestickLayout = require(\"./candlestick/candlestickLayout\");\n\necharts.registerPreprocessor(preprocessor);\necharts.registerVisual(candlestickVisual);\necharts.registerLayout(candlestickLayout);","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _whiskerBoxCommon = require(\"../helper/whiskerBoxCommon\");\n\nvar seriesModelMixin = _whiskerBoxCommon.seriesModelMixin;\nvar CandlestickSeries = SeriesModel.extend({\n  type: 'series.candlestick',\n  dependencies: ['xAxis', 'yAxis', 'grid'],\n\n  /**\n   * @readOnly\n   */\n  defaultValueDimensions: ['open', 'close', 'lowest', 'highest'],\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: null,\n\n  /**\n   * @override\n   */\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    layout: null,\n    // 'horizontal' or 'vertical'\n    itemStyle: {\n      normal: {\n        color: '#c23531',\n        // 阳线 positive\n        color0: '#314656',\n        // 阴线 negative     '#c23531', '#314656'\n        borderWidth: 1,\n        // FIXME\n        // ec2中使用的是lineStyle.color 和 lineStyle.color0\n        borderColor: '#c23531',\n        borderColor0: '#314656'\n      },\n      emphasis: {\n        borderWidth: 2\n      }\n    },\n    barMaxWidth: null,\n    barMinWidth: null,\n    barWidth: null,\n    animationUpdate: false,\n    animationEasing: 'linear',\n    animationDuration: 300\n  },\n\n  /**\n   * Get dimension for shadow in dataZoom\n   * @return {string} dimension name\n   */\n  getShadowDim: function () {\n    return 'open';\n  },\n  brushSelector: function (dataIndex, data, selectors) {\n    var itemLayout = data.getItemLayout(dataIndex);\n    return selectors.rect(itemLayout.brushRect);\n  }\n});\nzrUtil.mixin(CandlestickSeries, seriesModelMixin, true);\nvar _default = CandlestickSeries;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _whiskerBoxCommon = require(\"../helper/whiskerBoxCommon\");\n\nvar viewMixin = _whiskerBoxCommon.viewMixin;\nvar CandlestickView = ChartView.extend({\n  type: 'candlestick',\n  getStyleUpdater: function () {\n    return updateStyle;\n  },\n  dispose: zrUtil.noop\n});\nzrUtil.mixin(CandlestickView, viewMixin, true); // Update common properties\n\nvar normalStyleAccessPath = ['itemStyle', 'normal'];\nvar emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\n\nfunction updateStyle(itemGroup, data, idx) {\n  var itemModel = data.getItemModel(idx);\n  var normalItemStyleModel = itemModel.getModel(normalStyleAccessPath);\n  var color = data.getItemVisual(idx, 'color');\n  var borderColor = data.getItemVisual(idx, 'borderColor') || color; // Color must be excluded.\n  // Because symbol provide setColor individually to set fill and stroke\n\n  var itemStyle = normalItemStyleModel.getItemStyle(['color', 'color0', 'borderColor', 'borderColor0']);\n  var whiskerEl = itemGroup.childAt(itemGroup.whiskerIndex);\n  whiskerEl.useStyle(itemStyle);\n  whiskerEl.style.stroke = borderColor;\n  var bodyEl = itemGroup.childAt(itemGroup.bodyIndex);\n  bodyEl.useStyle(itemStyle);\n  bodyEl.style.fill = color;\n  bodyEl.style.stroke = borderColor;\n  var hoverStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n  graphic.setHoverStyle(itemGroup, hoverStyle);\n}\n\nvar _default = CandlestickView;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction _default(option) {\n  if (!option || !zrUtil.isArray(option.series)) {\n    return;\n  } // Translate 'k' to 'candlestick'.\n\n\n  zrUtil.each(option.series, function (seriesItem) {\n    if (zrUtil.isObject(seriesItem) && seriesItem.type === 'k') {\n      seriesItem.type = 'candlestick';\n    }\n  });\n}\n\nmodule.exports = _default;","var positiveBorderColorQuery = ['itemStyle', 'normal', 'borderColor'];\nvar negativeBorderColorQuery = ['itemStyle', 'normal', 'borderColor0'];\nvar positiveColorQuery = ['itemStyle', 'normal', 'color'];\nvar negativeColorQuery = ['itemStyle', 'normal', 'color0'];\n\nfunction _default(ecModel, api) {\n  ecModel.eachRawSeriesByType('candlestick', function (seriesModel) {\n    var data = seriesModel.getData();\n    data.setVisual({\n      legendSymbol: 'roundRect'\n    }); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        var sign = data.getItemLayout(idx).sign;\n        data.setItemVisual(idx, {\n          color: itemModel.get(sign > 0 ? positiveColorQuery : negativeColorQuery),\n          borderColor: itemModel.get(sign > 0 ? positiveBorderColorQuery : negativeBorderColorQuery)\n        });\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _graphic = require(\"../../util/graphic\");\n\nvar subPixelOptimize = _graphic.subPixelOptimize;\nvar retrieve2 = zrUtil.retrieve2;\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('candlestick', function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var data = seriesModel.getData();\n    var candleWidth = calculateCandleWidth(seriesModel, data);\n    var chartLayout = seriesModel.get('layout');\n    var variableDim = chartLayout === 'horizontal' ? 0 : 1;\n    var constDim = 1 - variableDim;\n    var coordDims = ['x', 'y'];\n    var vDims = [];\n    var cDim;\n    zrUtil.each(data.dimensions, function (dimName) {\n      var dimInfo = data.getDimensionInfo(dimName);\n      var coordDim = dimInfo.coordDim;\n\n      if (coordDim === coordDims[constDim]) {\n        vDims.push(dimName);\n      } else if (coordDim === coordDims[variableDim]) {\n        cDim = dimName;\n      }\n    });\n\n    if (cDim == null || vDims.length < 4) {\n      return;\n    }\n\n    var dataIndex = 0;\n    data.each([cDim].concat(vDims), function () {\n      var args = arguments;\n      var axisDimVal = args[0];\n      var idx = args[vDims.length + 1];\n      var openVal = args[1];\n      var closeVal = args[2];\n      var lowestVal = args[3];\n      var highestVal = args[4];\n      var ocLow = Math.min(openVal, closeVal);\n      var ocHigh = Math.max(openVal, closeVal);\n      var ocLowPoint = getPoint(ocLow);\n      var ocHighPoint = getPoint(ocHigh);\n      var lowestPoint = getPoint(lowestVal);\n      var highestPoint = getPoint(highestVal);\n      var whiskerEnds = [[subPixelOptimizePoint(highestPoint), subPixelOptimizePoint(ocHighPoint)], [subPixelOptimizePoint(lowestPoint), subPixelOptimizePoint(ocLowPoint)]];\n      var bodyEnds = [];\n      addBodyEnd(ocHighPoint, 0);\n      addBodyEnd(ocLowPoint, 1);\n      var sign;\n\n      if (openVal > closeVal) {\n        sign = -1;\n      } else if (openVal < closeVal) {\n        sign = 1;\n      } else {\n        // If close === open, compare with close of last record\n        if (dataIndex > 0) {\n          sign = data.getItemModel(dataIndex - 1).get()[2] <= closeVal ? 1 : -1;\n        } else {\n          // No record of previous, set to be positive\n          sign = 1;\n        }\n      }\n\n      data.setItemLayout(idx, {\n        chartLayout: chartLayout,\n        sign: sign,\n        initBaseline: openVal > closeVal ? ocHighPoint[constDim] : ocLowPoint[constDim],\n        // open point.\n        bodyEnds: bodyEnds,\n        whiskerEnds: whiskerEnds,\n        brushRect: makeBrushRect()\n      });\n      ++dataIndex;\n\n      function getPoint(val) {\n        var p = [];\n        p[variableDim] = axisDimVal;\n        p[constDim] = val;\n        return isNaN(axisDimVal) || isNaN(val) ? [NaN, NaN] : coordSys.dataToPoint(p);\n      }\n\n      function addBodyEnd(point, start) {\n        var point1 = point.slice();\n        var point2 = point.slice();\n        point1[variableDim] = subPixelOptimize(point1[variableDim] + candleWidth / 2, 1, false);\n        point2[variableDim] = subPixelOptimize(point2[variableDim] - candleWidth / 2, 1, true);\n        start ? bodyEnds.push(point1, point2) : bodyEnds.push(point2, point1);\n      }\n\n      function makeBrushRect() {\n        var pmin = getPoint(Math.min(openVal, closeVal, lowestVal, highestVal));\n        var pmax = getPoint(Math.max(openVal, closeVal, lowestVal, highestVal));\n        pmin[variableDim] -= candleWidth / 2;\n        pmax[variableDim] -= candleWidth / 2;\n        return {\n          x: pmin[0],\n          y: pmin[1],\n          width: constDim ? candleWidth : pmax[0] - pmin[0],\n          height: constDim ? pmax[1] - pmin[1] : candleWidth\n        };\n      }\n\n      function subPixelOptimizePoint(point) {\n        point[variableDim] = subPixelOptimize(point[variableDim], 1);\n        return point;\n      }\n    }, true);\n  });\n}\n\nfunction calculateCandleWidth(seriesModel, data) {\n  var baseAxis = seriesModel.getBaseAxis();\n  var extent;\n  var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : (extent = baseAxis.getExtent(), Math.abs(extent[1] - extent[0]) / data.count());\n  var barMaxWidth = parsePercent(retrieve2(seriesModel.get('barMaxWidth'), bandWidth), bandWidth);\n  var barMinWidth = parsePercent(retrieve2(seriesModel.get('barMinWidth'), 1), bandWidth);\n  var barWidth = seriesModel.get('barWidth');\n  return barWidth != null ? parsePercent(barWidth, bandWidth) // Put max outer to ensure bar visible in spite of overlap.\n  : Math.max(Math.min(bandWidth / 2, barMaxWidth), barMinWidth);\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./effectScatter/EffectScatterSeries\");\n\nrequire(\"./effectScatter/EffectScatterView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n\necharts.registerVisual(zrUtil.curry(visualSymbol, 'effectScatter', 'circle', null));\necharts.registerLayout(zrUtil.curry(layoutPoints, 'effectScatter'));","var createListFromArray = require(\"../helper/createListFromArray\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.effectScatter',\n  dependencies: ['grid', 'polar'],\n  getInitialData: function (option, ecModel) {\n    var list = createListFromArray(option.data, this, ecModel);\n    return list;\n  },\n  brushSelector: 'point',\n  defaultOption: {\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    effectType: 'ripple',\n    progressive: 0,\n    // When to show the effect, option: 'render'|'emphasis'\n    showEffectOn: 'render',\n    // Ripple effect config\n    rippleEffect: {\n      period: 4,\n      // Scale of ripple\n      scale: 2.5,\n      // Brush type can be fill or stroke\n      brushType: 'fill'\n    },\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Polar coordinate system\n    // polarIndex: 0,\n    // Geo coordinate system\n    // geoIndex: 0,\n    // symbol: null,        // 图形类型\n    symbolSize: 10 // 图形大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2\n    // symbolRotate: null,  // 图形旋转控制\n    // large: false,\n    // Available when large is true\n    // largeThreshold: 2000,\n    // itemStyle: {\n    //     normal: {\n    //         opacity: 1\n    //     }\n    // }\n\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar EffectSymbol = require(\"../helper/EffectSymbol\");\n\nvar _default = echarts.extendChartView({\n  type: 'effectScatter',\n  init: function () {\n    this._symbolDraw = new SymbolDraw(EffectSymbol);\n  },\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var effectSymbolDraw = this._symbolDraw;\n    effectSymbolDraw.updateData(data);\n    this.group.add(effectSymbolDraw.group);\n  },\n  updateLayout: function () {\n    this._symbolDraw.updateLayout();\n  },\n  remove: function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove(api);\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar _graphic = require(\"../../util/graphic\");\n\nvar Group = _graphic.Group;\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar SymbolClz = require(\"./Symbol\");\n\n/**\n * Symbol with ripple effect\n * @module echarts/chart/helper/EffectSymbol\n */\nvar EFFECT_RIPPLE_NUMBER = 3;\n\nfunction normalizeSymbolSize(symbolSize) {\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [+symbolSize, +symbolSize];\n  }\n\n  return symbolSize;\n}\n\nfunction updateRipplePath(rippleGroup, effectCfg) {\n  rippleGroup.eachChild(function (ripplePath) {\n    ripplePath.attr({\n      z: effectCfg.z,\n      zlevel: effectCfg.zlevel,\n      style: {\n        stroke: effectCfg.brushType === 'stroke' ? effectCfg.color : null,\n        fill: effectCfg.brushType === 'fill' ? effectCfg.color : null\n      }\n    });\n  });\n}\n/**\n * @constructor\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction EffectSymbol(data, idx) {\n  Group.call(this);\n  var symbol = new SymbolClz(data, idx);\n  var rippleGroup = new Group();\n  this.add(symbol);\n  this.add(rippleGroup);\n\n  rippleGroup.beforeUpdate = function () {\n    this.attr(symbol.getScale());\n  };\n\n  this.updateData(data, idx);\n}\n\nvar effectSymbolProto = EffectSymbol.prototype;\n\neffectSymbolProto.stopEffectAnimation = function () {\n  this.childAt(1).removeAll();\n};\n\neffectSymbolProto.startEffectAnimation = function (effectCfg) {\n  var symbolType = effectCfg.symbolType;\n  var color = effectCfg.color;\n  var rippleGroup = this.childAt(1);\n\n  for (var i = 0; i < EFFECT_RIPPLE_NUMBER; i++) {\n    // var ripplePath = createSymbol(\n    //     symbolType, -0.5, -0.5, 1, 1, color\n    // );\n    // If width/height are set too small (e.g., set to 1) on ios10\n    // and macOS Sierra, a circle stroke become a rect, no matter what\n    // the scale is set. So we set width/height as 2. See #4136.\n    var ripplePath = createSymbol(symbolType, -1, -1, 2, 2, color);\n    ripplePath.attr({\n      style: {\n        strokeNoScale: true\n      },\n      z2: 99,\n      silent: true,\n      scale: [0.5, 0.5]\n    });\n    var delay = -i / EFFECT_RIPPLE_NUMBER * effectCfg.period + effectCfg.effectOffset; // TODO Configurable effectCfg.period\n\n    ripplePath.animate('', true).when(effectCfg.period, {\n      scale: [effectCfg.rippleScale / 2, effectCfg.rippleScale / 2]\n    }).delay(delay).start();\n    ripplePath.animateStyle(true).when(effectCfg.period, {\n      opacity: 0\n    }).delay(delay).start();\n    rippleGroup.add(ripplePath);\n  }\n\n  updateRipplePath(rippleGroup, effectCfg);\n};\n/**\n * Update effect symbol\n */\n\n\neffectSymbolProto.updateEffectAnimation = function (effectCfg) {\n  var oldEffectCfg = this._effectCfg;\n  var rippleGroup = this.childAt(1); // Must reinitialize effect if following configuration changed\n\n  var DIFFICULT_PROPS = ['symbolType', 'period', 'rippleScale'];\n\n  for (var i = 0; i < DIFFICULT_PROPS.length; i++) {\n    var propName = DIFFICULT_PROPS[i];\n\n    if (oldEffectCfg[propName] !== effectCfg[propName]) {\n      this.stopEffectAnimation();\n      this.startEffectAnimation(effectCfg);\n      return;\n    }\n  }\n\n  updateRipplePath(rippleGroup, effectCfg);\n};\n/**\n * Highlight symbol\n */\n\n\neffectSymbolProto.highlight = function () {\n  this.trigger('emphasis');\n};\n/**\n * Downplay symbol\n */\n\n\neffectSymbolProto.downplay = function () {\n  this.trigger('normal');\n};\n/**\n * Update symbol properties\n * @param  {module:echarts/data/List} data\n * @param  {number} idx\n */\n\n\neffectSymbolProto.updateData = function (data, idx) {\n  var seriesModel = data.hostModel;\n  this.childAt(0).updateData(data, idx);\n  var rippleGroup = this.childAt(1);\n  var itemModel = data.getItemModel(idx);\n  var symbolType = data.getItemVisual(idx, 'symbol');\n  var symbolSize = normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\n  var color = data.getItemVisual(idx, 'color');\n  rippleGroup.attr('scale', symbolSize);\n  rippleGroup.traverse(function (ripplePath) {\n    ripplePath.attr({\n      fill: color\n    });\n  });\n  var symbolOffset = itemModel.getShallow('symbolOffset');\n\n  if (symbolOffset) {\n    var pos = rippleGroup.position;\n    pos[0] = parsePercent(symbolOffset[0], symbolSize[0]);\n    pos[1] = parsePercent(symbolOffset[1], symbolSize[1]);\n  }\n\n  rippleGroup.rotation = (itemModel.getShallow('symbolRotate') || 0) * Math.PI / 180 || 0;\n  var effectCfg = {};\n  effectCfg.showEffectOn = seriesModel.get('showEffectOn');\n  effectCfg.rippleScale = itemModel.get('rippleEffect.scale');\n  effectCfg.brushType = itemModel.get('rippleEffect.brushType');\n  effectCfg.period = itemModel.get('rippleEffect.period') * 1000;\n  effectCfg.effectOffset = idx / data.count();\n  effectCfg.z = itemModel.getShallow('z') || 0;\n  effectCfg.zlevel = itemModel.getShallow('zlevel') || 0;\n  effectCfg.symbolType = symbolType;\n  effectCfg.color = color;\n  this.off('mouseover').off('mouseout').off('emphasis').off('normal');\n\n  if (effectCfg.showEffectOn === 'render') {\n    this._effectCfg ? this.updateEffectAnimation(effectCfg) : this.startEffectAnimation(effectCfg);\n    this._effectCfg = effectCfg;\n  } else {\n    // Not keep old effect config\n    this._effectCfg = null;\n    this.stopEffectAnimation();\n    var symbol = this.childAt(0);\n\n    var onEmphasis = function () {\n      symbol.highlight();\n\n      if (effectCfg.showEffectOn !== 'render') {\n        this.startEffectAnimation(effectCfg);\n      }\n    };\n\n    var onNormal = function () {\n      symbol.downplay();\n\n      if (effectCfg.showEffectOn !== 'render') {\n        this.stopEffectAnimation();\n      }\n    };\n\n    this.on('mouseover', onEmphasis, this).on('mouseout', onNormal, this).on('emphasis', onEmphasis, this).on('normal', onNormal, this);\n  }\n\n  this._effectCfg = effectCfg;\n};\n\neffectSymbolProto.fadeOut = function (cb) {\n  this.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  cb && cb();\n};\n\nzrUtil.inherits(EffectSymbol, Group);\nvar _default = EffectSymbol;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./lines/LinesSeries\");\n\nrequire(\"./lines/LinesView\");\n\nvar linesLayout = require(\"./lines/linesLayout\");\n\nvar linesVisual = require(\"./lines/linesVisual\");\n\necharts.registerLayout(linesLayout);\necharts.registerVisual(linesVisual);","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar List = require(\"../../data/List\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n// Convert [ [{coord: []}, {coord: []}] ]\n// to [ { coords: [[]] } ]\nfunction preprocessOption(seriesOpt) {\n  var data = seriesOpt.data;\n\n  if (data && data[0] && data[0][0] && data[0][0].coord) {\n    seriesOpt.data = zrUtil.map(data, function (itemOpt) {\n      var coords = [itemOpt[0].coord, itemOpt[1].coord];\n      var target = {\n        coords: coords\n      };\n\n      if (itemOpt[0].name) {\n        target.fromName = itemOpt[0].name;\n      }\n\n      if (itemOpt[1].name) {\n        target.toName = itemOpt[1].name;\n      }\n\n      return zrUtil.mergeAll([target, itemOpt[0], itemOpt[1]]);\n    });\n  }\n}\n\nvar LinesSeries = SeriesModel.extend({\n  type: 'series.lines',\n  dependencies: ['grid', 'polar'],\n  visualColorAccessPath: 'lineStyle.normal.color',\n  init: function (option) {\n    // Not using preprocessor because mergeOption may not have series.type\n    preprocessOption(option);\n    LinesSeries.superApply(this, 'init', arguments);\n  },\n  mergeOption: function (option) {\n    preprocessOption(option);\n    LinesSeries.superApply(this, 'mergeOption', arguments);\n  },\n  getInitialData: function (option, ecModel) {\n    var lineData = new List(['value'], this);\n    lineData.hasItemOption = false;\n    lineData.initData(option.data, [], function (dataItem, dimName, dataIndex, dimIndex) {\n      // dataItem is simply coords\n      if (dataItem instanceof Array) {\n        return NaN;\n      } else {\n        lineData.hasItemOption = true;\n        var value = dataItem.value;\n\n        if (value != null) {\n          return value instanceof Array ? value[dimIndex] : value;\n        }\n      }\n    });\n    return lineData;\n  },\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var itemModel = data.getItemModel(dataIndex);\n    var name = itemModel.get('name');\n\n    if (name) {\n      return name;\n    }\n\n    var fromName = itemModel.get('fromName');\n    var toName = itemModel.get('toName');\n    var html = [];\n    fromName != null && html.push(fromName);\n    toName != null && html.push(toName);\n    return encodeHTML(html.join(' > '));\n  },\n  defaultOption: {\n    coordinateSystem: 'geo',\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // Cartesian coordinate system\n    xAxisIndex: 0,\n    yAxisIndex: 0,\n    symbol: ['none', 'none'],\n    symbolSize: [10, 10],\n    // Geo coordinate system\n    geoIndex: 0,\n    effect: {\n      show: false,\n      period: 4,\n      // Animation delay. support callback\n      // delay: 0,\n      // If move with constant speed px/sec\n      // period will be ignored if this property is > 0,\n      constantSpeed: 0,\n      symbol: 'circle',\n      symbolSize: 3,\n      loop: true,\n      // Length of trail, 0 - 1\n      trailLength: 0.2 // Same with lineStyle.normal.color\n      // color\n\n    },\n    large: false,\n    // Available when large is true\n    largeThreshold: 2000,\n    // If lines are polyline\n    // polyline not support curveness, label, animation\n    polyline: false,\n    label: {\n      normal: {\n        show: false,\n        position: 'end' // distance: 5,\n        // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n\n      }\n    },\n    lineStyle: {\n      normal: {\n        opacity: 0.5\n      }\n    }\n  }\n});\nvar _default = LinesSeries;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar LineDraw = require(\"../helper/LineDraw\");\n\nvar EffectLine = require(\"../helper/EffectLine\");\n\nvar Line = require(\"../helper/Line\");\n\nvar Polyline = require(\"../helper/Polyline\");\n\nvar EffectPolyline = require(\"../helper/EffectPolyline\");\n\nvar LargeLineDraw = require(\"../helper/LargeLineDraw\");\n\nvar _default = echarts.extendChartView({\n  type: 'lines',\n  init: function () {},\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var lineDraw = this._lineDraw;\n    var hasEffect = seriesModel.get('effect.show');\n    var isPolyline = seriesModel.get('polyline');\n    var isLarge = seriesModel.get('large') && data.count() >= seriesModel.get('largeThreshold');\n\n    if (hasEffect !== this._hasEffet || isPolyline !== this._isPolyline || isLarge !== this._isLarge) {\n      if (lineDraw) {\n        lineDraw.remove();\n      }\n\n      lineDraw = this._lineDraw = isLarge ? new LargeLineDraw() : new LineDraw(isPolyline ? hasEffect ? EffectPolyline : Polyline : hasEffect ? EffectLine : Line);\n      this._hasEffet = hasEffect;\n      this._isPolyline = isPolyline;\n      this._isLarge = isLarge;\n    }\n\n    var zlevel = seriesModel.get('zlevel');\n    var trailLength = seriesModel.get('effect.trailLength');\n    var zr = api.getZr(); // Avoid the drag cause ghost shadow\n    // FIXME Better way ?\n    // SVG doesn't support\n\n    var isSvg = zr.painter.getType() === 'svg';\n\n    if (!isSvg) {\n      zr.painter.getLayer(zlevel).clear(true);\n    } // Config layer with motion blur\n\n\n    if (this._lastZlevel != null && !isSvg) {\n      zr.configLayer(this._lastZlevel, {\n        motionBlur: false\n      });\n    }\n\n    if (hasEffect && trailLength) {\n      if (!isSvg) {\n        zr.configLayer(zlevel, {\n          motionBlur: true,\n          lastFrameAlpha: Math.max(Math.min(trailLength / 10 + 0.9, 1), 0)\n        });\n      }\n    }\n\n    this.group.add(lineDraw.group);\n    lineDraw.updateData(data);\n    this._lastZlevel = zlevel;\n  },\n  updateLayout: function (seriesModel, ecModel, api) {\n    this._lineDraw.updateLayout(seriesModel); // Not use motion when dragging or zooming\n\n\n    var zr = api.getZr();\n    var isSvg = zr.painter.getType() === 'svg';\n\n    if (!isSvg) {\n      zr.painter.getLayer(this._lastZlevel).clear(true);\n    }\n  },\n  remove: function (ecModel, api) {\n    this._lineDraw && this._lineDraw.remove(api, true); // Clear motion when lineDraw is removed\n\n    var zr = api.getZr();\n    var isSvg = zr.painter.getType() === 'svg';\n\n    if (!isSvg) {\n      zr.painter.getLayer(this._lastZlevel).clear(true);\n    }\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;","var Polyline = require(\"./Polyline\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar EffectLine = require(\"./EffectLine\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\n/**\n * Provide effect for line\n * @module echarts/chart/helper/EffectLine\n */\n\n/**\n * @constructor\n * @extends {module:echarts/chart/helper/EffectLine}\n * @alias {module:echarts/chart/helper/Polyline}\n */\nfunction EffectPolyline(lineData, idx, seriesScope) {\n  EffectLine.call(this, lineData, idx, seriesScope);\n  this._lastFrame = 0;\n  this._lastFramePercent = 0;\n}\n\nvar effectPolylineProto = EffectPolyline.prototype; // Overwrite\n\neffectPolylineProto.createLine = function (lineData, idx, seriesScope) {\n  return new Polyline(lineData, idx, seriesScope);\n}; // Overwrite\n\n\neffectPolylineProto.updateAnimationPoints = function (symbol, points) {\n  this._points = points;\n  var accLenArr = [0];\n  var len = 0;\n\n  for (var i = 1; i < points.length; i++) {\n    var p1 = points[i - 1];\n    var p2 = points[i];\n    len += vec2.dist(p1, p2);\n    accLenArr.push(len);\n  }\n\n  if (len === 0) {\n    return;\n  }\n\n  for (var i = 0; i < accLenArr.length; i++) {\n    accLenArr[i] /= len;\n  }\n\n  this._offsets = accLenArr;\n  this._length = len;\n}; // Overwrite\n\n\neffectPolylineProto.getLineLength = function (symbol) {\n  return this._length;\n}; // Overwrite\n\n\neffectPolylineProto.updateSymbolPosition = function (symbol) {\n  var t = symbol.__t;\n  var points = this._points;\n  var offsets = this._offsets;\n  var len = points.length;\n\n  if (!offsets) {\n    // Has length 0\n    return;\n  }\n\n  var lastFrame = this._lastFrame;\n  var frame;\n\n  if (t < this._lastFramePercent) {\n    // Start from the next frame\n    // PENDING start from lastFrame ?\n    var start = Math.min(lastFrame + 1, len - 1);\n\n    for (frame = start; frame >= 0; frame--) {\n      if (offsets[frame] <= t) {\n        break;\n      }\n    } // PENDING really need to do this ?\n\n\n    frame = Math.min(frame, len - 2);\n  } else {\n    for (var frame = lastFrame; frame < len; frame++) {\n      if (offsets[frame] > t) {\n        break;\n      }\n    }\n\n    frame = Math.min(frame - 1, len - 2);\n  }\n\n  vec2.lerp(symbol.position, points[frame], points[frame + 1], (t - offsets[frame]) / (offsets[frame + 1] - offsets[frame]));\n  var tx = points[frame + 1][0] - points[frame][0];\n  var ty = points[frame + 1][1] - points[frame][1];\n  symbol.rotation = -Math.atan2(ty, tx) - Math.PI / 2;\n  this._lastFrame = frame;\n  this._lastFramePercent = t;\n  symbol.ignore = false;\n};\n\nzrUtil.inherits(EffectPolyline, EffectLine);\nvar _default = EffectPolyline;\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar lineContain = require(\"zrender/lib/contain/line\");\n\nvar quadraticContain = require(\"zrender/lib/contain/quadratic\");\n\n// TODO Batch by color\nvar LargeLineShape = graphic.extendShape({\n  shape: {\n    polyline: false,\n    segs: []\n  },\n  buildPath: function (path, shape) {\n    var segs = shape.segs;\n    var isPolyline = shape.polyline;\n\n    for (var i = 0; i < segs.length; i++) {\n      var seg = segs[i];\n\n      if (isPolyline) {\n        path.moveTo(seg[0][0], seg[0][1]);\n\n        for (var j = 1; j < seg.length; j++) {\n          path.lineTo(seg[j][0], seg[j][1]);\n        }\n      } else {\n        path.moveTo(seg[0][0], seg[0][1]);\n\n        if (seg.length > 2) {\n          path.quadraticCurveTo(seg[2][0], seg[2][1], seg[1][0], seg[1][1]);\n        } else {\n          path.lineTo(seg[1][0], seg[1][1]);\n        }\n      }\n    }\n  },\n  findDataIndex: function (x, y) {\n    var shape = this.shape;\n    var segs = shape.segs;\n    var isPolyline = shape.polyline;\n    var lineWidth = Math.max(this.style.lineWidth, 1); // Not consider transform\n\n    for (var i = 0; i < segs.length; i++) {\n      var seg = segs[i];\n\n      if (isPolyline) {\n        for (var j = 1; j < seg.length; j++) {\n          if (lineContain.containStroke(seg[j - 1][0], seg[j - 1][1], seg[j][0], seg[j][1], lineWidth, x, y)) {\n            return i;\n          }\n        }\n      } else {\n        if (seg.length > 2) {\n          if (quadraticContain.containStroke(seg[0][0], seg[0][1], seg[2][0], seg[2][1], seg[1][0], seg[1][1], lineWidth, x, y)) {\n            return i;\n          }\n        } else {\n          if (lineContain.containStroke(seg[0][0], seg[0][1], seg[1][0], seg[1][1], lineWidth, x, y)) {\n            return i;\n          }\n        }\n      }\n    }\n\n    return -1;\n  }\n});\n\nfunction LargeLineDraw() {\n  this.group = new graphic.Group();\n  this._lineEl = new LargeLineShape();\n}\n\nvar largeLineProto = LargeLineDraw.prototype;\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n */\n\nlargeLineProto.updateData = function (data) {\n  this.group.removeAll();\n  var lineEl = this._lineEl;\n  var seriesModel = data.hostModel;\n  lineEl.setShape({\n    segs: data.mapArray(data.getItemLayout),\n    polyline: seriesModel.get('polyline')\n  });\n  lineEl.useStyle(seriesModel.getModel('lineStyle.normal').getLineStyle());\n  var visualColor = data.getVisual('color');\n\n  if (visualColor) {\n    lineEl.setStyle('stroke', visualColor);\n  }\n\n  lineEl.setStyle('fill'); // Enable tooltip\n  // PENDING May have performance issue when path is extremely large\n\n  lineEl.seriesIndex = seriesModel.seriesIndex;\n  lineEl.on('mousemove', function (e) {\n    lineEl.dataIndex = null;\n    var dataIndex = lineEl.findDataIndex(e.offsetX, e.offsetY);\n\n    if (dataIndex > 0) {\n      // Provide dataIndex for tooltip\n      lineEl.dataIndex = dataIndex;\n    }\n  }); // Add back\n\n  this.group.add(lineEl);\n};\n\nlargeLineProto.updateLayout = function (seriesModel) {\n  var data = seriesModel.getData();\n\n  this._lineEl.setShape({\n    segs: data.mapArray(data.getItemLayout)\n  });\n};\n\nlargeLineProto.remove = function () {\n  this.group.removeAll();\n};\n\nvar _default = LargeLineDraw;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('lines', function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var lineData = seriesModel.getData(); // FIXME Use data dimensions ?\n\n    lineData.each(function (idx) {\n      var itemModel = lineData.getItemModel(idx);\n      var coords = itemModel.option instanceof Array ? itemModel.option : itemModel.get('coords');\n      var pts = [];\n\n      if (seriesModel.get('polyline')) {\n        for (var i = 0; i < coords.length; i++) {\n          pts.push(coordSys.dataToPoint(coords[i]));\n        }\n      } else {\n        pts[0] = coordSys.dataToPoint(coords[0]);\n        pts[1] = coordSys.dataToPoint(coords[1]);\n        var curveness = itemModel.get('lineStyle.normal.curveness');\n\n        if (+curveness) {\n          pts[2] = [(pts[0][0] + pts[1][0]) / 2 - (pts[0][1] - pts[1][1]) * curveness, (pts[0][1] + pts[1][1]) / 2 - (pts[1][0] - pts[0][0]) * curveness];\n        }\n      }\n\n      lineData.setItemLayout(idx, pts);\n    });\n  });\n}\n\nmodule.exports = _default;","function normalize(a) {\n  if (!(a instanceof Array)) {\n    a = [a, a];\n  }\n\n  return a;\n}\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('lines', function (seriesModel) {\n    var data = seriesModel.getData();\n    var symbolType = normalize(seriesModel.get('symbol'));\n    var symbolSize = normalize(seriesModel.get('symbolSize'));\n    var opacityQuery = 'lineStyle.normal.opacity'.split('.');\n    data.setVisual('fromSymbol', symbolType && symbolType[0]);\n    data.setVisual('toSymbol', symbolType && symbolType[1]);\n    data.setVisual('fromSymbolSize', symbolSize && symbolSize[0]);\n    data.setVisual('toSymbolSize', symbolSize && symbolSize[1]);\n    data.setVisual('opacity', seriesModel.get(opacityQuery));\n    data.each(function (idx) {\n      var itemModel = data.getItemModel(idx);\n      var symbolType = normalize(itemModel.getShallow('symbol', true));\n      var symbolSize = normalize(itemModel.getShallow('symbolSize', true));\n      var opacity = itemModel.get(opacityQuery);\n      symbolType[0] && data.setItemVisual(idx, 'fromSymbol', symbolType[0]);\n      symbolType[1] && data.setItemVisual(idx, 'toSymbol', symbolType[1]);\n      symbolSize[0] && data.setItemVisual(idx, 'fromSymbolSize', symbolSize[0]);\n      symbolSize[1] && data.setItemVisual(idx, 'toSymbolSize', symbolSize[1]);\n      data.setItemVisual(idx, 'opacity', opacity);\n    });\n  });\n}\n\nmodule.exports = _default;","require(\"./heatmap/HeatmapSeries\");\n\nrequire(\"./heatmap/HeatmapView\");","var SeriesModel = require(\"../../model/Series\");\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.heatmap',\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(option.data, this, ecModel);\n  },\n  defaultOption: {\n    // Cartesian2D or geo\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Geo coordinate system\n    geoIndex: 0,\n    blurSize: 30,\n    pointSize: 20,\n    maxOpacity: 1,\n    minOpacity: 0\n  }\n});\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar HeatmapLayer = require(\"./HeatmapLayer\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nfunction getIsInPiecewiseRange(dataExtent, pieceList, selected) {\n  var dataSpan = dataExtent[1] - dataExtent[0];\n  pieceList = zrUtil.map(pieceList, function (piece) {\n    return {\n      interval: [(piece.interval[0] - dataExtent[0]) / dataSpan, (piece.interval[1] - dataExtent[0]) / dataSpan]\n    };\n  });\n  var len = pieceList.length;\n  var lastIndex = 0;\n  return function (val) {\n    // Try to find in the location of the last found\n    for (var i = lastIndex; i < len; i++) {\n      var interval = pieceList[i].interval;\n\n      if (interval[0] <= val && val <= interval[1]) {\n        lastIndex = i;\n        break;\n      }\n    }\n\n    if (i === len) {\n      // Not found, back interation\n      for (var i = lastIndex - 1; i >= 0; i--) {\n        var interval = pieceList[i].interval;\n\n        if (interval[0] <= val && val <= interval[1]) {\n          lastIndex = i;\n          break;\n        }\n      }\n    }\n\n    return i >= 0 && i < len && selected[i];\n  };\n}\n\nfunction getIsInContinuousRange(dataExtent, range) {\n  var dataSpan = dataExtent[1] - dataExtent[0];\n  range = [(range[0] - dataExtent[0]) / dataSpan, (range[1] - dataExtent[0]) / dataSpan];\n  return function (val) {\n    return val >= range[0] && val <= range[1];\n  };\n}\n\nfunction isGeoCoordSys(coordSys) {\n  var dimensions = coordSys.dimensions; // Not use coorSys.type === 'geo' because coordSys maybe extended\n\n  return dimensions[0] === 'lng' && dimensions[1] === 'lat';\n}\n\nvar _default = echarts.extendChartView({\n  type: 'heatmap',\n  render: function (seriesModel, ecModel, api) {\n    var visualMapOfThisSeries;\n    ecModel.eachComponent('visualMap', function (visualMap) {\n      visualMap.eachTargetSeries(function (targetSeries) {\n        if (targetSeries === seriesModel) {\n          visualMapOfThisSeries = visualMap;\n        }\n      });\n    });\n    this.group.removeAll();\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys.type === 'cartesian2d' || coordSys.type === 'calendar') {\n      this._renderOnCartesianAndCalendar(coordSys, seriesModel, api);\n    } else if (isGeoCoordSys(coordSys)) {\n      this._renderOnGeo(coordSys, seriesModel, visualMapOfThisSeries, api);\n    }\n  },\n  dispose: function () {},\n  _renderOnCartesianAndCalendar: function (coordSys, seriesModel, api) {\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      var width = xAxis.getBandWidth();\n      var height = yAxis.getBandWidth();\n    }\n\n    var group = this.group;\n    var data = seriesModel.getData();\n    var itemStyleQuery = 'itemStyle.normal';\n    var hoverItemStyleQuery = 'itemStyle.emphasis';\n    var labelQuery = 'label.normal';\n    var hoverLabelQuery = 'label.emphasis';\n    var style = seriesModel.getModel(itemStyleQuery).getItemStyle(['color']);\n    var hoverStl = seriesModel.getModel(hoverItemStyleQuery).getItemStyle();\n    var labelModel = seriesModel.getModel('label.normal');\n    var hoverLabelModel = seriesModel.getModel('label.emphasis');\n    var coordSysType = coordSys.type;\n    var dataDims = coordSysType === 'cartesian2d' ? [seriesModel.coordDimToDataDim('x')[0], seriesModel.coordDimToDataDim('y')[0], seriesModel.coordDimToDataDim('value')[0]] : [seriesModel.coordDimToDataDim('time')[0], seriesModel.coordDimToDataDim('value')[0]];\n    data.each(function (idx) {\n      var rect;\n\n      if (coordSysType === 'cartesian2d') {\n        // Ignore empty data\n        if (isNaN(data.get(dataDims[2], idx))) {\n          return;\n        }\n\n        var point = coordSys.dataToPoint([data.get(dataDims[0], idx), data.get(dataDims[1], idx)]);\n        rect = new graphic.Rect({\n          shape: {\n            x: point[0] - width / 2,\n            y: point[1] - height / 2,\n            width: width,\n            height: height\n          },\n          style: {\n            fill: data.getItemVisual(idx, 'color'),\n            opacity: data.getItemVisual(idx, 'opacity')\n          }\n        });\n      } else {\n        // Ignore empty data\n        if (isNaN(data.get(dataDims[1], idx))) {\n          return;\n        }\n\n        rect = new graphic.Rect({\n          z2: 1,\n          shape: coordSys.dataToRect([data.get(dataDims[0], idx)]).contentShape,\n          style: {\n            fill: data.getItemVisual(idx, 'color'),\n            opacity: data.getItemVisual(idx, 'opacity')\n          }\n        });\n      }\n\n      var itemModel = data.getItemModel(idx); // Optimization for large datset\n\n      if (data.hasItemOption) {\n        style = itemModel.getModel(itemStyleQuery).getItemStyle(['color']);\n        hoverStl = itemModel.getModel(hoverItemStyleQuery).getItemStyle();\n        labelModel = itemModel.getModel(labelQuery);\n        hoverLabelModel = itemModel.getModel(hoverLabelQuery);\n      }\n\n      var rawValue = seriesModel.getRawValue(idx);\n      var defaultText = '-';\n\n      if (rawValue && rawValue[2] != null) {\n        defaultText = rawValue[2];\n      }\n\n      graphic.setLabelStyle(style, hoverStl, labelModel, hoverLabelModel, {\n        labelFetcher: seriesModel,\n        labelDataIndex: idx,\n        defaultText: defaultText,\n        isRectText: true\n      });\n      rect.setStyle(style);\n      graphic.setHoverStyle(rect, data.hasItemOption ? hoverStl : zrUtil.extend({}, hoverStl));\n      group.add(rect);\n      data.setItemGraphicEl(idx, rect);\n    });\n  },\n  _renderOnGeo: function (geo, seriesModel, visualMapModel, api) {\n    var inRangeVisuals = visualMapModel.targetVisuals.inRange;\n    var outOfRangeVisuals = visualMapModel.targetVisuals.outOfRange; // if (!visualMapping) {\n    //     throw new Error('Data range must have color visuals');\n    // }\n\n    var data = seriesModel.getData();\n    var hmLayer = this._hmLayer || this._hmLayer || new HeatmapLayer();\n    hmLayer.blurSize = seriesModel.get('blurSize');\n    hmLayer.pointSize = seriesModel.get('pointSize');\n    hmLayer.minOpacity = seriesModel.get('minOpacity');\n    hmLayer.maxOpacity = seriesModel.get('maxOpacity');\n    var rect = geo.getViewRect().clone();\n    var roamTransform = geo.getRoamTransform().transform;\n    rect.applyTransform(roamTransform); // Clamp on viewport\n\n    var x = Math.max(rect.x, 0);\n    var y = Math.max(rect.y, 0);\n    var x2 = Math.min(rect.width + rect.x, api.getWidth());\n    var y2 = Math.min(rect.height + rect.y, api.getHeight());\n    var width = x2 - x;\n    var height = y2 - y;\n    var points = data.mapArray(['lng', 'lat', 'value'], function (lng, lat, value) {\n      var pt = geo.dataToPoint([lng, lat]);\n      pt[0] -= x;\n      pt[1] -= y;\n      pt.push(value);\n      return pt;\n    });\n    var dataExtent = visualMapModel.getExtent();\n    var isInRange = visualMapModel.type === 'visualMap.continuous' ? getIsInContinuousRange(dataExtent, visualMapModel.option.range) : getIsInPiecewiseRange(dataExtent, visualMapModel.getPieceList(), visualMapModel.option.selected);\n    hmLayer.update(points, width, height, inRangeVisuals.color.getNormalizer(), {\n      inRange: inRangeVisuals.color.getColorMapper(),\n      outOfRange: outOfRangeVisuals.color.getColorMapper()\n    }, isInRange);\n    var img = new graphic.Image({\n      style: {\n        width: width,\n        height: height,\n        x: x,\n        y: y,\n        image: hmLayer.canvas\n      },\n      silent: true\n    });\n    this.group.add(img);\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @file defines echarts Heatmap Chart\n * @author Ovilia (me@zhangwenli.com)\n * Inspired by https://github.com/mourner/simpleheat\n *\n * @module\n */\nvar GRADIENT_LEVELS = 256;\n/**\n * Heatmap Chart\n *\n * @class\n */\n\nfunction Heatmap() {\n  var canvas = zrUtil.createCanvas();\n  this.canvas = canvas;\n  this.blurSize = 30;\n  this.pointSize = 20;\n  this.maxOpacity = 1;\n  this.minOpacity = 0;\n  this._gradientPixels = {};\n}\n\nHeatmap.prototype = {\n  /**\n   * Renders Heatmap and returns the rendered canvas\n   * @param {Array} data array of data, each has x, y, value\n   * @param {number} width canvas width\n   * @param {number} height canvas height\n   */\n  update: function (data, width, height, normalize, colorFunc, isInRange) {\n    var brush = this._getBrush();\n\n    var gradientInRange = this._getGradient(data, colorFunc, 'inRange');\n\n    var gradientOutOfRange = this._getGradient(data, colorFunc, 'outOfRange');\n\n    var r = this.pointSize + this.blurSize;\n    var canvas = this.canvas;\n    var ctx = canvas.getContext('2d');\n    var len = data.length;\n    canvas.width = width;\n    canvas.height = height;\n\n    for (var i = 0; i < len; ++i) {\n      var p = data[i];\n      var x = p[0];\n      var y = p[1];\n      var value = p[2]; // calculate alpha using value\n\n      var alpha = normalize(value); // draw with the circle brush with alpha\n\n      ctx.globalAlpha = alpha;\n      ctx.drawImage(brush, x - r, y - r);\n    }\n\n    if (!canvas.width || !canvas.height) {\n      // Avoid \"Uncaught DOMException: Failed to execute 'getImageData' on\n      // 'CanvasRenderingContext2D': The source height is 0.\"\n      return canvas;\n    } // colorize the canvas using alpha value and set with gradient\n\n\n    var imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    var pixels = imageData.data;\n    var offset = 0;\n    var pixelLen = pixels.length;\n    var minOpacity = this.minOpacity;\n    var maxOpacity = this.maxOpacity;\n    var diffOpacity = maxOpacity - minOpacity;\n\n    while (offset < pixelLen) {\n      var alpha = pixels[offset + 3] / 256;\n      var gradientOffset = Math.floor(alpha * (GRADIENT_LEVELS - 1)) * 4; // Simple optimize to ignore the empty data\n\n      if (alpha > 0) {\n        var gradient = isInRange(alpha) ? gradientInRange : gradientOutOfRange; // Any alpha > 0 will be mapped to [minOpacity, maxOpacity]\n\n        alpha > 0 && (alpha = alpha * diffOpacity + minOpacity);\n        pixels[offset++] = gradient[gradientOffset];\n        pixels[offset++] = gradient[gradientOffset + 1];\n        pixels[offset++] = gradient[gradientOffset + 2];\n        pixels[offset++] = gradient[gradientOffset + 3] * alpha * 256;\n      } else {\n        offset += 4;\n      }\n    }\n\n    ctx.putImageData(imageData, 0, 0);\n    return canvas;\n  },\n\n  /**\n   * get canvas of a black circle brush used for canvas to draw later\n   * @private\n   * @returns {Object} circle brush canvas\n   */\n  _getBrush: function () {\n    var brushCanvas = this._brushCanvas || (this._brushCanvas = zrUtil.createCanvas()); // set brush size\n\n    var r = this.pointSize + this.blurSize;\n    var d = r * 2;\n    brushCanvas.width = d;\n    brushCanvas.height = d;\n    var ctx = brushCanvas.getContext('2d');\n    ctx.clearRect(0, 0, d, d); // in order to render shadow without the distinct circle,\n    // draw the distinct circle in an invisible place,\n    // and use shadowOffset to draw shadow in the center of the canvas\n\n    ctx.shadowOffsetX = d;\n    ctx.shadowBlur = this.blurSize; // draw the shadow in black, and use alpha and shadow blur to generate\n    // color in color map\n\n    ctx.shadowColor = '#000'; // draw circle in the left to the canvas\n\n    ctx.beginPath();\n    ctx.arc(-r, r, this.pointSize, 0, Math.PI * 2, true);\n    ctx.closePath();\n    ctx.fill();\n    return brushCanvas;\n  },\n\n  /**\n   * get gradient color map\n   * @private\n   */\n  _getGradient: function (data, colorFunc, state) {\n    var gradientPixels = this._gradientPixels;\n    var pixelsSingleState = gradientPixels[state] || (gradientPixels[state] = new Uint8ClampedArray(256 * 4));\n    var color = [0, 0, 0, 0];\n    var off = 0;\n\n    for (var i = 0; i < 256; i++) {\n      colorFunc[state](i / 255, true, color);\n      pixelsSingleState[off++] = color[0];\n      pixelsSingleState[off++] = color[1];\n      pixelsSingleState[off++] = color[2];\n      pixelsSingleState[off++] = color[3];\n    }\n\n    return pixelsSingleState;\n  }\n};\nvar _default = Heatmap;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./bar/PictorialBarSeries\");\n\nrequire(\"./bar/PictorialBarView\");\n\nvar barLayoutGrid = require(\"../layout/barGrid\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nrequire(\"../component/gridSimple\");\n\n// In case developer forget to include grid component\necharts.registerLayout(zrUtil.curry(barLayoutGrid, 'pictorialBar'));\necharts.registerVisual(zrUtil.curry(visualSymbol, 'pictorialBar', 'roundRect', null));","var BaseBarSeries = require(\"./BaseBarSeries\");\n\nvar PictorialBarSeries = BaseBarSeries.extend({\n  type: 'series.pictorialBar',\n  dependencies: ['grid'],\n  defaultOption: {\n    symbol: 'circle',\n    // Customized bar shape\n    symbolSize: null,\n    // Can be ['100%', '100%'], null means auto.\n    symbolRotate: null,\n    symbolPosition: null,\n    // 'start' or 'end' or 'center', null means auto.\n    symbolOffset: null,\n    symbolMargin: null,\n    // start margin and end margin. Can be a number or a percent string.\n    // Auto margin by defualt.\n    symbolRepeat: false,\n    // false/null/undefined, means no repeat.\n    // Can be true, means auto calculate repeat times and cut by data.\n    // Can be a number, specifies repeat times, and do not cut by data.\n    // Can be 'fixed', means auto calculate repeat times but do not cut by data.\n    symbolRepeatDirection: 'end',\n    // 'end' means from 'start' to 'end'.\n    symbolClip: false,\n    symbolBoundingData: null,\n    // Can be 60 or -40 or [-40, 60]\n    symbolPatternSize: 400,\n    // 400 * 400 px\n    barGap: '-100%',\n    // In most case, overlap is needed.\n    // z can be set in data item, which is z2 actually.\n    // Disable progressive\n    progressive: 0,\n    hoverAnimation: false // Open only when needed.\n\n  },\n  getInitialData: function (option) {\n    // Disable stack.\n    option.stack = null;\n    return PictorialBarSeries.superApply(this, 'getInitialData', arguments);\n  }\n});\nvar _default = PictorialBarSeries;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar isNumeric = _number.isNumeric;\n\nvar _helper = require(\"./helper\");\n\nvar setLabel = _helper.setLabel;\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'normal', 'borderWidth']; // index: +isHorizontal\n\nvar LAYOUT_ATTRS = [{\n  xy: 'x',\n  wh: 'width',\n  index: 0,\n  posDesc: ['left', 'right']\n}, {\n  xy: 'y',\n  wh: 'height',\n  index: 1,\n  posDesc: ['top', 'bottom']\n}];\nvar pathForLineWidth = new graphic.Circle();\nvar BarView = echarts.extendChartView({\n  type: 'pictorialBar',\n  render: function (seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var isHorizontal = !!baseAxis.isHorizontal();\n    var coordSysRect = cartesian.grid.getRect();\n    var opt = {\n      ecSize: {\n        width: api.getWidth(),\n        height: api.getHeight()\n      },\n      seriesModel: seriesModel,\n      coordSys: cartesian,\n      coordSysExtent: [[coordSysRect.x, coordSysRect.x + coordSysRect.width], [coordSysRect.y, coordSysRect.y + coordSysRect.height]],\n      isHorizontal: isHorizontal,\n      valueDim: LAYOUT_ATTRS[+isHorizontal],\n      categoryDim: LAYOUT_ATTRS[1 - isHorizontal]\n    };\n    data.diff(oldData).add(function (dataIndex) {\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var itemModel = getItemModel(data, dataIndex);\n      var symbolMeta = getSymbolMeta(data, dataIndex, itemModel, opt);\n      var bar = createBar(data, opt, symbolMeta);\n      data.setItemGraphicEl(dataIndex, bar);\n      group.add(bar);\n      updateCommon(bar, opt, symbolMeta);\n    }).update(function (newIndex, oldIndex) {\n      var bar = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(bar);\n        return;\n      }\n\n      var itemModel = getItemModel(data, newIndex);\n      var symbolMeta = getSymbolMeta(data, newIndex, itemModel, opt);\n      var pictorialShapeStr = getShapeStr(data, symbolMeta);\n\n      if (bar && pictorialShapeStr !== bar.__pictorialShapeStr) {\n        group.remove(bar);\n        data.setItemGraphicEl(newIndex, null);\n        bar = null;\n      }\n\n      if (bar) {\n        updateBar(bar, opt, symbolMeta);\n      } else {\n        bar = createBar(data, opt, symbolMeta, true);\n      }\n\n      data.setItemGraphicEl(newIndex, bar);\n      bar.__pictorialSymbolMeta = symbolMeta; // Add back\n\n      group.add(bar);\n      updateCommon(bar, opt, symbolMeta);\n    }).remove(function (dataIndex) {\n      var bar = oldData.getItemGraphicEl(dataIndex);\n      bar && removeBar(oldData, dataIndex, bar.__pictorialSymbolMeta.animationModel, bar);\n    }).execute();\n    this._data = data;\n    return this.group;\n  },\n  dispose: zrUtil.noop,\n  remove: function (ecModel, api) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel.get('animation')) {\n      if (data) {\n        data.eachItemGraphicEl(function (bar) {\n          removeBar(data, bar.dataIndex, ecModel, bar);\n        });\n      }\n    } else {\n      group.removeAll();\n    }\n  }\n}); // Set or calculate default value about symbol, and calculate layout info.\n\nfunction getSymbolMeta(data, dataIndex, itemModel, opt) {\n  var layout = data.getItemLayout(dataIndex);\n  var symbolRepeat = itemModel.get('symbolRepeat');\n  var symbolClip = itemModel.get('symbolClip');\n  var symbolPosition = itemModel.get('symbolPosition') || 'start';\n  var symbolRotate = itemModel.get('symbolRotate');\n  var rotation = (symbolRotate || 0) * Math.PI / 180 || 0;\n  var symbolPatternSize = itemModel.get('symbolPatternSize') || 2;\n  var isAnimationEnabled = itemModel.isAnimationEnabled();\n  var symbolMeta = {\n    dataIndex: dataIndex,\n    layout: layout,\n    itemModel: itemModel,\n    symbolType: data.getItemVisual(dataIndex, 'symbol') || 'circle',\n    color: data.getItemVisual(dataIndex, 'color'),\n    symbolClip: symbolClip,\n    symbolRepeat: symbolRepeat,\n    symbolRepeatDirection: itemModel.get('symbolRepeatDirection'),\n    symbolPatternSize: symbolPatternSize,\n    rotation: rotation,\n    animationModel: isAnimationEnabled ? itemModel : null,\n    hoverAnimation: isAnimationEnabled && itemModel.get('hoverAnimation'),\n    z2: itemModel.getShallow('z', true) || 0\n  };\n  prepareBarLength(itemModel, symbolRepeat, layout, opt, symbolMeta);\n  prepareSymbolSize(data, dataIndex, layout, symbolRepeat, symbolClip, symbolMeta.boundingLength, symbolMeta.pxSign, symbolPatternSize, opt, symbolMeta);\n  prepareLineWidth(itemModel, symbolMeta.symbolScale, rotation, opt, symbolMeta);\n  var symbolSize = symbolMeta.symbolSize;\n  var symbolOffset = itemModel.get('symbolOffset');\n\n  if (zrUtil.isArray(symbolOffset)) {\n    symbolOffset = [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])];\n  }\n\n  prepareLayoutInfo(itemModel, symbolSize, layout, symbolRepeat, symbolClip, symbolOffset, symbolPosition, symbolMeta.valueLineWidth, symbolMeta.boundingLength, symbolMeta.repeatCutLength, opt, symbolMeta);\n  return symbolMeta;\n} // bar length can be negative.\n\n\nfunction prepareBarLength(itemModel, symbolRepeat, layout, opt, output) {\n  var valueDim = opt.valueDim;\n  var symbolBoundingData = itemModel.get('symbolBoundingData');\n  var valueAxis = opt.coordSys.getOtherAxis(opt.coordSys.getBaseAxis());\n  var zeroPx = valueAxis.toGlobalCoord(valueAxis.dataToCoord(0));\n  var pxSignIdx = 1 - +(layout[valueDim.wh] <= 0);\n  var boundingLength;\n\n  if (zrUtil.isArray(symbolBoundingData)) {\n    var symbolBoundingExtent = [convertToCoordOnAxis(valueAxis, symbolBoundingData[0]) - zeroPx, convertToCoordOnAxis(valueAxis, symbolBoundingData[1]) - zeroPx];\n    symbolBoundingExtent[1] < symbolBoundingExtent[0] && symbolBoundingExtent.reverse();\n    boundingLength = symbolBoundingExtent[pxSignIdx];\n  } else if (symbolBoundingData != null) {\n    boundingLength = convertToCoordOnAxis(valueAxis, symbolBoundingData) - zeroPx;\n  } else if (symbolRepeat) {\n    boundingLength = opt.coordSysExtent[valueDim.index][pxSignIdx] - zeroPx;\n  } else {\n    boundingLength = layout[valueDim.wh];\n  }\n\n  output.boundingLength = boundingLength;\n\n  if (symbolRepeat) {\n    output.repeatCutLength = layout[valueDim.wh];\n  }\n\n  output.pxSign = boundingLength > 0 ? 1 : boundingLength < 0 ? -1 : 0;\n}\n\nfunction convertToCoordOnAxis(axis, value) {\n  return axis.toGlobalCoord(axis.dataToCoord(axis.scale.parse(value)));\n} // Support ['100%', '100%']\n\n\nfunction prepareSymbolSize(data, dataIndex, layout, symbolRepeat, symbolClip, boundingLength, pxSign, symbolPatternSize, opt, output) {\n  var valueDim = opt.valueDim;\n  var categoryDim = opt.categoryDim;\n  var categorySize = Math.abs(layout[categoryDim.wh]);\n  var symbolSize = data.getItemVisual(dataIndex, 'symbolSize');\n\n  if (zrUtil.isArray(symbolSize)) {\n    symbolSize = symbolSize.slice();\n  } else {\n    if (symbolSize == null) {\n      symbolSize = '100%';\n    }\n\n    symbolSize = [symbolSize, symbolSize];\n  } // Note: percentage symbolSize (like '100%') do not consider lineWidth, because it is\n  // to complicated to calculate real percent value if considering scaled lineWidth.\n  // So the actual size will bigger than layout size if lineWidth is bigger than zero,\n  // which can be tolerated in pictorial chart.\n\n\n  symbolSize[categoryDim.index] = parsePercent(symbolSize[categoryDim.index], categorySize);\n  symbolSize[valueDim.index] = parsePercent(symbolSize[valueDim.index], symbolRepeat ? categorySize : Math.abs(boundingLength));\n  output.symbolSize = symbolSize; // If x or y is less than zero, show reversed shape.\n\n  var symbolScale = output.symbolScale = [symbolSize[0] / symbolPatternSize, symbolSize[1] / symbolPatternSize]; // Follow convention, 'right' and 'top' is the normal scale.\n\n  symbolScale[valueDim.index] *= (opt.isHorizontal ? -1 : 1) * pxSign;\n}\n\nfunction prepareLineWidth(itemModel, symbolScale, rotation, opt, output) {\n  // In symbols are drawn with scale, so do not need to care about the case that width\n  // or height are too small. But symbol use strokeNoScale, where acture lineWidth should\n  // be calculated.\n  var valueLineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n\n  if (valueLineWidth) {\n    pathForLineWidth.attr({\n      scale: symbolScale.slice(),\n      rotation: rotation\n    });\n    pathForLineWidth.updateTransform();\n    valueLineWidth /= pathForLineWidth.getLineScale();\n    valueLineWidth *= symbolScale[opt.valueDim.index];\n  }\n\n  output.valueLineWidth = valueLineWidth;\n}\n\nfunction prepareLayoutInfo(itemModel, symbolSize, layout, symbolRepeat, symbolClip, symbolOffset, symbolPosition, valueLineWidth, boundingLength, repeatCutLength, opt, output) {\n  var categoryDim = opt.categoryDim;\n  var valueDim = opt.valueDim;\n  var pxSign = output.pxSign;\n  var unitLength = Math.max(symbolSize[valueDim.index] + valueLineWidth, 0);\n  var pathLen = unitLength; // Note: rotation will not effect the layout of symbols, because user may\n  // want symbols to rotate on its center, which should not be translated\n  // when rotating.\n\n  if (symbolRepeat) {\n    var absBoundingLength = Math.abs(boundingLength);\n    var symbolMargin = zrUtil.retrieve(itemModel.get('symbolMargin'), '15%') + '';\n    var hasEndGap = false;\n\n    if (symbolMargin.lastIndexOf('!') === symbolMargin.length - 1) {\n      hasEndGap = true;\n      symbolMargin = symbolMargin.slice(0, symbolMargin.length - 1);\n    }\n\n    symbolMargin = parsePercent(symbolMargin, symbolSize[valueDim.index]);\n    var uLenWithMargin = Math.max(unitLength + symbolMargin * 2, 0); // When symbol margin is less than 0, margin at both ends will be subtracted\n    // to ensure that all of the symbols will not be overflow the given area.\n\n    var endFix = hasEndGap ? 0 : symbolMargin * 2; // Both final repeatTimes and final symbolMargin area calculated based on\n    // boundingLength.\n\n    var repeatSpecified = isNumeric(symbolRepeat);\n    var repeatTimes = repeatSpecified ? symbolRepeat : toIntTimes((absBoundingLength + endFix) / uLenWithMargin); // Adjust calculate margin, to ensure each symbol is displayed\n    // entirely in the given layout area.\n\n    var mDiff = absBoundingLength - repeatTimes * unitLength;\n    symbolMargin = mDiff / 2 / (hasEndGap ? repeatTimes : repeatTimes - 1);\n    uLenWithMargin = unitLength + symbolMargin * 2;\n    endFix = hasEndGap ? 0 : symbolMargin * 2; // Update repeatTimes when not all symbol will be shown.\n\n    if (!repeatSpecified && symbolRepeat !== 'fixed') {\n      repeatTimes = repeatCutLength ? toIntTimes((Math.abs(repeatCutLength) + endFix) / uLenWithMargin) : 0;\n    }\n\n    pathLen = repeatTimes * uLenWithMargin - endFix;\n    output.repeatTimes = repeatTimes;\n    output.symbolMargin = symbolMargin;\n  }\n\n  var sizeFix = pxSign * (pathLen / 2);\n  var pathPosition = output.pathPosition = [];\n  pathPosition[categoryDim.index] = layout[categoryDim.wh] / 2;\n  pathPosition[valueDim.index] = symbolPosition === 'start' ? sizeFix : symbolPosition === 'end' ? boundingLength - sizeFix : boundingLength / 2; // 'center'\n\n  if (symbolOffset) {\n    pathPosition[0] += symbolOffset[0];\n    pathPosition[1] += symbolOffset[1];\n  }\n\n  var bundlePosition = output.bundlePosition = [];\n  bundlePosition[categoryDim.index] = layout[categoryDim.xy];\n  bundlePosition[valueDim.index] = layout[valueDim.xy];\n  var barRectShape = output.barRectShape = zrUtil.extend({}, layout);\n  barRectShape[valueDim.wh] = pxSign * Math.max(Math.abs(layout[valueDim.wh]), Math.abs(pathPosition[valueDim.index] + sizeFix));\n  barRectShape[categoryDim.wh] = layout[categoryDim.wh];\n  var clipShape = output.clipShape = {}; // Consider that symbol may be overflow layout rect.\n\n  clipShape[categoryDim.xy] = -layout[categoryDim.xy];\n  clipShape[categoryDim.wh] = opt.ecSize[categoryDim.wh];\n  clipShape[valueDim.xy] = 0;\n  clipShape[valueDim.wh] = layout[valueDim.wh];\n}\n\nfunction createPath(symbolMeta) {\n  var symbolPatternSize = symbolMeta.symbolPatternSize;\n  var path = createSymbol( // Consider texture img, make a big size.\n  symbolMeta.symbolType, -symbolPatternSize / 2, -symbolPatternSize / 2, symbolPatternSize, symbolPatternSize, symbolMeta.color);\n  path.attr({\n    culling: true\n  });\n  path.type !== 'image' && path.setStyle({\n    strokeNoScale: true\n  });\n  return path;\n}\n\nfunction createOrUpdateRepeatSymbols(bar, opt, symbolMeta, isUpdate) {\n  var bundle = bar.__pictorialBundle;\n  var symbolSize = symbolMeta.symbolSize;\n  var valueLineWidth = symbolMeta.valueLineWidth;\n  var pathPosition = symbolMeta.pathPosition;\n  var valueDim = opt.valueDim;\n  var repeatTimes = symbolMeta.repeatTimes || 0;\n  var index = 0;\n  var unit = symbolSize[opt.valueDim.index] + valueLineWidth + symbolMeta.symbolMargin * 2;\n  eachPath(bar, function (path) {\n    path.__pictorialAnimationIndex = index;\n    path.__pictorialRepeatTimes = repeatTimes;\n\n    if (index < repeatTimes) {\n      updateAttr(path, null, makeTarget(index), symbolMeta, isUpdate);\n    } else {\n      updateAttr(path, null, {\n        scale: [0, 0]\n      }, symbolMeta, isUpdate, function () {\n        bundle.remove(path);\n      });\n    }\n\n    updateHoverAnimation(path, symbolMeta);\n    index++;\n  });\n\n  for (; index < repeatTimes; index++) {\n    var path = createPath(symbolMeta);\n    path.__pictorialAnimationIndex = index;\n    path.__pictorialRepeatTimes = repeatTimes;\n    bundle.add(path);\n    var target = makeTarget(index);\n    updateAttr(path, {\n      position: target.position,\n      scale: [0, 0]\n    }, {\n      scale: target.scale,\n      rotation: target.rotation\n    }, symbolMeta, isUpdate); // FIXME\n    // If all emphasis/normal through action.\n\n    path.on('mouseover', onMouseOver).on('mouseout', onMouseOut);\n    updateHoverAnimation(path, symbolMeta);\n  }\n\n  function makeTarget(index) {\n    var position = pathPosition.slice(); // (start && pxSign > 0) || (end && pxSign < 0): i = repeatTimes - index\n    // Otherwise: i = index;\n\n    var pxSign = symbolMeta.pxSign;\n    var i = index;\n\n    if (symbolMeta.symbolRepeatDirection === 'start' ? pxSign > 0 : pxSign < 0) {\n      i = repeatTimes - 1 - index;\n    }\n\n    position[valueDim.index] = unit * (i - repeatTimes / 2 + 0.5) + pathPosition[valueDim.index];\n    return {\n      position: position,\n      scale: symbolMeta.symbolScale.slice(),\n      rotation: symbolMeta.rotation\n    };\n  }\n\n  function onMouseOver() {\n    eachPath(bar, function (path) {\n      path.trigger('emphasis');\n    });\n  }\n\n  function onMouseOut() {\n    eachPath(bar, function (path) {\n      path.trigger('normal');\n    });\n  }\n}\n\nfunction createOrUpdateSingleSymbol(bar, opt, symbolMeta, isUpdate) {\n  var bundle = bar.__pictorialBundle;\n  var mainPath = bar.__pictorialMainPath;\n\n  if (!mainPath) {\n    mainPath = bar.__pictorialMainPath = createPath(symbolMeta);\n    bundle.add(mainPath);\n    updateAttr(mainPath, {\n      position: symbolMeta.pathPosition.slice(),\n      scale: [0, 0],\n      rotation: symbolMeta.rotation\n    }, {\n      scale: symbolMeta.symbolScale.slice()\n    }, symbolMeta, isUpdate);\n    mainPath.on('mouseover', onMouseOver).on('mouseout', onMouseOut);\n  } else {\n    updateAttr(mainPath, null, {\n      position: symbolMeta.pathPosition.slice(),\n      scale: symbolMeta.symbolScale.slice(),\n      rotation: symbolMeta.rotation\n    }, symbolMeta, isUpdate);\n  }\n\n  updateHoverAnimation(mainPath, symbolMeta);\n\n  function onMouseOver() {\n    this.trigger('emphasis');\n  }\n\n  function onMouseOut() {\n    this.trigger('normal');\n  }\n} // bar rect is used for label.\n\n\nfunction createOrUpdateBarRect(bar, symbolMeta, isUpdate) {\n  var rectShape = zrUtil.extend({}, symbolMeta.barRectShape);\n  var barRect = bar.__pictorialBarRect;\n\n  if (!barRect) {\n    barRect = bar.__pictorialBarRect = new graphic.Rect({\n      z2: 2,\n      shape: rectShape,\n      silent: true,\n      style: {\n        stroke: 'transparent',\n        fill: 'transparent',\n        lineWidth: 0\n      }\n    });\n    bar.add(barRect);\n  } else {\n    updateAttr(barRect, null, {\n      shape: rectShape\n    }, symbolMeta, isUpdate);\n  }\n}\n\nfunction createOrUpdateClip(bar, opt, symbolMeta, isUpdate) {\n  // If not clip, symbol will be remove and rebuilt.\n  if (symbolMeta.symbolClip) {\n    var clipPath = bar.__pictorialClipPath;\n    var clipShape = zrUtil.extend({}, symbolMeta.clipShape);\n    var valueDim = opt.valueDim;\n    var animationModel = symbolMeta.animationModel;\n    var dataIndex = symbolMeta.dataIndex;\n\n    if (clipPath) {\n      graphic.updateProps(clipPath, {\n        shape: clipShape\n      }, animationModel, dataIndex);\n    } else {\n      clipShape[valueDim.wh] = 0;\n      clipPath = new graphic.Rect({\n        shape: clipShape\n      });\n\n      bar.__pictorialBundle.setClipPath(clipPath);\n\n      bar.__pictorialClipPath = clipPath;\n      var target = {};\n      target[valueDim.wh] = symbolMeta.clipShape[valueDim.wh];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](clipPath, {\n        shape: target\n      }, animationModel, dataIndex);\n    }\n  }\n}\n\nfunction getItemModel(data, dataIndex) {\n  var itemModel = data.getItemModel(dataIndex);\n  itemModel.getAnimationDelayParams = getAnimationDelayParams;\n  itemModel.isAnimationEnabled = isAnimationEnabled;\n  return itemModel;\n}\n\nfunction getAnimationDelayParams(path) {\n  // The order is the same as the z-order, see `symbolRepeatDiretion`.\n  return {\n    index: path.__pictorialAnimationIndex,\n    count: path.__pictorialRepeatTimes\n  };\n}\n\nfunction isAnimationEnabled() {\n  // `animation` prop can be set on itemModel in pictorial bar chart.\n  return this.parentModel.isAnimationEnabled() && !!this.getShallow('animation');\n}\n\nfunction updateHoverAnimation(path, symbolMeta) {\n  path.off('emphasis').off('normal');\n  var scale = symbolMeta.symbolScale.slice();\n  symbolMeta.hoverAnimation && path.on('emphasis', function () {\n    this.animateTo({\n      scale: [scale[0] * 1.1, scale[1] * 1.1]\n    }, 400, 'elasticOut');\n  }).on('normal', function () {\n    this.animateTo({\n      scale: scale.slice()\n    }, 400, 'elasticOut');\n  });\n}\n\nfunction createBar(data, opt, symbolMeta, isUpdate) {\n  // bar is the main element for each data.\n  var bar = new graphic.Group(); // bundle is used for location and clip.\n\n  var bundle = new graphic.Group();\n  bar.add(bundle);\n  bar.__pictorialBundle = bundle;\n  bundle.attr('position', symbolMeta.bundlePosition.slice());\n\n  if (symbolMeta.symbolRepeat) {\n    createOrUpdateRepeatSymbols(bar, opt, symbolMeta);\n  } else {\n    createOrUpdateSingleSymbol(bar, opt, symbolMeta);\n  }\n\n  createOrUpdateBarRect(bar, symbolMeta, isUpdate);\n  createOrUpdateClip(bar, opt, symbolMeta, isUpdate);\n  bar.__pictorialShapeStr = getShapeStr(data, symbolMeta);\n  bar.__pictorialSymbolMeta = symbolMeta;\n  return bar;\n}\n\nfunction updateBar(bar, opt, symbolMeta) {\n  var animationModel = symbolMeta.animationModel;\n  var dataIndex = symbolMeta.dataIndex;\n  var bundle = bar.__pictorialBundle;\n  graphic.updateProps(bundle, {\n    position: symbolMeta.bundlePosition.slice()\n  }, animationModel, dataIndex);\n\n  if (symbolMeta.symbolRepeat) {\n    createOrUpdateRepeatSymbols(bar, opt, symbolMeta, true);\n  } else {\n    createOrUpdateSingleSymbol(bar, opt, symbolMeta, true);\n  }\n\n  createOrUpdateBarRect(bar, symbolMeta, true);\n  createOrUpdateClip(bar, opt, symbolMeta, true);\n}\n\nfunction removeBar(data, dataIndex, animationModel, bar) {\n  // Not show text when animating\n  var labelRect = bar.__pictorialBarRect;\n  labelRect && (labelRect.style.text = null);\n  var pathes = [];\n  eachPath(bar, function (path) {\n    pathes.push(path);\n  });\n  bar.__pictorialMainPath && pathes.push(bar.__pictorialMainPath); // I do not find proper remove animation for clip yet.\n\n  bar.__pictorialClipPath && (animationModel = null);\n  zrUtil.each(pathes, function (path) {\n    graphic.updateProps(path, {\n      scale: [0, 0]\n    }, animationModel, dataIndex, function () {\n      bar.parent && bar.parent.remove(bar);\n    });\n  });\n  data.setItemGraphicEl(dataIndex, null);\n}\n\nfunction getShapeStr(data, symbolMeta) {\n  return [data.getItemVisual(symbolMeta.dataIndex, 'symbol') || 'none', !!symbolMeta.symbolRepeat, !!symbolMeta.symbolClip].join(':');\n}\n\nfunction eachPath(bar, cb, context) {\n  // Do not use Group#eachChild, because it do not support remove.\n  zrUtil.each(bar.__pictorialBundle.children(), function (el) {\n    el !== bar.__pictorialBarRect && cb.call(context, el);\n  });\n}\n\nfunction updateAttr(el, immediateAttrs, animationAttrs, symbolMeta, isUpdate, cb) {\n  immediateAttrs && el.attr(immediateAttrs); // when symbolCip used, only clip path has init animation, otherwise it would be weird effect.\n\n  if (symbolMeta.symbolClip && !isUpdate) {\n    animationAttrs && el.attr(animationAttrs);\n  } else {\n    animationAttrs && graphic[isUpdate ? 'updateProps' : 'initProps'](el, animationAttrs, symbolMeta.animationModel, symbolMeta.dataIndex, cb);\n  }\n}\n\nfunction updateCommon(bar, opt, symbolMeta) {\n  var color = symbolMeta.color;\n  var dataIndex = symbolMeta.dataIndex;\n  var itemModel = symbolMeta.itemModel; // Color must be excluded.\n  // Because symbol provide setColor individually to set fill and stroke\n\n  var normalStyle = itemModel.getModel('itemStyle.normal').getItemStyle(['color']);\n  var hoverStyle = itemModel.getModel('itemStyle.emphasis').getItemStyle();\n  var cursorStyle = itemModel.getShallow('cursor');\n  eachPath(bar, function (path) {\n    // PENDING setColor should be before setStyle!!!\n    path.setColor(color);\n    path.setStyle(zrUtil.defaults({\n      fill: color,\n      opacity: symbolMeta.opacity\n    }, normalStyle));\n    graphic.setHoverStyle(path, hoverStyle);\n    cursorStyle && (path.cursor = cursorStyle);\n    path.z2 = symbolMeta.z2;\n  });\n  var barRectHoverStyle = {};\n  var barPositionOutside = opt.valueDim.posDesc[+(symbolMeta.boundingLength > 0)];\n  var barRect = bar.__pictorialBarRect;\n  setLabel(barRect.style, barRectHoverStyle, itemModel, color, opt.seriesModel, dataIndex, barPositionOutside);\n  graphic.setHoverStyle(barRect, barRectHoverStyle);\n}\n\nfunction toIntTimes(times) {\n  var roundedTimes = Math.round(times); // Escapse accurate error\n\n  return Math.abs(times - roundedTimes) < 1e-4 ? roundedTimes : Math.ceil(times);\n}\n\nvar _default = BarView;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"../component/singleAxis\");\n\nrequire(\"./themeRiver/ThemeRiverSeries\");\n\nrequire(\"./themeRiver/ThemeRiverView\");\n\nvar themeRiverLayout = require(\"./themeRiver/themeRiverLayout\");\n\nvar themeRiverVisual = require(\"./themeRiver/themeRiverVisual\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\necharts.registerLayout(themeRiverLayout);\necharts.registerVisual(themeRiverVisual);\necharts.registerProcessor(zrUtil.curry(dataFilter, 'themeRiver'));","var Single = require(\"./Single\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n/**\n * Single coordinate system creator.\n */\n\n/**\n * Create single coordinate system and inject it into seriesModel.\n *\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Array.<module:echarts/coord/single/Single>}\n */\nfunction create(ecModel, api) {\n  var singles = [];\n  ecModel.eachComponent('singleAxis', function (axisModel, idx) {\n    var single = new Single(axisModel, ecModel, api);\n    single.name = 'single_' + idx;\n    single.resize(axisModel, api);\n    axisModel.coordinateSystem = single;\n    singles.push(single);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.get('coordinateSystem') === 'singleAxis') {\n      var singleAxisModel = ecModel.queryComponents({\n        mainType: 'singleAxis',\n        index: seriesModel.get('singleAxisIndex'),\n        id: seriesModel.get('singleAxisId')\n      })[0];\n      seriesModel.coordinateSystem = singleAxisModel && singleAxisModel.coordinateSystem;\n    }\n  });\n  return singles;\n}\n\nCoordinateSystem.register('single', {\n  create: create,\n  dimensions: Single.prototype.dimensions\n});","var SingleAxis = require(\"./SingleAxis\");\n\nvar axisHelper = require(\"../axisHelper\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\n/**\n * Single coordinates system.\n */\n\n/**\n * Create a single coordinates system.\n *\n * @param {module:echarts/coord/single/AxisModel} axisModel\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n */\nfunction Single(axisModel, ecModel, api) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.dimension = 'single';\n  /**\n   * Add it just for draw tooltip.\n   *\n   * @type {Array.<string>}\n   * @readOnly\n   */\n\n  this.dimensions = ['single'];\n  /**\n   * @private\n   * @type {module:echarts/coord/single/SingleAxis}.\n   */\n\n  this._axis = null;\n  /**\n   * @private\n   * @type {module:zrender/core/BoundingRect}\n   */\n\n  this._rect;\n\n  this._init(axisModel, ecModel, api);\n  /**\n   * @type {module:echarts/coord/single/AxisModel}\n   */\n\n\n  this.model = axisModel;\n}\n\nSingle.prototype = {\n  type: 'singleAxis',\n  axisPointerEnabled: true,\n  constructor: Single,\n\n  /**\n   * Initialize single coordinate system.\n   *\n   * @param  {module:echarts/coord/single/AxisModel} axisModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @private\n   */\n  _init: function (axisModel, ecModel, api) {\n    var dim = this.dimension;\n    var axis = new SingleAxis(dim, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisModel.get('position'));\n    var isCategory = axis.type === 'category';\n    axis.onBand = isCategory && axisModel.get('boundaryGap');\n    axis.inverse = axisModel.get('inverse');\n    axis.orient = axisModel.get('orient');\n    axisModel.axis = axis;\n    axis.model = axisModel;\n    axis.coordinateSystem = this;\n    this._axis = axis;\n  },\n\n  /**\n   * Update axis scale after data processed\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  update: function (ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.coordinateSystem === this) {\n        var data = seriesModel.getData();\n        var dim = this.dimension;\n\n        this._axis.scale.unionExtentFromData(data, seriesModel.coordDimToDataDim(dim));\n\n        axisHelper.niceScaleExtent(this._axis.scale, this._axis.model);\n      }\n    }, this);\n  },\n\n  /**\n   * Resize the single coordinate system.\n   *\n   * @param  {module:echarts/coord/single/AxisModel} axisModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  resize: function (axisModel, api) {\n    this._rect = getLayoutRect({\n      left: axisModel.get('left'),\n      top: axisModel.get('top'),\n      right: axisModel.get('right'),\n      bottom: axisModel.get('bottom'),\n      width: axisModel.get('width'),\n      height: axisModel.get('height')\n    }, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n\n    this._adjustAxis();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getRect: function () {\n    return this._rect;\n  },\n\n  /**\n   * @private\n   */\n  _adjustAxis: function () {\n    var rect = this._rect;\n    var axis = this._axis;\n    var isHorizontal = axis.isHorizontal();\n    var extent = isHorizontal ? [0, rect.width] : [0, rect.height];\n    var idx = axis.reverse ? 1 : 0;\n    axis.setExtent(extent[idx], extent[1 - idx]);\n\n    this._updateAxisTransform(axis, isHorizontal ? rect.x : rect.y);\n  },\n\n  /**\n   * @param  {module:echarts/coord/single/SingleAxis} axis\n   * @param  {number} coordBase\n   */\n  _updateAxisTransform: function (axis, coordBase) {\n    var axisExtent = axis.getExtent();\n    var extentSum = axisExtent[0] + axisExtent[1];\n    var isHorizontal = axis.isHorizontal();\n    axis.toGlobalCoord = isHorizontal ? function (coord) {\n      return coord + coordBase;\n    } : function (coord) {\n      return extentSum - coord + coordBase;\n    };\n    axis.toLocalCoord = isHorizontal ? function (coord) {\n      return coord - coordBase;\n    } : function (coord) {\n      return extentSum - coord + coordBase;\n    };\n  },\n\n  /**\n   * Get axis.\n   *\n   * @return {module:echarts/coord/single/SingleAxis}\n   */\n  getAxis: function () {\n    return this._axis;\n  },\n\n  /**\n   * Get axis, add it just for draw tooltip.\n   *\n   * @return {[type]} [description]\n   */\n  getBaseAxis: function () {\n    return this._axis;\n  },\n\n  /**\n   * @return {Array.<module:echarts/coord/Axis>}\n   */\n  getAxes: function () {\n    return [this._axis];\n  },\n\n  /**\n   * @return {Object} {baseAxes: [], otherAxes: []}\n   */\n  getTooltipAxes: function () {\n    return {\n      baseAxes: [this.getAxis()]\n    };\n  },\n\n  /**\n   * If contain point.\n   *\n   * @param  {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var rect = this.getRect();\n    var axis = this.getAxis();\n    var orient = axis.orient;\n\n    if (orient === 'horizontal') {\n      return axis.contain(axis.toLocalCoord(point[0])) && point[1] >= rect.y && point[1] <= rect.y + rect.height;\n    } else {\n      return axis.contain(axis.toLocalCoord(point[1])) && point[0] >= rect.y && point[0] <= rect.y + rect.height;\n    }\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToData: function (point) {\n    var axis = this.getAxis();\n    return [axis.coordToData(axis.toLocalCoord(point[axis.orient === 'horizontal' ? 0 : 1]))];\n  },\n\n  /**\n   * Convert the series data to concrete point.\n   *\n   * @param  {number|Array.<number>} val\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (val) {\n    var axis = this.getAxis();\n    var rect = this.getRect();\n    var pt = [];\n    var idx = axis.orient === 'horizontal' ? 0 : 1;\n\n    if (val instanceof Array) {\n      val = val[0];\n    }\n\n    pt[idx] = axis.toGlobalCoord(axis.dataToCoord(+val));\n    pt[1 - idx] = idx === 0 ? rect.y + rect.height / 2 : rect.x + rect.width / 2;\n    return pt;\n  }\n};\nvar _default = Single;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/**\n * @constructor  module:echarts/coord/single/SingleAxis\n * @extends {module:echarts/coord/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar SingleAxis = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   * - 'category'\n   * - 'value'\n   * - 'time'\n   * - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   *  @type {string}\n   */\n\n  this.position = position || 'bottom';\n  /**\n   * Axis orient\n   *  - 'horizontal'\n   *  - 'vertical'\n   * @type {[type]}\n   */\n\n  this.orient = null;\n  /**\n   * @type {number}\n   */\n\n  this._labelInterval = null;\n};\n\nSingleAxis.prototype = {\n  constructor: SingleAxis,\n\n  /**\n   * Axis model\n   * @type {module:echarts/coord/single/AxisModel}\n   */\n  model: null,\n\n  /**\n   * Judge the orient of the axis.\n   * @return {boolean}\n   */\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordinateSystem.pointToData(point, clamp)[0];\n  },\n\n  /**\n   * Convert the local coord(processed by dataToCoord())\n   * to global coord(concrete pixel coord).\n   * designated by module:echarts/coord/single/Single.\n   * @type {Function}\n   */\n  toGlobalCoord: null,\n\n  /**\n   * Convert the global coord to local coord.\n   * designated by module:echarts/coord/single/Single.\n   * @type {Function}\n   */\n  toLocalCoord: null\n};\nzrUtil.inherits(SingleAxis, Axis);\nvar _default = SingleAxis;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar singleAxisHelper = require(\"./singleAxisHelper\");\n\nvar AxisView = require(\"./AxisView\");\n\nvar getInterval = AxisBuilder.getInterval;\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttr = 'splitLine';\nvar SingleAxisView = AxisView.extend({\n  type: 'singleAxis',\n  axisPointerClass: 'SingleAxisPointer',\n  render: function (axisModel, ecModel, api, payload) {\n    var group = this.group;\n    group.removeAll();\n    var layout = singleAxisHelper.layout(axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n    group.add(axisBuilder.getGroup());\n\n    if (axisModel.get(selfBuilderAttr + '.show')) {\n      this['_' + selfBuilderAttr](axisModel, layout.labelInterval);\n    }\n\n    SingleAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n  _splitLine: function (axisModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineWidth = lineStyleModel.get('width');\n    var lineColors = lineStyleModel.get('color');\n    var lineInterval = getInterval(splitLineModel, labelInterval);\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var gridRect = axisModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var splitLines = [];\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords();\n    var p1 = [];\n    var p2 = [];\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\n    for (var i = 0; i < ticksCoords.length; ++i) {\n      if (ifIgnoreOnTick(axis, i, lineInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Line(graphic.subPixelOptimizeLine({\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: {\n          lineWidth: lineWidth\n        },\n        silent: true\n      })));\n    }\n\n    for (var i = 0; i < splitLines.length; ++i) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: {\n          stroke: lineColors[i % lineColors.length],\n          lineDash: lineStyleModel.getLineDash(lineWidth),\n          lineWidth: lineWidth\n        },\n        silent: true\n      }));\n    }\n  }\n});\nvar _default = SingleAxisView;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\nvar AxisModel = ComponentModel.extend({\n  type: 'singleAxis',\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/single/SingleAxis}\n   */\n  axis: null,\n\n  /**\n   * @type {module:echarts/coord/single/Single}\n   */\n  coordinateSystem: null,\n\n  /**\n   * @override\n   */\n  getCoordSysModel: function () {\n    return this;\n  }\n});\nvar defaultOption = {\n  left: '5%',\n  top: '5%',\n  right: '5%',\n  bottom: '5%',\n  type: 'value',\n  position: 'bottom',\n  orient: 'horizontal',\n  axisLine: {\n    show: true,\n    lineStyle: {\n      width: 2,\n      type: 'solid'\n    }\n  },\n  // Single coordinate system and single axis is the,\n  // which is used as the parent tooltip model.\n  // same model, so we set default tooltip show as true.\n  tooltip: {\n    show: true\n  },\n  axisTick: {\n    show: true,\n    length: 6,\n    lineStyle: {\n      width: 2\n    }\n  },\n  axisLabel: {\n    show: true,\n    interval: 'auto'\n  },\n  splitLine: {\n    show: true,\n    lineStyle: {\n      type: 'dashed',\n      opacity: 0.2\n    }\n  }\n};\n\nfunction getAxisType(axisName, option) {\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\naxisModelCreator('single', AxisModel, getAxisType, defaultOption);\nvar _default = AxisModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar modelHelper = require(\"./modelHelper\");\n\nvar findPointFromSeries = require(\"./findPointFromSeries\");\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry;\nvar get = modelUtil.makeGetter();\n/**\n * Basic logic: check all axis, if they do not demand show/highlight,\n * then hide/downplay them.\n *\n * @param {Object} coordSysAxesInfo\n * @param {Object} payload\n * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n * @param {Object} [payload.dataIndex] finder, restrict target axes.\n * @param {Object} [payload.axesInfo] finder, restrict target axes.\n *        [{\n *          axisDim: 'x'|'y'|'angle'|...,\n *          axisIndex: ...,\n *          value: ...\n *        }, ...]\n * @param {Function} [payload.dispatchAction]\n * @param {Object} [payload.tooltipOption]\n * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n *        which can be specified in dispatchAction\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Object} content of event obj for echarts.connect.\n */\n\nfunction _default(payload, ecModel, api) {\n  var currTrigger = payload.currTrigger;\n  var point = [payload.x, payload.y];\n  var finder = payload;\n  var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\n  // See #6121. But we are not able to reproduce it yet.\n\n  if (!coordSysAxesInfo) {\n    return;\n  }\n\n  if (illegalPoint(point)) {\n    // Used in the default behavior of `connection`: use the sample seriesIndex\n    // and dataIndex. And also used in the tooltipView trigger.\n    point = findPointFromSeries({\n      seriesIndex: finder.seriesIndex,\n      // Do not use dataIndexInside from other ec instance.\n      // FIXME: auto detect it?\n      dataIndex: finder.dataIndex\n    }, ecModel).point;\n  }\n\n  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n  // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n  // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n  // and dataIndex.\n\n  var inputAxesInfo = finder.axesInfo;\n  var axesInfo = coordSysAxesInfo.axesInfo;\n  var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n  var outputFinder = {};\n  var showValueMap = {};\n  var dataByCoordSys = {\n    list: [],\n    map: {}\n  };\n  var updaters = {\n    showPointer: curry(showPointer, showValueMap),\n    showTooltip: curry(showTooltip, dataByCoordSys)\n  }; // Process for triggered axes.\n\n  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n    // If a point given, it must be contained by the coordinate system.\n    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n      var axis = axisInfo.axis;\n      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\n\n      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n        var val = inputAxisInfo && inputAxisInfo.value;\n\n        if (val == null && !isIllegalPoint) {\n          val = axis.pointToData(point);\n        }\n\n        val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n      }\n    });\n  }); // Process for linked axes.\n\n  var linkTriggers = {};\n  each(axesInfo, function (tarAxisInfo, tarKey) {\n    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\n\n    if (linkGroup && !showValueMap[tarKey]) {\n      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\n\n        if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n          var val = srcValItem.value;\n          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\n          linkTriggers[tarAxisInfo.key] = val;\n        }\n      });\n    }\n  });\n  each(linkTriggers, function (val, tarKey) {\n    processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n  });\n  updateModelActually(showValueMap, axesInfo, outputFinder);\n  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n  dispatchHighDownActually(axesInfo, dispatchAction, api);\n  return outputFinder;\n}\n\nfunction processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n  var axis = axisInfo.axis;\n\n  if (axis.scale.isBlank() || !axis.containData(newValue)) {\n    return;\n  }\n\n  if (!axisInfo.involveSeries) {\n    updaters.showPointer(axisInfo, newValue);\n    return;\n  } // Heavy calculation. So put it after axis.containData checking.\n\n\n  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n  var payloadBatch = payloadInfo.payloadBatch;\n  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\n  // By defualt use the first involved series data as a sample to connect.\n\n  if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n    zrUtil.extend(outputFinder, payloadBatch[0]);\n  } // If no linkSource input, this process is for collecting link\n  // target, where snap should not be accepted.\n\n\n  if (!dontSnap && axisInfo.snap) {\n    if (axis.containData(snapToValue) && snapToValue != null) {\n      newValue = snapToValue;\n    }\n  }\n\n  updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder); // Tooltip should always be snapToValue, otherwise there will be\n  // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n\n  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n}\n\nfunction buildPayloadsBySeries(value, axisInfo) {\n  var axis = axisInfo.axis;\n  var dim = axis.dim;\n  var snapToValue = value;\n  var payloadBatch = [];\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n  each(axisInfo.seriesModels, function (series, idx) {\n    var dataDim = series.coordDimToDataDim(dim);\n    var seriesNestestValue;\n    var dataIndices;\n\n    if (series.getAxisTooltipData) {\n      var result = series.getAxisTooltipData(dataDim, value, axis);\n      dataIndices = result.dataIndices;\n      seriesNestestValue = result.nestestValue;\n    } else {\n      dataIndices = series.getData().indicesOfNearest(dataDim[0], value, // Add a threshold to avoid find the wrong dataIndex\n      // when data length is not same.\n      false, axis.type === 'category' ? 0.5 : null);\n\n      if (!dataIndices.length) {\n        return;\n      }\n\n      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n    }\n\n    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n      return;\n    }\n\n    var diff = value - seriesNestestValue;\n    var dist = Math.abs(diff); // Consider category case\n\n    if (dist <= minDist) {\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        snapToValue = seriesNestestValue;\n        payloadBatch.length = 0;\n      }\n\n      each(dataIndices, function (dataIndex) {\n        payloadBatch.push({\n          seriesIndex: series.seriesIndex,\n          dataIndexInside: dataIndex,\n          dataIndex: series.getData().getRawIndex(dataIndex)\n        });\n      });\n    }\n  });\n  return {\n    payloadBatch: payloadBatch,\n    snapToValue: snapToValue\n  };\n}\n\nfunction showPointer(showValueMap, axisInfo, value, payloadBatch) {\n  showValueMap[axisInfo.key] = {\n    value: value,\n    payloadBatch: payloadBatch\n  };\n}\n\nfunction showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n  var payloadBatch = payloadInfo.payloadBatch;\n  var axis = axisInfo.axis;\n  var axisModel = axis.model;\n  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\n  // whose length will be used to judge whether dispatch action.\n\n  if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n    return;\n  }\n\n  var coordSysModel = axisInfo.coordSys.model;\n  var coordSysKey = modelHelper.makeKey(coordSysModel);\n  var coordSysItem = dataByCoordSys.map[coordSysKey];\n\n  if (!coordSysItem) {\n    coordSysItem = dataByCoordSys.map[coordSysKey] = {\n      coordSysId: coordSysModel.id,\n      coordSysIndex: coordSysModel.componentIndex,\n      coordSysType: coordSysModel.type,\n      coordSysMainType: coordSysModel.mainType,\n      dataByAxis: []\n    };\n    dataByCoordSys.list.push(coordSysItem);\n  }\n\n  coordSysItem.dataByAxis.push({\n    axisDim: axis.dim,\n    axisIndex: axisModel.componentIndex,\n    axisType: axisModel.type,\n    axisId: axisModel.id,\n    value: value,\n    // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n    // depends that all models have been updated. So it should not be performed\n    // here. Considering axisPointerModel used here is volatile, which is hard\n    // to be retrieve in TooltipView, we prepare parameters here.\n    valueLabelOpt: {\n      precision: axisPointerModel.get('label.precision'),\n      formatter: axisPointerModel.get('label.formatter')\n    },\n    seriesDataIndices: payloadBatch.slice()\n  });\n}\n\nfunction updateModelActually(showValueMap, axesInfo, outputFinder) {\n  var outputAxesInfo = outputFinder.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    var valItem = showValueMap[key];\n\n    if (valItem) {\n      !axisInfo.useHandle && (option.status = 'show');\n      option.value = valItem.value; // For label formatter param and highlight.\n\n      option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n    } // When always show (e.g., handle used), remain\n    // original value and status.\n    else {\n        // If hide, value still need to be set, consider\n        // click legend to toggle axis blank.\n        !axisInfo.useHandle && (option.status = 'hide');\n      } // If status is 'hide', should be no info in payload.\n\n\n    option.status === 'show' && outputAxesInfo.push({\n      axisDim: axisInfo.axis.dim,\n      axisIndex: axisInfo.axis.model.componentIndex,\n      value: option.value\n    });\n  });\n}\n\nfunction dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n  // Basic logic: If no showTip required, hideTip will be dispatched.\n  if (illegalPoint(point) || !dataByCoordSys.list.length) {\n    dispatchAction({\n      type: 'hideTip'\n    });\n    return;\n  } // In most case only one axis (or event one series is used). It is\n  // convinient to fetch payload.seriesIndex and payload.dataIndex\n  // dirtectly. So put the first seriesIndex and dataIndex of the first\n  // axis on the payload.\n\n\n  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n  dispatchAction({\n    type: 'showTip',\n    escapeConnect: true,\n    x: point[0],\n    y: point[1],\n    tooltipOption: payload.tooltipOption,\n    position: payload.position,\n    dataIndexInside: sampleItem.dataIndexInside,\n    dataIndex: sampleItem.dataIndex,\n    seriesIndex: sampleItem.seriesIndex,\n    dataByCoordSys: dataByCoordSys.list\n  });\n}\n\nfunction dispatchHighDownActually(axesInfo, dispatchAction, api) {\n  // FIXME\n  // highlight status modification shoule be a stage of main process?\n  // (Consider confilct (e.g., legend and axisPointer) and setOption)\n  var zr = api.getZr();\n  var highDownKey = 'axisPointerLastHighlights';\n  var lastHighlights = get(zr)[highDownKey] || {};\n  var newHighlights = get(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\n  // Build hash map and remove duplicate incidentally.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n      newHighlights[key] = batchItem;\n    });\n  }); // Diff.\n\n  var toHighlight = [];\n  var toDownplay = [];\n  zrUtil.each(lastHighlights, function (batchItem, key) {\n    !newHighlights[key] && toDownplay.push(batchItem);\n  });\n  zrUtil.each(newHighlights, function (batchItem, key) {\n    !lastHighlights[key] && toHighlight.push(batchItem);\n  });\n  toDownplay.length && api.dispatchAction({\n    type: 'downplay',\n    escapeConnect: true,\n    batch: toDownplay\n  });\n  toHighlight.length && api.dispatchAction({\n    type: 'highlight',\n    escapeConnect: true,\n    batch: toHighlight\n  });\n}\n\nfunction findInputAxisInfo(inputAxesInfo, axisInfo) {\n  for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n    var inputAxisInfo = inputAxesInfo[i];\n\n    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\n      return inputAxisInfo;\n    }\n  }\n}\n\nfunction makeMapperParam(axisInfo) {\n  var axisModel = axisInfo.axis.model;\n  var item = {};\n  var dim = item.axisDim = axisInfo.axis.dim;\n  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n  item.axisName = item[dim + 'AxisName'] = axisModel.name;\n  item.axisId = item[dim + 'AxisId'] = axisModel.id;\n  return item;\n}\n\nfunction illegalPoint(point) {\n  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar AxisPointerModel = echarts.extendComponentModel({\n  type: 'axisPointer',\n  coordSysAxesInfo: null,\n  defaultOption: {\n    // 'auto' means that show when triggered by tooltip or handle.\n    show: 'auto',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: null,\n    // set default in AxisPonterView.js\n    zlevel: 0,\n    z: 50,\n    type: 'line',\n    // axispointer triggered by tootip determine snap automatically,\n    // see `modelHelper`.\n    snap: false,\n    triggerTooltip: true,\n    value: null,\n    status: null,\n    // Init value depends on whether handle is used.\n    // [group0, group1, ...]\n    // Each group can be: {\n    //      mapper: function () {},\n    //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n    //      xAxisId: ...,\n    //      yAxisName: ...,\n    //      angleAxisIndex: ...\n    // }\n    // mapper: can be ignored.\n    //      input: {axisInfo, value}\n    //      output: {axisInfo, value}\n    link: [],\n    // Do not set 'auto' here, otherwise global animation: false\n    // will not effect at this axispointer.\n    animation: null,\n    animationDurationUpdate: 200,\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      type: 'solid'\n    },\n    shadowStyle: {\n      color: 'rgba(150,150,150,0.3)'\n    },\n    label: {\n      show: true,\n      formatter: null,\n      // string | Function\n      precision: 'auto',\n      // Or a number like 0, 1, 2 ...\n      margin: 3,\n      color: '#fff',\n      padding: [5, 7, 5, 7],\n      backgroundColor: 'auto',\n      // default: axis line color\n      borderColor: null,\n      borderWidth: 0,\n      shadowBlur: 3,\n      shadowColor: '#aaa' // Considering applicability, common style should\n      // better not have shadowOffset.\n      // shadowOffsetX: 0,\n      // shadowOffsetY: 2\n\n    },\n    handle: {\n      show: false,\n      icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',\n      // jshint ignore:line\n      size: 45,\n      // handle margin is from symbol center to axis, which is stable when circular move.\n      margin: 50,\n      // color: '#1b8bbd'\n      // color: '#2f4554'\n      color: '#333',\n      shadowBlur: 3,\n      shadowColor: '#aaa',\n      shadowOffsetX: 0,\n      shadowOffsetY: 2,\n      // For mobile performance\n      throttle: 40\n    }\n  }\n});\nvar _default = AxisPointerModel;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar globalListener = require(\"./globalListener\");\n\nvar AxisPointerView = echarts.extendComponentView({\n  type: 'axisPointer',\n  render: function (globalAxisPointerModel, ecModel, api) {\n    var globalTooltipModel = ecModel.getComponent('tooltip');\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\n    // AxisPointerView to be independent to Tooltip.\n\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n        dispatchAction({\n          type: 'updateAxisPointer',\n          currTrigger: currTrigger,\n          x: e && e.offsetX,\n          y: e && e.offsetY\n        });\n      }\n    });\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    globalListener.unregister(api.getZr(), 'axisPointer');\n    AxisPointerView.superApply(this._model, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n    AxisPointerView.superApply(this._model, 'dispose', arguments);\n  }\n});\nvar _default = AxisPointerView;\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar singleAxisHelper = require(\"../axis/singleAxisHelper\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\nvar XY = ['x', 'y'];\nvar WH = ['width', 'height'];\nvar SingleAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var coordSys = axis.coordinateSystem;\n    var otherExtent = getGlobalExtent(coordSys, 1 - getPointDimIndex(axis));\n    var pixelValue = coordSys.dataToPoint(value)[0];\n    var axisPointerType = axisPointerModel.get('type');\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = singleAxisHelper.layout(axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = singleAxisHelper.layout(axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var coordSys = axis.coordinateSystem;\n    var dimIndex = getPointDimIndex(axis);\n    var axisExtent = getGlobalExtent(coordSys, dimIndex);\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var otherExtent = getGlobalExtent(coordSys, 1 - dimIndex);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: {\n        verticalAlign: 'middle'\n      }\n    };\n  }\n});\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getPointDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = axis.getBandWidth();\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getPointDimIndex(axis))\n    };\n  }\n};\n\nfunction getPointDimIndex(axis) {\n  return axis.isHorizontal() ? 0 : 1;\n}\n\nfunction getGlobalExtent(coordSys, dimIndex) {\n  var rect = coordSys.getRect();\n  return [rect[XY[dimIndex]], rect[XY[dimIndex]] + rect[WH[dimIndex]]];\n}\n\nAxisView.registerAxisPointerClass('SingleAxisPointer', SingleAxisPointer);\nvar _default = SingleAxisPointer;\nmodule.exports = _default;","var completeDimensions = require(\"../../data/helper/completeDimensions\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar List = require(\"../../data/List\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar nest = require(\"../../util/array/nest\");\n\n/**\n * @file  Define the themeRiver view's series model\n * @author Deqing Li(annong035@gmail.com)\n */\nvar DATA_NAME_INDEX = 2;\nvar ThemeRiverSeries = SeriesModel.extend({\n  type: 'series.themeRiver',\n  dependencies: ['singleAxis'],\n\n  /**\n   * @readOnly\n   * @type {module:zrender/core/util#HashMap}\n   */\n  nameMap: null,\n\n  /**\n   * @override\n   */\n  init: function (option) {\n    ThemeRiverSeries.superApply(this, 'init', arguments); // Put this function here is for the sake of consistency of code style.\n    // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n  },\n\n  /**\n   * If there is no value of a certain point in the time for some event,set it value to 0.\n   *\n   * @param {Array} data  initial data in the option\n   * @return {Array}\n   */\n  fixData: function (data) {\n    var rawDataLength = data.length; // grouped data by name\n\n    var dataByName = nest().key(function (dataItem) {\n      return dataItem[2];\n    }).entries(data); // data group in each layer\n\n    var layData = zrUtil.map(dataByName, function (d) {\n      return {\n        name: d.key,\n        dataList: d.values\n      };\n    });\n    var layerNum = layData.length;\n    var largestLayer = -1;\n    var index = -1;\n\n    for (var i = 0; i < layerNum; ++i) {\n      var len = layData[i].dataList.length;\n\n      if (len > largestLayer) {\n        largestLayer = len;\n        index = i;\n      }\n    }\n\n    for (var k = 0; k < layerNum; ++k) {\n      if (k === index) {\n        continue;\n      }\n\n      var name = layData[k].name;\n\n      for (var j = 0; j < largestLayer; ++j) {\n        var timeValue = layData[index].dataList[j][0];\n        var length = layData[k].dataList.length;\n        var keyIndex = -1;\n\n        for (var l = 0; l < length; ++l) {\n          var value = layData[k].dataList[l][0];\n\n          if (value === timeValue) {\n            keyIndex = l;\n            break;\n          }\n        }\n\n        if (keyIndex === -1) {\n          data[rawDataLength] = [];\n          data[rawDataLength][0] = timeValue;\n          data[rawDataLength][1] = 0;\n          data[rawDataLength][2] = name;\n          rawDataLength++;\n        }\n      }\n    }\n\n    return data;\n  },\n\n  /**\n   * @override\n   * @param  {Object} option  the initial option that user gived\n   * @param  {module:echarts/model/Model} ecModel  the model object for themeRiver option\n   * @return {module:echarts/data/List}\n   */\n  getInitialData: function (option, ecModel) {\n    var dimensions = [];\n    var singleAxisModel = ecModel.queryComponents({\n      mainType: 'singleAxis',\n      index: this.get('singleAxisIndex'),\n      id: this.get('singleAxisId')\n    })[0];\n    var axisType = singleAxisModel.get('type');\n    dimensions = [{\n      name: 'time',\n      // FIXME common?\n      type: axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float'\n    }, {\n      name: 'value',\n      type: 'float'\n    }, {\n      name: 'name',\n      type: 'ordinal'\n    }]; // filter the data item with the value of label is undefined\n\n    var filterData = zrUtil.filter(option.data, function (dataItem) {\n      return dataItem[2] !== undefined;\n    });\n    var data = this.fixData(filterData || []);\n    var nameList = [];\n    var nameMap = this.nameMap = zrUtil.createHashMap();\n    var count = 0;\n\n    for (var i = 0; i < data.length; ++i) {\n      nameList.push(data[i][DATA_NAME_INDEX]);\n\n      if (!nameMap.get(data[i][DATA_NAME_INDEX])) {\n        nameMap.set(data[i][DATA_NAME_INDEX], count);\n        count++;\n      }\n    }\n\n    dimensions = completeDimensions(dimensions, data);\n    var list = new List(dimensions, this);\n    list.initData(data, nameList);\n    return list;\n  },\n\n  /**\n   * Used by single coordinate\n   *\n   * @param {string} axisDim  the dimension for single coordinate\n   * @return {Array.<string> } specified dimensions on the axis.\n   */\n  coordDimToDataDim: function (axisDim) {\n    return ['time'];\n  },\n\n  /**\n   * The raw data is divided into multiple layers and each layer\n   *     has same name.\n   *\n   * @return {Array.<Array.<number>>}\n   */\n  getLayerSeries: function () {\n    var data = this.getData();\n    var lenCount = data.count();\n    var indexArr = [];\n\n    for (var i = 0; i < lenCount; ++i) {\n      indexArr[i] = i;\n    } // data group by name\n\n\n    var dataByName = nest().key(function (index) {\n      return data.get('name', index);\n    }).entries(indexArr);\n    var layerSeries = zrUtil.map(dataByName, function (d) {\n      return {\n        name: d.key,\n        indices: d.values\n      };\n    });\n\n    for (var j = 0; j < layerSeries.length; ++j) {\n      layerSeries[j].indices.sort(comparer);\n    }\n\n    function comparer(index1, index2) {\n      return data.get('time', index1) - data.get('time', index2);\n    }\n\n    return layerSeries;\n  },\n\n  /**\n   * Get data indices for show tooltip content\n   *\n   * @param {Array.<string>|string} dim  single coordinate dimension\n   * @param {number} value axis value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis  single Axis used\n   *     the themeRiver.\n   * @return {Object} {dataIndices, nestestValue}\n   */\n  getAxisTooltipData: function (dim, value, baseAxis) {\n    if (!zrUtil.isArray(dim)) {\n      dim = dim ? [dim] : [];\n    }\n\n    var data = this.getData();\n    var layerSeries = this.getLayerSeries();\n    var indices = [];\n    var layerNum = layerSeries.length;\n    var nestestValue;\n\n    for (var i = 0; i < layerNum; ++i) {\n      var minDist = Number.MAX_VALUE;\n      var nearestIdx = -1;\n      var pointNum = layerSeries[i].indices.length;\n\n      for (var j = 0; j < pointNum; ++j) {\n        var theValue = data.get(dim[0], layerSeries[i].indices[j]);\n        var dist = Math.abs(theValue - value);\n\n        if (dist <= minDist) {\n          nestestValue = theValue;\n          minDist = dist;\n          nearestIdx = layerSeries[i].indices[j];\n        }\n      }\n\n      indices.push(nearestIdx);\n    }\n\n    return {\n      dataIndices: indices,\n      nestestValue: nestestValue\n    };\n  },\n\n  /**\n   * @override\n   * @param {number} dataIndex  index of data\n   */\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var htmlName = data.get('name', dataIndex);\n    var htmlValue = data.get('value', dataIndex);\n\n    if (isNaN(htmlValue) || htmlValue == null) {\n      htmlValue = '-';\n    }\n\n    return encodeHTML(htmlName + ' : ' + htmlValue);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'singleAxis',\n    // gap in axis's orthogonal orientation\n    boundaryGap: ['10%', '10%'],\n    // legendHoverLink: true,\n    singleAxisIndex: 0,\n    animationEasing: 'linear',\n    label: {\n      normal: {\n        margin: 4,\n        textAlign: 'right',\n        show: true,\n        position: 'left',\n        color: '#000',\n        fontSize: 11\n      },\n      emphasis: {\n        show: true\n      }\n    }\n  }\n});\nvar _default = ThemeRiverSeries;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar _poly = require(\"../line/poly\");\n\nvar Polygon = _poly.Polygon;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar bind = _util.bind;\nvar extend = _util.extend;\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\n/**\n * @file  The file used to draw themeRiver view\n * @author  Deqing Li(annong035@gmail.com)\n */\nvar _default = echarts.extendChartView({\n  type: 'themeRiver',\n  init: function () {\n    this._layers = [];\n  },\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var group = this.group;\n    var layerSeries = seriesModel.getLayerSeries();\n    var layoutInfo = data.getLayout('layoutInfo');\n    var rect = layoutInfo.rect;\n    var boundaryGap = layoutInfo.boundaryGap;\n    group.attr('position', [0, rect.y + boundaryGap[0]]);\n\n    function keyGetter(item) {\n      return item.name;\n    }\n\n    var dataDiffer = new DataDiffer(this._layersSeries || [], layerSeries, keyGetter, keyGetter);\n    var newLayersGroups = {};\n    dataDiffer.add(bind(process, this, 'add')).update(bind(process, this, 'update')).remove(bind(process, this, 'remove')).execute();\n\n    function process(status, idx, oldIdx) {\n      var oldLayersGroups = this._layers;\n\n      if (status === 'remove') {\n        group.remove(oldLayersGroups[idx]);\n        return;\n      }\n\n      var points0 = [];\n      var points1 = [];\n      var color;\n      var indices = layerSeries[idx].indices;\n\n      for (var j = 0; j < indices.length; j++) {\n        var layout = data.getItemLayout(indices[j]);\n        var x = layout.x;\n        var y0 = layout.y0;\n        var y = layout.y;\n        points0.push([x, y0]);\n        points1.push([x, y0 + y]);\n        color = data.getItemVisual(indices[j], 'color');\n      }\n\n      var polygon;\n      var text;\n      var textLayout = data.getItemLayout(indices[0]);\n      var itemModel = data.getItemModel(indices[j - 1]);\n      var labelModel = itemModel.getModel('label.normal');\n      var margin = labelModel.get('margin');\n\n      if (status === 'add') {\n        var layerGroup = newLayersGroups[idx] = new graphic.Group();\n        polygon = new Polygon({\n          shape: {\n            points: points0,\n            stackedOnPoints: points1,\n            smooth: 0.4,\n            stackedOnSmooth: 0.4,\n            smoothConstraint: false\n          },\n          z2: 0\n        });\n        text = new graphic.Text({\n          style: {\n            x: textLayout.x - margin,\n            y: textLayout.y0 + textLayout.y / 2\n          }\n        });\n        layerGroup.add(polygon);\n        layerGroup.add(text);\n        group.add(layerGroup);\n        polygon.setClipPath(createGridClipShape(polygon.getBoundingRect(), seriesModel, function () {\n          polygon.removeClipPath();\n        }));\n      } else {\n        var layerGroup = oldLayersGroups[oldIdx];\n        polygon = layerGroup.childAt(0);\n        text = layerGroup.childAt(1);\n        group.add(layerGroup);\n        newLayersGroups[idx] = layerGroup;\n        graphic.updateProps(polygon, {\n          shape: {\n            points: points0,\n            stackedOnPoints: points1\n          }\n        }, seriesModel);\n        graphic.updateProps(text, {\n          style: {\n            x: textLayout.x - margin,\n            y: textLayout.y0 + textLayout.y / 2\n          }\n        }, seriesModel);\n      }\n\n      var hoverItemStyleModel = itemModel.getModel('itemStyle.emphasis');\n      var itemStyleModel = itemModel.getModel('itemStyle.normal');\n      graphic.setTextStyle(text.style, labelModel, {\n        text: labelModel.get('show') ? seriesModel.getFormattedLabel(indices[j - 1], 'normal') || data.getName(indices[j - 1]) : null,\n        textVerticalAlign: 'middle'\n      });\n      polygon.setStyle(extend({\n        fill: color\n      }, itemStyleModel.getItemStyle(['color'])));\n      graphic.setHoverStyle(polygon, hoverItemStyleModel.getItemStyle());\n    }\n\n    this._layersSeries = layerSeries;\n    this._layers = newLayersGroups;\n  },\n  dispose: function () {}\n}); // add animation to the view\n\n\nfunction createGridClipShape(rect, seriesModel, cb) {\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x - 10,\n      y: rect.y - 10,\n      width: 0,\n      height: rect.height + 20\n    }\n  });\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width + 20,\n      height: rect.height + 20\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../../util/number\");\n\n/**\n * @file  Using layout algorithm transform the raw data to layout information.\n * @author Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('themeRiver', function (seriesModel) {\n    var data = seriesModel.getData();\n    var single = seriesModel.coordinateSystem;\n    var layoutInfo = {}; // use the axis boundingRect for view\n\n    var rect = single.getRect();\n    layoutInfo.rect = rect;\n    var boundaryGap = seriesModel.get('boundaryGap');\n    var axis = single.getAxis();\n    layoutInfo.boundaryGap = boundaryGap;\n\n    if (axis.orient === 'horizontal') {\n      boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], rect.height);\n      boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], rect.height);\n      var height = rect.height - boundaryGap[0] - boundaryGap[1];\n      themeRiverLayout(data, seriesModel, height);\n    } else {\n      boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], rect.width);\n      boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], rect.width);\n      var width = rect.width - boundaryGap[0] - boundaryGap[1];\n      themeRiverLayout(data, seriesModel, width);\n    }\n\n    data.setLayout('layoutInfo', layoutInfo);\n  });\n}\n/**\n * The layout information about themeriver\n *\n * @param {module:echarts/data/List} data  data in the series\n * @param {module:echarts/model/Series} seriesModel  the model object of themeRiver series\n * @param {number} height  value used to compute every series height\n */\n\n\nfunction themeRiverLayout(data, seriesModel, height) {\n  if (!data.count()) {\n    return;\n  }\n\n  var coordSys = seriesModel.coordinateSystem; // the data in each layer are organized into a series.\n\n  var layerSeries = seriesModel.getLayerSeries(); // the points in each layer.\n\n  var layerPoints = zrUtil.map(layerSeries, function (singleLayer) {\n    return zrUtil.map(singleLayer.indices, function (idx) {\n      var pt = coordSys.dataToPoint(data.get('time', idx));\n      pt[1] = data.get('value', idx);\n      return pt;\n    });\n  });\n  var base = computeBaseline(layerPoints);\n  var baseLine = base.y0;\n  var ky = height / base.max; // set layout information for each item.\n\n  var n = layerSeries.length;\n  var m = layerSeries[0].indices.length;\n  var baseY0;\n\n  for (var j = 0; j < m; ++j) {\n    baseY0 = baseLine[j] * ky;\n    data.setItemLayout(layerSeries[0].indices[j], {\n      layerIndex: 0,\n      x: layerPoints[0][j][0],\n      y0: baseY0,\n      y: layerPoints[0][j][1] * ky\n    });\n\n    for (var i = 1; i < n; ++i) {\n      baseY0 += layerPoints[i - 1][j][1] * ky;\n      data.setItemLayout(layerSeries[i].indices[j], {\n        layerIndex: i,\n        x: layerPoints[i][j][0],\n        y0: baseY0,\n        y: layerPoints[i][j][1] * ky\n      });\n    }\n  }\n}\n/**\n * Compute the baseLine of the rawdata\n * Inspired by Lee Byron's paper Stacked Graphs - Geometry & Aesthetics\n *\n * @param  {Array.<Array>} data  the points in each layer\n * @return {Object}\n */\n\n\nfunction computeBaseline(data) {\n  var layerNum = data.length;\n  var pointNum = data[0].length;\n  var sums = [];\n  var y0 = [];\n  var max = 0;\n  var temp;\n  var base = {};\n\n  for (var i = 0; i < pointNum; ++i) {\n    for (var j = 0, temp = 0; j < layerNum; ++j) {\n      temp += data[j][i][1];\n    }\n\n    if (temp > max) {\n      max = temp;\n    }\n\n    sums.push(temp);\n  }\n\n  for (var k = 0; k < pointNum; ++k) {\n    y0[k] = (max - sums[k]) / 2;\n  }\n\n  max = 0;\n\n  for (var l = 0; l < pointNum; ++l) {\n    var sum = sums[l] + y0[l];\n\n    if (sum > max) {\n      max = sum;\n    }\n  }\n\n  base.y0 = y0;\n  base.max = max;\n  return base;\n}\n\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\n\n/**\n * @file Visual encoding for themeRiver view\n * @author  Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('themeRiver', function (seriesModel) {\n    var data = seriesModel.getData();\n    var rawData = seriesModel.getRawData();\n    var colorList = seriesModel.get('color');\n    var idxMap = createHashMap();\n    data.each(function (idx) {\n      idxMap.set(data.getRawIndex(idx), idx);\n    });\n    rawData.each(function (rawIndex) {\n      var name = rawData.getName(rawIndex);\n      var color = colorList[(seriesModel.nameMap.get(name) - 1) % colorList.length];\n      rawData.setItemVisual(rawIndex, 'color', color);\n      var idx = idxMap.get(rawIndex);\n\n      if (idx != null) {\n        data.setItemVisual(idx, 'color', color);\n      }\n    });\n  });\n}\n\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphicUtil = require(\"../util/graphic\");\n\nvar _labelHelper = require(\"./helper/labelHelper\");\n\nvar findLabelValueDim = _labelHelper.findLabelValueDim;\n\nvar createListFromArray = require(\"./helper/createListFromArray\");\n\nvar barGrid = require(\"../layout/barGrid\");\n\nvar DataDiffer = require(\"../data/DataDiffer\");\n\nvar prepareCartesian2d = require(\"../coord/cartesian/prepareCustom\");\n\nvar prepareGeo = require(\"../coord/geo/prepareCustom\");\n\nvar prepareSingleAxis = require(\"../coord/single/prepareCustom\");\n\nvar preparePolar = require(\"../coord/polar/prepareCustom\");\n\nvar prepareCalendar = require(\"../coord/calendar/prepareCustom\");\n\nvar ITEM_STYLE_NORMAL_PATH = ['itemStyle', 'normal'];\nvar ITEM_STYLE_EMPHASIS_PATH = ['itemStyle', 'emphasis'];\nvar LABEL_NORMAL = ['label', 'normal'];\nvar LABEL_EMPHASIS = ['label', 'emphasis']; // Use prefix to avoid index to be the same as el.name,\n// which will cause weird udpate animation.\n\nvar GROUP_DIFF_PREFIX = 'e\\0\\0';\n/**\n * To reduce total package size of each coordinate systems, the modules `prepareCustom`\n * of each coordinate systems are not required by each coordinate systems directly, but\n * required by the module `custom`.\n *\n * prepareInfoForCustomSeries {Function}: optional\n *     @return {Object} {coordSys: {...}, api: {\n *         coord: function (data, clamp) {}, // return point in global.\n *         size: function (dataSize, dataItem) {} // return size of each axis in coordSys.\n *     }}\n */\n\nvar prepareCustoms = {\n  cartesian2d: prepareCartesian2d,\n  geo: prepareGeo,\n  singleAxis: prepareSingleAxis,\n  polar: preparePolar,\n  calendar: prepareCalendar\n}; // ------\n// Model\n// ------\n\necharts.extendSeriesModel({\n  type: 'series.custom',\n  dependencies: ['grid', 'polar', 'geo', 'singleAxis', 'calendar'],\n  defaultOption: {\n    coordinateSystem: 'cartesian2d',\n    // Can be set as 'none'\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Polar coordinate system\n    // polarIndex: 0,\n    // Geo coordinate system\n    // geoIndex: 0,\n    // label: {}\n    // itemStyle: {}\n\n  },\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(option.data, this, ecModel);\n  }\n}); // -----\n// View\n// -----\n\necharts.extendChartView({\n  type: 'custom',\n\n  /**\n   * @private\n   * @type {module:echarts/data/List}\n   */\n  _data: null,\n\n  /**\n   * @override\n   */\n  render: function (customSeries, ecModel, api) {\n    var oldData = this._data;\n    var data = customSeries.getData();\n    var group = this.group;\n    var renderItem = makeRenderItem(customSeries, data, ecModel, api);\n    data.diff(oldData).add(function (newIdx) {\n      data.hasValue(newIdx) && createOrUpdate(null, newIdx, renderItem(newIdx), customSeries, group, data);\n    }).update(function (newIdx, oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      data.hasValue(newIdx) ? createOrUpdate(el, newIdx, renderItem(newIdx), customSeries, group, data) : el && group.remove(el);\n    }).remove(function (oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      el && group.remove(el);\n    }).execute();\n    this._data = data;\n  },\n\n  /**\n   * @override\n   */\n  dispose: zrUtil.noop\n});\n\nfunction createEl(elOption) {\n  var graphicType = elOption.type;\n  var el;\n\n  if (graphicType === 'path') {\n    var shape = elOption.shape;\n    el = graphicUtil.makePath(shape.pathData, null, {\n      x: shape.x || 0,\n      y: shape.y || 0,\n      width: shape.width || 0,\n      height: shape.height || 0\n    }, 'center');\n    el.__customPathData = elOption.pathData;\n  } else if (graphicType === 'image') {\n    el = new graphicUtil.Image({});\n    el.__customImagePath = elOption.style.image;\n  } else if (graphicType === 'text') {\n    el = new graphicUtil.Text({});\n    el.__customText = elOption.style.text;\n  } else {\n    var Clz = graphicUtil[graphicType.charAt(0).toUpperCase() + graphicType.slice(1)];\n    el = new Clz();\n  }\n\n  el.__customGraphicType = graphicType;\n  el.name = elOption.name;\n  return el;\n}\n\nfunction updateEl(el, dataIndex, elOption, animatableModel, data, isInit) {\n  var targetProps = {};\n  var elOptionStyle = elOption.style || {};\n  elOption.shape && (targetProps.shape = zrUtil.clone(elOption.shape));\n  elOption.position && (targetProps.position = elOption.position.slice());\n  elOption.scale && (targetProps.scale = elOption.scale.slice());\n  elOption.origin && (targetProps.origin = elOption.origin.slice());\n  elOption.rotation && (targetProps.rotation = elOption.rotation);\n\n  if (el.type === 'image' && elOption.style) {\n    var targetStyle = targetProps.style = {};\n    zrUtil.each(['x', 'y', 'width', 'height'], function (prop) {\n      prepareStyleTransition(prop, targetStyle, elOptionStyle, el.style, isInit);\n    });\n  }\n\n  if (el.type === 'text' && elOption.style) {\n    var targetStyle = targetProps.style = {};\n    zrUtil.each(['x', 'y'], function (prop) {\n      prepareStyleTransition(prop, targetStyle, elOptionStyle, el.style, isInit);\n    }); // Compatible with previous: both support\n    // textFill and fill, textStroke and stroke in 'text' element.\n\n    !elOptionStyle.hasOwnProperty('textFill') && elOptionStyle.fill && (elOptionStyle.textFill = elOptionStyle.fill);\n    !elOptionStyle.hasOwnProperty('textStroke') && elOptionStyle.stroke && (elOptionStyle.textStroke = elOptionStyle.stroke);\n  }\n\n  if (el.type !== 'group') {\n    el.useStyle(elOptionStyle); // Init animation.\n\n    if (isInit) {\n      el.style.opacity = 0;\n      var targetOpacity = elOptionStyle.opacity;\n      targetOpacity == null && (targetOpacity = 1);\n      graphicUtil.initProps(el, {\n        style: {\n          opacity: targetOpacity\n        }\n      }, animatableModel, dataIndex);\n    }\n  }\n\n  if (isInit) {\n    el.attr(targetProps);\n  } else {\n    graphicUtil.updateProps(el, targetProps, animatableModel, dataIndex);\n  } // z2 must not be null/undefined, otherwise sort error may occur.\n\n\n  el.attr({\n    z2: elOption.z2 || 0,\n    silent: elOption.silent\n  });\n  elOption.styleEmphasis !== false && graphicUtil.setHoverStyle(el, elOption.styleEmphasis);\n}\n\nfunction prepareStyleTransition(prop, targetStyle, elOptionStyle, oldElStyle, isInit) {\n  if (elOptionStyle[prop] != null && !isInit) {\n    targetStyle[prop] = elOptionStyle[prop];\n    elOptionStyle[prop] = oldElStyle[prop];\n  }\n}\n\nfunction makeRenderItem(customSeries, data, ecModel, api) {\n  var renderItem = customSeries.get('renderItem');\n  var coordSys = customSeries.coordinateSystem;\n  var prepareResult = {};\n\n  if (coordSys) {\n    prepareResult = coordSys.prepareCustoms ? coordSys.prepareCustoms() : prepareCustoms[coordSys.type](coordSys);\n  }\n\n  var userAPI = zrUtil.defaults({\n    getWidth: api.getWidth,\n    getHeight: api.getHeight,\n    getZr: api.getZr,\n    getDevicePixelRatio: api.getDevicePixelRatio,\n    value: value,\n    style: style,\n    styleEmphasis: styleEmphasis,\n    visual: visual,\n    barLayout: barLayout,\n    currentSeriesIndices: currentSeriesIndices,\n    font: font\n  }, prepareResult.api || {});\n  var userParams = {\n    context: {},\n    seriesId: customSeries.id,\n    seriesName: customSeries.name,\n    seriesIndex: customSeries.seriesIndex,\n    coordSys: prepareResult.coordSys,\n    dataInsideLength: data.count(),\n    encode: wrapEncodeDef(customSeries.getData())\n  }; // Do not support call `api` asynchronously without dataIndexInside input.\n\n  var currDataIndexInside;\n  var currDirty = true;\n  var currItemModel;\n  var currLabelNormalModel;\n  var currLabelEmphasisModel;\n  var currLabelValueDim;\n  var currVisualColor;\n  return function (dataIndexInside) {\n    currDataIndexInside = dataIndexInside;\n    currDirty = true;\n    return renderItem && renderItem(zrUtil.defaults({\n      dataIndexInside: dataIndexInside,\n      dataIndex: data.getRawIndex(dataIndexInside)\n    }, userParams), userAPI) || {};\n  }; // Do not update cache until api called.\n\n  function updateCache(dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n\n    if (currDirty) {\n      currItemModel = data.getItemModel(dataIndexInside);\n      currLabelNormalModel = currItemModel.getModel(LABEL_NORMAL);\n      currLabelEmphasisModel = currItemModel.getModel(LABEL_EMPHASIS);\n      currLabelValueDim = findLabelValueDim(data);\n      currVisualColor = data.getItemVisual(dataIndexInside, 'color');\n      currDirty = false;\n    }\n  }\n  /**\n   * @public\n   * @param {number|string} dim\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   * @return {number|string} value\n   */\n\n\n  function value(dim, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    return data.get(data.getDimension(dim || 0), dataIndexInside);\n  }\n  /**\n   * By default, `visual` is applied to style (to support visualMap).\n   * `visual.color` is applied at `fill`. If user want apply visual.color on `stroke`,\n   * it can be implemented as:\n   * `api.style({stroke: api.visual('color'), fill: null})`;\n   * @public\n   * @param {Object} [extra]\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   */\n\n\n  function style(extra, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    updateCache(dataIndexInside);\n    var itemStyle = currItemModel.getModel(ITEM_STYLE_NORMAL_PATH).getItemStyle();\n    currVisualColor != null && (itemStyle.fill = currVisualColor);\n    var opacity = data.getItemVisual(dataIndexInside, 'opacity');\n    opacity != null && (itemStyle.opacity = opacity);\n\n    if (currLabelValueDim != null) {\n      graphicUtil.setTextStyle(itemStyle, currLabelNormalModel, null, {\n        autoColor: currVisualColor,\n        isRectText: true\n      });\n      itemStyle.text = currLabelNormalModel.getShallow('show') ? zrUtil.retrieve2(customSeries.getFormattedLabel(dataIndexInside, 'normal'), data.get(currLabelValueDim, dataIndexInside)) : null;\n    }\n\n    extra && zrUtil.extend(itemStyle, extra);\n    return itemStyle;\n  }\n  /**\n   * @public\n   * @param {Object} [extra]\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   */\n\n\n  function styleEmphasis(extra, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    updateCache(dataIndexInside);\n    var itemStyle = currItemModel.getModel(ITEM_STYLE_EMPHASIS_PATH).getItemStyle();\n\n    if (currLabelValueDim != null) {\n      graphicUtil.setTextStyle(itemStyle, currLabelEmphasisModel, null, {\n        isRectText: true\n      }, true);\n      itemStyle.text = currLabelEmphasisModel.getShallow('show') ? zrUtil.retrieve3(customSeries.getFormattedLabel(dataIndexInside, 'emphasis'), customSeries.getFormattedLabel(dataIndexInside, 'normal'), data.get(currLabelValueDim, dataIndexInside)) : null;\n    }\n\n    extra && zrUtil.extend(itemStyle, extra);\n    return itemStyle;\n  }\n  /**\n   * @public\n   * @param {string} visualType\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   */\n\n\n  function visual(visualType, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    return data.getItemVisual(dataIndexInside, visualType);\n  }\n  /**\n   * @public\n   * @param {number} opt.count Positive interger.\n   * @param {number} [opt.barWidth]\n   * @param {number} [opt.barMaxWidth]\n   * @param {number} [opt.barGap]\n   * @param {number} [opt.barCategoryGap]\n   * @return {Object} {width, offset, offsetCenter} is not support, return undefined.\n   */\n\n\n  function barLayout(opt) {\n    if (coordSys.getBaseAxis) {\n      var baseAxis = coordSys.getBaseAxis();\n      return barGrid.getLayoutOnAxis(zrUtil.defaults({\n        axis: baseAxis\n      }, opt), api);\n    }\n  }\n  /**\n   * @public\n   * @return {Array.<number>}\n   */\n\n\n  function currentSeriesIndices() {\n    return ecModel.getCurrentSeriesIndices();\n  }\n  /**\n   * @public\n   * @param {Object} opt\n   * @param {string} [opt.fontStyle]\n   * @param {number} [opt.fontWeight]\n   * @param {number} [opt.fontSize]\n   * @param {string} [opt.fontFamily]\n   * @return {string} font string\n   */\n\n\n  function font(opt) {\n    return graphicUtil.getFont(opt, ecModel);\n  }\n}\n\nfunction wrapEncodeDef(data) {\n  var encodeDef = {};\n  zrUtil.each(data.dimensions, function (dimName, dataDimIndex) {\n    var dimInfo = data.getDimensionInfo(dimName);\n\n    if (!dimInfo.isExtraCoord) {\n      var coordDim = dimInfo.coordDim;\n      var dataDims = encodeDef[coordDim] = encodeDef[coordDim] || [];\n      dataDims[dimInfo.coordDimIndex] = dataDimIndex;\n    }\n  });\n  return encodeDef;\n}\n\nfunction createOrUpdate(el, dataIndex, elOption, animatableModel, group, data) {\n  el = doCreateOrUpdate(el, dataIndex, elOption, animatableModel, group, data);\n  el && data.setItemGraphicEl(dataIndex, el);\n}\n\nfunction doCreateOrUpdate(el, dataIndex, elOption, animatableModel, group, data) {\n  var elOptionType = elOption.type;\n\n  if (el && elOptionType !== el.__customGraphicType && (elOptionType !== 'path' || elOption.pathData !== el.__customPathData) && (elOptionType !== 'image' || elOption.style.image !== el.__customImagePath) && (elOptionType !== 'text' || elOption.style.text !== el.__customText)) {\n    group.remove(el);\n    el = null;\n  } // `elOption.type` is undefined when `renderItem` returns nothing.\n\n\n  if (elOptionType == null) {\n    return;\n  }\n\n  var isInit = !el;\n  !el && (el = createEl(elOption));\n  updateEl(el, dataIndex, elOption, animatableModel, data, isInit);\n\n  if (elOptionType === 'group') {\n    var oldChildren = el.children() || [];\n    var newChildren = elOption.children || [];\n\n    if (elOption.diffChildrenByName) {\n      // lower performance.\n      diffGroupChildren({\n        oldChildren: oldChildren,\n        newChildren: newChildren,\n        dataIndex: dataIndex,\n        animatableModel: animatableModel,\n        group: el,\n        data: data\n      });\n    } else {\n      // better performance.\n      var index = 0;\n\n      for (; index < newChildren.length; index++) {\n        doCreateOrUpdate(el.childAt(index), dataIndex, newChildren[index], animatableModel, el, data);\n      }\n\n      for (; index < oldChildren.length; index++) {\n        oldChildren[index] && el.remove(oldChildren[index]);\n      }\n    }\n  }\n\n  group.add(el);\n  return el;\n}\n\nfunction diffGroupChildren(context) {\n  new DataDiffer(context.oldChildren, context.newChildren, getKey, getKey, context).add(processAddUpdate).update(processAddUpdate).remove(processRemove).execute();\n}\n\nfunction getKey(item, idx) {\n  var name = item && item.name;\n  return name != null ? name : GROUP_DIFF_PREFIX + idx;\n}\n\nfunction processAddUpdate(newIndex, oldIndex) {\n  var context = this.context;\n  var childOption = newIndex != null ? context.newChildren[newIndex] : null;\n  var child = oldIndex != null ? context.oldChildren[oldIndex] : null;\n  doCreateOrUpdate(child, context.dataIndex, childOption, context.animatableModel, context.group, context.data);\n}\n\nfunction processRemove(oldIndex) {\n  var context = this.context;\n  var child = context.oldChildren[oldIndex];\n  child && context.group.remove(child);\n}","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  dataItem = dataItem || [0, 0];\n  return zrUtil.map(['x', 'y'], function (dim, dimIdx) {\n    var axis = this.getAxis(dim);\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    return axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis.dataToCoord(val - halfSize) - axis.dataToCoord(val + halfSize));\n  }, this);\n}\n\nfunction _default(coordSys) {\n  var rect = coordSys.grid.getRect();\n  return {\n    coordSys: {\n      // The name exposed to user is always 'cartesian2d' but not 'grid'.\n      type: 'cartesian2d',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: zrUtil.bind(coordSys.dataToPoint, coordSys),\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction dataToCoordSize(dataSize, dataItem) {\n  dataItem = dataItem || [0, 0];\n  return zrUtil.map([0, 1], function (dimIdx) {\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    var p1 = [];\n    var p2 = [];\n    p1[dimIdx] = val - halfSize;\n    p2[dimIdx] = val + halfSize;\n    p1[1 - dimIdx] = p2[1 - dimIdx] = dataItem[1 - dimIdx];\n    return Math.abs(this.dataToPoint(p1)[dimIdx] - this.dataToPoint(p2)[dimIdx]);\n  }, this);\n}\n\nfunction _default(coordSys) {\n  var rect = coordSys.getBoundingRect();\n  return {\n    coordSys: {\n      type: 'geo',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: zrUtil.bind(coordSys.dataToPoint, coordSys),\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  var axis = this.getAxis();\n  var val = dataItem instanceof Array ? dataItem[0] : dataItem;\n  var halfSize = (dataSize instanceof Array ? dataSize[0] : dataSize) / 2;\n  return axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis.dataToCoord(val - halfSize) - axis.dataToCoord(val + halfSize));\n}\n\nfunction _default(coordSys) {\n  var rect = coordSys.getRect();\n  return {\n    coordSys: {\n      type: 'singleAxis',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: zrUtil.bind(coordSys.dataToPoint, coordSys),\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  return zrUtil.map(['Radius', 'Angle'], function (dim, dimIdx) {\n    var axis = this['get' + dim + 'Axis']();\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    var method = 'dataTo' + dim;\n    var result = axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis[method](val - halfSize) - axis[method](val + halfSize));\n\n    if (dim === 'Angle') {\n      result = result * Math.PI / 180;\n    }\n\n    return result;\n  }, this);\n}\n\nfunction _default(coordSys) {\n  var radiusAxis = coordSys.getRadiusAxis();\n  var angleAxis = coordSys.getAngleAxis();\n  var radius = radiusAxis.getExtent();\n  radius[0] > radius[1] && radius.reverse();\n  return {\n    coordSys: {\n      type: 'polar',\n      cx: coordSys.cx,\n      cy: coordSys.cy,\n      r: radius[1],\n      r0: radius[0]\n    },\n    api: {\n      coord: zrUtil.bind(function (data) {\n        var radius = radiusAxis.dataToRadius(data[0]);\n        var angle = angleAxis.dataToAngle(data[1]);\n        var coord = coordSys.coordToPoint([radius, angle]);\n        coord.push(radius, angle * Math.PI / 180);\n        return coord;\n      }),\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction _default(coordSys) {\n  var rect = coordSys.getRect();\n  var rangeInfo = coordSys.getRangeInfo();\n  return {\n    coordSys: {\n      type: 'calendar',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height,\n      cellWidth: coordSys.getCellWidth(),\n      cellHeight: coordSys.getCellHeight(),\n      rangeInfo: {\n        start: rangeInfo.start,\n        end: rangeInfo.end,\n        weeks: rangeInfo.weeks,\n        dayCount: rangeInfo.allDay\n      }\n    },\n    api: {\n      coord: zrUtil.bind(coordSys.dataToPoint, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar graphicUtil = require(\"../util/graphic\");\n\nvar layoutUtil = require(\"../util/layout\");\n\n// -------------\n// Preprocessor\n// -------------\necharts.registerPreprocessor(function (option) {\n  var graphicOption = option.graphic; // Convert\n  // {graphic: [{left: 10, type: 'circle'}, ...]}\n  // or\n  // {graphic: {left: 10, type: 'circle'}}\n  // to\n  // {graphic: [{elements: [{left: 10, type: 'circle'}, ...]}]}\n\n  if (zrUtil.isArray(graphicOption)) {\n    if (!graphicOption[0] || !graphicOption[0].elements) {\n      option.graphic = [{\n        elements: graphicOption\n      }];\n    } else {\n      // Only one graphic instance can be instantiated. (We dont\n      // want that too many views are created in echarts._viewMap)\n      option.graphic = [option.graphic[0]];\n    }\n  } else if (graphicOption && !graphicOption.elements) {\n    option.graphic = [{\n      elements: [graphicOption]\n    }];\n  }\n}); // ------\n// Model\n// ------\n\nvar GraphicModel = echarts.extendComponentModel({\n  type: 'graphic',\n  defaultOption: {\n    // Extra properties for each elements:\n    //\n    // left/right/top/bottom: (like 12, '22%', 'center', default undefined)\n    //      If left/rigth is set, shape.x/shape.cx/position will not be used.\n    //      If top/bottom is set, shape.y/shape.cy/position will not be used.\n    //      This mechanism is useful when you want to position a group/element\n    //      against the right side or the center of this container.\n    //\n    // width/height: (can only be pixel value, default 0)\n    //      Only be used to specify contianer(group) size, if needed. And\n    //      can not be percentage value (like '33%'). See the reason in the\n    //      layout algorithm below.\n    //\n    // bounding: (enum: 'all' (default) | 'raw')\n    //      Specify how to calculate boundingRect when locating.\n    //      'all': Get uioned and transformed boundingRect\n    //          from both itself and its descendants.\n    //          This mode simplies confining a group of elements in the bounding\n    //          of their ancester container (e.g., using 'right: 0').\n    //      'raw': Only use the boundingRect of itself and before transformed.\n    //          This mode is similar to css behavior, which is useful when you\n    //          want an element to be able to overflow its container. (Consider\n    //          a rotated circle needs to be located in a corner.)\n    // Note: elements is always behind its ancestors in this elements array.\n    elements: [],\n    parentId: null\n  },\n\n  /**\n   * Save el options for the sake of the performance (only update modified graphics).\n   * The order is the same as those in option. (ancesters -> descendants)\n   *\n   * @private\n   * @type {Array.<Object>}\n   */\n  _elOptionsToUpdate: null,\n\n  /**\n   * @override\n   */\n  mergeOption: function (option) {\n    // Prevent default merge to elements\n    var elements = this.option.elements;\n    this.option.elements = null;\n    GraphicModel.superApply(this, 'mergeOption', arguments);\n    this.option.elements = elements;\n  },\n\n  /**\n   * @override\n   */\n  optionUpdated: function (newOption, isInit) {\n    var thisOption = this.option;\n    var newList = (isInit ? thisOption : newOption).elements;\n    var existList = thisOption.elements = isInit ? [] : thisOption.elements;\n    var flattenedList = [];\n\n    this._flatten(newList, flattenedList);\n\n    var mappingResult = modelUtil.mappingToExists(existList, flattenedList);\n    modelUtil.makeIdAndName(mappingResult); // Clear elOptionsToUpdate\n\n    var elOptionsToUpdate = this._elOptionsToUpdate = [];\n    zrUtil.each(mappingResult, function (resultItem, index) {\n      var newElOption = resultItem.option;\n\n      if (!newElOption) {\n        return;\n      }\n\n      elOptionsToUpdate.push(newElOption);\n      setKeyInfoToNewElOption(resultItem, newElOption);\n      mergeNewElOptionToExist(existList, index, newElOption);\n      setLayoutInfoToExist(existList[index], newElOption);\n    }, this); // Clean\n\n    for (var i = existList.length - 1; i >= 0; i--) {\n      if (existList[i] == null) {\n        existList.splice(i, 1);\n      } else {\n        // $action should be volatile, otherwise option gotten from\n        // `getOption` will contain unexpected $action.\n        delete existList[i].$action;\n      }\n    }\n  },\n\n  /**\n   * Convert\n   * [{\n   *  type: 'group',\n   *  id: 'xx',\n   *  children: [{type: 'circle'}, {type: 'polygon'}]\n   * }]\n   * to\n   * [\n   *  {type: 'group', id: 'xx'},\n   *  {type: 'circle', parentId: 'xx'},\n   *  {type: 'polygon', parentId: 'xx'}\n   * ]\n   *\n   * @private\n   * @param {Array.<Object>} optionList option list\n   * @param {Array.<Object>} result result of flatten\n   * @param {Object} parentOption parent option\n   */\n  _flatten: function (optionList, result, parentOption) {\n    zrUtil.each(optionList, function (option) {\n      if (!option) {\n        return;\n      }\n\n      if (parentOption) {\n        option.parentOption = parentOption;\n      }\n\n      result.push(option);\n      var children = option.children;\n\n      if (option.type === 'group' && children) {\n        this._flatten(children, result, option);\n      } // Deleting for JSON output, and for not affecting group creation.\n\n\n      delete option.children;\n    }, this);\n  },\n  // FIXME\n  // Pass to view using payload? setOption has a payload?\n  useElOptionsToUpdate: function () {\n    var els = this._elOptionsToUpdate; // Clear to avoid render duplicately when zooming.\n\n    this._elOptionsToUpdate = null;\n    return els;\n  }\n}); // -----\n// View\n// -----\n\necharts.extendComponentView({\n  type: 'graphic',\n\n  /**\n   * @override\n   */\n  init: function (ecModel, api) {\n    /**\n     * @private\n     * @type {module:zrender/core/util.HashMap}\n     */\n    this._elMap = zrUtil.createHashMap();\n    /**\n     * @private\n     * @type {module:echarts/graphic/GraphicModel}\n     */\n\n    this._lastGraphicModel;\n  },\n\n  /**\n   * @override\n   */\n  render: function (graphicModel, ecModel, api) {\n    // Having leveraged between use cases and algorithm complexity, a very\n    // simple layout mechanism is used:\n    // The size(width/height) can be determined by itself or its parent (not\n    // implemented yet), but can not by its children. (Top-down travel)\n    // The location(x/y) can be determined by the bounding rect of itself\n    // (can including its descendants or not) and the size of its parent.\n    // (Bottom-up travel)\n    // When `chart.clear()` or `chart.setOption({...}, true)` with the same id,\n    // view will be reused.\n    if (graphicModel !== this._lastGraphicModel) {\n      this._clear();\n    }\n\n    this._lastGraphicModel = graphicModel;\n\n    this._updateElements(graphicModel, api);\n\n    this._relocate(graphicModel, api);\n  },\n\n  /**\n   * Update graphic elements.\n   *\n   * @private\n   * @param {Object} graphicModel graphic model\n   * @param {module:echarts/ExtensionAPI} api extension API\n   */\n  _updateElements: function (graphicModel, api) {\n    var elOptionsToUpdate = graphicModel.useElOptionsToUpdate();\n\n    if (!elOptionsToUpdate) {\n      return;\n    }\n\n    var elMap = this._elMap;\n    var rootGroup = this.group; // Top-down tranverse to assign graphic settings to each elements.\n\n    zrUtil.each(elOptionsToUpdate, function (elOption) {\n      var $action = elOption.$action;\n      var id = elOption.id;\n      var existEl = elMap.get(id);\n      var parentId = elOption.parentId;\n      var targetElParent = parentId != null ? elMap.get(parentId) : rootGroup;\n\n      if (elOption.type === 'text') {\n        var elOptionStyle = elOption.style; // In top/bottom mode, textVerticalAlign should not be used, which cause\n        // inaccurately locating.\n\n        if (elOption.hv && elOption.hv[1]) {\n          elOptionStyle.textVerticalAlign = elOptionStyle.textBaseline = null;\n        } // Compatible with previous setting: both support fill and textFill,\n        // stroke and textStroke.\n\n\n        !elOptionStyle.hasOwnProperty('textFill') && elOptionStyle.fill && (elOptionStyle.textFill = elOptionStyle.fill);\n        !elOptionStyle.hasOwnProperty('textStroke') && elOptionStyle.stroke && (elOptionStyle.textStroke = elOptionStyle.stroke);\n      } // Remove unnecessary props to avoid potential problems.\n\n\n      var elOptionCleaned = getCleanedElOption(elOption); // For simple, do not support parent change, otherwise reorder is needed.\n\n      if (!$action || $action === 'merge') {\n        existEl ? existEl.attr(elOptionCleaned) : createEl(id, targetElParent, elOptionCleaned, elMap);\n      } else if ($action === 'replace') {\n        removeEl(existEl, elMap);\n        createEl(id, targetElParent, elOptionCleaned, elMap);\n      } else if ($action === 'remove') {\n        removeEl(existEl, elMap);\n      }\n\n      var el = elMap.get(id);\n\n      if (el) {\n        el.__ecGraphicWidth = elOption.width;\n        el.__ecGraphicHeight = elOption.height;\n      }\n    });\n  },\n\n  /**\n   * Locate graphic elements.\n   *\n   * @private\n   * @param {Object} graphicModel graphic model\n   * @param {module:echarts/ExtensionAPI} api extension API\n   */\n  _relocate: function (graphicModel, api) {\n    var elOptions = graphicModel.option.elements;\n    var rootGroup = this.group;\n    var elMap = this._elMap; // Bottom-up tranvese all elements (consider ec resize) to locate elements.\n\n    for (var i = elOptions.length - 1; i >= 0; i--) {\n      var elOption = elOptions[i];\n      var el = elMap.get(elOption.id);\n\n      if (!el) {\n        continue;\n      }\n\n      var parentEl = el.parent;\n      var containerInfo = parentEl === rootGroup ? {\n        width: api.getWidth(),\n        height: api.getHeight()\n      } : {\n        // Like 'position:absolut' in css, default 0.\n        width: parentEl.__ecGraphicWidth || 0,\n        height: parentEl.__ecGraphicHeight || 0\n      };\n      layoutUtil.positionElement(el, elOption, containerInfo, null, {\n        hv: elOption.hv,\n        boundingMode: elOption.bounding\n      });\n    }\n  },\n\n  /**\n   * Clear all elements.\n   *\n   * @private\n   */\n  _clear: function () {\n    var elMap = this._elMap;\n    elMap.each(function (el) {\n      removeEl(el, elMap);\n    });\n    this._elMap = zrUtil.createHashMap();\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._clear();\n  }\n});\n\nfunction createEl(id, targetElParent, elOption, elMap) {\n  var graphicType = elOption.type;\n  var Clz = graphicUtil[graphicType.charAt(0).toUpperCase() + graphicType.slice(1)];\n  var el = new Clz(elOption);\n  targetElParent.add(el);\n  elMap.set(id, el);\n  el.__ecGraphicId = id;\n}\n\nfunction removeEl(existEl, elMap) {\n  var existElParent = existEl && existEl.parent;\n\n  if (existElParent) {\n    existEl.type === 'group' && existEl.traverse(function (el) {\n      removeEl(el, elMap);\n    });\n    elMap.removeKey(existEl.__ecGraphicId);\n    existElParent.remove(existEl);\n  }\n} // Remove unnecessary props to avoid potential problems.\n\n\nfunction getCleanedElOption(elOption) {\n  elOption = zrUtil.extend({}, elOption);\n  zrUtil.each(['id', 'parentId', '$action', 'hv', 'bounding'].concat(layoutUtil.LOCATION_PARAMS), function (name) {\n    delete elOption[name];\n  });\n  return elOption;\n}\n\nfunction isSetLoc(obj, props) {\n  var isSet;\n  zrUtil.each(props, function (prop) {\n    obj[prop] != null && obj[prop] !== 'auto' && (isSet = true);\n  });\n  return isSet;\n}\n\nfunction setKeyInfoToNewElOption(resultItem, newElOption) {\n  var existElOption = resultItem.exist; // Set id and type after id assigned.\n\n  newElOption.id = resultItem.keyInfo.id;\n  !newElOption.type && existElOption && (newElOption.type = existElOption.type); // Set parent id if not specified\n\n  if (newElOption.parentId == null) {\n    var newElParentOption = newElOption.parentOption;\n\n    if (newElParentOption) {\n      newElOption.parentId = newElParentOption.id;\n    } else if (existElOption) {\n      newElOption.parentId = existElOption.parentId;\n    }\n  } // Clear\n\n\n  newElOption.parentOption = null;\n}\n\nfunction mergeNewElOptionToExist(existList, index, newElOption) {\n  // Update existing options, for `getOption` feature.\n  var newElOptCopy = zrUtil.extend({}, newElOption);\n  var existElOption = existList[index];\n  var $action = newElOption.$action || 'merge';\n\n  if ($action === 'merge') {\n    if (existElOption) {\n      // We can ensure that newElOptCopy and existElOption are not\n      // the same object, so `merge` will not change newElOptCopy.\n      zrUtil.merge(existElOption, newElOptCopy, true); // Rigid body, use ignoreSize.\n\n      layoutUtil.mergeLayoutParam(existElOption, newElOptCopy, {\n        ignoreSize: true\n      }); // Will be used in render.\n\n      layoutUtil.copyLayoutParams(newElOption, existElOption);\n    } else {\n      existList[index] = newElOptCopy;\n    }\n  } else if ($action === 'replace') {\n    existList[index] = newElOptCopy;\n  } else if ($action === 'remove') {\n    // null will be cleaned later.\n    existElOption && (existList[index] = null);\n  }\n}\n\nfunction setLayoutInfoToExist(existItem, newElOption) {\n  if (!existItem) {\n    return;\n  }\n\n  existItem.hv = newElOption.hv = [// Rigid body, dont care `width`.\n  isSetLoc(newElOption, ['left', 'right']), // Rigid body, dont care `height`.\n  isSetLoc(newElOption, ['top', 'bottom'])]; // Give default group size. Otherwise layout error may occur.\n\n  if (existItem.type === 'group') {\n    existItem.width == null && (existItem.width = newElOption.width = 0);\n    existItem.height == null && (existItem.height = newElOption.height = 0);\n  }\n}","require(\"./gridSimple\");\n\nrequire(\"./axisPointer/CartesianAxisPointer\");\n\nrequire(\"./axisPointer\");","require(\"./legend\");\n\nrequire(\"./legend/ScrollableLegendModel\");\n\nrequire(\"./legend/ScrollableLegendView\");\n\nrequire(\"./legend/scrollableLegendAction\");","var echarts = require(\"../echarts\");\n\nrequire(\"./legend/LegendModel\");\n\nrequire(\"./legend/legendAction\");\n\nrequire(\"./legend/LegendView\");\n\nvar legendFilter = require(\"./legend/legendFilter\");\n\nvar Component = require(\"../model/Component\");\n\n// Do not contain scrollable legend, for sake of file size.\n// Series Filter\necharts.registerProcessor(legendFilter);\nComponent.registerSubTypeDefaulter('legend', function () {\n  // Default 'plain' when no type specified.\n  return 'plain';\n});","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));","function _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n\nmodule.exports = _default;","var LegendModel = require(\"./LegendModel\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar getLayoutParams = _layout.getLayoutParams;\nvar ScrollableLegendModel = LegendModel.extend({\n  type: 'legend.scroll',\n\n  /**\n   * @param {number} scrollDataIndex\n   */\n  setScrollDataIndex: function (scrollDataIndex) {\n    this.option.scrollDataIndex = scrollDataIndex;\n  },\n  defaultOption: {\n    scrollDataIndex: 0,\n    pageButtonItemGap: 5,\n    pageButtonGap: null,\n    pageButtonPosition: 'end',\n    // 'start' or 'end'\n    pageFormatter: '{current}/{total}',\n    // If null/undefined, do not show page.\n    pageIcons: {\n      horizontal: ['M0,0L12,-10L12,10z', 'M0,0L-12,-10L-12,10z'],\n      vertical: ['M0,0L20,0L10,-20z', 'M0,0L20,0L10,20z']\n    },\n    pageIconColor: '#2f4554',\n    pageIconInactiveColor: '#aaa',\n    pageIconSize: 15,\n    // Can be [10, 3], which represents [width, height]\n    pageTextStyle: {\n      color: '#333'\n    },\n    animationDurationUpdate: 800\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    ScrollableLegendModel.superCall(this, 'init', option, parentModel, ecModel, extraOpt);\n    mergeAndNormalizeLayoutParams(this, option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option, extraOpt) {\n    ScrollableLegendModel.superCall(this, 'mergeOption', option, extraOpt);\n    mergeAndNormalizeLayoutParams(this, this.option, option);\n  },\n  getOrient: function () {\n    return this.get('orient') === 'vertical' ? {\n      index: 1,\n      name: 'vertical'\n    } : {\n      index: 0,\n      name: 'horizontal'\n    };\n  }\n}); // Do not `ignoreSize` to enable setting {left: 10, right: 10}.\n\nfunction mergeAndNormalizeLayoutParams(legendModel, target, raw) {\n  var orient = legendModel.getOrient();\n  var ignoreSize = [1, 1];\n  ignoreSize[orient.index] = 0;\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = ScrollableLegendModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar LegendView = require(\"./LegendView\");\n\n/**\n * Separate legend and scrollable legend to reduce package size.\n */\nvar Group = graphic.Group;\nvar WH = ['width', 'height'];\nvar XY = ['x', 'y'];\nvar ScrollableLegendView = LegendView.extend({\n  type: 'legend.scroll',\n  newlineDisabled: true,\n  init: function () {\n    ScrollableLegendView.superCall(this, 'init');\n    /**\n     * @private\n     * @type {number} For `scroll`.\n     */\n\n    this._currentIndex = 0;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this.group.add(this._containerGroup = new Group());\n\n    this._containerGroup.add(this.getContentGroup());\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n\n    this.group.add(this._controllerGroup = new Group());\n    /**\n     *\n     * @private\n     */\n\n    this._showController;\n  },\n\n  /**\n   * @override\n   */\n  resetInner: function () {\n    ScrollableLegendView.superCall(this, 'resetInner');\n\n    this._controllerGroup.removeAll();\n\n    this._containerGroup.removeClipPath();\n\n    this._containerGroup.__rectSize = null;\n  },\n\n  /**\n   * @override\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var me = this; // Render content items.\n\n    ScrollableLegendView.superCall(this, 'renderInner', itemAlign, legendModel, ecModel, api);\n    var controllerGroup = this._controllerGroup;\n    var pageIconSize = legendModel.get('pageIconSize', true);\n\n    if (!zrUtil.isArray(pageIconSize)) {\n      pageIconSize = [pageIconSize, pageIconSize];\n    }\n\n    createPageButton('pagePrev', 0);\n    var pageTextStyleModel = legendModel.getModel('pageTextStyle');\n    controllerGroup.add(new graphic.Text({\n      name: 'pageText',\n      style: {\n        textFill: pageTextStyleModel.getTextColor(),\n        font: pageTextStyleModel.getFont(),\n        textVerticalAlign: 'middle',\n        textAlign: 'center'\n      },\n      silent: true\n    }));\n    createPageButton('pageNext', 1);\n\n    function createPageButton(name, iconIdx) {\n      var pageDataIndexName = name + 'DataIndex';\n      var icon = graphic.createIcon(legendModel.get('pageIcons', true)[legendModel.getOrient().name][iconIdx], {\n        // Buttons will be created in each render, so we do not need\n        // to worry about avoiding using legendModel kept in scope.\n        onclick: zrUtil.bind(me._pageGo, me, pageDataIndexName, legendModel, api)\n      }, {\n        x: -pageIconSize[0] / 2,\n        y: -pageIconSize[1] / 2,\n        width: pageIconSize[0],\n        height: pageIconSize[1]\n      });\n      icon.name = name;\n      controllerGroup.add(icon);\n    }\n  },\n\n  /**\n   * @override\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup();\n    var containerGroup = this._containerGroup;\n    var controllerGroup = this._controllerGroup;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var yx = XY[1 - orientIdx]; // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), !orientIdx ? null : maxSize.width, orientIdx ? null : maxSize.height);\n    layoutUtil.box( // Buttons in controller are layout always horizontally.\n    'horizontal', controllerGroup, legendModel.get('pageButtonItemGap', true));\n    var contentRect = contentGroup.getBoundingRect();\n    var controllerRect = controllerGroup.getBoundingRect();\n    var showController = this._showController = contentRect[wh] > maxSize[wh];\n    var contentPos = [-contentRect.x, -contentRect.y]; // Remain contentPos when scroll animation perfroming.\n\n    contentPos[orientIdx] = contentGroup.position[orientIdx]; // Layout container group based on 0.\n\n    var containerPos = [0, 0];\n    var controllerPos = [-controllerRect.x, -controllerRect.y];\n    var pageButtonGap = zrUtil.retrieve2(legendModel.get('pageButtonGap', true), legendModel.get('itemGap', true)); // Place containerGroup and controllerGroup and contentGroup.\n\n    if (showController) {\n      var pageButtonPosition = legendModel.get('pageButtonPosition', true); // controller is on the right / bottom.\n\n      if (pageButtonPosition === 'end') {\n        controllerPos[orientIdx] += maxSize[wh] - controllerRect[wh];\n      } // controller is on the left / top.\n      else {\n          containerPos[orientIdx] += controllerRect[wh] + pageButtonGap;\n        }\n    } // Always align controller to content as 'middle'.\n\n\n    controllerPos[1 - orientIdx] += contentRect[hw] / 2 - controllerRect[hw] / 2;\n    contentGroup.attr('position', contentPos);\n    containerGroup.attr('position', containerPos);\n    controllerGroup.attr('position', controllerPos); // Calculate `mainRect` and set `clipPath`.\n    // mainRect should not be calculated by `this.group.getBoundingRect()`\n    // for sake of the overflow.\n\n    var mainRect = this.group.getBoundingRect();\n    var mainRect = {\n      x: 0,\n      y: 0\n    }; // Consider content may be overflow (should be clipped).\n\n    mainRect[wh] = showController ? maxSize[wh] : contentRect[wh];\n    mainRect[hw] = Math.max(contentRect[hw], controllerRect[hw]); // `containerRect[yx] + containerPos[1 - orientIdx]` is 0.\n\n    mainRect[yx] = Math.min(0, controllerRect[yx] + controllerPos[1 - orientIdx]);\n    containerGroup.__rectSize = maxSize[wh];\n\n    if (showController) {\n      var clipShape = {\n        x: 0,\n        y: 0\n      };\n      clipShape[wh] = Math.max(maxSize[wh] - controllerRect[wh] - pageButtonGap, 0);\n      clipShape[hw] = mainRect[hw];\n      containerGroup.setClipPath(new graphic.Rect({\n        shape: clipShape\n      })); // Consider content may be larger than container, container rect\n      // can not be obtained from `containerGroup.getBoundingRect()`.\n\n      containerGroup.__rectSize = clipShape[wh];\n    } else {\n      // Do not remove or ignore controller. Keep them set as place holders.\n      controllerGroup.eachChild(function (child) {\n        child.attr({\n          invisible: true,\n          silent: true\n        });\n      });\n    } // Content translate animation.\n\n\n    var pageInfo = this._getPageInfo(legendModel);\n\n    pageInfo.pageIndex != null && graphic.updateProps(contentGroup, {\n      position: pageInfo.contentPosition\n    }, // When switch from \"show controller\" to \"not show controller\", view should be\n    // updated immediately without animation, otherwise causes weird efffect.\n    showController ? legendModel : false);\n\n    this._updatePageInfoView(legendModel, pageInfo);\n\n    return mainRect;\n  },\n  _pageGo: function (to, legendModel, api) {\n    var scrollDataIndex = this._getPageInfo(legendModel)[to];\n\n    scrollDataIndex != null && api.dispatchAction({\n      type: 'legendScroll',\n      scrollDataIndex: scrollDataIndex,\n      legendId: legendModel.id\n    });\n  },\n  _updatePageInfoView: function (legendModel, pageInfo) {\n    var controllerGroup = this._controllerGroup;\n    zrUtil.each(['pagePrev', 'pageNext'], function (name) {\n      var canJump = pageInfo[name + 'DataIndex'] != null;\n      var icon = controllerGroup.childOfName(name);\n\n      if (icon) {\n        icon.setStyle('fill', canJump ? legendModel.get('pageIconColor', true) : legendModel.get('pageIconInactiveColor', true));\n        icon.cursor = canJump ? 'pointer' : 'default';\n      }\n    });\n    var pageText = controllerGroup.childOfName('pageText');\n    var pageFormatter = legendModel.get('pageFormatter');\n    var pageIndex = pageInfo.pageIndex;\n    var current = pageIndex != null ? pageIndex + 1 : 0;\n    var total = pageInfo.pageCount;\n    pageText && pageFormatter && pageText.setStyle('text', zrUtil.isString(pageFormatter) ? pageFormatter.replace('{current}', current).replace('{total}', total) : pageFormatter({\n      current: current,\n      total: total\n    }));\n  },\n\n  /**\n   * @param {module:echarts/model/Model} legendModel\n   * @return {Object} {\n   *  contentPosition: Array.<number>, null when data item not found.\n   *  pageIndex: number, null when data item not found.\n   *  pageCount: number, always be a number, can be 0.\n   *  pagePrevDataIndex: number, null when no next page.\n   *  pageNextDataIndex: number, null when no previous page.\n   * }\n   */\n  _getPageInfo: function (legendModel) {\n    // Align left or top by the current dataIndex.\n    var currDataIndex = legendModel.get('scrollDataIndex', true);\n    var contentGroup = this.getContentGroup();\n    var contentRect = contentGroup.getBoundingRect();\n    var containerRectSize = this._containerGroup.__rectSize;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var xy = XY[orientIdx];\n    var contentPos = contentGroup.position.slice();\n    var pageIndex;\n    var pagePrevDataIndex;\n    var pageNextDataIndex;\n    var targetItemGroup;\n\n    if (this._showController) {\n      contentGroup.eachChild(function (child) {\n        if (child.__legendDataIndex === currDataIndex) {\n          targetItemGroup = child;\n        }\n      });\n    } else {\n      targetItemGroup = contentGroup.childAt(0);\n    }\n\n    var pageCount = containerRectSize ? Math.ceil(contentRect[wh] / containerRectSize) : 0;\n\n    if (targetItemGroup) {\n      var itemRect = targetItemGroup.getBoundingRect();\n      var itemLoc = targetItemGroup.position[orientIdx] + itemRect[xy];\n      contentPos[orientIdx] = -itemLoc - contentRect[xy];\n      pageIndex = Math.floor(pageCount * (itemLoc + itemRect[xy] + containerRectSize / 2) / contentRect[wh]);\n      pageIndex = contentRect[wh] && pageCount ? Math.max(0, Math.min(pageCount - 1, pageIndex)) : -1;\n      var winRect = {\n        x: 0,\n        y: 0\n      };\n      winRect[wh] = containerRectSize;\n      winRect[hw] = contentRect[hw];\n      winRect[xy] = -contentPos[orientIdx] - contentRect[xy];\n      var startIdx;\n      var children = contentGroup.children();\n      contentGroup.eachChild(function (child, index) {\n        var itemRect = getItemRect(child);\n\n        if (itemRect.intersect(winRect)) {\n          startIdx == null && (startIdx = index); // It is user-friendly that the last item shown in the\n          // current window is shown at the begining of next window.\n\n          pageNextDataIndex = child.__legendDataIndex;\n        } // If the last item is shown entirely, no next page.\n\n\n        if (index === children.length - 1 && itemRect[xy] + itemRect[wh] <= winRect[xy] + winRect[wh]) {\n          pageNextDataIndex = null;\n        }\n      }); // Always align based on the left/top most item, so the left/top most\n      // item in the previous window is needed to be found here.\n\n      if (startIdx != null) {\n        var startItem = children[startIdx];\n        var startRect = getItemRect(startItem);\n        winRect[xy] = startRect[xy] + startRect[wh] - winRect[wh]; // If the first item is shown entirely, no previous page.\n\n        if (startIdx <= 0 && startRect[xy] >= winRect[xy]) {\n          pagePrevDataIndex = null;\n        } else {\n          while (startIdx > 0 && getItemRect(children[startIdx - 1]).intersect(winRect)) {\n            startIdx--;\n          }\n\n          pagePrevDataIndex = children[startIdx].__legendDataIndex;\n        }\n      }\n    }\n\n    return {\n      contentPosition: contentPos,\n      pageIndex: pageIndex,\n      pageCount: pageCount,\n      pagePrevDataIndex: pagePrevDataIndex,\n      pageNextDataIndex: pageNextDataIndex\n    };\n\n    function getItemRect(el) {\n      var itemRect = el.getBoundingRect().clone();\n      itemRect[xy] += el.position[orientIdx];\n      return itemRect;\n    }\n  }\n});\nvar _default = ScrollableLegendView;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\n/**\n * @event legendScroll\n * @type {Object}\n * @property {string} type 'legendScroll'\n * @property {string} scrollDataIndex\n */\necharts.registerAction('legendScroll', 'legendscroll', function (payload, ecModel) {\n  var scrollDataIndex = payload.scrollDataIndex;\n  scrollDataIndex != null && ecModel.eachComponent({\n    mainType: 'legend',\n    subType: 'scroll',\n    query: payload\n  }, function (legendModel) {\n    legendModel.setScrollDataIndex(scrollDataIndex);\n  });\n});","var echarts = require(\"../echarts\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./tooltip/TooltipModel\");\n\nrequire(\"./tooltip/TooltipView\");\n\n// FIXME Better way to pack data in graphic element\n\n/**\n * @action\n * @property {string} type\n * @property {number} seriesIndex\n * @property {number} dataIndex\n * @property {number} [x]\n * @property {number} [y]\n */\necharts.registerAction({\n  type: 'showTip',\n  event: 'showTip',\n  update: 'tooltip:manuallyShowTip'\n}, // noop\nfunction () {});\necharts.registerAction({\n  type: 'hideTip',\n  event: 'hideTip',\n  update: 'tooltip:manuallyHideTip'\n}, // noop\nfunction () {});","var echarts = require(\"../../echarts\");\n\nvar _default = echarts.extendComponentModel({\n  type: 'tooltip',\n  dependencies: ['axisPointer'],\n  defaultOption: {\n    zlevel: 0,\n    z: 8,\n    show: true,\n    // tooltip主体内容\n    showContent: true,\n    // 'trigger' only works on coordinate system.\n    // 'item' | 'axis' | 'none'\n    trigger: 'item',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: 'mousemove|click',\n    alwaysShowContent: false,\n    displayMode: 'single',\n    // 'single' | 'multipleByCoordSys'\n    // 位置 {Array} | {Function}\n    // position: null\n    // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n    // align: null,\n    // verticalAlign: null,\n    // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n    confine: false,\n    // 内容格式器：{string}（Template） ¦ {Function}\n    // formatter: null\n    showDelay: 0,\n    // 隐藏延迟，单位ms\n    hideDelay: 100,\n    // 动画变换时间，单位s\n    transitionDuration: 0.4,\n    enterable: false,\n    // 提示背景颜色，默认为透明度为0.7的黑色\n    backgroundColor: 'rgba(50,50,50,0.7)',\n    // 提示边框颜色\n    borderColor: '#333',\n    // 提示边框圆角，单位px，默认为4\n    borderRadius: 4,\n    // 提示边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 提示内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // Extra css text\n    extraCssText: '',\n    // 坐标轴指示器，坐标轴触发有效\n    axisPointer: {\n      // 默认为直线\n      // 可选为：'line' | 'shadow' | 'cross'\n      type: 'line',\n      // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n      // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n      // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n      // 极坐标系会默认选择 angle 轴\n      axis: 'auto',\n      animation: 'auto',\n      animationDurationUpdate: 200,\n      animationEasingUpdate: 'exponentialOut',\n      crossStyle: {\n        color: '#999',\n        width: 1,\n        type: 'dashed',\n        // TODO formatter\n        textStyle: {} // lineStyle and shadowStyle should not be specified here,\n        // otherwise it will always override those styles on option.axisPointer.\n\n      }\n    },\n    textStyle: {\n      color: '#fff',\n      fontSize: 14\n    }\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar TooltipContent = require(\"./TooltipContent\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar findPointFromSeries = require(\"../axisPointer/findPointFromSeries\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar Model = require(\"../../model/Model\");\n\nvar globalListener = require(\"../axisPointer/globalListener\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar axisPointerViewHelper = require(\"../axisPointer/viewHelper\");\n\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar _default = echarts.extendComponentView({\n  type: 'tooltip',\n  init: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipContent = new TooltipContent(api.getDom(), api);\n    this._tooltipContent = tooltipContent;\n  },\n  render: function (tooltipModel, ecModel, api) {\n    if (env.node) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    /**\n     * @private\n     * @type {module:echarts/component/tooltip/TooltipModel}\n     */\n\n    this._tooltipModel = tooltipModel;\n    /**\n     * @private\n     * @type {module:echarts/model/Global}\n     */\n\n    this._ecModel = ecModel;\n    /**\n     * @private\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this._api = api;\n    /**\n     * Should be cleaned when render.\n     * @private\n     * @type {Array.<Array.<Object>>}\n     */\n\n    this._lastDataByCoordSys = null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update();\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  },\n  _initGlobalListener: function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  },\n  _keepShow: function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        self.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self._lastX,\n          y: self._lastY\n        });\n      });\n    }\n  },\n\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.position = [payload.x, payload.y];\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        event: {},\n        dataByCoordSys: payload.dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el,\n          event: {}\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target,\n        event: {}\n      }, dispatchAction);\n    }\n  },\n  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  },\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\n    if (tooltipModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  },\n  _tryShow: function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && el.dataIndex != null) {\n        this._lastDataByCoordSys = null;\n\n        this._showSeriesItemTooltip(e, el, dispatchAction);\n      } // Tooltip provided directly. Like legend.\n      else if (el && el.tooltip) {\n          this._lastDataByCoordSys = null;\n\n          this._showComponentItemTooltip(e, el, dispatchAction);\n        } else {\n          this._lastDataByCoordSys = null;\n\n          this._hide(dispatchAction);\n        }\n  },\n  _showOrMove: function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easyer to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  },\n  _showAxisTooltip: function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleDefaultHTML = [];\n    var singleParamsList = [];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    each(dataByCoordSys, function (itemCoordSys) {\n      // var coordParamList = [];\n      // var coordDefaultHTML = [];\n      // var coordTooltipModel = buildTooltipModel([\n      //     e.tooltipOption,\n      //     itemCoordSys.tooltipOption,\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n      //     globalTooltipModel\n      // ]);\n      // var displayMode = coordTooltipModel.get('displayMode');\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\n      each(itemCoordSys.dataByAxis, function (item) {\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n        var axisValue = item.value;\n        var seriesDefaultHTML = [];\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var dataParams = series && series.getDataParams(dataIndex);\n          dataParams.axisDim = item.axisDim;\n          dataParams.axisIndex = item.axisIndex;\n          dataParams.axisType = item.axisType;\n          dataParams.axisId = item.axisId;\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n          dataParams.axisValueLabel = valueLabel;\n\n          if (dataParams) {\n            singleParamsList.push(dataParams);\n            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n          }\n        }); // Default tooltip content\n        // FIXME\n        // (1) shold be the first data which has name?\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\n        var firstLine = valueLabel;\n        singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '') + seriesDefaultHTML.join('<br />'));\n      });\n    }, this); // In most case, the second axis is shown upper than the first one.\n\n    singleDefaultHTML.reverse();\n    singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n    var positionExpr = e.position;\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  },\n  _showSeriesItemTooltip: function (e, el, dispatchAction) {\n    var ecModel = this._ecModel; // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = el.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = el.dataModel || seriesModel;\n    var dataIndex = el.dataIndex;\n    var dataType = el.dataType;\n    var data = dataModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  },\n  _showComponentItemTooltip: function (e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n\n    if (typeof tooltipOpt === 'string') {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on cooridinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  },\n  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    if (formatter && typeof formatter === 'string') {\n      html = formatUtil.formatTpl(formatter, params, true);\n    } else if (typeof formatter === 'function') {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html);\n    tooltipContent.show(tooltipModel);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  },\n\n  /**\n   * @param  {string|Function|Array.<number>|Object} positionExpr\n   * @param  {number} x Mouse x\n   * @param  {number} y Mouse y\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\n   * @param  {Object|<Array.<Object>} params\n   * @param  {module:zrender/Element} el target element\n   * @param  {module:echarts/ExtensionAPI} api\n   * @return {Array.<number>}\n   */\n  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (typeof positionExpr === 'function') {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      positionExpr.width = contentSize[0];\n      positionExpr.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (typeof positionExpr === 'string' && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (tooltipModel.get('confine')) {\n      var pos = confineTooltipPosition(x, y, content.el, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  },\n  // FIXME\n  // Should we remove this but leave this to user?\n  _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  },\n  _hide: function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  },\n  dispose: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    this._tooltipContent.hide();\n\n    globalListener.unregister('itemTooltip', api);\n  }\n});\n/**\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade) {\n  var resultModel = modelCascade.pop();\n\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n\n    if (tooltipOpt) {\n      if (tooltipOpt instanceof Model) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (typeof tooltipOpt === 'string') {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    if (x + width + gapH > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction getOuterSize(el) {\n  var width = el.clientWidth;\n  var height = el.clientHeight; // Consider browser compatibility.\n  // IE8 does not support getComputedStyle.\n\n  if (document.defaultView && document.defaultView.getComputedStyle) {\n    var stl = document.defaultView.getComputedStyle(el);\n\n    if (stl) {\n      width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10) + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n      height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10) + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar eventUtil = require(\"zrender/lib/core/event\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar each = zrUtil.each;\nvar toCamelCase = formatUtil.toCamelCase;\nvar vendors = ['', '-webkit-', '-moz-', '-o-'];\nvar gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n/**\n * @param {number} duration\n * @return {string}\n * @inner\n */\n\nfunction assembleTransition(duration) {\n  var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n  var transitionText = 'left ' + duration + 's ' + transitionCurve + ',' + 'top ' + duration + 's ' + transitionCurve;\n  return zrUtil.map(vendors, function (vendorPrefix) {\n    return vendorPrefix + 'transition:' + transitionText;\n  }).join(';');\n}\n/**\n * @param {Object} textStyle\n * @return {string}\n * @inner\n */\n\n\nfunction assembleFont(textStyleModel) {\n  var cssText = [];\n  var fontSize = textStyleModel.get('fontSize');\n  var color = textStyleModel.getTextColor();\n  color && cssText.push('color:' + color);\n  cssText.push('font:' + textStyleModel.getFont());\n  fontSize && cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n  each(['decoration', 'align'], function (name) {\n    var val = textStyleModel.get(name);\n    val && cssText.push('text-' + name + ':' + val);\n  });\n  return cssText.join(';');\n}\n/**\n * @param {Object} tooltipModel\n * @return {string}\n * @inner\n */\n\n\nfunction assembleCssText(tooltipModel) {\n  var cssText = [];\n  var transitionDuration = tooltipModel.get('transitionDuration');\n  var backgroundColor = tooltipModel.get('backgroundColor');\n  var textStyleModel = tooltipModel.getModel('textStyle');\n  var padding = tooltipModel.get('padding'); // Animation transition. Do not animate when transitionDuration is 0.\n\n  transitionDuration && cssText.push(assembleTransition(transitionDuration));\n\n  if (backgroundColor) {\n    if (env.canvasSupported) {\n      cssText.push('background-Color:' + backgroundColor);\n    } else {\n      // for ie\n      cssText.push('background-Color:#' + zrColor.toHex(backgroundColor));\n      cssText.push('filter:alpha(opacity=70)');\n    }\n  } // Border style\n\n\n  each(['width', 'color', 'radius'], function (name) {\n    var borderName = 'border-' + name;\n    var camelCase = toCamelCase(borderName);\n    var val = tooltipModel.get(camelCase);\n    val != null && cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n  }); // Text style\n\n  cssText.push(assembleFont(textStyleModel)); // Padding\n\n  if (padding != null) {\n    cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n  }\n\n  return cssText.join(';') + ';';\n}\n/**\n * @alias module:echarts/component/tooltip/TooltipContent\n * @constructor\n */\n\n\nfunction TooltipContent(container, api) {\n  var el = document.createElement('div');\n  var zr = this._zr = api.getZr();\n  this.el = el;\n  this._x = api.getWidth() / 2;\n  this._y = api.getHeight() / 2;\n  container.appendChild(el);\n  this._container = container;\n  this._show = false;\n  /**\n   * @private\n   */\n\n  this._hideTimeout;\n  var self = this;\n\n  el.onmouseenter = function () {\n    // clear the timeout in hideLater and keep showing tooltip\n    if (self._enterable) {\n      clearTimeout(self._hideTimeout);\n      self._show = true;\n    }\n\n    self._inContent = true;\n  };\n\n  el.onmousemove = function (e) {\n    e = e || window.event;\n\n    if (!self._enterable) {\n      // Try trigger zrender event to avoid mouse\n      // in and out shape too frequently\n      var handler = zr.handler;\n      eventUtil.normalizeEvent(container, e, true);\n      handler.dispatch('mousemove', e);\n    }\n  };\n\n  el.onmouseleave = function () {\n    if (self._enterable) {\n      if (self._show) {\n        self.hideLater(self._hideDelay);\n      }\n    }\n\n    self._inContent = false;\n  };\n}\n\nTooltipContent.prototype = {\n  constructor: TooltipContent,\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  _enterable: true,\n\n  /**\n   * Update when tooltip is rendered\n   */\n  update: function () {\n    // FIXME\n    // Move this logic to ec main?\n    var container = this._container;\n    var stl = container.currentStyle || document.defaultView.getComputedStyle(container);\n    var domStyle = container.style;\n\n    if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n      domStyle.position = 'relative';\n    } // Hide the tooltip\n    // PENDING\n    // this.hide();\n\n  },\n  show: function (tooltipModel) {\n    clearTimeout(this._hideTimeout);\n    var el = this.el;\n    el.style.cssText = gCssText + assembleCssText(tooltipModel) // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n    + ';left:' + this._x + 'px;top:' + this._y + 'px;' + (tooltipModel.get('extraCssText') || '');\n    el.style.display = el.innerHTML ? 'block' : 'none';\n    this._show = true;\n  },\n  setContent: function (content) {\n    this.el.innerHTML = content == null ? '' : content;\n  },\n  setEnterable: function (enterable) {\n    this._enterable = enterable;\n  },\n  getSize: function () {\n    var el = this.el;\n    return [el.clientWidth, el.clientHeight];\n  },\n  moveTo: function (x, y) {\n    // xy should be based on canvas root. But tooltipContent is\n    // the sibling of canvas root. So padding of ec container\n    // should be considered here.\n    var zr = this._zr;\n    var viewportRootOffset;\n\n    if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n      x += viewportRootOffset.offsetLeft;\n      y += viewportRootOffset.offsetTop;\n    }\n\n    var style = this.el.style;\n    style.left = x + 'px';\n    style.top = y + 'px';\n    this._x = x;\n    this._y = y;\n  },\n  hide: function () {\n    this.el.style.display = 'none';\n    this._show = false;\n  },\n  hideLater: function (time) {\n    if (this._show && !(this._inContent && this._enterable)) {\n      if (time) {\n        this._hideDelay = time; // Set show false to avoid invoke hideLater mutiple times\n\n        this._show = false;\n        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n      } else {\n        this.hide();\n      }\n    }\n  },\n  isShow: function () {\n    return this._show;\n  }\n};\nvar _default = TooltipContent;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar barPolar = require(\"../layout/barPolar\");\n\nrequire(\"../coord/polar/polarCreator\");\n\nrequire(\"./angleAxis\");\n\nrequire(\"./radiusAxis\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./axisPointer/PolarAxisPointer\");\n\n// For reducing size of echarts.min, barLayoutPolar is required by polar.\necharts.registerLayout(zrUtil.curry(barPolar, 'bar')); // Polar view\n\necharts.extendComponentView({\n  type: 'polar'\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nfunction getSeriesStackId(seriesModel) {\n  return seriesModel.get('stack') || '__ec_stack_' + seriesModel.seriesIndex;\n}\n\nfunction getAxisKey(axis) {\n  return axis.dim;\n}\n/**\n * @param {string} seriesType\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction barLayoutPolar(seriesType, ecModel, api) {\n  var width = api.getWidth();\n  var height = api.getHeight();\n  var lastStackCoords = {};\n  var lastStackCoordsOrigin = {};\n  var barWidthAndOffset = calRadialBar(zrUtil.filter(ecModel.getSeriesByType(seriesType), function (seriesModel) {\n    return !ecModel.isSeriesFiltered(seriesModel) && seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'polar';\n  }));\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    // Check series coordinate, do layout for polar only\n    if (seriesModel.coordinateSystem.type !== 'polar') {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var polar = seriesModel.coordinateSystem;\n    var angleAxis = polar.getAngleAxis();\n    var baseAxis = polar.getBaseAxis();\n    var stackId = getSeriesStackId(seriesModel);\n    var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n    var columnOffset = columnLayoutInfo.offset;\n    var columnWidth = columnLayoutInfo.width;\n    var valueAxis = polar.getOtherAxis(baseAxis);\n    var center = seriesModel.get('center') || ['50%', '50%'];\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var barMinHeight = seriesModel.get('barMinHeight') || 0;\n    var barMinAngle = seriesModel.get('barMinAngle') || 0;\n    var valueAxisStart = valueAxis.getExtent()[0];\n    var valueMax = valueAxis.model.get('max');\n    var valueMin = valueAxis.model.get('min');\n    var coordDims = [seriesModel.coordDimToDataDim('radius')[0], seriesModel.coordDimToDataDim('angle')[0]];\n    var coords = data.mapArray(coordDims, function (radius, angle) {\n      return polar.dataToPoint([radius, angle]);\n    }, true);\n    lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n    lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n    data.each(seriesModel.coordDimToDataDim(valueAxis.dim)[0], function (value, idx) {\n      if (isNaN(value)) {\n        return;\n      }\n\n      if (!lastStackCoords[stackId][idx]) {\n        lastStackCoords[stackId][idx] = {\n          p: valueAxisStart,\n          // Positive stack\n          n: valueAxisStart // Negative stack\n\n        };\n        lastStackCoordsOrigin[stackId][idx] = {\n          p: valueAxisStart,\n          // Positive stack\n          n: valueAxisStart // Negative stack\n\n        };\n      }\n\n      var sign = value >= 0 ? 'p' : 'n';\n      var coord = polar.pointToCoord(coords[idx]);\n      var lastCoordOrigin = lastStackCoordsOrigin[stackId][idx][sign];\n      var r0;\n      var r;\n      var startAngle;\n      var endAngle;\n\n      if (valueAxis.dim === 'radius') {\n        // radial sector\n        r0 = lastCoordOrigin;\n        r = coord[0];\n        startAngle = (-coord[1] + columnOffset) * Math.PI / 180;\n        endAngle = startAngle + columnWidth * Math.PI / 180;\n\n        if (Math.abs(r) < barMinHeight) {\n          r = r0 + (r < 0 ? -1 : 1) * barMinHeight;\n        }\n\n        lastStackCoordsOrigin[stackId][idx][sign] = r;\n      } else {\n        // tangential sector\n        r0 = coord[0] + columnOffset;\n        r = r0 + columnWidth; // clamp data if min or max is defined for valueAxis\n\n        if (valueMax != null) {\n          value = Math.min(value, valueMax);\n        }\n\n        if (valueMin != null) {\n          value = Math.max(value, valueMin);\n        }\n\n        var angle = angleAxis.dataToAngle(value);\n\n        if (Math.abs(angle - lastCoordOrigin) < barMinAngle) {\n          angle = lastCoordOrigin - (value < 0 ? -1 : 1) * barMinAngle;\n        }\n\n        startAngle = -lastCoordOrigin * Math.PI / 180;\n        endAngle = -angle * Math.PI / 180; // if the previous stack is at the end of the ring,\n        // add a round to differentiate it from origin\n\n        var extent = angleAxis.getExtent();\n        var stackCoord = angle;\n\n        if (stackCoord === extent[0] && value > 0) {\n          stackCoord = extent[1];\n        } else if (stackCoord === extent[1] && value < 0) {\n          stackCoord = extent[0];\n        }\n\n        lastStackCoordsOrigin[stackId][idx][sign] = stackCoord;\n      }\n\n      data.setItemLayout(idx, {\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: r,\n        startAngle: startAngle,\n        endAngle: endAngle\n      });\n    }, true);\n  }, this);\n}\n/**\n * Calculate bar width and offset for radial bar charts\n */\n\n\nfunction calRadialBar(barSeries, api) {\n  // Columns info on each category axis. Key is polar name\n  var columnsMap = {};\n  zrUtil.each(barSeries, function (seriesModel, idx) {\n    var data = seriesModel.getData();\n    var polar = seriesModel.coordinateSystem;\n    var baseAxis = polar.getBaseAxis();\n    var axisExtent = baseAxis.getExtent();\n    var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\n    var columnsOnAxis = columnsMap[getAxisKey(baseAxis)] || {\n      bandWidth: bandWidth,\n      remainedWidth: bandWidth,\n      autoWidthCount: 0,\n      categoryGap: '20%',\n      gap: '30%',\n      stacks: {}\n    };\n    var stacks = columnsOnAxis.stacks;\n    columnsMap[getAxisKey(baseAxis)] = columnsOnAxis;\n    var stackId = getSeriesStackId(seriesModel);\n\n    if (!stacks[stackId]) {\n      columnsOnAxis.autoWidthCount++;\n    }\n\n    stacks[stackId] = stacks[stackId] || {\n      width: 0,\n      maxWidth: 0\n    };\n    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);\n    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);\n    var barGap = seriesModel.get('barGap');\n    var barCategoryGap = seriesModel.get('barCategoryGap');\n\n    if (barWidth && !stacks[stackId].width) {\n      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n      stacks[stackId].width = barWidth;\n      columnsOnAxis.remainedWidth -= barWidth;\n    }\n\n    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n    barGap != null && (columnsOnAxis.gap = barGap);\n    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\n  });\n  var result = {};\n  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n    result[coordSysName] = {};\n    var stacks = columnsOnAxis.stacks;\n    var bandWidth = columnsOnAxis.bandWidth;\n    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n    var remainedWidth = columnsOnAxis.remainedWidth;\n    var autoWidthCount = columnsOnAxis.autoWidthCount;\n    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\n\n    zrUtil.each(stacks, function (column, stack) {\n      var maxWidth = column.maxWidth;\n\n      if (maxWidth && maxWidth < autoWidth) {\n        maxWidth = Math.min(maxWidth, remainedWidth);\n\n        if (column.width) {\n          maxWidth = Math.min(maxWidth, column.width);\n        }\n\n        remainedWidth -= maxWidth;\n        column.width = maxWidth;\n        autoWidthCount--;\n      }\n    }); // Recalculate width again\n\n    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0);\n    var widthSum = 0;\n    var lastColumn;\n    zrUtil.each(stacks, function (column, idx) {\n      if (!column.width) {\n        column.width = autoWidth;\n      }\n\n      lastColumn = column;\n      widthSum += column.width * (1 + barGapPercent);\n    });\n\n    if (lastColumn) {\n      widthSum -= lastColumn.width * barGapPercent;\n    }\n\n    var offset = -widthSum / 2;\n    zrUtil.each(stacks, function (column, stackId) {\n      result[coordSysName][stackId] = result[coordSysName][stackId] || {\n        offset: offset,\n        width: column.width\n      };\n      offset += column.width * (1 + barGapPercent);\n    });\n  });\n  return result;\n}\n\nvar _default = barLayoutPolar;\nmodule.exports = _default;","var RadiusAxis = require(\"./RadiusAxis\");\n\nvar AngleAxis = require(\"./AngleAxis\");\n\n/**\n * @module echarts/coord/polar/Polar\n */\n\n/**\n * @alias {module:echarts/coord/polar/Polar}\n * @constructor\n * @param {string} name\n */\nvar Polar = function (name) {\n  /**\n   * @type {string}\n   */\n  this.name = name || '';\n  /**\n   * x of polar center\n   * @type {number}\n   */\n\n  this.cx = 0;\n  /**\n   * y of polar center\n   * @type {number}\n   */\n\n  this.cy = 0;\n  /**\n   * @type {module:echarts/coord/polar/RadiusAxis}\n   * @private\n   */\n\n  this._radiusAxis = new RadiusAxis();\n  /**\n   * @type {module:echarts/coord/polar/AngleAxis}\n   * @private\n   */\n\n  this._angleAxis = new AngleAxis();\n  this._radiusAxis.polar = this._angleAxis.polar = this;\n};\n\nPolar.prototype = {\n  type: 'polar',\n  axisPointerEnabled: true,\n  constructor: Polar,\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['radius', 'angle'],\n\n  /**\n   * @type {module:echarts/coord/PolarModel}\n   */\n  model: null,\n\n  /**\n   * If contain coord\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var coord = this.pointToCoord(point);\n    return this._radiusAxis.contain(coord[0]) && this._angleAxis.contain(coord[1]);\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this._radiusAxis.containData(data[0]) && this._angleAxis.containData(data[1]);\n  },\n\n  /**\n   * @param {string} dim\n   * @return {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n   */\n  getAxis: function (dim) {\n    return this['_' + dim + 'Axis'];\n  },\n\n  /**\n   * @return {Array.<module:echarts/coord/Axis>}\n   */\n  getAxes: function () {\n    return [this._radiusAxis, this._angleAxis];\n  },\n\n  /**\n   * Get axes by type of scale\n   * @param {string} scaleType\n   * @return {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n   */\n  getAxesByScale: function (scaleType) {\n    var axes = [];\n    var angleAxis = this._angleAxis;\n    var radiusAxis = this._radiusAxis;\n    angleAxis.scale.type === scaleType && axes.push(angleAxis);\n    radiusAxis.scale.type === scaleType && axes.push(radiusAxis);\n    return axes;\n  },\n\n  /**\n   * @return {module:echarts/coord/polar/AngleAxis}\n   */\n  getAngleAxis: function () {\n    return this._angleAxis;\n  },\n\n  /**\n   * @return {module:echarts/coord/polar/RadiusAxis}\n   */\n  getRadiusAxis: function () {\n    return this._radiusAxis;\n  },\n\n  /**\n   * @param {module:echarts/coord/polar/Axis}\n   * @return {module:echarts/coord/polar/Axis}\n   */\n  getOtherAxis: function (axis) {\n    var angleAxis = this._angleAxis;\n    return axis === angleAxis ? this._radiusAxis : angleAxis;\n  },\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/polar/Axis}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAngleAxis();\n  },\n\n  /**\n   * @param {string} [dim] 'radius' or 'angle' or 'auto' or null/undefined\n   * @return {Object} {baseAxes: [], otherAxes: []}\n   */\n  getTooltipAxes: function (dim) {\n    var baseAxis = dim != null && dim !== 'auto' ? this.getAxis(dim) : this.getBaseAxis();\n    return {\n      baseAxes: [baseAxis],\n      otherAxes: [this.getOtherAxis(baseAxis)]\n    };\n  },\n\n  /**\n   * Convert a single data item to (x, y) point.\n   * Parameter data is an array which the first element is radius and the second is angle\n   * @param {Array.<number>} data\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, clamp) {\n    return this.coordToPoint([this._radiusAxis.dataToRadius(data[0], clamp), this._angleAxis.dataToAngle(data[1], clamp)]);\n  },\n\n  /**\n   * Convert a (x, y) point to data\n   * @param {Array.<number>} point\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, clamp) {\n    var coord = this.pointToCoord(point);\n    return [this._radiusAxis.radiusToData(coord[0], clamp), this._angleAxis.angleToData(coord[1], clamp)];\n  },\n\n  /**\n   * Convert a (x, y) point to (radius, angle) coord\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToCoord: function (point) {\n    var dx = point[0] - this.cx;\n    var dy = point[1] - this.cy;\n    var angleAxis = this.getAngleAxis();\n    var extent = angleAxis.getExtent();\n    var minAngle = Math.min(extent[0], extent[1]);\n    var maxAngle = Math.max(extent[0], extent[1]); // Fix fixed extent in polarCreator\n    // FIXME\n\n    angleAxis.inverse ? minAngle = maxAngle - 360 : maxAngle = minAngle + 360;\n    var radius = Math.sqrt(dx * dx + dy * dy);\n    dx /= radius;\n    dy /= radius;\n    var radian = Math.atan2(-dy, dx) / Math.PI * 180; // move to angleExtent\n\n    var dir = radian < minAngle ? 1 : -1;\n\n    while (radian < minAngle || radian > maxAngle) {\n      radian += dir * 360;\n    }\n\n    return [radius, radian];\n  },\n\n  /**\n   * Convert a (radius, angle) coord to (x, y) point\n   * @param {Array.<number>} coord\n   * @return {Array.<number>}\n   */\n  coordToPoint: function (coord) {\n    var radius = coord[0];\n    var radian = coord[1] / 180 * Math.PI;\n    var x = Math.cos(radian) * radius + this.cx; // Inverse the y\n\n    var y = -Math.sin(radian) * radius + this.cy;\n    return [x, y];\n  }\n};\nvar _default = Polar;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\nfunction RadiusAxis(scale, radiusExtent) {\n  Axis.call(this, 'radius', scale, radiusExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = 'category';\n}\n\nRadiusAxis.prototype = {\n  constructor: RadiusAxis,\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.polar.pointToData(point, clamp)[this.dim === 'radius' ? 0 : 1];\n  },\n  dataToRadius: Axis.prototype.dataToCoord,\n  radiusToData: Axis.prototype.coordToData\n};\nzrUtil.inherits(RadiusAxis, Axis);\nvar _default = RadiusAxis;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\nfunction AngleAxis(scale, angleExtent) {\n  angleExtent = angleExtent || [0, 360];\n  Axis.call(this, 'angle', scale, angleExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = 'category';\n}\n\nAngleAxis.prototype = {\n  constructor: AngleAxis,\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.polar.pointToData(point, clamp)[this.dim === 'radius' ? 0 : 1];\n  },\n  dataToAngle: Axis.prototype.dataToCoord,\n  angleToData: Axis.prototype.coordToData\n};\nzrUtil.inherits(AngleAxis, Axis);\nvar _default = AngleAxis;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nrequire(\"./AxisModel\");\n\nvar _default = echarts.extendComponentModel({\n  type: 'polar',\n  dependencies: ['polarAxis', 'angleAxis'],\n\n  /**\n   * @type {module:echarts/coord/polar/Polar}\n   */\n  coordinateSystem: null,\n\n  /**\n   * @param {string} axisType\n   * @return {module:echarts/coord/polar/AxisModel}\n   */\n  findAxisModel: function (axisType) {\n    var foundAxisModel;\n    var ecModel = this.ecModel;\n    ecModel.eachComponent(axisType, function (axisModel) {\n      if (axisModel.getCoordSysModel() === this) {\n        foundAxisModel = axisModel;\n      }\n    }, this);\n    return foundAxisModel;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    center: ['50%', '50%'],\n    radius: '80%'\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\nvar PolarAxisModel = ComponentModel.extend({\n  type: 'polarAxis',\n\n  /**\n   * @type {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'polar',\n      index: this.option.polarIndex,\n      id: this.option.polarId\n    })[0];\n  }\n});\nzrUtil.merge(PolarAxisModel.prototype, axisModelCommonMixin);\nvar polarAxisDefaultExtendedOption = {\n  angle: {\n    // polarIndex: 0,\n    // polarId: '',\n    startAngle: 90,\n    clockwise: true,\n    splitNumber: 12,\n    axisLabel: {\n      rotate: false\n    }\n  },\n  radius: {\n    // polarIndex: 0,\n    // polarId: '',\n    splitNumber: 5\n  }\n};\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\naxisModelCreator('angle', PolarAxisModel, getAxisType, polarAxisDefaultExtendedOption.angle);\naxisModelCreator('radius', PolarAxisModel, getAxisType, polarAxisDefaultExtendedOption.radius);","require(\"../coord/polar/polarCreator\");\n\nrequire(\"./axis/AngleAxisView\");","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar AxisView = require(\"./AxisView\");\n\nvar elementList = ['axisLine', 'axisLabel', 'axisTick', 'splitLine', 'splitArea'];\n\nfunction getAxisLineShape(polar, rExtent, angle) {\n  rExtent[1] > rExtent[0] && (rExtent = rExtent.slice().reverse());\n  var start = polar.coordToPoint([rExtent[0], angle]);\n  var end = polar.coordToPoint([rExtent[1], angle]);\n  return {\n    x1: start[0],\n    y1: start[1],\n    x2: end[0],\n    y2: end[1]\n  };\n}\n\nfunction getRadiusIdx(polar) {\n  var radiusAxis = polar.getRadiusAxis();\n  return radiusAxis.inverse ? 0 : 1;\n}\n\nvar _default = AxisView.extend({\n  type: 'angleAxis',\n  axisPointerClass: 'PolarAxisPointer',\n  render: function (angleAxisModel, ecModel) {\n    this.group.removeAll();\n\n    if (!angleAxisModel.get('show')) {\n      return;\n    }\n\n    var angleAxis = angleAxisModel.axis;\n    var polar = angleAxis.polar;\n    var radiusExtent = polar.getRadiusAxis().getExtent();\n    var ticksAngles = angleAxis.getTicksCoords();\n\n    if (angleAxis.type !== 'category') {\n      // Remove the last tick which will overlap the first tick\n      ticksAngles.pop();\n    }\n\n    zrUtil.each(elementList, function (name) {\n      if (angleAxisModel.get(name + '.show') && (!angleAxis.scale.isBlank() || name === 'axisLine')) {\n        this['_' + name](angleAxisModel, polar, ticksAngles, radiusExtent);\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _axisLine: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var lineStyleModel = angleAxisModel.getModel('axisLine.lineStyle');\n    var circle = new graphic.Circle({\n      shape: {\n        cx: polar.cx,\n        cy: polar.cy,\n        r: radiusExtent[getRadiusIdx(polar)]\n      },\n      style: lineStyleModel.getLineStyle(),\n      z2: 1,\n      silent: true\n    });\n    circle.style.fill = null;\n    this.group.add(circle);\n  },\n\n  /**\n   * @private\n   */\n  _axisTick: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var tickModel = angleAxisModel.getModel('axisTick');\n    var tickLen = (tickModel.get('inside') ? -1 : 1) * tickModel.get('length');\n    var radius = radiusExtent[getRadiusIdx(polar)];\n    var lines = zrUtil.map(ticksAngles, function (tickAngle) {\n      return new graphic.Line({\n        shape: getAxisLineShape(polar, [radius, radius + tickLen], tickAngle)\n      });\n    });\n    this.group.add(graphic.mergePath(lines, {\n      style: zrUtil.defaults(tickModel.getModel('lineStyle').getLineStyle(), {\n        stroke: angleAxisModel.get('axisLine.lineStyle.color')\n      })\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _axisLabel: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var axis = angleAxisModel.axis;\n    var categoryData = angleAxisModel.get('data');\n    var labelModel = angleAxisModel.getModel('axisLabel');\n    var labels = angleAxisModel.getFormattedLabels();\n    var labelMargin = labelModel.get('margin');\n    var labelsAngles = axis.getLabelsCoords(); // Use length of ticksAngles because it may remove the last tick to avoid overlapping\n\n    for (var i = 0; i < ticksAngles.length; i++) {\n      var r = radiusExtent[getRadiusIdx(polar)];\n      var p = polar.coordToPoint([r + labelMargin, labelsAngles[i]]);\n      var cx = polar.cx;\n      var cy = polar.cy;\n      var labelTextAlign = Math.abs(p[0] - cx) / r < 0.3 ? 'center' : p[0] > cx ? 'left' : 'right';\n      var labelTextVerticalAlign = Math.abs(p[1] - cy) / r < 0.3 ? 'middle' : p[1] > cy ? 'top' : 'bottom';\n\n      if (categoryData && categoryData[i] && categoryData[i].textStyle) {\n        labelModel = new Model(categoryData[i].textStyle, labelModel, labelModel.ecModel);\n      }\n\n      var textEl = new graphic.Text({\n        silent: true\n      });\n      this.group.add(textEl);\n      graphic.setTextStyle(textEl.style, labelModel, {\n        x: p[0],\n        y: p[1],\n        textFill: labelModel.getTextColor() || angleAxisModel.get('axisLine.lineStyle.color'),\n        text: labels[i],\n        textAlign: labelTextAlign,\n        textVerticalAlign: labelTextVerticalAlign\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _splitLine: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var splitLineModel = angleAxisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineCount = 0;\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var splitLines = [];\n\n    for (var i = 0; i < ticksAngles.length; i++) {\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Line({\n        shape: getAxisLineShape(polar, radiusExtent, ticksAngles[i])\n      }));\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitLines.length; i++) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: zrUtil.defaults({\n          stroke: lineColors[i % lineColors.length]\n        }, lineStyleModel.getLineStyle()),\n        silent: true,\n        z: angleAxisModel.get('z')\n      }));\n    }\n  },\n\n  /**\n   * @private\n   */\n  _splitArea: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var splitAreaModel = angleAxisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var lineCount = 0;\n    areaColors = areaColors instanceof Array ? areaColors : [areaColors];\n    var splitAreas = [];\n    var RADIAN = Math.PI / 180;\n    var prevAngle = -ticksAngles[0] * RADIAN;\n    var r0 = Math.min(radiusExtent[0], radiusExtent[1]);\n    var r1 = Math.max(radiusExtent[0], radiusExtent[1]);\n    var clockwise = angleAxisModel.get('clockwise');\n\n    for (var i = 1; i < ticksAngles.length; i++) {\n      var colorIndex = lineCount++ % areaColors.length;\n      splitAreas[colorIndex] = splitAreas[colorIndex] || [];\n      splitAreas[colorIndex].push(new graphic.Sector({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r0: r0,\n          r: r1,\n          startAngle: prevAngle,\n          endAngle: -ticksAngles[i] * RADIAN,\n          clockwise: clockwise\n        },\n        silent: true\n      }));\n      prevAngle = -ticksAngles[i] * RADIAN;\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitAreas.length; i++) {\n      this.group.add(graphic.mergePath(splitAreas[i], {\n        style: zrUtil.defaults({\n          fill: areaColors[i % areaColors.length]\n        }, areaStyleModel.getAreaStyle()),\n        silent: true\n      }));\n    }\n  }\n});\n\nmodule.exports = _default;","require(\"../coord/polar/polarCreator\");\n\nrequire(\"./axis/RadiusAxisView\");","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar AxisView = require(\"./AxisView\");\n\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitLine', 'splitArea'];\n\nvar _default = AxisView.extend({\n  type: 'radiusAxis',\n  axisPointerClass: 'PolarAxisPointer',\n  render: function (radiusAxisModel, ecModel) {\n    this.group.removeAll();\n\n    if (!radiusAxisModel.get('show')) {\n      return;\n    }\n\n    var radiusAxis = radiusAxisModel.axis;\n    var polar = radiusAxis.polar;\n    var angleAxis = polar.getAngleAxis();\n    var ticksCoords = radiusAxis.getTicksCoords();\n    var axisAngle = angleAxis.getExtent()[0];\n    var radiusExtent = radiusAxis.getExtent();\n    var layout = layoutAxis(polar, radiusAxisModel, axisAngle);\n    var axisBuilder = new AxisBuilder(radiusAxisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n    this.group.add(axisBuilder.getGroup());\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (radiusAxisModel.get(name + '.show') && !radiusAxis.scale.isBlank()) {\n        this['_' + name](radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords);\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _splitLine: function (radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords) {\n    var splitLineModel = radiusAxisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineCount = 0;\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var splitLines = [];\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Circle({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r: ticksCoords[i]\n        },\n        silent: true\n      }));\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitLines.length; i++) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: zrUtil.defaults({\n          stroke: lineColors[i % lineColors.length],\n          fill: null\n        }, lineStyleModel.getLineStyle()),\n        silent: true\n      }));\n    }\n  },\n\n  /**\n   * @private\n   */\n  _splitArea: function (radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords) {\n    var splitAreaModel = radiusAxisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var lineCount = 0;\n    areaColors = areaColors instanceof Array ? areaColors : [areaColors];\n    var splitAreas = [];\n    var prevRadius = ticksCoords[0];\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      var colorIndex = lineCount++ % areaColors.length;\n      splitAreas[colorIndex] = splitAreas[colorIndex] || [];\n      splitAreas[colorIndex].push(new graphic.Sector({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r0: prevRadius,\n          r: ticksCoords[i],\n          startAngle: 0,\n          endAngle: Math.PI * 2\n        },\n        silent: true\n      }));\n      prevRadius = ticksCoords[i];\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitAreas.length; i++) {\n      this.group.add(graphic.mergePath(splitAreas[i], {\n        style: zrUtil.defaults({\n          fill: areaColors[i % areaColors.length]\n        }, areaStyleModel.getAreaStyle()),\n        silent: true\n      }));\n    }\n  }\n});\n/**\n * @inner\n */\n\n\nfunction layoutAxis(polar, radiusAxisModel, axisAngle) {\n  return {\n    position: [polar.cx, polar.cy],\n    rotation: axisAngle / 180 * Math.PI,\n    labelDirection: -1,\n    tickDirection: -1,\n    nameDirection: 1,\n    labelRotate: radiusAxisModel.getModel('axisLabel').get('rotate'),\n    // Over splitLine and splitArea\n    z2: 1\n  };\n}\n\nmodule.exports = _default;","var formatUtil = require(\"../../util/format\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\nvar PolarAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n\n    if (axis.dim === 'angle') {\n      this.animationThreshold = Math.PI / 18;\n    }\n\n    var polar = axis.polar;\n    var otherAxis = polar.getOtherAxis(axis);\n    var otherExtent = otherAxis.getExtent();\n    var coordValue;\n    coordValue = axis['dataTo' + formatUtil.capitalFirst(axis.dim)](value);\n    var axisPointerType = axisPointerModel.get('type');\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, polar, coordValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var labelMargin = axisPointerModel.get('label.margin');\n    var labelPos = getLabelPosition(value, axisModel, axisPointerModel, polar, labelMargin);\n    viewHelper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos);\n  } // Do not support handle, utill any user requires it.\n\n});\n\nfunction getLabelPosition(value, axisModel, axisPointerModel, polar, labelMargin) {\n  var axis = axisModel.axis;\n  var coord = axis.dataToCoord(value);\n  var axisAngle = polar.getAngleAxis().getExtent()[0];\n  axisAngle = axisAngle / 180 * Math.PI;\n  var radiusExtent = polar.getRadiusAxis().getExtent();\n  var position;\n  var align;\n  var verticalAlign;\n\n  if (axis.dim === 'radius') {\n    var transform = matrix.create();\n    matrix.rotate(transform, transform, axisAngle);\n    matrix.translate(transform, transform, [polar.cx, polar.cy]);\n    position = graphic.applyTransform([coord, -labelMargin], transform);\n    var labelRotation = axisModel.getModel('axisLabel').get('rotate') || 0;\n    var labelLayout = AxisBuilder.innerTextLayout(axisAngle, labelRotation * Math.PI / 180, -1);\n    align = labelLayout.textAlign;\n    verticalAlign = labelLayout.textVerticalAlign;\n  } else {\n    // angle axis\n    var r = radiusExtent[1];\n    position = polar.coordToPoint([r + labelMargin, coord]);\n    var cx = polar.cx;\n    var cy = polar.cy;\n    align = Math.abs(position[0] - cx) / r < 0.3 ? 'center' : position[0] > cx ? 'left' : 'right';\n    verticalAlign = Math.abs(position[1] - cy) / r < 0.3 ? 'middle' : position[1] > cy ? 'top' : 'bottom';\n  }\n\n  return {\n    position: position,\n    align: align,\n    verticalAlign: verticalAlign\n  };\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, polar, coordValue, otherExtent, elStyle) {\n    return axis.dim === 'angle' ? {\n      type: 'Line',\n      shape: viewHelper.makeLineShape(polar.coordToPoint([otherExtent[0], coordValue]), polar.coordToPoint([otherExtent[1], coordValue]))\n    } : {\n      type: 'Circle',\n      shape: {\n        cx: polar.cx,\n        cy: polar.cy,\n        r: coordValue\n      }\n    };\n  },\n  shadow: function (axis, polar, coordValue, otherExtent, elStyle) {\n    var bandWidth = axis.getBandWidth();\n    var radian = Math.PI / 180;\n    return axis.dim === 'angle' ? {\n      type: 'Sector',\n      shape: viewHelper.makeSectorShape(polar.cx, polar.cy, otherExtent[0], otherExtent[1], // In ECharts y is negative if angle is positive\n      (-coordValue - bandWidth / 2) * radian, (-coordValue + bandWidth / 2) * radian)\n    } : {\n      type: 'Sector',\n      shape: viewHelper.makeSectorShape(polar.cx, polar.cy, coordValue - bandWidth / 2, coordValue + bandWidth / 2, 0, Math.PI * 2)\n    };\n  }\n};\nAxisView.registerAxisPointerClass('PolarAxisPointer', PolarAxisPointer);\nvar _default = PolarAxisPointer;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"../coord/geo/GeoModel\");\n\nrequire(\"../coord/geo/geoCreator\");\n\nrequire(\"./geo/GeoView\");\n\nrequire(\"../action/geoRoam\");\n\nfunction makeAction(method, actionInfo) {\n  actionInfo.update = 'updateView';\n  echarts.registerAction(actionInfo, function (payload, ecModel) {\n    var selected = {};\n    ecModel.eachComponent({\n      mainType: 'geo',\n      query: payload\n    }, function (geoModel) {\n      geoModel[method](payload.name);\n      var geo = geoModel.coordinateSystem;\n      zrUtil.each(geo.regions, function (region) {\n        selected[region.name] = geoModel.isSelected(region.name) || false;\n      });\n    });\n    return {\n      selected: selected,\n      name: payload.name\n    };\n  });\n}\n\nmakeAction('toggleSelected', {\n  type: 'geoToggleSelect',\n  event: 'geoselectchanged'\n});\nmakeAction('select', {\n  type: 'geoSelect',\n  event: 'geoselected'\n});\nmakeAction('unSelect', {\n  type: 'geoUnSelect',\n  event: 'geounselected'\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar Model = require(\"../../model/Model\");\n\nvar selectableMixin = require(\"../../component/helper/selectableMixin\");\n\nvar geoCreator = require(\"./geoCreator\");\n\nvar GeoModel = ComponentModel.extend({\n  type: 'geo',\n\n  /**\n   * @type {module:echarts/coord/geo/Geo}\n   */\n  coordinateSystem: null,\n  layoutMode: 'box',\n  init: function (option) {\n    ComponentModel.prototype.init.apply(this, arguments); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option.label, ['show']);\n  },\n  optionUpdated: function () {\n    var option = this.option;\n    var self = this;\n    option.regions = geoCreator.getFilledRegions(option.regions, option.map, option.nameMap);\n    this._optionModelMap = zrUtil.reduce(option.regions || [], function (optionModelMap, regionOpt) {\n      if (regionOpt.name) {\n        optionModelMap.set(regionOpt.name, new Model(regionOpt, self));\n      }\n\n      return optionModelMap;\n    }, zrUtil.createHashMap());\n    this.updateSelectedMap(option.regions);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    show: true,\n    left: 'center',\n    top: 'center',\n    // width:,\n    // height:,\n    // right\n    // bottom\n    // Aspect is width / height. Inited to be geoJson bbox aspect\n    // This parameter is used for scale this aspect\n    aspectScale: 0.75,\n    ///// Layout with center and size\n    // If you wan't to put map in a fixed size box with right aspect ratio\n    // This two properties may more conveninet\n    // layoutCenter: [50%, 50%]\n    // layoutSize: 100\n    silent: false,\n    // Map type\n    map: '',\n    // Define left-top, right-bottom coords to control view\n    // For example, [ [180, 90], [-180, -90] ]\n    boundingCoords: null,\n    // Default on center of map\n    center: null,\n    zoom: 1,\n    scaleLimit: null,\n    // selectedMode: false\n    label: {\n      normal: {\n        show: false,\n        color: '#000'\n      },\n      emphasis: {\n        show: true,\n        color: 'rgb(100,0,0)'\n      }\n    },\n    itemStyle: {\n      normal: {\n        // color: 各异,\n        borderWidth: 0.5,\n        borderColor: '#444',\n        color: '#eee'\n      },\n      emphasis: {\n        // 也是选中样式\n        color: 'rgba(255,215,0,0.8)'\n      }\n    },\n    regions: []\n  },\n\n  /**\n   * Get model of region\n   * @param  {string} name\n   * @return {module:echarts/model/Model}\n   */\n  getRegionModel: function (name) {\n    return this._optionModelMap.get(name) || new Model(null, this, this.ecModel);\n  },\n\n  /**\n   * Format label\n   * @param {string} name Region name\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @return {string}\n   */\n  getFormattedLabel: function (name, status) {\n    var regionModel = this.getRegionModel(name);\n    var formatter = regionModel.get('label.' + status + '.formatter');\n    var params = {\n      name: name\n    };\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      return formatter.replace('{a}', name != null ? name : '');\n    }\n  },\n  setZoom: function (zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function (center) {\n    this.option.center = center;\n  }\n});\nzrUtil.mixin(GeoModel, selectableMixin);\nvar _default = GeoModel;\nmodule.exports = _default;","var MapDraw = require(\"../helper/MapDraw\");\n\nvar echarts = require(\"../../echarts\");\n\nvar _default = echarts.extendComponentView({\n  type: 'geo',\n  init: function (ecModel, api) {\n    var mapDraw = new MapDraw(api, true);\n    this._mapDraw = mapDraw;\n    this.group.add(mapDraw.group);\n  },\n  render: function (geoModel, ecModel, api, payload) {\n    // Not render if it is an toggleSelect action from self\n    if (payload && payload.type === 'geoToggleSelect' && payload.from === this.uid) {\n      return;\n    }\n\n    var mapDraw = this._mapDraw;\n\n    if (geoModel.get('show')) {\n      mapDraw.draw(geoModel, ecModel, api, this, payload);\n    } else {\n      this._mapDraw.group.removeAll();\n    }\n\n    this.group.silent = geoModel.get('silent');\n  },\n  dispose: function () {\n    this._mapDraw && this._mapDraw.remove();\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./brush/preprocessor\");\n\nrequire(\"./brush/visualEncoding\");\n\nrequire(\"./brush/BrushModel\");\n\nrequire(\"./brush/BrushView\");\n\nrequire(\"./brush/brushAction\");\n\nrequire(\"./toolbox/feature/Brush\");\n\n/**\n * Brush component entry\n */\necharts.registerPreprocessor(preprocessor);","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar DEFAULT_TOOLBOX_BTNS = ['rect', 'polygon', 'keep', 'clear'];\n\nfunction _default(option, isNew) {\n  var brushComponents = option && option.brush;\n\n  if (!zrUtil.isArray(brushComponents)) {\n    brushComponents = brushComponents ? [brushComponents] : [];\n  }\n\n  if (!brushComponents.length) {\n    return;\n  }\n\n  var brushComponentSpecifiedBtns = [];\n  zrUtil.each(brushComponents, function (brushOpt) {\n    var tbs = brushOpt.hasOwnProperty('toolbox') ? brushOpt.toolbox : [];\n\n    if (tbs instanceof Array) {\n      brushComponentSpecifiedBtns = brushComponentSpecifiedBtns.concat(tbs);\n    }\n  });\n  var toolbox = option && option.toolbox;\n\n  if (zrUtil.isArray(toolbox)) {\n    toolbox = toolbox[0];\n  }\n\n  if (!toolbox) {\n    toolbox = {\n      feature: {}\n    };\n    option.toolbox = [toolbox];\n  }\n\n  var toolboxFeature = toolbox.feature || (toolbox.feature = {});\n  var toolboxBrush = toolboxFeature.brush || (toolboxFeature.brush = {});\n  var brushTypes = toolboxBrush.type || (toolboxBrush.type = []);\n  brushTypes.push.apply(brushTypes, brushComponentSpecifiedBtns);\n  removeDuplicate(brushTypes);\n\n  if (isNew && !brushTypes.length) {\n    brushTypes.push.apply(brushTypes, DEFAULT_TOOLBOX_BTNS);\n  }\n}\n\nfunction removeDuplicate(arr) {\n  var map = {};\n  zrUtil.each(arr, function (val) {\n    map[val] = 1;\n  });\n  arr.length = 0;\n  zrUtil.each(map, function (flag, val) {\n    arr.push(val);\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar selector = require(\"./selector\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\nvar BrushTargetManager = require(\"../helper/BrushTargetManager\");\n\nvar STATE_LIST = ['inBrush', 'outOfBrush'];\nvar DISPATCH_METHOD = '__ecBrushSelect';\nvar DISPATCH_FLAG = '__ecInBrushSelectEvent';\nvar PRIORITY_BRUSH = echarts.PRIORITY.VISUAL.BRUSH;\n/**\n * Layout for visual, the priority higher than other layout, and before brush visual.\n */\n\necharts.registerLayout(PRIORITY_BRUSH, function (ecModel, api, payload) {\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel) {\n    payload && payload.type === 'takeGlobalCursor' && brushModel.setBrushOption(payload.key === 'brush' ? payload.brushOption : {\n      brushType: false\n    });\n    var brushTargetManager = brushModel.brushTargetManager = new BrushTargetManager(brushModel.option, ecModel);\n    brushTargetManager.setInputRanges(brushModel.areas, ecModel);\n  });\n});\n/**\n * Register the visual encoding if this modules required.\n */\n\necharts.registerVisual(PRIORITY_BRUSH, function (ecModel, api, payload) {\n  var brushSelected = [];\n  var throttleType;\n  var throttleDelay;\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel, brushIndex) {\n    var thisBrushSelected = {\n      brushId: brushModel.id,\n      brushIndex: brushIndex,\n      brushName: brushModel.name,\n      areas: zrUtil.clone(brushModel.areas),\n      selected: []\n    }; // Every brush component exists in event params, convenient\n    // for user to find by index.\n\n    brushSelected.push(thisBrushSelected);\n    var brushOption = brushModel.option;\n    var brushLink = brushOption.brushLink;\n    var linkedSeriesMap = [];\n    var selectedDataIndexForLink = [];\n    var rangeInfoBySeries = [];\n    var hasBrushExists = 0;\n\n    if (!brushIndex) {\n      // Only the first throttle setting works.\n      throttleType = brushOption.throttleType;\n      throttleDelay = brushOption.throttleDelay;\n    } // Add boundingRect and selectors to range.\n\n\n    var areas = zrUtil.map(brushModel.areas, function (area) {\n      return bindSelector(zrUtil.defaults({\n        boundingRect: boundingRectBuilders[area.brushType](area)\n      }, area));\n    });\n    var visualMappings = visualSolution.createVisualMappings(brushModel.option, STATE_LIST, function (mappingOption) {\n      mappingOption.mappingMethod = 'fixed';\n    });\n    zrUtil.isArray(brushLink) && zrUtil.each(brushLink, function (seriesIndex) {\n      linkedSeriesMap[seriesIndex] = 1;\n    });\n\n    function linkOthers(seriesIndex) {\n      return brushLink === 'all' || linkedSeriesMap[seriesIndex];\n    } // If no supported brush or no brush on the series,\n    // all visuals should be in original state.\n\n\n    function brushed(rangeInfoList) {\n      return !!rangeInfoList.length;\n    }\n    /**\n     * Logic for each series: (If the logic has to be modified one day, do it carefully!)\n     *\n     * ( brushed ┬ && ┬hasBrushExist ┬ && linkOthers  ) => StepA: ┬record, ┬ StepB: ┬visualByRecord.\n     *   !brushed┘    ├hasBrushExist ┤                            └nothing,┘        ├visualByRecord.\n     *                └!hasBrushExist┘                                              └nothing.\n     * ( !brushed  && ┬hasBrushExist ┬ && linkOthers  ) => StepA:  nothing,  StepB: ┬visualByRecord.\n     *                └!hasBrushExist┘                                              └nothing.\n     * ( brushed ┬ &&                     !linkOthers ) => StepA:  nothing,  StepB: ┬visualByCheck.\n     *   !brushed┘                                                                  └nothing.\n     * ( !brushed  &&                     !linkOthers ) => StepA:  nothing,  StepB:  nothing.\n     */\n    // Step A\n\n\n    ecModel.eachSeries(function (seriesModel, seriesIndex) {\n      var rangeInfoList = rangeInfoBySeries[seriesIndex] = [];\n      seriesModel.subType === 'parallel' ? stepAParallel(seriesModel, seriesIndex, rangeInfoList) : stepAOthers(seriesModel, seriesIndex, rangeInfoList);\n    });\n\n    function stepAParallel(seriesModel, seriesIndex) {\n      var coordSys = seriesModel.coordinateSystem;\n      hasBrushExists |= coordSys.hasAxisBrushed();\n      linkOthers(seriesIndex) && coordSys.eachActiveState(seriesModel.getData(), function (activeState, dataIndex) {\n        activeState === 'active' && (selectedDataIndexForLink[dataIndex] = 1);\n      });\n    }\n\n    function stepAOthers(seriesModel, seriesIndex, rangeInfoList) {\n      var selectorsByBrushType = getSelectorsByBrushType(seriesModel);\n\n      if (!selectorsByBrushType || brushModelNotControll(brushModel, seriesIndex)) {\n        return;\n      }\n\n      zrUtil.each(areas, function (area) {\n        selectorsByBrushType[area.brushType] && brushModel.brushTargetManager.controlSeries(area, seriesModel, ecModel) && rangeInfoList.push(area);\n        hasBrushExists |= brushed(rangeInfoList);\n      });\n\n      if (linkOthers(seriesIndex) && brushed(rangeInfoList)) {\n        var data = seriesModel.getData();\n        data.each(function (dataIndex) {\n          if (checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex)) {\n            selectedDataIndexForLink[dataIndex] = 1;\n          }\n        });\n      }\n    } // Step B\n\n\n    ecModel.eachSeries(function (seriesModel, seriesIndex) {\n      var seriesBrushSelected = {\n        seriesId: seriesModel.id,\n        seriesIndex: seriesIndex,\n        seriesName: seriesModel.name,\n        dataIndex: []\n      }; // Every series exists in event params, convenient\n      // for user to find series by seriesIndex.\n\n      thisBrushSelected.selected.push(seriesBrushSelected);\n      var selectorsByBrushType = getSelectorsByBrushType(seriesModel);\n      var rangeInfoList = rangeInfoBySeries[seriesIndex];\n      var data = seriesModel.getData();\n      var getValueState = linkOthers(seriesIndex) ? function (dataIndex) {\n        return selectedDataIndexForLink[dataIndex] ? (seriesBrushSelected.dataIndex.push(data.getRawIndex(dataIndex)), 'inBrush') : 'outOfBrush';\n      } : function (dataIndex) {\n        return checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex) ? (seriesBrushSelected.dataIndex.push(data.getRawIndex(dataIndex)), 'inBrush') : 'outOfBrush';\n      }; // If no supported brush or no brush, all visuals are in original state.\n\n      (linkOthers(seriesIndex) ? hasBrushExists : brushed(rangeInfoList)) && visualSolution.applyVisual(STATE_LIST, visualMappings, data, getValueState);\n    });\n  });\n  dispatchAction(api, throttleType, throttleDelay, brushSelected, payload);\n});\n\nfunction dispatchAction(api, throttleType, throttleDelay, brushSelected, payload) {\n  // This event will not be triggered when `setOpion`, otherwise dead lock may\n  // triggered when do `setOption` in event listener, which we do not find\n  // satisfactory way to solve yet. Some considered resolutions:\n  // (a) Diff with prevoius selected data ant only trigger event when changed.\n  // But store previous data and diff precisely (i.e., not only by dataIndex, but\n  // also detect value changes in selected data) might bring complexity or fragility.\n  // (b) Use spectial param like `silent` to suppress event triggering.\n  // But such kind of volatile param may be weird in `setOption`.\n  if (!payload) {\n    return;\n  }\n\n  var zr = api.getZr();\n\n  if (zr[DISPATCH_FLAG]) {\n    return;\n  }\n\n  if (!zr[DISPATCH_METHOD]) {\n    zr[DISPATCH_METHOD] = doDispatch;\n  }\n\n  var fn = throttleUtil.createOrUpdate(zr, DISPATCH_METHOD, throttleDelay, throttleType);\n  fn(api, brushSelected);\n}\n\nfunction doDispatch(api, brushSelected) {\n  if (!api.isDisposed()) {\n    var zr = api.getZr();\n    zr[DISPATCH_FLAG] = true;\n    api.dispatchAction({\n      type: 'brushSelect',\n      batch: brushSelected\n    });\n    zr[DISPATCH_FLAG] = false;\n  }\n}\n\nfunction checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex) {\n  for (var i = 0, len = rangeInfoList.length; i < len; i++) {\n    var area = rangeInfoList[i];\n\n    if (selectorsByBrushType[area.brushType](dataIndex, data, area.selectors, area)) {\n      return true;\n    }\n  }\n}\n\nfunction getSelectorsByBrushType(seriesModel) {\n  var brushSelector = seriesModel.brushSelector;\n\n  if (zrUtil.isString(brushSelector)) {\n    var sels = [];\n    zrUtil.each(selector, function (selectorsByElementType, brushType) {\n      sels[brushType] = function (dataIndex, data, selectors, area) {\n        var itemLayout = data.getItemLayout(dataIndex);\n        return selectorsByElementType[brushSelector](itemLayout, selectors, area);\n      };\n    });\n    return sels;\n  } else if (zrUtil.isFunction(brushSelector)) {\n    var bSelector = {};\n    zrUtil.each(selector, function (sel, brushType) {\n      bSelector[brushType] = brushSelector;\n    });\n    return bSelector;\n  }\n\n  return brushSelector;\n}\n\nfunction brushModelNotControll(brushModel, seriesIndex) {\n  var seriesIndices = brushModel.option.seriesIndex;\n  return seriesIndices != null && seriesIndices !== 'all' && (zrUtil.isArray(seriesIndices) ? zrUtil.indexOf(seriesIndices, seriesIndex) < 0 : seriesIndex !== seriesIndices);\n}\n\nfunction bindSelector(area) {\n  var selectors = area.selectors = {};\n  zrUtil.each(selector[area.brushType], function (selFn, elType) {\n    // Do not use function binding or curry for performance.\n    selectors[elType] = function (itemLayout) {\n      return selFn(itemLayout, selectors, area);\n    };\n  });\n  return area;\n}\n\nvar boundingRectBuilders = {\n  lineX: zrUtil.noop,\n  lineY: zrUtil.noop,\n  rect: function (area) {\n    return getBoundingRectFromMinMax(area.range);\n  },\n  polygon: function (area) {\n    var minMax;\n    var range = area.range;\n\n    for (var i = 0, len = range.length; i < len; i++) {\n      minMax = minMax || [[Infinity, -Infinity], [Infinity, -Infinity]];\n      var rg = range[i];\n      rg[0] < minMax[0][0] && (minMax[0][0] = rg[0]);\n      rg[0] > minMax[0][1] && (minMax[0][1] = rg[0]);\n      rg[1] < minMax[1][0] && (minMax[1][0] = rg[1]);\n      rg[1] > minMax[1][1] && (minMax[1][1] = rg[1]);\n    }\n\n    return minMax && getBoundingRectFromMinMax(minMax);\n  }\n};\n\nfunction getBoundingRectFromMinMax(minMax) {\n  return new BoundingRect(minMax[0][0], minMax[1][0], minMax[0][1] - minMax[0][0], minMax[1][1] - minMax[1][0]);\n}","var polygonContain = require(\"zrender/lib/contain/polygon\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\n// Key of the first level is brushType: `line`, `rect`, `polygon`.\n// Key of the second level is chart element type: `point`, `rect`.\n// See moudule:echarts/component/helper/BrushController\n// function param:\n//      {Object} itemLayout fetch from data.getItemLayout(dataIndex)\n//      {Object} selectors {point: selector, rect: selector, ...}\n//      {Object} area {range: [[], [], ..], boudingRect}\n// function return:\n//      {boolean} Whether in the given brush.\nvar selector = {\n  lineX: getLineSelectors(0),\n  lineY: getLineSelectors(1),\n  rect: {\n    point: function (itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.contain(itemLayout[0], itemLayout[1]);\n    },\n    rect: function (itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.intersect(itemLayout);\n    }\n  },\n  polygon: {\n    point: function (itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.contain(itemLayout[0], itemLayout[1]) && polygonContain.contain(area.range, itemLayout[0], itemLayout[1]);\n    },\n    rect: function (itemLayout, selectors, area) {\n      var points = area.range;\n\n      if (!itemLayout || points.length <= 1) {\n        return false;\n      }\n\n      var x = itemLayout.x;\n      var y = itemLayout.y;\n      var width = itemLayout.width;\n      var height = itemLayout.height;\n      var p = points[0];\n\n      if (polygonContain.contain(points, x, y) || polygonContain.contain(points, x + width, y) || polygonContain.contain(points, x, y + height) || polygonContain.contain(points, x + width, y + height) || BoundingRect.create(itemLayout).contain(p[0], p[1]) || lineIntersectPolygon(x, y, x + width, y, points) || lineIntersectPolygon(x, y, x, y + height, points) || lineIntersectPolygon(x + width, y, x + width, y + height, points) || lineIntersectPolygon(x, y + height, x + width, y + height, points)) {\n        return true;\n      }\n    }\n  }\n};\n\nfunction getLineSelectors(xyIndex) {\n  var xy = ['x', 'y'];\n  var wh = ['width', 'height'];\n  return {\n    point: function (itemLayout, selectors, area) {\n      if (itemLayout) {\n        var range = area.range;\n        var p = itemLayout[xyIndex];\n        return inLineRange(p, range);\n      }\n    },\n    rect: function (itemLayout, selectors, area) {\n      if (itemLayout) {\n        var range = area.range;\n        var layoutRange = [itemLayout[xy[xyIndex]], itemLayout[xy[xyIndex]] + itemLayout[wh[xyIndex]]];\n        layoutRange[1] < layoutRange[0] && layoutRange.reverse();\n        return inLineRange(layoutRange[0], range) || inLineRange(layoutRange[1], range) || inLineRange(range[0], layoutRange) || inLineRange(range[1], layoutRange);\n      }\n    }\n  };\n}\n\nfunction inLineRange(p, range) {\n  return range[0] <= p && p <= range[1];\n}\n\nfunction lineIntersectPolygon(lx, ly, l2x, l2y, points) {\n  for (var i = 0, p2 = points[points.length - 1]; i < points.length; i++) {\n    var p = points[i];\n\n    if (lineIntersect(lx, ly, l2x, l2y, p[0], p[1], p2[0], p2[1])) {\n      return true;\n    }\n\n    p2 = p;\n  }\n} // Code from <http://blog.csdn.net/rickliuxiao/article/details/6259322> with some fix.\n// See <https://en.wikipedia.org/wiki/Line%E2%80%93line_intersection>\n\n\nfunction lineIntersect(a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y) {\n  var delta = determinant(a2x - a1x, b1x - b2x, a2y - a1y, b1y - b2y);\n\n  if (nearZero(delta)) {\n    // parallel\n    return false;\n  }\n\n  var namenda = determinant(b1x - a1x, b1x - b2x, b1y - a1y, b1y - b2y) / delta;\n\n  if (namenda < 0 || namenda > 1) {\n    return false;\n  }\n\n  var miu = determinant(a2x - a1x, b1x - a1x, a2y - a1y, b1y - a1y) / delta;\n\n  if (miu < 0 || miu > 1) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction nearZero(val) {\n  return val <= 1e-6 && val >= -1e-6;\n}\n\nfunction determinant(v1, v2, v3, v4) {\n  return v1 * v4 - v2 * v3;\n}\n\nvar _default = selector;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar Model = require(\"../../model/Model\");\n\nvar DEFAULT_OUT_OF_BRUSH_COLOR = ['#ddd'];\nvar BrushModel = echarts.extendComponentModel({\n  type: 'brush',\n  dependencies: ['geo', 'grid', 'xAxis', 'yAxis', 'parallel', 'series'],\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    // inBrush: null,\n    // outOfBrush: null,\n    toolbox: null,\n    // Default value see preprocessor.\n    brushLink: null,\n    // Series indices array, broadcast using dataIndex.\n    // or 'all', which means all series. 'none' or null means no series.\n    seriesIndex: 'all',\n    // seriesIndex array, specify series controlled by this brush component.\n    geoIndex: null,\n    //\n    xAxisIndex: null,\n    yAxisIndex: null,\n    brushType: 'rect',\n    // Default brushType, see BrushController.\n    brushMode: 'single',\n    // Default brushMode, 'single' or 'multiple'\n    transformable: true,\n    // Default transformable.\n    brushStyle: {\n      // Default brushStyle\n      borderWidth: 1,\n      color: 'rgba(120,140,180,0.3)',\n      borderColor: 'rgba(120,140,180,0.8)'\n    },\n    throttleType: 'fixRate',\n    // Throttle in brushSelected event. 'fixRate' or 'debounce'.\n    // If null, no throttle. Valid only in the first brush component\n    throttleDelay: 0,\n    // Unit: ms, 0 means every event will be triggered.\n    // FIXME\n    // 试验效果\n    removeOnClick: true,\n    z: 10000\n  },\n\n  /**\n   * @readOnly\n   * @type {Array.<Object>}\n   */\n  areas: [],\n\n  /**\n   * Current activated brush type.\n   * If null, brush is inactived.\n   * see module:echarts/component/helper/BrushController\n   * @readOnly\n   * @type {string}\n   */\n  brushType: null,\n\n  /**\n   * Current brush opt.\n   * see module:echarts/component/helper/BrushController\n   * @readOnly\n   * @type {Object}\n   */\n  brushOption: {},\n\n  /**\n   * @readOnly\n   * @type {Array.<Object>}\n   */\n  coordInfoList: [],\n  optionUpdated: function (newOption, isInit) {\n    var thisOption = this.option;\n    !isInit && visualSolution.replaceVisualOption(thisOption, newOption, ['inBrush', 'outOfBrush']);\n    thisOption.inBrush = thisOption.inBrush || {}; // Always give default visual, consider setOption at the second time.\n\n    thisOption.outOfBrush = thisOption.outOfBrush || {\n      color: DEFAULT_OUT_OF_BRUSH_COLOR\n    };\n  },\n\n  /**\n   * If ranges is null/undefined, range state remain.\n   *\n   * @param {Array.<Object>} [ranges]\n   */\n  setAreas: function (areas) {\n    // If ranges is null/undefined, range state remain.\n    // This helps user to dispatchAction({type: 'brush'}) with no areas\n    // set but just want to get the current brush select info from a `brush` event.\n    if (!areas) {\n      return;\n    }\n\n    this.areas = zrUtil.map(areas, function (area) {\n      return generateBrushOption(this.option, area);\n    }, this);\n  },\n\n  /**\n   * see module:echarts/component/helper/BrushController\n   * @param {Object} brushOption\n   */\n  setBrushOption: function (brushOption) {\n    this.brushOption = generateBrushOption(this.option, brushOption);\n    this.brushType = this.brushOption.brushType;\n  }\n});\n\nfunction generateBrushOption(option, brushOption) {\n  return zrUtil.merge({\n    brushType: option.brushType,\n    brushMode: option.brushMode,\n    transformable: option.transformable,\n    brushStyle: new Model(option.brushStyle).getItemStyle(),\n    removeOnClick: option.removeOnClick,\n    z: option.z\n  }, brushOption, true);\n}\n\nvar _default = BrushModel;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BrushController = require(\"../helper/BrushController\");\n\nvar _default = echarts.extendComponentView({\n  type: 'brush',\n  init: function (ecModel, api) {\n    /**\n     * @readOnly\n     * @type {module:echarts/model/Global}\n     */\n    this.ecModel = ecModel;\n    /**\n     * @readOnly\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this.api = api;\n    /**\n     * @readOnly\n     * @type {module:echarts/component/brush/BrushModel}\n     */\n\n    this.model;\n    /**\n     * @private\n     * @type {module:echarts/component/helper/BrushController}\n     */\n\n    (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this)).mount();\n  },\n\n  /**\n   * @override\n   */\n  render: function (brushModel) {\n    this.model = brushModel;\n    return updateController.apply(this, arguments);\n  },\n\n  /**\n   * @override\n   */\n  updateView: updateController,\n\n  /**\n   * @override\n   */\n  updateLayout: updateController,\n\n  /**\n   * @override\n   */\n  updateVisual: updateController,\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._brushController.dispose();\n  },\n\n  /**\n   * @private\n   */\n  _onBrush: function (areas, opt) {\n    var modelId = this.model.id;\n    this.model.brushTargetManager.setOutputRanges(areas, this.ecModel); // Action is not dispatched on drag end, because the drag end\n    // emits the same params with the last drag move event, and\n    // may have some delay when using touch pad, which makes\n    // animation not smooth (when using debounce).\n\n    (!opt.isEnd || opt.removeOnClick) && this.api.dispatchAction({\n      type: 'brush',\n      brushId: modelId,\n      areas: zrUtil.clone(areas),\n      $from: modelId\n    });\n  }\n});\n\nfunction updateController(brushModel, ecModel, api, payload) {\n  // Do not update controller when drawing.\n  (!payload || payload.$from !== brushModel.id) && this._brushController.setPanels(brushModel.brushTargetManager.makePanelOpts(api)).enableBrush(brushModel.brushOption).updateCovers(brushModel.areas.slice());\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\n/**\n * payload: {\n *      brushIndex: number, or,\n *      brushId: string, or,\n *      brushName: string,\n *      globalRanges: Array\n * }\n */\necharts.registerAction({\n  type: 'brush',\n  event: 'brush',\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'brush',\n    query: payload\n  }, function (brushModel) {\n    brushModel.setAreas(payload.areas);\n  });\n});\n/**\n * payload: {\n *      brushComponents: [\n *          {\n *              brushId,\n *              brushIndex,\n *              brushName,\n *              series: [\n *                  {\n *                      seriesId,\n *                      seriesIndex,\n *                      seriesName,\n *                      rawIndices: [21, 34, ...]\n *                  },\n *                  ...\n *              ]\n *          },\n *          ...\n *      ]\n * }\n */\n\necharts.registerAction({\n  type: 'brushSelect',\n  event: 'brushSelected',\n  update: 'none'\n}, function () {});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar lang = require(\"../../../lang\");\n\nvar brushLang = lang.toolbox.brush;\n\nfunction Brush(model, ecModel, api) {\n  this.model = model;\n  this.ecModel = ecModel;\n  this.api = api;\n  /**\n   * @private\n   * @type {string}\n   */\n\n  this._brushType;\n  /**\n   * @private\n   * @type {string}\n   */\n\n  this._brushMode;\n}\n\nBrush.defaultOption = {\n  show: true,\n  type: ['rect', 'polygon', 'lineX', 'lineY', 'keep', 'clear'],\n  icon: {\n    rect: 'M7.3,34.7 M0.4,10V-0.2h9.8 M89.6,10V-0.2h-9.8 M0.4,60v10.2h9.8 M89.6,60v10.2h-9.8 M12.3,22.4V10.5h13.1 M33.6,10.5h7.8 M49.1,10.5h7.8 M77.5,22.4V10.5h-13 M12.3,31.1v8.2 M77.7,31.1v8.2 M12.3,47.6v11.9h13.1 M33.6,59.5h7.6 M49.1,59.5 h7.7 M77.5,47.6v11.9h-13',\n    // jshint ignore:line\n    polygon: 'M55.2,34.9c1.7,0,3.1,1.4,3.1,3.1s-1.4,3.1-3.1,3.1 s-3.1-1.4-3.1-3.1S53.5,34.9,55.2,34.9z M50.4,51c1.7,0,3.1,1.4,3.1,3.1c0,1.7-1.4,3.1-3.1,3.1c-1.7,0-3.1-1.4-3.1-3.1 C47.3,52.4,48.7,51,50.4,51z M55.6,37.1l1.5-7.8 M60.1,13.5l1.6-8.7l-7.8,4 M59,19l-1,5.3 M24,16.1l6.4,4.9l6.4-3.3 M48.5,11.6 l-5.9,3.1 M19.1,12.8L9.7,5.1l1.1,7.7 M13.4,29.8l1,7.3l6.6,1.6 M11.6,18.4l1,6.1 M32.8,41.9 M26.6,40.4 M27.3,40.2l6.1,1.6 M49.9,52.1l-5.6-7.6l-4.9-1.2',\n    // jshint ignore:line\n    lineX: 'M15.2,30 M19.7,15.6V1.9H29 M34.8,1.9H40.4 M55.3,15.6V1.9H45.9 M19.7,44.4V58.1H29 M34.8,58.1H40.4 M55.3,44.4 V58.1H45.9 M12.5,20.3l-9.4,9.6l9.6,9.8 M3.1,29.9h16.5 M62.5,20.3l9.4,9.6L62.3,39.7 M71.9,29.9H55.4',\n    // jshint ignore:line\n    lineY: 'M38.8,7.7 M52.7,12h13.2v9 M65.9,26.6V32 M52.7,46.3h13.2v-9 M24.9,12H11.8v9 M11.8,26.6V32 M24.9,46.3H11.8v-9 M48.2,5.1l-9.3-9l-9.4,9.2 M38.9-3.9V12 M48.2,53.3l-9.3,9l-9.4-9.2 M38.9,62.3V46.4',\n    // jshint ignore:line\n    keep: 'M4,10.5V1h10.3 M20.7,1h6.1 M33,1h6.1 M55.4,10.5V1H45.2 M4,17.3v6.6 M55.6,17.3v6.6 M4,30.5V40h10.3 M20.7,40 h6.1 M33,40h6.1 M55.4,30.5V40H45.2 M21,18.9h62.9v48.6H21V18.9z',\n    // jshint ignore:line\n    clear: 'M22,14.7l30.9,31 M52.9,14.7L22,45.7 M4.7,16.8V4.2h13.1 M26,4.2h7.8 M41.6,4.2h7.8 M70.3,16.8V4.2H57.2 M4.7,25.9v8.6 M70.3,25.9v8.6 M4.7,43.2v12.6h13.1 M26,55.8h7.8 M41.6,55.8h7.8 M70.3,43.2v12.6H57.2' // jshint ignore:line\n\n  },\n  // `rect`, `polygon`, `lineX`, `lineY`, `keep`, `clear`\n  title: zrUtil.clone(brushLang.title)\n};\nvar proto = Brush.prototype;\n\nproto.render = proto.updateView = proto.updateLayout = function (featureModel, ecModel, api) {\n  var brushType;\n  var brushMode;\n  var isBrushed;\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel) {\n    brushType = brushModel.brushType;\n    brushMode = brushModel.brushOption.brushMode || 'single';\n    isBrushed |= brushModel.areas.length;\n  });\n  this._brushType = brushType;\n  this._brushMode = brushMode;\n  zrUtil.each(featureModel.get('type', true), function (type) {\n    featureModel.setIconStatus(type, (type === 'keep' ? brushMode === 'multiple' : type === 'clear' ? isBrushed : type === brushType) ? 'emphasis' : 'normal');\n  });\n};\n\nproto.getIcons = function () {\n  var model = this.model;\n  var availableIcons = model.get('icon', true);\n  var icons = {};\n  zrUtil.each(model.get('type', true), function (type) {\n    if (availableIcons[type]) {\n      icons[type] = availableIcons[type];\n    }\n  });\n  return icons;\n};\n\nproto.onclick = function (ecModel, api, type) {\n  var brushType = this._brushType;\n  var brushMode = this._brushMode;\n\n  if (type === 'clear') {\n    // Trigger parallel action firstly\n    api.dispatchAction({\n      type: 'axisAreaSelect',\n      intervals: []\n    });\n    api.dispatchAction({\n      type: 'brush',\n      command: 'clear',\n      // Clear all areas of all brush components.\n      areas: []\n    });\n  } else {\n    api.dispatchAction({\n      type: 'takeGlobalCursor',\n      key: 'brush',\n      brushOption: {\n        brushType: type === 'keep' ? brushType : brushType === type ? false : type,\n        brushMode: type === 'keep' ? brushMode === 'multiple' ? 'single' : 'multiple' : brushMode\n      }\n    });\n  }\n};\n\nfeatureManager.register('brush', Brush);\nvar _default = Brush;\nmodule.exports = _default;","require(\"../coord/calendar/Calendar\");\n\nrequire(\"../coord/calendar/CalendarModel\");\n\nrequire(\"./calendar/CalendarView\");","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar layout = require(\"../../util/layout\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n// (24*60*60*1000)\nvar PROXIMATE_ONE_DAY = 86400000;\n/**\n * Calendar\n *\n * @constructor\n *\n * @param {Object} calendarModel calendarModel\n * @param {Object} ecModel       ecModel\n * @param {Object} api           api\n */\n\nfunction Calendar(calendarModel, ecModel, api) {\n  this._model = calendarModel;\n}\n\nCalendar.prototype = {\n  constructor: Calendar,\n  type: 'calendar',\n  dimensions: ['time', 'value'],\n  // Required in createListFromData\n  getDimensionsInfo: function () {\n    return [{\n      name: 'time',\n      type: 'time'\n    }];\n  },\n  getRangeInfo: function () {\n    return this._rangeInfo;\n  },\n  getModel: function () {\n    return this._model;\n  },\n  getRect: function () {\n    return this._rect;\n  },\n  getCellWidth: function () {\n    return this._sw;\n  },\n  getCellHeight: function () {\n    return this._sh;\n  },\n  getOrient: function () {\n    return this._orient;\n  },\n\n  /**\n   * getFirstDayOfWeek\n   *\n   * @example\n   *     0 : start at Sunday\n   *     1 : start at Monday\n   *\n   * @return {number}\n   */\n  getFirstDayOfWeek: function () {\n    return this._firstDayOfWeek;\n  },\n\n  /**\n   * get date info\n   *\n   * @param  {string|number} date date\n   * @return {Object}\n   * {\n   *      y: string, local full year, eg., '1940',\n   *      m: string, local month, from '01' ot '12',\n   *      d: string, local date, from '01' to '31' (if exists),\n   *      day: It is not date.getDay(). It is the location of the cell in a week, from 0 to 6,\n   *      time: timestamp,\n   *      formatedDate: string, yyyy-MM-dd,\n   *      date: original date object.\n   * }\n   */\n  getDateInfo: function (date) {\n    date = numberUtil.parseDate(date);\n    var y = date.getFullYear();\n    var m = date.getMonth() + 1;\n    m = m < 10 ? '0' + m : m;\n    var d = date.getDate();\n    d = d < 10 ? '0' + d : d;\n    var day = date.getDay();\n    day = Math.abs((day + 7 - this.getFirstDayOfWeek()) % 7);\n    return {\n      y: y,\n      m: m,\n      d: d,\n      day: day,\n      time: date.getTime(),\n      formatedDate: y + '-' + m + '-' + d,\n      date: date\n    };\n  },\n  getNextNDay: function (date, n) {\n    n = n || 0;\n\n    if (n === 0) {\n      return this.getDateInfo(date);\n    }\n\n    date = new Date(this.getDateInfo(date).time);\n    date.setDate(date.getDate() + n);\n    return this.getDateInfo(date);\n  },\n  update: function (ecModel, api) {\n    this._firstDayOfWeek = +this._model.getModel('dayLabel').get('firstDay');\n    this._orient = this._model.get('orient');\n    this._lineWidth = this._model.getModel('itemStyle.normal').getItemStyle().lineWidth || 0;\n    this._rangeInfo = this._getRangeInfo(this._initRangeOption());\n    var weeks = this._rangeInfo.weeks || 1;\n    var whNames = ['width', 'height'];\n\n    var cellSize = this._model.get('cellSize').slice();\n\n    var layoutParams = this._model.getBoxLayoutParams();\n\n    var cellNumbers = this._orient === 'horizontal' ? [weeks, 7] : [7, weeks];\n    zrUtil.each([0, 1], function (idx) {\n      if (cellSizeSpecified(cellSize, idx)) {\n        layoutParams[whNames[idx]] = cellSize[idx] * cellNumbers[idx];\n      }\n    });\n    var whGlobal = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var calendarRect = this._rect = layout.getLayoutRect(layoutParams, whGlobal);\n    zrUtil.each([0, 1], function (idx) {\n      if (!cellSizeSpecified(cellSize, idx)) {\n        cellSize[idx] = calendarRect[whNames[idx]] / cellNumbers[idx];\n      }\n    });\n\n    function cellSizeSpecified(cellSize, idx) {\n      return cellSize[idx] != null && cellSize[idx] !== 'auto';\n    }\n\n    this._sw = cellSize[0];\n    this._sh = cellSize[1];\n  },\n\n  /**\n   * Convert a time data(time, value) item to (x, y) point.\n   *\n   * @override\n   * @param  {Array|number} data data\n   * @param  {boolean} [clamp=true] out of range\n   * @return {Array} point\n   */\n  dataToPoint: function (data, clamp) {\n    zrUtil.isArray(data) && (data = data[0]);\n    clamp == null && (clamp = true);\n    var dayInfo = this.getDateInfo(data);\n    var range = this._rangeInfo;\n    var date = dayInfo.formatedDate; // if not in range return [NaN, NaN]\n\n    if (clamp && !(dayInfo.time >= range.start.time && dayInfo.time <= range.end.time)) {\n      return [NaN, NaN];\n    }\n\n    var week = dayInfo.day;\n\n    var nthWeek = this._getRangeInfo([range.start.time, date]).nthWeek;\n\n    if (this._orient === 'vertical') {\n      return [this._rect.x + week * this._sw + this._sw / 2, this._rect.y + nthWeek * this._sh + this._sh / 2];\n    }\n\n    return [this._rect.x + nthWeek * this._sw + this._sw / 2, this._rect.y + week * this._sh + this._sh / 2];\n  },\n\n  /**\n   * Convert a (x, y) point to time data\n   *\n   * @override\n   * @param  {string} point point\n   * @return {string}       data\n   */\n  pointToData: function (point) {\n    var date = this.pointToDate(point);\n    return date && date.time;\n  },\n\n  /**\n   * Convert a time date item to (x, y) four point.\n   *\n   * @param  {Array} data  date[0] is date\n   * @param  {boolean} [clamp=true]  out of range\n   * @return {Object}       point\n   */\n  dataToRect: function (data, clamp) {\n    var point = this.dataToPoint(data, clamp);\n    return {\n      contentShape: {\n        x: point[0] - (this._sw - this._lineWidth) / 2,\n        y: point[1] - (this._sh - this._lineWidth) / 2,\n        width: this._sw - this._lineWidth,\n        height: this._sh - this._lineWidth\n      },\n      center: point,\n      tl: [point[0] - this._sw / 2, point[1] - this._sh / 2],\n      tr: [point[0] + this._sw / 2, point[1] - this._sh / 2],\n      br: [point[0] + this._sw / 2, point[1] + this._sh / 2],\n      bl: [point[0] - this._sw / 2, point[1] + this._sh / 2]\n    };\n  },\n\n  /**\n   * Convert a (x, y) point to time date\n   *\n   * @param  {Array} point point\n   * @return {Object}       date\n   */\n  pointToDate: function (point) {\n    var nthX = Math.floor((point[0] - this._rect.x) / this._sw) + 1;\n    var nthY = Math.floor((point[1] - this._rect.y) / this._sh) + 1;\n    var range = this._rangeInfo.range;\n\n    if (this._orient === 'vertical') {\n      return this._getDateByWeeksAndDay(nthY, nthX - 1, range);\n    }\n\n    return this._getDateByWeeksAndDay(nthX, nthY - 1, range);\n  },\n\n  /**\n   * @inheritDoc\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @inheritDoc\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData'),\n\n  /**\n   * initRange\n   *\n   * @private\n   * @return {Array} [start, end]\n   */\n  _initRangeOption: function () {\n    var range = this._model.get('range');\n\n    var rg = range;\n\n    if (zrUtil.isArray(rg) && rg.length === 1) {\n      rg = rg[0];\n    }\n\n    if (/^\\d{4}$/.test(rg)) {\n      range = [rg + '-01-01', rg + '-12-31'];\n    }\n\n    if (/^\\d{4}[\\/|-]\\d{1,2}$/.test(rg)) {\n      var start = this.getDateInfo(rg);\n      var firstDay = start.date;\n      firstDay.setMonth(firstDay.getMonth() + 1);\n      var end = this.getNextNDay(firstDay, -1);\n      range = [start.formatedDate, end.formatedDate];\n    }\n\n    if (/^\\d{4}[\\/|-]\\d{1,2}[\\/|-]\\d{1,2}$/.test(rg)) {\n      range = [rg, rg];\n    }\n\n    var tmp = this._getRangeInfo(range);\n\n    if (tmp.start.time > tmp.end.time) {\n      range.reverse();\n    }\n\n    return range;\n  },\n\n  /**\n   * range info\n   *\n   * @private\n   * @param  {Array} range range ['2017-01-01', '2017-07-08']\n   *  If range[0] > range[1], they will not be reversed.\n   * @return {Object}       obj\n   */\n  _getRangeInfo: function (range) {\n    range = [this.getDateInfo(range[0]), this.getDateInfo(range[1])];\n    var reversed;\n\n    if (range[0].time > range[1].time) {\n      reversed = true;\n      range.reverse();\n    }\n\n    var allDay = Math.floor(range[1].time / PROXIMATE_ONE_DAY) - Math.floor(range[0].time / PROXIMATE_ONE_DAY) + 1; // Consider case:\n    // Firstly set system timezone as \"Time Zone: America/Toronto\",\n    // ```\n    // var first = new Date(1478412000000 - 3600 * 1000 * 2.5);\n    // var second = new Date(1478412000000);\n    // var allDays = Math.floor(second / ONE_DAY) - Math.floor(first / ONE_DAY) + 1;\n    // ```\n    // will get wrong result because of DST. So we should fix it.\n\n    var date = new Date(range[0].time);\n    var startDateNum = date.getDate();\n    var endDateNum = range[1].date.getDate();\n    date.setDate(startDateNum + allDay - 1); // The bias can not over a month, so just compare date.\n\n    if (date.getDate() !== endDateNum) {\n      var sign = date.getTime() - range[1].time > 0 ? 1 : -1;\n\n      while (date.getDate() !== endDateNum && (date.getTime() - range[1].time) * sign > 0) {\n        allDay -= sign;\n        date.setDate(startDateNum + allDay - 1);\n      }\n    }\n\n    var weeks = Math.floor((allDay + range[0].day + 6) / 7);\n    var nthWeek = reversed ? -weeks + 1 : weeks - 1;\n    reversed && range.reverse();\n    return {\n      range: [range[0].formatedDate, range[1].formatedDate],\n      start: range[0],\n      end: range[1],\n      allDay: allDay,\n      weeks: weeks,\n      // From 0.\n      nthWeek: nthWeek,\n      fweek: range[0].day,\n      lweek: range[1].day\n    };\n  },\n\n  /**\n   * get date by nthWeeks and week day in range\n   *\n   * @private\n   * @param  {number} nthWeek the week\n   * @param  {number} day   the week day\n   * @param  {Array} range [d1, d2]\n   * @return {Object}\n   */\n  _getDateByWeeksAndDay: function (nthWeek, day, range) {\n    var rangeInfo = this._getRangeInfo(range);\n\n    if (nthWeek > rangeInfo.weeks || nthWeek === 0 && day < rangeInfo.fweek || nthWeek === rangeInfo.weeks && day > rangeInfo.lweek) {\n      return false;\n    }\n\n    var nthDay = (nthWeek - 1) * 7 - rangeInfo.fweek + day;\n    var date = new Date(rangeInfo.start.time);\n    date.setDate(rangeInfo.start.d + nthDay);\n    return this.getDateInfo(date);\n  }\n};\nCalendar.dimensions = Calendar.prototype.dimensions;\nCalendar.getDimensionsInfo = Calendar.prototype.getDimensionsInfo;\n\nCalendar.create = function (ecModel, api) {\n  var calendarList = [];\n  ecModel.eachComponent('calendar', function (calendarModel) {\n    var calendar = new Calendar(calendarModel, ecModel, api);\n    calendarList.push(calendar);\n    calendarModel.coordinateSystem = calendar;\n  });\n  ecModel.eachSeries(function (calendarSeries) {\n    if (calendarSeries.get('coordinateSystem') === 'calendar') {\n      // Inject coordinate system\n      calendarSeries.coordinateSystem = calendarList[calendarSeries.get('calendarIndex') || 0];\n    }\n  });\n  return calendarList;\n};\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var calendarModel = finder.calendarModel;\n  var seriesModel = finder.seriesModel;\n  var coordSys = calendarModel ? calendarModel.coordinateSystem : seriesModel ? seriesModel.coordinateSystem : null;\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nCoordinateSystem.register('calendar', Calendar);\nvar _default = Calendar;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar sizeCalculable = _layout.sizeCalculable;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar CalendarModel = ComponentModel.extend({\n  type: 'calendar',\n\n  /**\n   * @type {module:echarts/coord/calendar/Calendar}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    left: 80,\n    top: 60,\n    cellSize: 20,\n    // horizontal vertical\n    orient: 'horizontal',\n    // month separate line style\n    splitLine: {\n      show: true,\n      lineStyle: {\n        color: '#000',\n        width: 1,\n        type: 'solid'\n      }\n    },\n    // rect style  temporarily unused emphasis\n    itemStyle: {\n      normal: {\n        color: '#fff',\n        borderWidth: 1,\n        borderColor: '#ccc'\n      }\n    },\n    // week text style\n    dayLabel: {\n      show: true,\n      // a week first day\n      firstDay: 0,\n      // start end\n      position: 'start',\n      margin: '50%',\n      // 50% of cellSize\n      nameMap: 'en',\n      color: '#000'\n    },\n    // month text style\n    monthLabel: {\n      show: true,\n      // start end\n      position: 'start',\n      margin: 5,\n      // center or left\n      align: 'center',\n      // cn en []\n      nameMap: 'en',\n      formatter: null,\n      color: '#000'\n    },\n    // year text style\n    yearLabel: {\n      show: true,\n      // top bottom left right\n      position: null,\n      margin: 30,\n      formatter: null,\n      color: '#ccc',\n      fontFamily: 'sans-serif',\n      fontWeight: 'bolder',\n      fontSize: 20\n    }\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    CalendarModel.superApply(this, 'init', arguments);\n    mergeAndNormalizeLayoutParams(option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option, extraOpt) {\n    CalendarModel.superApply(this, 'mergeOption', arguments);\n    mergeAndNormalizeLayoutParams(this.option, option);\n  }\n});\n\nfunction mergeAndNormalizeLayoutParams(target, raw) {\n  // Normalize cellSize\n  var cellSize = target.cellSize;\n\n  if (!zrUtil.isArray(cellSize)) {\n    cellSize = target.cellSize = [cellSize, cellSize];\n  } else if (cellSize.length === 1) {\n    cellSize[1] = cellSize[0];\n  }\n\n  var ignoreSize = zrUtil.map([0, 1], function (hvIdx) {\n    // If user have set `width` or both `left` and `right`, cellSize\n    // will be automatically set to 'auto', otherwise the default\n    // setting of cellSize will make `width` setting not work.\n    if (sizeCalculable(raw, hvIdx)) {\n      cellSize[hvIdx] = 'auto';\n    }\n\n    return cellSize[hvIdx] != null && cellSize[hvIdx] !== 'auto';\n  });\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = CalendarModel;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar MONTH_TEXT = {\n  EN: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  CN: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月']\n};\nvar WEEK_TEXT = {\n  EN: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  CN: ['日', '一', '二', '三', '四', '五', '六']\n};\n\nvar _default = echarts.extendComponentView({\n  type: 'calendar',\n\n  /**\n   * top/left line points\n   *  @private\n   */\n  _tlpoints: null,\n\n  /**\n   * bottom/right line points\n   *  @private\n   */\n  _blpoints: null,\n\n  /**\n   * first day of month\n   *  @private\n   */\n  _firstDayOfMonth: null,\n\n  /**\n   * first day point of month\n   *  @private\n   */\n  _firstDayPoints: null,\n  render: function (calendarModel, ecModel, api) {\n    var group = this.group;\n    group.removeAll();\n    var coordSys = calendarModel.coordinateSystem; // range info\n\n    var rangeData = coordSys.getRangeInfo();\n    var orient = coordSys.getOrient();\n\n    this._renderDayRect(calendarModel, rangeData, group); // _renderLines must be called prior to following function\n\n\n    this._renderLines(calendarModel, rangeData, orient, group);\n\n    this._renderYearText(calendarModel, rangeData, orient, group);\n\n    this._renderMonthText(calendarModel, orient, group);\n\n    this._renderWeekText(calendarModel, rangeData, orient, group);\n  },\n  // render day rect\n  _renderDayRect: function (calendarModel, rangeData, group) {\n    var coordSys = calendarModel.coordinateSystem;\n    var itemRectStyleModel = calendarModel.getModel('itemStyle.normal').getItemStyle();\n    var sw = coordSys.getCellWidth();\n    var sh = coordSys.getCellHeight();\n\n    for (var i = rangeData.start.time; i <= rangeData.end.time; i = coordSys.getNextNDay(i, 1).time) {\n      var point = coordSys.dataToRect([i], false).tl; // every rect\n\n      var rect = new graphic.Rect({\n        shape: {\n          x: point[0],\n          y: point[1],\n          width: sw,\n          height: sh\n        },\n        cursor: 'default',\n        style: itemRectStyleModel\n      });\n      group.add(rect);\n    }\n  },\n  // render separate line\n  _renderLines: function (calendarModel, rangeData, orient, group) {\n    var self = this;\n    var coordSys = calendarModel.coordinateSystem;\n    var lineStyleModel = calendarModel.getModel('splitLine.lineStyle').getLineStyle();\n    var show = calendarModel.get('splitLine.show');\n    var lineWidth = lineStyleModel.lineWidth;\n    this._tlpoints = [];\n    this._blpoints = [];\n    this._firstDayOfMonth = [];\n    this._firstDayPoints = [];\n    var firstDay = rangeData.start;\n\n    for (var i = 0; firstDay.time <= rangeData.end.time; i++) {\n      addPoints(firstDay.formatedDate);\n\n      if (i === 0) {\n        firstDay = coordSys.getDateInfo(rangeData.start.y + '-' + rangeData.start.m);\n      }\n\n      var date = firstDay.date;\n      date.setMonth(date.getMonth() + 1);\n      firstDay = coordSys.getDateInfo(date);\n    }\n\n    addPoints(coordSys.getNextNDay(rangeData.end.time, 1).formatedDate);\n\n    function addPoints(date) {\n      self._firstDayOfMonth.push(coordSys.getDateInfo(date));\n\n      self._firstDayPoints.push(coordSys.dataToRect([date], false).tl);\n\n      var points = self._getLinePointsOfOneWeek(calendarModel, date, orient);\n\n      self._tlpoints.push(points[0]);\n\n      self._blpoints.push(points[points.length - 1]);\n\n      show && self._drawSplitline(points, lineStyleModel, group);\n    } // render top/left line\n\n\n    show && this._drawSplitline(self._getEdgesPoints(self._tlpoints, lineWidth, orient), lineStyleModel, group); // render bottom/right line\n\n    show && this._drawSplitline(self._getEdgesPoints(self._blpoints, lineWidth, orient), lineStyleModel, group);\n  },\n  // get points at both ends\n  _getEdgesPoints: function (points, lineWidth, orient) {\n    var rs = [points[0].slice(), points[points.length - 1].slice()];\n    var idx = orient === 'horizontal' ? 0 : 1; // both ends of the line are extend half lineWidth\n\n    rs[0][idx] = rs[0][idx] - lineWidth / 2;\n    rs[1][idx] = rs[1][idx] + lineWidth / 2;\n    return rs;\n  },\n  // render split line\n  _drawSplitline: function (points, lineStyleModel, group) {\n    var poyline = new graphic.Polyline({\n      z2: 20,\n      shape: {\n        points: points\n      },\n      style: lineStyleModel\n    });\n    group.add(poyline);\n  },\n  // render month line of one week points\n  _getLinePointsOfOneWeek: function (calendarModel, date, orient) {\n    var coordSys = calendarModel.coordinateSystem;\n    date = coordSys.getDateInfo(date);\n    var points = [];\n\n    for (var i = 0; i < 7; i++) {\n      var tmpD = coordSys.getNextNDay(date.time, i);\n      var point = coordSys.dataToRect([tmpD.time], false);\n      points[2 * tmpD.day] = point.tl;\n      points[2 * tmpD.day + 1] = point[orient === 'horizontal' ? 'bl' : 'tr'];\n    }\n\n    return points;\n  },\n  _formatterLabel: function (formatter, params) {\n    if (typeof formatter === 'string' && formatter) {\n      return formatUtil.formatTplSimple(formatter, params);\n    }\n\n    if (typeof formatter === 'function') {\n      return formatter(params);\n    }\n\n    return params.nameMap;\n  },\n  _yearTextPositionControl: function (textEl, point, orient, position, margin) {\n    point = point.slice();\n    var aligns = ['center', 'bottom'];\n\n    if (position === 'bottom') {\n      point[1] += margin;\n      aligns = ['center', 'top'];\n    } else if (position === 'left') {\n      point[0] -= margin;\n    } else if (position === 'right') {\n      point[0] += margin;\n      aligns = ['center', 'top'];\n    } else {\n      // top\n      point[1] -= margin;\n    }\n\n    var rotate = 0;\n\n    if (position === 'left' || position === 'right') {\n      rotate = Math.PI / 2;\n    }\n\n    return {\n      rotation: rotate,\n      position: point,\n      style: {\n        textAlign: aligns[0],\n        textVerticalAlign: aligns[1]\n      }\n    };\n  },\n  // render year\n  _renderYearText: function (calendarModel, rangeData, orient, group) {\n    var yearLabel = calendarModel.getModel('yearLabel');\n\n    if (!yearLabel.get('show')) {\n      return;\n    }\n\n    var margin = yearLabel.get('margin');\n    var pos = yearLabel.get('position');\n\n    if (!pos) {\n      pos = orient !== 'horizontal' ? 'top' : 'left';\n    }\n\n    var points = [this._tlpoints[this._tlpoints.length - 1], this._blpoints[0]];\n    var xc = (points[0][0] + points[1][0]) / 2;\n    var yc = (points[0][1] + points[1][1]) / 2;\n    var idx = orient === 'horizontal' ? 0 : 1;\n    var posPoints = {\n      top: [xc, points[idx][1]],\n      bottom: [xc, points[1 - idx][1]],\n      left: [points[1 - idx][0], yc],\n      right: [points[idx][0], yc]\n    };\n    var name = rangeData.start.y;\n\n    if (+rangeData.end.y > +rangeData.start.y) {\n      name = name + '-' + rangeData.end.y;\n    }\n\n    var formatter = yearLabel.get('formatter');\n    var params = {\n      start: rangeData.start.y,\n      end: rangeData.end.y,\n      nameMap: name\n    };\n\n    var content = this._formatterLabel(formatter, params);\n\n    var yearText = new graphic.Text({\n      z2: 30\n    });\n    graphic.setTextStyle(yearText.style, yearLabel, {\n      text: content\n    }), yearText.attr(this._yearTextPositionControl(yearText, posPoints[pos], orient, pos, margin));\n    group.add(yearText);\n  },\n  _monthTextPositionControl: function (point, isCenter, orient, position, margin) {\n    var align = 'left';\n    var vAlign = 'top';\n    var x = point[0];\n    var y = point[1];\n\n    if (orient === 'horizontal') {\n      y = y + margin;\n\n      if (isCenter) {\n        align = 'center';\n      }\n\n      if (position === 'start') {\n        vAlign = 'bottom';\n      }\n    } else {\n      x = x + margin;\n\n      if (isCenter) {\n        vAlign = 'middle';\n      }\n\n      if (position === 'start') {\n        align = 'right';\n      }\n    }\n\n    return {\n      x: x,\n      y: y,\n      textAlign: align,\n      textVerticalAlign: vAlign\n    };\n  },\n  // render month and year text\n  _renderMonthText: function (calendarModel, orient, group) {\n    var monthLabel = calendarModel.getModel('monthLabel');\n\n    if (!monthLabel.get('show')) {\n      return;\n    }\n\n    var nameMap = monthLabel.get('nameMap');\n    var margin = monthLabel.get('margin');\n    var pos = monthLabel.get('position');\n    var align = monthLabel.get('align');\n    var termPoints = [this._tlpoints, this._blpoints];\n\n    if (zrUtil.isString(nameMap)) {\n      nameMap = MONTH_TEXT[nameMap.toUpperCase()] || [];\n    }\n\n    var idx = pos === 'start' ? 0 : 1;\n    var axis = orient === 'horizontal' ? 0 : 1;\n    margin = pos === 'start' ? -margin : margin;\n    var isCenter = align === 'center';\n\n    for (var i = 0; i < termPoints[idx].length - 1; i++) {\n      var tmp = termPoints[idx][i].slice();\n      var firstDay = this._firstDayOfMonth[i];\n\n      if (isCenter) {\n        var firstDayPoints = this._firstDayPoints[i];\n        tmp[axis] = (firstDayPoints[axis] + termPoints[0][i + 1][axis]) / 2;\n      }\n\n      var formatter = monthLabel.get('formatter');\n      var name = nameMap[+firstDay.m - 1];\n      var params = {\n        yyyy: firstDay.y,\n        yy: (firstDay.y + '').slice(2),\n        MM: firstDay.m,\n        M: +firstDay.m,\n        nameMap: name\n      };\n\n      var content = this._formatterLabel(formatter, params);\n\n      var monthText = new graphic.Text({\n        z2: 30\n      });\n      zrUtil.extend(graphic.setTextStyle(monthText.style, monthLabel, {\n        text: content\n      }), this._monthTextPositionControl(tmp, isCenter, orient, pos, margin));\n      group.add(monthText);\n    }\n  },\n  _weekTextPositionControl: function (point, orient, position, margin, cellSize) {\n    var align = 'center';\n    var vAlign = 'middle';\n    var x = point[0];\n    var y = point[1];\n    var isStart = position === 'start';\n\n    if (orient === 'horizontal') {\n      x = x + margin + (isStart ? 1 : -1) * cellSize[0] / 2;\n      align = isStart ? 'right' : 'left';\n    } else {\n      y = y + margin + (isStart ? 1 : -1) * cellSize[1] / 2;\n      vAlign = isStart ? 'bottom' : 'top';\n    }\n\n    return {\n      x: x,\n      y: y,\n      textAlign: align,\n      textVerticalAlign: vAlign\n    };\n  },\n  // render weeks\n  _renderWeekText: function (calendarModel, rangeData, orient, group) {\n    var dayLabel = calendarModel.getModel('dayLabel');\n\n    if (!dayLabel.get('show')) {\n      return;\n    }\n\n    var coordSys = calendarModel.coordinateSystem;\n    var pos = dayLabel.get('position');\n    var nameMap = dayLabel.get('nameMap');\n    var margin = dayLabel.get('margin');\n    var firstDayOfWeek = coordSys.getFirstDayOfWeek();\n\n    if (zrUtil.isString(nameMap)) {\n      nameMap = WEEK_TEXT[nameMap.toUpperCase()] || [];\n    }\n\n    var start = coordSys.getNextNDay(rangeData.end.time, 7 - rangeData.lweek).time;\n    var cellSize = [coordSys.getCellWidth(), coordSys.getCellHeight()];\n    margin = numberUtil.parsePercent(margin, cellSize[orient === 'horizontal' ? 0 : 1]);\n\n    if (pos === 'start') {\n      start = coordSys.getNextNDay(rangeData.start.time, -(7 + rangeData.fweek)).time;\n      margin = -margin;\n    }\n\n    for (var i = 0; i < 7; i++) {\n      var tmpD = coordSys.getNextNDay(start, i);\n      var point = coordSys.dataToRect([tmpD.time], false).center;\n      var day = i;\n      day = Math.abs((i + firstDayOfWeek) % 7);\n      var weekText = new graphic.Text({\n        z2: 30\n      });\n      zrUtil.extend(graphic.setTextStyle(weekText.style, dayLabel, {\n        text: nameMap[day]\n      }), this._weekTextPositionControl(point, orient, pos, margin, cellSize));\n      group.add(weekText);\n    }\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar graphic = require(\"../util/graphic\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n// Model\necharts.extendComponentModel({\n  type: 'title',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 6,\n    show: true,\n    text: '',\n    // 超链接跳转\n    // link: null,\n    // 仅支持self | blank\n    target: 'blank',\n    subtext: '',\n    // 超链接跳转\n    // sublink: null,\n    // 仅支持self | blank\n    subtarget: 'blank',\n    // 'center' ¦ 'left' ¦ 'right'\n    // ¦ {number}（x坐标，单位px）\n    left: 0,\n    // 'top' ¦ 'bottom' ¦ 'center'\n    // ¦ {number}（y坐标，单位px）\n    top: 0,\n    // 水平对齐\n    // 'auto' | 'left' | 'right' | 'center'\n    // 默认根据 left 的位置判断是左对齐还是右对齐\n    // textAlign: null\n    //\n    // 垂直对齐\n    // 'auto' | 'top' | 'bottom' | 'middle'\n    // 默认根据 top 位置判断是上对齐还是下对齐\n    // textBaseline: null\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 标题边框颜色\n    borderColor: '#ccc',\n    // 标题边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 标题内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 主副标题纵向间隔，单位px，默认为10，\n    itemGap: 10,\n    textStyle: {\n      fontSize: 18,\n      fontWeight: 'bolder',\n      color: '#333'\n    },\n    subtextStyle: {\n      color: '#aaa'\n    }\n  }\n}); // View\n\necharts.extendComponentView({\n  type: 'title',\n  render: function (titleModel, ecModel, api) {\n    this.group.removeAll();\n\n    if (!titleModel.get('show')) {\n      return;\n    }\n\n    var group = this.group;\n    var textStyleModel = titleModel.getModel('textStyle');\n    var subtextStyleModel = titleModel.getModel('subtextStyle');\n    var textAlign = titleModel.get('textAlign');\n    var textBaseline = titleModel.get('textBaseline');\n    var textEl = new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: titleModel.get('text'),\n        textFill: textStyleModel.getTextColor()\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var textRect = textEl.getBoundingRect();\n    var subText = titleModel.get('subtext');\n    var subTextEl = new graphic.Text({\n      style: graphic.setTextStyle({}, subtextStyleModel, {\n        text: subText,\n        textFill: subtextStyleModel.getTextColor(),\n        y: textRect.height + titleModel.get('itemGap'),\n        textVerticalAlign: 'top'\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var link = titleModel.get('link');\n    var sublink = titleModel.get('sublink');\n    textEl.silent = !link;\n    subTextEl.silent = !sublink;\n\n    if (link) {\n      textEl.on('click', function () {\n        window.open(link, '_' + titleModel.get('target'));\n      });\n    }\n\n    if (sublink) {\n      subTextEl.on('click', function () {\n        window.open(sublink, '_' + titleModel.get('subtarget'));\n      });\n    }\n\n    group.add(textEl);\n    subText && group.add(subTextEl); // If no subText, but add subTextEl, there will be an empty line.\n\n    var groupRect = group.getBoundingRect();\n    var layoutOption = titleModel.getBoxLayoutParams();\n    layoutOption.width = groupRect.width;\n    layoutOption.height = groupRect.height;\n    var layoutRect = getLayoutRect(layoutOption, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }, titleModel.get('padding')); // Adjust text align based on position\n\n    if (!textAlign) {\n      // Align left if title is on the left. center and right is same\n      textAlign = titleModel.get('left') || titleModel.get('right');\n\n      if (textAlign === 'middle') {\n        textAlign = 'center';\n      } // Adjust layout by text align\n\n\n      if (textAlign === 'right') {\n        layoutRect.x += layoutRect.width;\n      } else if (textAlign === 'center') {\n        layoutRect.x += layoutRect.width / 2;\n      }\n    }\n\n    if (!textBaseline) {\n      textBaseline = titleModel.get('top') || titleModel.get('bottom');\n\n      if (textBaseline === 'center') {\n        textBaseline = 'middle';\n      }\n\n      if (textBaseline === 'bottom') {\n        layoutRect.y += layoutRect.height;\n      } else if (textBaseline === 'middle') {\n        layoutRect.y += layoutRect.height / 2;\n      }\n\n      textBaseline = textBaseline || 'top';\n    }\n\n    group.attr('position', [layoutRect.x, layoutRect.y]);\n    var alignStyle = {\n      textAlign: textAlign,\n      textVerticalAlign: textBaseline\n    };\n    textEl.setStyle(alignStyle);\n    subTextEl.setStyle(alignStyle); // Render background\n    // Get groupRect again because textAlign has been changed\n\n    groupRect = group.getBoundingRect();\n    var padding = layoutRect.margin;\n    var style = titleModel.getItemStyle(['color', 'opacity']);\n    style.fill = titleModel.get('backgroundColor');\n    var rect = new graphic.Rect({\n      shape: {\n        x: groupRect.x - padding[3],\n        y: groupRect.y - padding[0],\n        width: groupRect.width + padding[1] + padding[3],\n        height: groupRect.height + padding[0] + padding[2],\n        r: titleModel.get('borderRadius')\n      },\n      style: style,\n      silent: true\n    });\n    graphic.subPixelOptimizeRect(rect);\n    group.add(rect);\n  }\n});","require(\"./dataZoom/typeDefaulter\");\n\nrequire(\"./dataZoom/DataZoomModel\");\n\nrequire(\"./dataZoom/DataZoomView\");\n\nrequire(\"./dataZoom/SliderZoomModel\");\n\nrequire(\"./dataZoom/SliderZoomView\");\n\nrequire(\"./dataZoom/InsideZoomModel\");\n\nrequire(\"./dataZoom/InsideZoomView\");\n\nrequire(\"./dataZoom/dataZoomProcessor\");\n\nrequire(\"./dataZoom/dataZoomAction\");","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar helper = require(\"./helper\");\n\nvar each = zrUtil.each;\nvar asc = numberUtil.asc;\n/**\n * Operate single axis.\n * One axis can only operated by one axis operator.\n * Different dataZoomModels may be defined to operate the same axis.\n * (i.e. 'inside' data zoom and 'slider' data zoom components)\n * So dataZoomModels share one axisProxy in that case.\n *\n * @class\n */\n\nvar AxisProxy = function (dimName, axisIndex, dataZoomModel, ecModel) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this._dimName = dimName;\n  /**\n   * @private\n   */\n\n  this._axisIndex = axisIndex;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._valueWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._percentWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._dataExtent;\n  /**\n   * {minSpan, maxSpan, minValueSpan, maxValueSpan}\n   * @private\n   * @type {Object}\n   */\n\n  this._minMaxSpan;\n  /**\n   * @readOnly\n   * @type {module: echarts/model/Global}\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @private\n   * @type {module: echarts/component/dataZoom/DataZoomModel}\n   */\n\n  this._dataZoomModel = dataZoomModel;\n};\n\nAxisProxy.prototype = {\n  constructor: AxisProxy,\n\n  /**\n   * Whether the axisProxy is hosted by dataZoomModel.\n   *\n   * @public\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   * @return {boolean}\n   */\n  hostedBy: function (dataZoomModel) {\n    return this._dataZoomModel === dataZoomModel;\n  },\n\n  /**\n   * @return {Array.<number>} Value can only be NaN or finite value.\n   */\n  getDataValueWindow: function () {\n    return this._valueWindow.slice();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getDataPercentWindow: function () {\n    return this._percentWindow.slice();\n  },\n\n  /**\n   * @public\n   * @param {number} axisIndex\n   * @return {Array} seriesModels\n   */\n  getTargetSeriesModels: function () {\n    var seriesModels = [];\n    var ecModel = this.ecModel;\n    ecModel.eachSeries(function (seriesModel) {\n      if (helper.isCoordSupported(seriesModel.get('coordinateSystem'))) {\n        var dimName = this._dimName;\n        var axisModel = ecModel.queryComponents({\n          mainType: dimName + 'Axis',\n          index: seriesModel.get(dimName + 'AxisIndex'),\n          id: seriesModel.get(dimName + 'AxisId')\n        })[0];\n\n        if (this._axisIndex === (axisModel && axisModel.componentIndex)) {\n          seriesModels.push(seriesModel);\n        }\n      }\n    }, this);\n    return seriesModels;\n  },\n  getAxisModel: function () {\n    return this.ecModel.getComponent(this._dimName + 'Axis', this._axisIndex);\n  },\n  getOtherAxisModel: function () {\n    var axisDim = this._dimName;\n    var ecModel = this.ecModel;\n    var axisModel = this.getAxisModel();\n    var isCartesian = axisDim === 'x' || axisDim === 'y';\n    var otherAxisDim;\n    var coordSysIndexName;\n\n    if (isCartesian) {\n      coordSysIndexName = 'gridIndex';\n      otherAxisDim = axisDim === 'x' ? 'y' : 'x';\n    } else {\n      coordSysIndexName = 'polarIndex';\n      otherAxisDim = axisDim === 'angle' ? 'radius' : 'angle';\n    }\n\n    var foundOtherAxisModel;\n    ecModel.eachComponent(otherAxisDim + 'Axis', function (otherAxisModel) {\n      if ((otherAxisModel.get(coordSysIndexName) || 0) === (axisModel.get(coordSysIndexName) || 0)) {\n        foundOtherAxisModel = otherAxisModel;\n      }\n    });\n    return foundOtherAxisModel;\n  },\n  getMinMaxSpan: function () {\n    return zrUtil.clone(this._minMaxSpan);\n  },\n\n  /**\n   * Only calculate by given range and this._dataExtent, do not change anything.\n   *\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   */\n  calculateDataWindow: function (opt) {\n    var dataExtent = this._dataExtent;\n    var axisModel = this.getAxisModel();\n    var scale = axisModel.axis.scale;\n\n    var rangePropMode = this._dataZoomModel.getRangePropMode();\n\n    var percentExtent = [0, 100];\n    var percentWindow = [opt.start, opt.end];\n    var valueWindow = [];\n    each(['startValue', 'endValue'], function (prop) {\n      valueWindow.push(opt[prop] != null ? scale.parse(opt[prop]) : null);\n    }); // Normalize bound.\n\n    each([0, 1], function (idx) {\n      var boundValue = valueWindow[idx];\n      var boundPercent = percentWindow[idx]; // Notice: dataZoom is based either on `percentProp` ('start', 'end') or\n      // on `valueProp` ('startValue', 'endValue'). The former one is suitable\n      // for cases that a dataZoom component controls multiple axes with different\n      // unit or extent, and the latter one is suitable for accurate zoom by pixel\n      // (e.g., in dataZoomSelect). `valueProp` can be calculated from `percentProp`,\n      // but it is awkward that `percentProp` can not be obtained from `valueProp`\n      // accurately (because all of values that are overflow the `dataExtent` will\n      // be calculated to percent '100%'). So we have to use\n      // `dataZoom.getRangePropMode()` to mark which prop is used.\n      // `rangePropMode` is updated only when setOption or dispatchAction, otherwise\n      // it remains its original value.\n\n      if (rangePropMode[idx] === 'percent') {\n        if (boundPercent == null) {\n          boundPercent = percentExtent[idx];\n        } // Use scale.parse to math round for category or time axis.\n\n\n        boundValue = scale.parse(numberUtil.linearMap(boundPercent, percentExtent, dataExtent, true));\n      } else {\n        // Calculating `percent` from `value` may be not accurate, because\n        // This calculation can not be inversed, because all of values that\n        // are overflow the `dataExtent` will be calculated to percent '100%'\n        boundPercent = numberUtil.linearMap(boundValue, dataExtent, percentExtent, true);\n      } // valueWindow[idx] = round(boundValue);\n      // percentWindow[idx] = round(boundPercent);\n\n\n      valueWindow[idx] = boundValue;\n      percentWindow[idx] = boundPercent;\n    });\n    return {\n      valueWindow: asc(valueWindow),\n      percentWindow: asc(percentWindow)\n    };\n  },\n\n  /**\n   * Notice: reset should not be called before series.restoreData() called,\n   * so it is recommanded to be called in \"process stage\" but not \"model init\n   * stage\".\n   *\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  reset: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    } // Culculate data window and data extent, and record them.\n\n\n    this._dataExtent = calculateDataExtent(this, this._dimName, this.getTargetSeriesModels());\n    var dataWindow = this.calculateDataWindow(dataZoomModel.option);\n    this._valueWindow = dataWindow.valueWindow;\n    this._percentWindow = dataWindow.percentWindow;\n    setMinMaxSpan(this); // Update axis setting then.\n\n    setAxisModel(this);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  restore: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    this._valueWindow = this._percentWindow = null;\n    setAxisModel(this, true);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  filterData: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    var axisDim = this._dimName;\n    var seriesModels = this.getTargetSeriesModels();\n    var filterMode = dataZoomModel.get('filterMode');\n    var valueWindow = this._valueWindow;\n\n    if (filterMode === 'none') {\n      return;\n    } // FIXME\n    // Toolbox may has dataZoom injected. And if there are stacked bar chart\n    // with NaN data, NaN will be filtered and stack will be wrong.\n    // So we need to force the mode to be set empty.\n    // In fect, it is not a big deal that do not support filterMode-'filter'\n    // when using toolbox#dataZoom, utill tooltip#dataZoom support \"single axis\n    // selection\" some day, which might need \"adapt to data extent on the\n    // otherAxis\", which is disabled by filterMode-'empty'.\n\n\n    var otherAxisModel = this.getOtherAxisModel();\n\n    if (dataZoomModel.get('$fromToolbox') && otherAxisModel && otherAxisModel.get('type') === 'category') {\n      filterMode = 'empty';\n    } // Process series data\n\n\n    each(seriesModels, function (seriesModel) {\n      var seriesData = seriesModel.getData();\n      var dataDims = seriesModel.coordDimToDataDim(axisDim);\n\n      if (filterMode === 'weakFilter') {\n        seriesData && seriesData.filterSelf(function (dataIndex) {\n          var leftOut;\n          var rightOut;\n          var hasValue;\n\n          for (var i = 0; i < dataDims.length; i++) {\n            var value = seriesData.get(dataDims[i], dataIndex);\n            var thisHasValue = !isNaN(value);\n            var thisLeftOut = value < valueWindow[0];\n            var thisRightOut = value > valueWindow[1];\n\n            if (thisHasValue && !thisLeftOut && !thisRightOut) {\n              return true;\n            }\n\n            thisHasValue && (hasValue = true);\n            thisLeftOut && (leftOut = true);\n            thisRightOut && (rightOut = true);\n          } // If both left out and right out, do not filter.\n\n\n          return hasValue && leftOut && rightOut;\n        });\n      } else {\n        seriesData && each(dataDims, function (dim) {\n          if (filterMode === 'empty') {\n            seriesModel.setData(seriesData.map(dim, function (value) {\n              return !isInWindow(value) ? NaN : value;\n            }));\n          } else {\n            seriesData.filterSelf(dim, isInWindow);\n          }\n        });\n      }\n    });\n\n    function isInWindow(value) {\n      return value >= valueWindow[0] && value <= valueWindow[1];\n    }\n  }\n};\n\nfunction calculateDataExtent(axisProxy, axisDim, seriesModels) {\n  var dataExtent = [Infinity, -Infinity];\n  each(seriesModels, function (seriesModel) {\n    var seriesData = seriesModel.getData();\n\n    if (seriesData) {\n      each(seriesModel.coordDimToDataDim(axisDim), function (dim) {\n        var seriesExtent = seriesData.getDataExtent(dim);\n        seriesExtent[0] < dataExtent[0] && (dataExtent[0] = seriesExtent[0]);\n        seriesExtent[1] > dataExtent[1] && (dataExtent[1] = seriesExtent[1]);\n      });\n    }\n  });\n\n  if (dataExtent[1] < dataExtent[0]) {\n    dataExtent = [NaN, NaN];\n  } // It is important to get \"consistent\" extent when more then one axes is\n  // controlled by a `dataZoom`, otherwise those axes will not be synchronized\n  // when zooming. But it is difficult to know what is \"consistent\", considering\n  // axes have different type or even different meanings (For example, two\n  // time axes are used to compare data of the same date in different years).\n  // So basically dataZoom just obtains extent by series.data (in category axis\n  // extent can be obtained from axis.data).\n  // Nevertheless, user can set min/max/scale on axes to make extent of axes\n  // consistent.\n\n\n  fixExtentByAxis(axisProxy, dataExtent);\n  return dataExtent;\n}\n\nfunction fixExtentByAxis(axisProxy, dataExtent) {\n  var axisModel = axisProxy.getAxisModel();\n  var min = axisModel.getMin(true); // For category axis, if min/max/scale are not set, extent is determined\n  // by axis.data by default.\n\n  var isCategoryAxis = axisModel.get('type') === 'category';\n  var axisDataLen = isCategoryAxis && (axisModel.get('data') || []).length;\n\n  if (min != null && min !== 'dataMin' && typeof min !== 'function') {\n    dataExtent[0] = min;\n  } else if (isCategoryAxis) {\n    dataExtent[0] = axisDataLen > 0 ? 0 : NaN;\n  }\n\n  var max = axisModel.getMax(true);\n\n  if (max != null && max !== 'dataMax' && typeof max !== 'function') {\n    dataExtent[1] = max;\n  } else if (isCategoryAxis) {\n    dataExtent[1] = axisDataLen > 0 ? axisDataLen - 1 : NaN;\n  }\n\n  if (!axisModel.get('scale', true)) {\n    dataExtent[0] > 0 && (dataExtent[0] = 0);\n    dataExtent[1] < 0 && (dataExtent[1] = 0);\n  } // For value axis, if min/max/scale are not set, we just use the extent obtained\n  // by series data, which may be a little different from the extent calculated by\n  // `axisHelper.getScaleExtent`. But the different just affects the experience a\n  // little when zooming. So it will not be fixed until some users require it strongly.\n\n\n  return dataExtent;\n}\n\nfunction setAxisModel(axisProxy, isRestore) {\n  var axisModel = axisProxy.getAxisModel();\n  var percentWindow = axisProxy._percentWindow;\n  var valueWindow = axisProxy._valueWindow;\n\n  if (!percentWindow) {\n    return;\n  } // [0, 500]: arbitrary value, guess axis extent.\n\n\n  var precision = numberUtil.getPixelPrecision(valueWindow, [0, 500]);\n  precision = Math.min(precision, 20); // isRestore or isFull\n\n  var useOrigin = isRestore || percentWindow[0] === 0 && percentWindow[1] === 100;\n  axisModel.setRange(useOrigin ? null : +valueWindow[0].toFixed(precision), useOrigin ? null : +valueWindow[1].toFixed(precision));\n}\n\nfunction setMinMaxSpan(axisProxy) {\n  var minMaxSpan = axisProxy._minMaxSpan = {};\n  var dataZoomModel = axisProxy._dataZoomModel;\n  each(['min', 'max'], function (minMax) {\n    minMaxSpan[minMax + 'Span'] = dataZoomModel.get(minMax + 'Span'); // minValueSpan and maxValueSpan has higher priority than minSpan and maxSpan\n\n    var valueSpan = dataZoomModel.get(minMax + 'ValueSpan');\n\n    if (valueSpan != null) {\n      minMaxSpan[minMax + 'ValueSpan'] = valueSpan;\n      valueSpan = axisProxy.getAxisModel().axis.scale.parse(valueSpan);\n\n      if (valueSpan != null) {\n        var dataExtent = axisProxy._dataExtent;\n        minMaxSpan[minMax + 'Span'] = numberUtil.linearMap(dataExtent[0] + valueSpan, dataExtent, [0, 100], true);\n      }\n    }\n  });\n}\n\nvar _default = AxisProxy;\nmodule.exports = _default;","var DataZoomModel = require(\"./DataZoomModel\");\n\nvar SliderZoomModel = DataZoomModel.extend({\n  type: 'dataZoom.slider',\n  layoutMode: 'box',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    show: true,\n    // ph => placeholder. Using placehoder here because\n    // deault value can only be drived in view stage.\n    right: 'ph',\n    // Default align to grid rect.\n    top: 'ph',\n    // Default align to grid rect.\n    width: 'ph',\n    // Default align to grid rect.\n    height: 'ph',\n    // Default align to grid rect.\n    left: null,\n    // Default align to grid rect.\n    bottom: null,\n    // Default align to grid rect.\n    backgroundColor: 'rgba(47,69,84,0)',\n    // Background of slider zoom component.\n    // dataBackgroundColor: '#ddd',         // Background coor of data shadow and border of box,\n    // highest priority, remain for compatibility of\n    // previous version, but not recommended any more.\n    dataBackground: {\n      lineStyle: {\n        color: '#2f4554',\n        width: 0.5,\n        opacity: 0.3\n      },\n      areaStyle: {\n        color: 'rgba(47,69,84,0.3)',\n        opacity: 0.3\n      }\n    },\n    borderColor: '#ddd',\n    // border color of the box. For compatibility,\n    // if dataBackgroundColor is set, borderColor\n    // is ignored.\n    fillerColor: 'rgba(167,183,204,0.4)',\n    // Color of selected area.\n    // handleColor: 'rgba(89,170,216,0.95)',     // Color of handle.\n    // handleIcon: 'path://M4.9,17.8c0-1.4,4.5-10.5,5.5-12.4c0-0.1,0.6-1.1,0.9-1.1c0.4,0,0.9,1,0.9,1.1c1.1,2.2,5.4,11,5.4,12.4v17.8c0,1.5-0.6,2.1-1.3,2.1H6.1c-0.7,0-1.3-0.6-1.3-2.1V17.8z',\n    handleIcon: 'M8.2,13.6V3.9H6.3v9.7H3.1v14.9h3.3v9.7h1.8v-9.7h3.3V13.6H8.2z M9.7,24.4H4.8v-1.4h4.9V24.4z M9.7,19.1H4.8v-1.4h4.9V19.1z',\n    // Percent of the slider height\n    handleSize: '100%',\n    handleStyle: {\n      color: '#a7b7cc'\n    },\n    labelPrecision: null,\n    labelFormatter: null,\n    showDetail: true,\n    showDataShadow: 'auto',\n    // Default auto decision.\n    realtime: true,\n    zoomLock: false,\n    // Whether disable zoom.\n    textStyle: {\n      color: '#333'\n    }\n  }\n});\nvar _default = SliderZoomModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar throttle = require(\"../../util/throttle\");\n\nvar DataZoomView = require(\"./DataZoomView\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar layout = require(\"../../util/layout\");\n\nvar sliderMove = require(\"../helper/sliderMove\");\n\nvar Rect = graphic.Rect;\nvar linearMap = numberUtil.linearMap;\nvar asc = numberUtil.asc;\nvar bind = zrUtil.bind;\nvar each = zrUtil.each; // Constants\n\nvar DEFAULT_LOCATION_EDGE_GAP = 7;\nvar DEFAULT_FRAME_BORDER_WIDTH = 1;\nvar DEFAULT_FILLER_SIZE = 30;\nvar HORIZONTAL = 'horizontal';\nvar VERTICAL = 'vertical';\nvar LABEL_GAP = 5;\nvar SHOW_DATA_SHADOW_SERIES_TYPE = ['line', 'bar', 'candlestick', 'scatter'];\nvar SliderZoomView = DataZoomView.extend({\n  type: 'dataZoom.slider',\n  init: function (ecModel, api) {\n    /**\n     * @private\n     * @type {Object}\n     */\n    this._displayables = {};\n    /**\n     * @private\n     * @type {string}\n     */\n\n    this._orient;\n    /**\n     * [0, 100]\n     * @private\n     */\n\n    this._range;\n    /**\n     * [coord of the first handle, coord of the second handle]\n     * @private\n     */\n\n    this._handleEnds;\n    /**\n     * [length, thick]\n     * @private\n     * @type {Array.<number>}\n     */\n\n    this._size;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this._handleWidth;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this._handleHeight;\n    /**\n     * @private\n     */\n\n    this._location;\n    /**\n     * @private\n     */\n\n    this._dragging;\n    /**\n     * @private\n     */\n\n    this._dataShadowInfo;\n    this.api = api;\n  },\n\n  /**\n   * @override\n   */\n  render: function (dataZoomModel, ecModel, api, payload) {\n    SliderZoomView.superApply(this, 'render', arguments);\n    throttle.createOrUpdate(this, '_dispatchZoomAction', this.dataZoomModel.get('throttle'), 'fixRate');\n    this._orient = dataZoomModel.get('orient');\n\n    if (this.dataZoomModel.get('show') === false) {\n      this.group.removeAll();\n      return;\n    } // Notice: this._resetInterval() should not be executed when payload.type\n    // is 'dataZoom', origin this._range should be maintained, otherwise 'pan'\n    // or 'zoom' info will be missed because of 'throttle' of this.dispatchAction,\n\n\n    if (!payload || payload.type !== 'dataZoom' || payload.from !== this.uid) {\n      this._buildView();\n    }\n\n    this._updateView();\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    SliderZoomView.superApply(this, 'remove', arguments);\n    throttle.clear(this, '_dispatchZoomAction');\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    SliderZoomView.superApply(this, 'dispose', arguments);\n    throttle.clear(this, '_dispatchZoomAction');\n  },\n  _buildView: function () {\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n\n    this._resetLocation();\n\n    this._resetInterval();\n\n    var barGroup = this._displayables.barGroup = new graphic.Group();\n\n    this._renderBackground();\n\n    this._renderHandle();\n\n    this._renderDataShadow();\n\n    thisGroup.add(barGroup);\n\n    this._positionGroup();\n  },\n\n  /**\n   * @private\n   */\n  _resetLocation: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var api = this.api; // If some of x/y/width/height are not specified,\n    // auto-adapt according to target grid.\n\n    var coordRect = this._findCoordRect();\n\n    var ecSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }; // Default align by coordinate system rect.\n\n    var positionInfo = this._orient === HORIZONTAL ? {\n      // Why using 'right', because right should be used in vertical,\n      // and it is better to be consistent for dealing with position param merge.\n      right: ecSize.width - coordRect.x - coordRect.width,\n      top: ecSize.height - DEFAULT_FILLER_SIZE - DEFAULT_LOCATION_EDGE_GAP,\n      width: coordRect.width,\n      height: DEFAULT_FILLER_SIZE\n    } : {\n      // vertical\n      right: DEFAULT_LOCATION_EDGE_GAP,\n      top: coordRect.y,\n      width: DEFAULT_FILLER_SIZE,\n      height: coordRect.height\n    }; // Do not write back to option and replace value 'ph', because\n    // the 'ph' value should be recalculated when resize.\n\n    var layoutParams = layout.getLayoutParams(dataZoomModel.option); // Replace the placeholder value.\n\n    zrUtil.each(['right', 'top', 'width', 'height'], function (name) {\n      if (layoutParams[name] === 'ph') {\n        layoutParams[name] = positionInfo[name];\n      }\n    });\n    var layoutRect = layout.getLayoutRect(layoutParams, ecSize, dataZoomModel.padding);\n    this._location = {\n      x: layoutRect.x,\n      y: layoutRect.y\n    };\n    this._size = [layoutRect.width, layoutRect.height];\n    this._orient === VERTICAL && this._size.reverse();\n  },\n\n  /**\n   * @private\n   */\n  _positionGroup: function () {\n    var thisGroup = this.group;\n    var location = this._location;\n    var orient = this._orient; // Just use the first axis to determine mapping.\n\n    var targetAxisModel = this.dataZoomModel.getFirstTargetAxisModel();\n    var inverse = targetAxisModel && targetAxisModel.get('inverse');\n    var barGroup = this._displayables.barGroup;\n    var otherAxisInverse = (this._dataShadowInfo || {}).otherAxisInverse; // Transform barGroup.\n\n    barGroup.attr(orient === HORIZONTAL && !inverse ? {\n      scale: otherAxisInverse ? [1, 1] : [1, -1]\n    } : orient === HORIZONTAL && inverse ? {\n      scale: otherAxisInverse ? [-1, 1] : [-1, -1]\n    } : orient === VERTICAL && !inverse ? {\n      scale: otherAxisInverse ? [1, -1] : [1, 1],\n      rotation: Math.PI / 2 // Dont use Math.PI, considering shadow direction.\n\n    } : {\n      scale: otherAxisInverse ? [-1, -1] : [-1, 1],\n      rotation: Math.PI / 2\n    }); // Position barGroup\n\n    var rect = thisGroup.getBoundingRect([barGroup]);\n    thisGroup.attr('position', [location.x - rect.x, location.y - rect.y]);\n  },\n\n  /**\n   * @private\n   */\n  _getViewExtent: function () {\n    return [0, this._size[0]];\n  },\n  _renderBackground: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var size = this._size;\n    var barGroup = this._displayables.barGroup;\n    barGroup.add(new Rect({\n      silent: true,\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        fill: dataZoomModel.get('backgroundColor')\n      },\n      z2: -40\n    })); // Click panel, over shadow, below handles.\n\n    barGroup.add(new Rect({\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        fill: 'transparent'\n      },\n      z2: 0,\n      onclick: zrUtil.bind(this._onClickPanelClick, this)\n    }));\n  },\n  _renderDataShadow: function () {\n    var info = this._dataShadowInfo = this._prepareDataShadowInfo();\n\n    if (!info) {\n      return;\n    }\n\n    var size = this._size;\n    var seriesModel = info.series;\n    var data = seriesModel.getRawData();\n    var otherDim = seriesModel.getShadowDim ? seriesModel.getShadowDim() // @see candlestick\n    : info.otherDim;\n\n    if (otherDim == null) {\n      return;\n    }\n\n    var otherDataExtent = data.getDataExtent(otherDim); // Nice extent.\n\n    var otherOffset = (otherDataExtent[1] - otherDataExtent[0]) * 0.3;\n    otherDataExtent = [otherDataExtent[0] - otherOffset, otherDataExtent[1] + otherOffset];\n    var otherShadowExtent = [0, size[1]];\n    var thisShadowExtent = [0, size[0]];\n    var areaPoints = [[size[0], 0], [0, 0]];\n    var linePoints = [];\n    var step = thisShadowExtent[1] / (data.count() - 1);\n    var thisCoord = 0; // Optimize for large data shadow\n\n    var stride = Math.round(data.count() / size[0]);\n    var lastIsEmpty;\n    data.each([otherDim], function (value, index) {\n      if (stride > 0 && index % stride) {\n        thisCoord += step;\n        return;\n      } // FIXME\n      // Should consider axis.min/axis.max when drawing dataShadow.\n      // FIXME\n      // 应该使用统一的空判断？还是在list里进行空判断？\n\n\n      var isEmpty = value == null || isNaN(value) || value === ''; // See #4235.\n\n      var otherCoord = isEmpty ? 0 : linearMap(value, otherDataExtent, otherShadowExtent, true); // Attempt to draw data shadow precisely when there are empty value.\n\n      if (isEmpty && !lastIsEmpty && index) {\n        areaPoints.push([areaPoints[areaPoints.length - 1][0], 0]);\n        linePoints.push([linePoints[linePoints.length - 1][0], 0]);\n      } else if (!isEmpty && lastIsEmpty) {\n        areaPoints.push([thisCoord, 0]);\n        linePoints.push([thisCoord, 0]);\n      }\n\n      areaPoints.push([thisCoord, otherCoord]);\n      linePoints.push([thisCoord, otherCoord]);\n      thisCoord += step;\n      lastIsEmpty = isEmpty;\n    });\n    var dataZoomModel = this.dataZoomModel; // var dataBackgroundModel = dataZoomModel.getModel('dataBackground');\n\n    this._displayables.barGroup.add(new graphic.Polygon({\n      shape: {\n        points: areaPoints\n      },\n      style: zrUtil.defaults({\n        fill: dataZoomModel.get('dataBackgroundColor')\n      }, dataZoomModel.getModel('dataBackground.areaStyle').getAreaStyle()),\n      silent: true,\n      z2: -20\n    }));\n\n    this._displayables.barGroup.add(new graphic.Polyline({\n      shape: {\n        points: linePoints\n      },\n      style: dataZoomModel.getModel('dataBackground.lineStyle').getLineStyle(),\n      silent: true,\n      z2: -19\n    }));\n  },\n  _prepareDataShadowInfo: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var showDataShadow = dataZoomModel.get('showDataShadow');\n\n    if (showDataShadow === false) {\n      return;\n    } // Find a representative series.\n\n\n    var result;\n    var ecModel = this.ecModel;\n    dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n      var seriesModels = dataZoomModel.getAxisProxy(dimNames.name, axisIndex).getTargetSeriesModels();\n      zrUtil.each(seriesModels, function (seriesModel) {\n        if (result) {\n          return;\n        }\n\n        if (showDataShadow !== true && zrUtil.indexOf(SHOW_DATA_SHADOW_SERIES_TYPE, seriesModel.get('type')) < 0) {\n          return;\n        }\n\n        var thisAxis = ecModel.getComponent(dimNames.axis, axisIndex).axis;\n        var otherDim = getOtherDim(dimNames.name);\n        var otherAxisInverse;\n        var coordSys = seriesModel.coordinateSystem;\n\n        if (otherDim != null && coordSys.getOtherAxis) {\n          otherAxisInverse = coordSys.getOtherAxis(thisAxis).inverse;\n        }\n\n        result = {\n          thisAxis: thisAxis,\n          series: seriesModel,\n          thisDim: dimNames.name,\n          otherDim: otherDim,\n          otherAxisInverse: otherAxisInverse\n        };\n      }, this);\n    }, this);\n    return result;\n  },\n  _renderHandle: function () {\n    var displaybles = this._displayables;\n    var handles = displaybles.handles = [];\n    var handleLabels = displaybles.handleLabels = [];\n    var barGroup = this._displayables.barGroup;\n    var size = this._size;\n    var dataZoomModel = this.dataZoomModel;\n    barGroup.add(displaybles.filler = new Rect({\n      draggable: true,\n      cursor: getCursor(this._orient),\n      drift: bind(this._onDragMove, this, 'all'),\n      onmousemove: function (e) {\n        // Fot mobile devicem, prevent screen slider on the button.\n        eventTool.stop(e.event);\n      },\n      ondragstart: bind(this._showDataInfo, this, true),\n      ondragend: bind(this._onDragEnd, this),\n      onmouseover: bind(this._showDataInfo, this, true),\n      onmouseout: bind(this._showDataInfo, this, false),\n      style: {\n        fill: dataZoomModel.get('fillerColor'),\n        textPosition: 'inside'\n      }\n    })); // Frame border.\n\n    barGroup.add(new Rect(graphic.subPixelOptimizeRect({\n      silent: true,\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        stroke: dataZoomModel.get('dataBackgroundColor') || dataZoomModel.get('borderColor'),\n        lineWidth: DEFAULT_FRAME_BORDER_WIDTH,\n        fill: 'rgba(0,0,0,0)'\n      }\n    })));\n    each([0, 1], function (handleIndex) {\n      var path = graphic.createIcon(dataZoomModel.get('handleIcon'), {\n        cursor: getCursor(this._orient),\n        draggable: true,\n        drift: bind(this._onDragMove, this, handleIndex),\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        ondragend: bind(this._onDragEnd, this),\n        onmouseover: bind(this._showDataInfo, this, true),\n        onmouseout: bind(this._showDataInfo, this, false)\n      }, {\n        x: -1,\n        y: 0,\n        width: 2,\n        height: 2\n      });\n      var bRect = path.getBoundingRect();\n      this._handleHeight = numberUtil.parsePercent(dataZoomModel.get('handleSize'), this._size[1]);\n      this._handleWidth = bRect.width / bRect.height * this._handleHeight;\n      path.setStyle(dataZoomModel.getModel('handleStyle').getItemStyle());\n      var handleColor = dataZoomModel.get('handleColor'); // Compatitable with previous version\n\n      if (handleColor != null) {\n        path.style.fill = handleColor;\n      }\n\n      barGroup.add(handles[handleIndex] = path);\n      var textStyleModel = dataZoomModel.textStyleModel;\n      this.group.add(handleLabels[handleIndex] = new graphic.Text({\n        silent: true,\n        invisible: true,\n        style: {\n          x: 0,\n          y: 0,\n          text: '',\n          textVerticalAlign: 'middle',\n          textAlign: 'center',\n          textFill: textStyleModel.getTextColor(),\n          textFont: textStyleModel.getFont()\n        },\n        z2: 10\n      }));\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _resetInterval: function () {\n    var range = this._range = this.dataZoomModel.getPercentRange();\n\n    var viewExtent = this._getViewExtent();\n\n    this._handleEnds = [linearMap(range[0], [0, 100], viewExtent, true), linearMap(range[1], [0, 100], viewExtent, true)];\n  },\n\n  /**\n   * @private\n   * @param {(number|string)} handleIndex 0 or 1 or 'all'\n   * @param {number} delta\n   */\n  _updateInterval: function (handleIndex, delta) {\n    var dataZoomModel = this.dataZoomModel;\n    var handleEnds = this._handleEnds;\n\n    var viewExtend = this._getViewExtent();\n\n    var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();\n    var percentExtent = [0, 100];\n    sliderMove(delta, handleEnds, viewExtend, dataZoomModel.get('zoomLock') ? 'all' : handleIndex, minMaxSpan.minSpan != null ? linearMap(minMaxSpan.minSpan, percentExtent, viewExtend, true) : null, minMaxSpan.maxSpan != null ? linearMap(minMaxSpan.maxSpan, percentExtent, viewExtend, true) : null);\n    this._range = asc([linearMap(handleEnds[0], viewExtend, percentExtent, true), linearMap(handleEnds[1], viewExtend, percentExtent, true)]);\n  },\n\n  /**\n   * @private\n   */\n  _updateView: function (nonRealtime) {\n    var displaybles = this._displayables;\n    var handleEnds = this._handleEnds;\n    var handleInterval = asc(handleEnds.slice());\n    var size = this._size;\n    each([0, 1], function (handleIndex) {\n      // Handles\n      var handle = displaybles.handles[handleIndex];\n      var handleHeight = this._handleHeight;\n      handle.attr({\n        scale: [handleHeight / 2, handleHeight / 2],\n        position: [handleEnds[handleIndex], size[1] / 2 - handleHeight / 2]\n      });\n    }, this); // Filler\n\n    displaybles.filler.setShape({\n      x: handleInterval[0],\n      y: 0,\n      width: handleInterval[1] - handleInterval[0],\n      height: size[1]\n    });\n\n    this._updateDataInfo(nonRealtime);\n  },\n\n  /**\n   * @private\n   */\n  _updateDataInfo: function (nonRealtime) {\n    var dataZoomModel = this.dataZoomModel;\n    var displaybles = this._displayables;\n    var handleLabels = displaybles.handleLabels;\n    var orient = this._orient;\n    var labelTexts = ['', '']; // FIXME\n    // date型，支持formatter，autoformatter（ec2 date.getAutoFormatter）\n\n    if (dataZoomModel.get('showDetail')) {\n      var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n\n      if (axisProxy) {\n        var axis = axisProxy.getAxisModel().axis;\n        var range = this._range;\n        var dataInterval = nonRealtime // See #4434, data and axis are not processed and reset yet in non-realtime mode.\n        ? axisProxy.calculateDataWindow({\n          start: range[0],\n          end: range[1]\n        }).valueWindow : axisProxy.getDataValueWindow();\n        labelTexts = [this._formatLabel(dataInterval[0], axis), this._formatLabel(dataInterval[1], axis)];\n      }\n    }\n\n    var orderedHandleEnds = asc(this._handleEnds.slice());\n    setLabel.call(this, 0);\n    setLabel.call(this, 1);\n\n    function setLabel(handleIndex) {\n      // Label\n      // Text should not transform by barGroup.\n      // Ignore handlers transform\n      var barTransform = graphic.getTransform(displaybles.handles[handleIndex].parent, this.group);\n      var direction = graphic.transformDirection(handleIndex === 0 ? 'right' : 'left', barTransform);\n      var offset = this._handleWidth / 2 + LABEL_GAP;\n      var textPoint = graphic.applyTransform([orderedHandleEnds[handleIndex] + (handleIndex === 0 ? -offset : offset), this._size[1] / 2], barTransform);\n      handleLabels[handleIndex].setStyle({\n        x: textPoint[0],\n        y: textPoint[1],\n        textVerticalAlign: orient === HORIZONTAL ? 'middle' : direction,\n        textAlign: orient === HORIZONTAL ? direction : 'center',\n        text: labelTexts[handleIndex]\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _formatLabel: function (value, axis) {\n    var dataZoomModel = this.dataZoomModel;\n    var labelFormatter = dataZoomModel.get('labelFormatter');\n    var labelPrecision = dataZoomModel.get('labelPrecision');\n\n    if (labelPrecision == null || labelPrecision === 'auto') {\n      labelPrecision = axis.getPixelPrecision();\n    }\n\n    var valueStr = value == null || isNaN(value) ? '' // FIXME Glue code\n    : axis.type === 'category' || axis.type === 'time' ? axis.scale.getLabel(Math.round(value)) // param of toFixed should less then 20.\n    : value.toFixed(Math.min(labelPrecision, 20));\n    return zrUtil.isFunction(labelFormatter) ? labelFormatter(value, valueStr) : zrUtil.isString(labelFormatter) ? labelFormatter.replace('{value}', valueStr) : valueStr;\n  },\n\n  /**\n   * @private\n   * @param {boolean} showOrHide true: show, false: hide\n   */\n  _showDataInfo: function (showOrHide) {\n    // Always show when drgging.\n    showOrHide = this._dragging || showOrHide;\n    var handleLabels = this._displayables.handleLabels;\n    handleLabels[0].attr('invisible', !showOrHide);\n    handleLabels[1].attr('invisible', !showOrHide);\n  },\n  _onDragMove: function (handleIndex, dx, dy) {\n    this._dragging = true; // Transform dx, dy to bar coordination.\n\n    var barTransform = this._displayables.barGroup.getLocalTransform();\n\n    var vertex = graphic.applyTransform([dx, dy], barTransform, true);\n\n    this._updateInterval(handleIndex, vertex[0]);\n\n    var realtime = this.dataZoomModel.get('realtime');\n\n    this._updateView(!realtime);\n\n    if (realtime) {\n      realtime && this._dispatchZoomAction();\n    }\n  },\n  _onDragEnd: function () {\n    this._dragging = false;\n\n    this._showDataInfo(false);\n\n    this._dispatchZoomAction();\n  },\n  _onClickPanelClick: function (e) {\n    var size = this._size;\n\n    var localPoint = this._displayables.barGroup.transformCoordToLocal(e.offsetX, e.offsetY);\n\n    if (localPoint[0] < 0 || localPoint[0] > size[0] || localPoint[1] < 0 || localPoint[1] > size[1]) {\n      return;\n    }\n\n    var handleEnds = this._handleEnds;\n    var center = (handleEnds[0] + handleEnds[1]) / 2;\n\n    this._updateInterval('all', localPoint[0] - center);\n\n    this._updateView();\n\n    this._dispatchZoomAction();\n  },\n\n  /**\n   * This action will be throttled.\n   * @private\n   */\n  _dispatchZoomAction: function () {\n    var range = this._range;\n    this.api.dispatchAction({\n      type: 'dataZoom',\n      from: this.uid,\n      dataZoomId: this.dataZoomModel.id,\n      start: range[0],\n      end: range[1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _findCoordRect: function () {\n    // Find the grid coresponding to the first axis referred by dataZoom.\n    var rect;\n    each(this.getTargetCoordInfo(), function (coordInfoList) {\n      if (!rect && coordInfoList.length) {\n        var coordSys = coordInfoList[0].model.coordinateSystem;\n        rect = coordSys.getRect && coordSys.getRect();\n      }\n    });\n\n    if (!rect) {\n      var width = this.api.getWidth();\n      var height = this.api.getHeight();\n      rect = {\n        x: width * 0.2,\n        y: height * 0.2,\n        width: width * 0.6,\n        height: height * 0.6\n      };\n    }\n\n    return rect;\n  }\n});\n\nfunction getOtherDim(thisDim) {\n  // FIXME\n  // 这个逻辑和getOtherAxis里一致，但是写在这里是否不好\n  var map = {\n    x: 'y',\n    y: 'x',\n    radius: 'angle',\n    angle: 'radius'\n  };\n  return map[thisDim];\n}\n\nfunction getCursor(orient) {\n  return orient === 'vertical' ? 'ns-resize' : 'ew-resize';\n}\n\nvar _default = SliderZoomView;\nmodule.exports = _default;","var DataZoomModel = require(\"./DataZoomModel\");\n\nvar _default = DataZoomModel.extend({\n  type: 'dataZoom.inside',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    disabled: false,\n    // Whether disable this inside zoom.\n    zoomLock: false,\n    // Whether disable zoom but only pan.\n    zoomOnMouseWheel: true,\n    // Can be: true / false / 'shift' / 'ctrl' / 'alt'.\n    moveOnMouseMove: true,\n    // Can be: true / false / 'shift' / 'ctrl' / 'alt'.\n    preventDefaultMouseMove: true\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar DataZoomView = require(\"./DataZoomView\");\n\nvar sliderMove = require(\"../helper/sliderMove\");\n\nvar roams = require(\"./roams\");\n\nvar bind = zrUtil.bind;\nvar InsideZoomView = DataZoomView.extend({\n  type: 'dataZoom.inside',\n\n  /**\n   * @override\n   */\n  init: function (ecModel, api) {\n    /**\n     * 'throttle' is used in this.dispatchAction, so we save range\n     * to avoid missing some 'pan' info.\n     * @private\n     * @type {Array.<number>}\n     */\n    this._range;\n  },\n\n  /**\n   * @override\n   */\n  render: function (dataZoomModel, ecModel, api, payload) {\n    InsideZoomView.superApply(this, 'render', arguments); // Notice: origin this._range should be maintained, and should not be re-fetched\n    // from dataZoomModel when payload.type is 'dataZoom', otherwise 'pan' or 'zoom'\n    // info will be missed because of 'throttle' of this.dispatchAction.\n\n    if (roams.shouldRecordRange(payload, dataZoomModel.id)) {\n      this._range = dataZoomModel.getPercentRange();\n    } // Reset controllers.\n\n\n    zrUtil.each(this.getTargetCoordInfo(), function (coordInfoList, coordSysName) {\n      var allCoordIds = zrUtil.map(coordInfoList, function (coordInfo) {\n        return roams.generateCoordId(coordInfo.model);\n      });\n      zrUtil.each(coordInfoList, function (coordInfo) {\n        var coordModel = coordInfo.model;\n        var dataZoomOption = dataZoomModel.option;\n        roams.register(api, {\n          coordId: roams.generateCoordId(coordModel),\n          allCoordIds: allCoordIds,\n          containsPoint: function (e, x, y) {\n            return coordModel.coordinateSystem.containPoint([x, y]);\n          },\n          dataZoomId: dataZoomModel.id,\n          throttleRate: dataZoomModel.get('throttle', true),\n          panGetRange: bind(this._onPan, this, coordInfo, coordSysName),\n          zoomGetRange: bind(this._onZoom, this, coordInfo, coordSysName),\n          zoomLock: dataZoomOption.zoomLock,\n          disabled: dataZoomOption.disabled,\n          roamControllerOpt: {\n            zoomOnMouseWheel: dataZoomOption.zoomOnMouseWheel,\n            moveOnMouseMove: dataZoomOption.moveOnMouseMove,\n            preventDefaultMouseMove: dataZoomOption.preventDefaultMouseMove\n          }\n        });\n      }, this);\n    }, this);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    roams.unregister(this.api, this.dataZoomModel.id);\n    InsideZoomView.superApply(this, 'dispose', arguments);\n    this._range = null;\n  },\n\n  /**\n   * @private\n   */\n  _onPan: function (coordInfo, coordSysName, controller, dx, dy, oldX, oldY, newX, newY) {\n    var range = this._range.slice(); // Calculate transform by the first axis.\n\n\n    var axisModel = coordInfo.axisModels[0];\n\n    if (!axisModel) {\n      return;\n    }\n\n    var directionInfo = getDirectionInfo[coordSysName]([oldX, oldY], [newX, newY], axisModel, controller, coordInfo);\n    var percentDelta = directionInfo.signal * (range[1] - range[0]) * directionInfo.pixel / directionInfo.pixelLength;\n    sliderMove(percentDelta, range, [0, 100], 'all');\n    return this._range = range;\n  },\n\n  /**\n   * @private\n   */\n  _onZoom: function (coordInfo, coordSysName, controller, scale, mouseX, mouseY) {\n    var range = this._range.slice(); // Calculate transform by the first axis.\n\n\n    var axisModel = coordInfo.axisModels[0];\n\n    if (!axisModel) {\n      return;\n    }\n\n    var directionInfo = getDirectionInfo[coordSysName](null, [mouseX, mouseY], axisModel, controller, coordInfo);\n    var percentPoint = (directionInfo.signal > 0 ? directionInfo.pixelStart + directionInfo.pixelLength - directionInfo.pixel : directionInfo.pixel - directionInfo.pixelStart) / directionInfo.pixelLength * (range[1] - range[0]) + range[0];\n    scale = Math.max(1 / scale, 0);\n    range[0] = (range[0] - percentPoint) * scale + percentPoint;\n    range[1] = (range[1] - percentPoint) * scale + percentPoint; // Restrict range.\n\n    var minMaxSpan = this.dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();\n    sliderMove(0, range, [0, 100], 0, minMaxSpan.minSpan, minMaxSpan.maxSpan);\n    return this._range = range;\n  }\n});\nvar getDirectionInfo = {\n  grid: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var ret = {};\n    var rect = coordInfo.model.coordinateSystem.getRect();\n    oldPoint = oldPoint || [0, 0];\n\n    if (axis.dim === 'x') {\n      ret.pixel = newPoint[0] - oldPoint[0];\n      ret.pixelLength = rect.width;\n      ret.pixelStart = rect.x;\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // axis.dim === 'y'\n      ret.pixel = newPoint[1] - oldPoint[1];\n      ret.pixelLength = rect.height;\n      ret.pixelStart = rect.y;\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  },\n  polar: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var ret = {};\n    var polar = coordInfo.model.coordinateSystem;\n    var radiusExtent = polar.getRadiusAxis().getExtent();\n    var angleExtent = polar.getAngleAxis().getExtent();\n    oldPoint = oldPoint ? polar.pointToCoord(oldPoint) : [0, 0];\n    newPoint = polar.pointToCoord(newPoint);\n\n    if (axisModel.mainType === 'radiusAxis') {\n      ret.pixel = newPoint[0] - oldPoint[0]; // ret.pixelLength = Math.abs(radiusExtent[1] - radiusExtent[0]);\n      // ret.pixelStart = Math.min(radiusExtent[0], radiusExtent[1]);\n\n      ret.pixelLength = radiusExtent[1] - radiusExtent[0];\n      ret.pixelStart = radiusExtent[0];\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // 'angleAxis'\n      ret.pixel = newPoint[1] - oldPoint[1]; // ret.pixelLength = Math.abs(angleExtent[1] - angleExtent[0]);\n      // ret.pixelStart = Math.min(angleExtent[0], angleExtent[1]);\n\n      ret.pixelLength = angleExtent[1] - angleExtent[0];\n      ret.pixelStart = angleExtent[0];\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  },\n  singleAxis: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var rect = coordInfo.model.coordinateSystem.getRect();\n    var ret = {};\n    oldPoint = oldPoint || [0, 0];\n\n    if (axis.orient === 'horizontal') {\n      ret.pixel = newPoint[0] - oldPoint[0];\n      ret.pixelLength = rect.width;\n      ret.pixelStart = rect.x;\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // 'vertical'\n      ret.pixel = newPoint[1] - oldPoint[1];\n      ret.pixelLength = rect.height;\n      ret.pixelStart = rect.y;\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  }\n};\nvar _default = InsideZoomView;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\n// Only create one roam controller for each coordinate system.\n// one roam controller might be refered by two inside data zoom\n// components (for example, one for x and one for y). When user\n// pan or zoom, only dispatch one action for those data zoom\n// components.\nvar curry = zrUtil.curry;\nvar ATTR = '\\0_ec_dataZoom_roams';\n/**\n * @public\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} dataZoomInfo\n * @param {string} dataZoomInfo.coordId\n * @param {Function} dataZoomInfo.containsPoint\n * @param {Array.<string>} dataZoomInfo.allCoordIds\n * @param {string} dataZoomInfo.dataZoomId\n * @param {number} dataZoomInfo.throttleRate\n * @param {Function} dataZoomInfo.panGetRange\n * @param {Function} dataZoomInfo.zoomGetRange\n * @param {boolean} [dataZoomInfo.zoomLock]\n * @param {boolean} [dataZoomInfo.disabled]\n */\n\nfunction register(api, dataZoomInfo) {\n  var store = giveStore(api);\n  var theDataZoomId = dataZoomInfo.dataZoomId;\n  var theCoordId = dataZoomInfo.coordId; // Do clean when a dataZoom changes its target coordnate system.\n  // Avoid memory leak, dispose all not-used-registered.\n\n  zrUtil.each(store, function (record, coordId) {\n    var dataZoomInfos = record.dataZoomInfos;\n\n    if (dataZoomInfos[theDataZoomId] && zrUtil.indexOf(dataZoomInfo.allCoordIds, theCoordId) < 0) {\n      delete dataZoomInfos[theDataZoomId];\n      record.count--;\n    }\n  });\n  cleanStore(store);\n  var record = store[theCoordId]; // Create if needed.\n\n  if (!record) {\n    record = store[theCoordId] = {\n      coordId: theCoordId,\n      dataZoomInfos: {},\n      count: 0\n    };\n    record.controller = createController(api, record);\n    record.dispatchAction = zrUtil.curry(dispatchAction, api);\n  } // Update reference of dataZoom.\n\n\n  !record.dataZoomInfos[theDataZoomId] && record.count++;\n  record.dataZoomInfos[theDataZoomId] = dataZoomInfo;\n  var controllerParams = mergeControllerParams(record.dataZoomInfos);\n  record.controller.enable(controllerParams.controlType, controllerParams.opt); // Consider resize, area should be always updated.\n\n  record.controller.setPointerChecker(dataZoomInfo.containsPoint); // Update throttle.\n\n  throttleUtil.createOrUpdate(record, 'dispatchAction', dataZoomInfo.throttleRate, 'fixRate');\n}\n/**\n * @public\n * @param {module:echarts/ExtensionAPI} api\n * @param {string} dataZoomId\n */\n\n\nfunction unregister(api, dataZoomId) {\n  var store = giveStore(api);\n  zrUtil.each(store, function (record) {\n    record.controller.dispose();\n    var dataZoomInfos = record.dataZoomInfos;\n\n    if (dataZoomInfos[dataZoomId]) {\n      delete dataZoomInfos[dataZoomId];\n      record.count--;\n    }\n  });\n  cleanStore(store);\n}\n/**\n * @public\n */\n\n\nfunction shouldRecordRange(payload, dataZoomId) {\n  if (payload && payload.type === 'dataZoom' && payload.batch) {\n    for (var i = 0, len = payload.batch.length; i < len; i++) {\n      if (payload.batch[i].dataZoomId === dataZoomId) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * @public\n */\n\n\nfunction generateCoordId(coordModel) {\n  return coordModel.type + '\\0_' + coordModel.id;\n}\n/**\n * Key: coordId, value: {dataZoomInfos: [], count, controller}\n * @type {Array.<Object>}\n */\n\n\nfunction giveStore(api) {\n  // Mount store on zrender instance, so that we do not\n  // need to worry about dispose.\n  var zr = api.getZr();\n  return zr[ATTR] || (zr[ATTR] = {});\n}\n\nfunction createController(api, newRecord) {\n  var controller = new RoamController(api.getZr());\n  controller.on('pan', curry(onPan, newRecord));\n  controller.on('zoom', curry(onZoom, newRecord));\n  return controller;\n}\n\nfunction cleanStore(store) {\n  zrUtil.each(store, function (record, coordId) {\n    if (!record.count) {\n      record.controller.dispose();\n      delete store[coordId];\n    }\n  });\n}\n\nfunction onPan(record, dx, dy, oldX, oldY, newX, newY) {\n  wrapAndDispatch(record, function (info) {\n    return info.panGetRange(record.controller, dx, dy, oldX, oldY, newX, newY);\n  });\n}\n\nfunction onZoom(record, scale, mouseX, mouseY) {\n  wrapAndDispatch(record, function (info) {\n    return info.zoomGetRange(record.controller, scale, mouseX, mouseY);\n  });\n}\n\nfunction wrapAndDispatch(record, getRange) {\n  var batch = [];\n  zrUtil.each(record.dataZoomInfos, function (info) {\n    var range = getRange(info);\n    !info.disabled && range && batch.push({\n      dataZoomId: info.dataZoomId,\n      start: range[0],\n      end: range[1]\n    });\n  });\n  record.dispatchAction(batch);\n}\n/**\n * This action will be throttled.\n */\n\n\nfunction dispatchAction(api, batch) {\n  api.dispatchAction({\n    type: 'dataZoom',\n    batch: batch\n  });\n}\n/**\n * Merge roamController settings when multiple dataZooms share one roamController.\n */\n\n\nfunction mergeControllerParams(dataZoomInfos) {\n  var controlType;\n  var opt = {};\n  var typePriority = {\n    'true': 2,\n    'move': 1,\n    'false': 0,\n    'undefined': -1\n  };\n  zrUtil.each(dataZoomInfos, function (dataZoomInfo) {\n    var oneType = dataZoomInfo.disabled ? false : dataZoomInfo.zoomLock ? 'move' : true;\n    typePriority[oneType] > typePriority[controlType] && (controlType = oneType); // Do not support that different 'shift'/'ctrl'/'alt' setting used in one coord sys.\n\n    zrUtil.extend(opt, dataZoomInfo.roamControllerOpt);\n  });\n  return {\n    controlType: controlType,\n    opt: opt\n  };\n}\n\nexports.register = register;\nexports.unregister = unregister;\nexports.shouldRecordRange = shouldRecordRange;\nexports.generateCoordId = generateCoordId;","require(\"./visualMapContinuous\");\n\nrequire(\"./visualMapPiecewise\");","var echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./visualMap/preprocessor\");\n\nrequire(\"./visualMap/typeDefaulter\");\n\nrequire(\"./visualMap/visualEncoding\");\n\nrequire(\"./visualMap/ContinuousModel\");\n\nrequire(\"./visualMap/ContinuousView\");\n\nrequire(\"./visualMap/visualMapAction\");\n\n/**\n * DataZoom component entry\n */\necharts.registerPreprocessor(preprocessor);","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapModel = require(\"./VisualMapModel\");\n\nvar numberUtil = require(\"../../util/number\");\n\n// Constant\nvar DEFAULT_BAR_BOUND = [20, 140];\nvar ContinuousModel = VisualMapModel.extend({\n  type: 'visualMap.continuous',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    align: 'auto',\n    // 'auto', 'left', 'right', 'top', 'bottom'\n    calculable: false,\n    // This prop effect default component type determine,\n    // See echarts/component/visualMap/typeDefaulter.\n    range: null,\n    // selected range. In default case `range` is [min, max]\n    // and can auto change along with modification of min max,\n    // util use specifid a range.\n    realtime: true,\n    // Whether realtime update.\n    itemHeight: null,\n    // The length of the range control edge.\n    itemWidth: null,\n    // The length of the other side.\n    hoverLink: true,\n    // Enable hover highlight.\n    hoverLinkDataSize: null,\n    // The size of hovered data.\n    hoverLinkOnHandle: null // Whether trigger hoverLink when hover handle.\n    // If not specified, follow the value of `realtime`.\n\n  },\n\n  /**\n   * @override\n   */\n  optionUpdated: function (newOption, isInit) {\n    ContinuousModel.superApply(this, 'optionUpdated', arguments);\n    this.resetExtent();\n    this.resetVisual(function (mappingOption) {\n      mappingOption.mappingMethod = 'linear';\n      mappingOption.dataExtent = this.getExtent();\n    });\n\n    this._resetRange();\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  resetItemSize: function () {\n    ContinuousModel.superApply(this, 'resetItemSize', arguments);\n    var itemSize = this.itemSize;\n    this._orient === 'horizontal' && itemSize.reverse();\n    (itemSize[0] == null || isNaN(itemSize[0])) && (itemSize[0] = DEFAULT_BAR_BOUND[0]);\n    (itemSize[1] == null || isNaN(itemSize[1])) && (itemSize[1] = DEFAULT_BAR_BOUND[1]);\n  },\n\n  /**\n   * @private\n   */\n  _resetRange: function () {\n    var dataExtent = this.getExtent();\n    var range = this.option.range;\n\n    if (!range || range.auto) {\n      // `range` should always be array (so we dont use other\n      // value like 'auto') for user-friend. (consider getOption).\n      dataExtent.auto = 1;\n      this.option.range = dataExtent;\n    } else if (zrUtil.isArray(range)) {\n      if (range[0] > range[1]) {\n        range.reverse();\n      }\n\n      range[0] = Math.max(range[0], dataExtent[0]);\n      range[1] = Math.min(range[1], dataExtent[1]);\n    }\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  completeVisualOption: function () {\n    VisualMapModel.prototype.completeVisualOption.apply(this, arguments);\n    zrUtil.each(this.stateList, function (state) {\n      var symbolSize = this.option.controller[state].symbolSize;\n\n      if (symbolSize && symbolSize[0] !== symbolSize[1]) {\n        symbolSize[0] = 0; // For good looking.\n      }\n    }, this);\n  },\n\n  /**\n   * @override\n   */\n  setSelected: function (selected) {\n    this.option.range = selected.slice();\n\n    this._resetRange();\n  },\n\n  /**\n   * @public\n   */\n  getSelected: function () {\n    var dataExtent = this.getExtent();\n    var dataInterval = numberUtil.asc((this.get('range') || []).slice()); // Clamp\n\n    dataInterval[0] > dataExtent[1] && (dataInterval[0] = dataExtent[1]);\n    dataInterval[1] > dataExtent[1] && (dataInterval[1] = dataExtent[1]);\n    dataInterval[0] < dataExtent[0] && (dataInterval[0] = dataExtent[0]);\n    dataInterval[1] < dataExtent[0] && (dataInterval[1] = dataExtent[0]);\n    return dataInterval;\n  },\n\n  /**\n   * @override\n   */\n  getValueState: function (value) {\n    var range = this.option.range;\n    var dataExtent = this.getExtent(); // When range[0] === dataExtent[0], any value larger than dataExtent[0] maps to 'inRange'.\n    // range[1] is processed likewise.\n\n    return (range[0] <= dataExtent[0] || range[0] <= value) && (range[1] >= dataExtent[1] || value <= range[1]) ? 'inRange' : 'outOfRange';\n  },\n\n  /**\n   * @params {Array.<number>} range target value: range[0] <= value && value <= range[1]\n   * @return {Array.<Object>} [{seriesId, dataIndices: <Array.<number>>}, ...]\n   */\n  findTargetDataIndices: function (range) {\n    var result = [];\n    this.eachTargetSeries(function (seriesModel) {\n      var dataIndices = [];\n      var data = seriesModel.getData();\n      data.each(this.getDataDimension(data), function (value, dataIndex) {\n        range[0] <= value && value <= range[1] && dataIndices.push(dataIndex);\n      }, true, this);\n      result.push({\n        seriesId: seriesModel.id,\n        dataIndex: dataIndices\n      });\n    }, this);\n    return result;\n  },\n\n  /**\n   * @implement\n   */\n  getVisualMeta: function (getColorVisual) {\n    var oVals = getColorStopValues(this, 'outOfRange', this.getExtent());\n    var iVals = getColorStopValues(this, 'inRange', this.option.range.slice());\n    var stops = [];\n\n    function setStop(value, valueState) {\n      stops.push({\n        value: value,\n        color: getColorVisual(value, valueState)\n      });\n    } // Format to: outOfRange -- inRange -- outOfRange.\n\n\n    var iIdx = 0;\n    var oIdx = 0;\n    var iLen = iVals.length;\n    var oLen = oVals.length;\n\n    for (; oIdx < oLen && (!iVals.length || oVals[oIdx] <= iVals[0]); oIdx++) {\n      // If oVal[oIdx] === iVals[iIdx], oVal[oIdx] should be ignored.\n      if (oVals[oIdx] < iVals[iIdx]) {\n        setStop(oVals[oIdx], 'outOfRange');\n      }\n    }\n\n    for (var first = 1; iIdx < iLen; iIdx++, first = 0) {\n      // If range is full, value beyond min, max will be clamped.\n      // make a singularity\n      first && stops.length && setStop(iVals[iIdx], 'outOfRange');\n      setStop(iVals[iIdx], 'inRange');\n    }\n\n    for (var first = 1; oIdx < oLen; oIdx++) {\n      if (!iVals.length || iVals[iVals.length - 1] < oVals[oIdx]) {\n        // make a singularity\n        if (first) {\n          stops.length && setStop(stops[stops.length - 1].value, 'outOfRange');\n          first = 0;\n        }\n\n        setStop(oVals[oIdx], 'outOfRange');\n      }\n    }\n\n    var stopsLen = stops.length;\n    return {\n      stops: stops,\n      outerColors: [stopsLen ? stops[0].color : 'transparent', stopsLen ? stops[stopsLen - 1].color : 'transparent']\n    };\n  }\n});\n\nfunction getColorStopValues(visualMapModel, valueState, dataExtent) {\n  if (dataExtent[0] === dataExtent[1]) {\n    return dataExtent.slice();\n  } // When using colorHue mapping, it is not linear color any more.\n  // Moreover, canvas gradient seems not to be accurate linear.\n  // FIXME\n  // Should be arbitrary value 100? or based on pixel size?\n\n\n  var count = 200;\n  var step = (dataExtent[1] - dataExtent[0]) / count;\n  var value = dataExtent[0];\n  var stopValues = [];\n\n  for (var i = 0; i <= count && value < dataExtent[1]; i++) {\n    stopValues.push(value);\n    value += step;\n  }\n\n  stopValues.push(dataExtent[1]);\n  return stopValues;\n}\n\nvar _default = ContinuousModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar LinearGradient = require(\"zrender/lib/graphic/LinearGradient\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar VisualMapView = require(\"./VisualMapView\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar sliderMove = require(\"../helper/sliderMove\");\n\nvar helper = require(\"./helper\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar linearMap = numberUtil.linearMap;\nvar each = zrUtil.each;\nvar mathMin = Math.min;\nvar mathMax = Math.max; // Arbitrary value\n\nvar HOVER_LINK_SIZE = 12;\nvar HOVER_LINK_OUT = 6; // Notice:\n// Any \"interval\" should be by the order of [low, high].\n// \"handle0\" (handleIndex === 0) maps to\n// low data value: this._dataInterval[0] and has low coord.\n// \"handle1\" (handleIndex === 1) maps to\n// high data value: this._dataInterval[1] and has high coord.\n// The logic of transform is implemented in this._createBarGroup.\n\nvar ContinuousView = VisualMapView.extend({\n  type: 'visualMap.continuous',\n\n  /**\n   * @override\n   */\n  init: function () {\n    ContinuousView.superApply(this, 'init', arguments);\n    /**\n     * @private\n     */\n\n    this._shapes = {};\n    /**\n     * @private\n     */\n\n    this._dataInterval = [];\n    /**\n     * @private\n     */\n\n    this._handleEnds = [];\n    /**\n     * @private\n     */\n\n    this._orient;\n    /**\n     * @private\n     */\n\n    this._useHandle;\n    /**\n     * @private\n     */\n\n    this._hoverLinkDataIndices = [];\n    /**\n     * @private\n     */\n\n    this._dragging;\n    /**\n     * @private\n     */\n\n    this._hovering;\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  doRender: function (visualMapModel, ecModel, api, payload) {\n    if (!payload || payload.type !== 'selectDataRange' || payload.from !== this.uid) {\n      this._buildView();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _buildView: function () {\n    this.group.removeAll();\n    var visualMapModel = this.visualMapModel;\n    var thisGroup = this.group;\n    this._orient = visualMapModel.get('orient');\n    this._useHandle = visualMapModel.get('calculable');\n\n    this._resetInterval();\n\n    this._renderBar(thisGroup);\n\n    var dataRangeText = visualMapModel.get('text');\n\n    this._renderEndsText(thisGroup, dataRangeText, 0);\n\n    this._renderEndsText(thisGroup, dataRangeText, 1); // Do this for background size calculation.\n\n\n    this._updateView(true); // After updating view, inner shapes is built completely,\n    // and then background can be rendered.\n\n\n    this.renderBackground(thisGroup); // Real update view\n\n    this._updateView();\n\n    this._enableHoverLinkToSeries();\n\n    this._enableHoverLinkFromSeries();\n\n    this.positionGroup(thisGroup);\n  },\n\n  /**\n   * @private\n   */\n  _renderEndsText: function (group, dataRangeText, endsIndex) {\n    if (!dataRangeText) {\n      return;\n    } // Compatible with ec2, text[0] map to high value, text[1] map low value.\n\n\n    var text = dataRangeText[1 - endsIndex];\n    text = text != null ? text + '' : '';\n    var visualMapModel = this.visualMapModel;\n    var textGap = visualMapModel.get('textGap');\n    var itemSize = visualMapModel.itemSize;\n    var barGroup = this._shapes.barGroup;\n\n    var position = this._applyTransform([itemSize[0] / 2, endsIndex === 0 ? -textGap : itemSize[1] + textGap], barGroup);\n\n    var align = this._applyTransform(endsIndex === 0 ? 'bottom' : 'top', barGroup);\n\n    var orient = this._orient;\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    this.group.add(new graphic.Text({\n      style: {\n        x: position[0],\n        y: position[1],\n        textVerticalAlign: orient === 'horizontal' ? 'middle' : align,\n        textAlign: orient === 'horizontal' ? align : 'center',\n        text: text,\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _renderBar: function (targetGroup) {\n    var visualMapModel = this.visualMapModel;\n    var shapes = this._shapes;\n    var itemSize = visualMapModel.itemSize;\n    var orient = this._orient;\n    var useHandle = this._useHandle;\n    var itemAlign = helper.getItemAlign(visualMapModel, this.api, itemSize);\n\n    var barGroup = shapes.barGroup = this._createBarGroup(itemAlign); // Bar\n\n\n    barGroup.add(shapes.outOfRange = createPolygon());\n    barGroup.add(shapes.inRange = createPolygon(null, useHandle ? getCursor(this._orient) : null, zrUtil.bind(this._dragHandle, this, 'all', false), zrUtil.bind(this._dragHandle, this, 'all', true)));\n    var textRect = visualMapModel.textStyleModel.getTextRect('国');\n    var textSize = mathMax(textRect.width, textRect.height); // Handle\n\n    if (useHandle) {\n      shapes.handleThumbs = [];\n      shapes.handleLabels = [];\n      shapes.handleLabelPoints = [];\n\n      this._createHandle(barGroup, 0, itemSize, textSize, orient, itemAlign);\n\n      this._createHandle(barGroup, 1, itemSize, textSize, orient, itemAlign);\n    }\n\n    this._createIndicator(barGroup, itemSize, textSize, orient);\n\n    targetGroup.add(barGroup);\n  },\n\n  /**\n   * @private\n   */\n  _createHandle: function (barGroup, handleIndex, itemSize, textSize, orient) {\n    var onDrift = zrUtil.bind(this._dragHandle, this, handleIndex, false);\n    var onDragEnd = zrUtil.bind(this._dragHandle, this, handleIndex, true);\n    var handleThumb = createPolygon(createHandlePoints(handleIndex, textSize), getCursor(this._orient), onDrift, onDragEnd);\n    handleThumb.position[0] = itemSize[0];\n    barGroup.add(handleThumb); // Text is always horizontal layout but should not be effected by\n    // transform (orient/inverse). So label is built separately but not\n    // use zrender/graphic/helper/RectText, and is located based on view\n    // group (according to handleLabelPoint) but not barGroup.\n\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    var handleLabel = new graphic.Text({\n      draggable: true,\n      drift: onDrift,\n      onmousemove: function (e) {\n        // Fot mobile devicem, prevent screen slider on the button.\n        eventTool.stop(e.event);\n      },\n      ondragend: onDragEnd,\n      style: {\n        x: 0,\n        y: 0,\n        text: '',\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    });\n    this.group.add(handleLabel);\n    var handleLabelPoint = [orient === 'horizontal' ? textSize / 2 : textSize * 1.5, orient === 'horizontal' ? handleIndex === 0 ? -(textSize * 1.5) : textSize * 1.5 : handleIndex === 0 ? -textSize / 2 : textSize / 2];\n    var shapes = this._shapes;\n    shapes.handleThumbs[handleIndex] = handleThumb;\n    shapes.handleLabelPoints[handleIndex] = handleLabelPoint;\n    shapes.handleLabels[handleIndex] = handleLabel;\n  },\n\n  /**\n   * @private\n   */\n  _createIndicator: function (barGroup, itemSize, textSize, orient) {\n    var indicator = createPolygon([[0, 0]], 'move');\n    indicator.position[0] = itemSize[0];\n    indicator.attr({\n      invisible: true,\n      silent: true\n    });\n    barGroup.add(indicator);\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    var indicatorLabel = new graphic.Text({\n      silent: true,\n      invisible: true,\n      style: {\n        x: 0,\n        y: 0,\n        text: '',\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    });\n    this.group.add(indicatorLabel);\n    var indicatorLabelPoint = [orient === 'horizontal' ? textSize / 2 : HOVER_LINK_OUT + 3, 0];\n    var shapes = this._shapes;\n    shapes.indicator = indicator;\n    shapes.indicatorLabel = indicatorLabel;\n    shapes.indicatorLabelPoint = indicatorLabelPoint;\n  },\n\n  /**\n   * @private\n   */\n  _dragHandle: function (handleIndex, isEnd, dx, dy) {\n    if (!this._useHandle) {\n      return;\n    }\n\n    this._dragging = !isEnd;\n\n    if (!isEnd) {\n      // Transform dx, dy to bar coordination.\n      var vertex = this._applyTransform([dx, dy], this._shapes.barGroup, true);\n\n      this._updateInterval(handleIndex, vertex[1]); // Considering realtime, update view should be executed\n      // before dispatch action.\n\n\n      this._updateView();\n    } // dragEnd do not dispatch action when realtime.\n\n\n    if (isEnd === !this.visualMapModel.get('realtime')) {\n      // jshint ignore:line\n      this.api.dispatchAction({\n        type: 'selectDataRange',\n        from: this.uid,\n        visualMapId: this.visualMapModel.id,\n        selected: this._dataInterval.slice()\n      });\n    }\n\n    if (isEnd) {\n      !this._hovering && this._clearHoverLinkToSeries();\n    } else if (useHoverLinkOnHandle(this.visualMapModel)) {\n      this._doHoverLinkToSeries(this._handleEnds[handleIndex], false);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _resetInterval: function () {\n    var visualMapModel = this.visualMapModel;\n    var dataInterval = this._dataInterval = visualMapModel.getSelected();\n    var dataExtent = visualMapModel.getExtent();\n    var sizeExtent = [0, visualMapModel.itemSize[1]];\n    this._handleEnds = [linearMap(dataInterval[0], dataExtent, sizeExtent, true), linearMap(dataInterval[1], dataExtent, sizeExtent, true)];\n  },\n\n  /**\n   * @private\n   * @param {(number|string)} handleIndex 0 or 1 or 'all'\n   * @param {number} dx\n   * @param {number} dy\n   */\n  _updateInterval: function (handleIndex, delta) {\n    delta = delta || 0;\n    var visualMapModel = this.visualMapModel;\n    var handleEnds = this._handleEnds;\n    var sizeExtent = [0, visualMapModel.itemSize[1]];\n    sliderMove(delta, handleEnds, sizeExtent, handleIndex, // cross is forbiden\n    0);\n    var dataExtent = visualMapModel.getExtent(); // Update data interval.\n\n    this._dataInterval = [linearMap(handleEnds[0], sizeExtent, dataExtent, true), linearMap(handleEnds[1], sizeExtent, dataExtent, true)];\n  },\n\n  /**\n   * @private\n   */\n  _updateView: function (forSketch) {\n    var visualMapModel = this.visualMapModel;\n    var dataExtent = visualMapModel.getExtent();\n    var shapes = this._shapes;\n    var outOfRangeHandleEnds = [0, visualMapModel.itemSize[1]];\n    var inRangeHandleEnds = forSketch ? outOfRangeHandleEnds : this._handleEnds;\n\n    var visualInRange = this._createBarVisual(this._dataInterval, dataExtent, inRangeHandleEnds, 'inRange');\n\n    var visualOutOfRange = this._createBarVisual(dataExtent, dataExtent, outOfRangeHandleEnds, 'outOfRange');\n\n    shapes.inRange.setStyle({\n      fill: visualInRange.barColor,\n      opacity: visualInRange.opacity\n    }).setShape('points', visualInRange.barPoints);\n    shapes.outOfRange.setStyle({\n      fill: visualOutOfRange.barColor,\n      opacity: visualOutOfRange.opacity\n    }).setShape('points', visualOutOfRange.barPoints);\n\n    this._updateHandle(inRangeHandleEnds, visualInRange);\n  },\n\n  /**\n   * @private\n   */\n  _createBarVisual: function (dataInterval, dataExtent, handleEnds, forceState) {\n    var opts = {\n      forceState: forceState,\n      convertOpacityToAlpha: true\n    };\n\n    var colorStops = this._makeColorGradient(dataInterval, opts);\n\n    var symbolSizes = [this.getControllerVisual(dataInterval[0], 'symbolSize', opts), this.getControllerVisual(dataInterval[1], 'symbolSize', opts)];\n\n    var barPoints = this._createBarPoints(handleEnds, symbolSizes);\n\n    return {\n      barColor: new LinearGradient(0, 0, 0, 1, colorStops),\n      barPoints: barPoints,\n      handlesColor: [colorStops[0].color, colorStops[colorStops.length - 1].color]\n    };\n  },\n\n  /**\n   * @private\n   */\n  _makeColorGradient: function (dataInterval, opts) {\n    // Considering colorHue, which is not linear, so we have to sample\n    // to calculate gradient color stops, but not only caculate head\n    // and tail.\n    var sampleNumber = 100; // Arbitrary value.\n\n    var colorStops = [];\n    var step = (dataInterval[1] - dataInterval[0]) / sampleNumber;\n    colorStops.push({\n      color: this.getControllerVisual(dataInterval[0], 'color', opts),\n      offset: 0\n    });\n\n    for (var i = 1; i < sampleNumber; i++) {\n      var currValue = dataInterval[0] + step * i;\n\n      if (currValue > dataInterval[1]) {\n        break;\n      }\n\n      colorStops.push({\n        color: this.getControllerVisual(currValue, 'color', opts),\n        offset: i / sampleNumber\n      });\n    }\n\n    colorStops.push({\n      color: this.getControllerVisual(dataInterval[1], 'color', opts),\n      offset: 1\n    });\n    return colorStops;\n  },\n\n  /**\n   * @private\n   */\n  _createBarPoints: function (handleEnds, symbolSizes) {\n    var itemSize = this.visualMapModel.itemSize;\n    return [[itemSize[0] - symbolSizes[0], handleEnds[0]], [itemSize[0], handleEnds[0]], [itemSize[0], handleEnds[1]], [itemSize[0] - symbolSizes[1], handleEnds[1]]];\n  },\n\n  /**\n   * @private\n   */\n  _createBarGroup: function (itemAlign) {\n    var orient = this._orient;\n    var inverse = this.visualMapModel.get('inverse');\n    return new graphic.Group(orient === 'horizontal' && !inverse ? {\n      scale: itemAlign === 'bottom' ? [1, 1] : [-1, 1],\n      rotation: Math.PI / 2\n    } : orient === 'horizontal' && inverse ? {\n      scale: itemAlign === 'bottom' ? [-1, 1] : [1, 1],\n      rotation: -Math.PI / 2\n    } : orient === 'vertical' && !inverse ? {\n      scale: itemAlign === 'left' ? [1, -1] : [-1, -1]\n    } : {\n      scale: itemAlign === 'left' ? [1, 1] : [-1, 1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _updateHandle: function (handleEnds, visualInRange) {\n    if (!this._useHandle) {\n      return;\n    }\n\n    var shapes = this._shapes;\n    var visualMapModel = this.visualMapModel;\n    var handleThumbs = shapes.handleThumbs;\n    var handleLabels = shapes.handleLabels;\n    each([0, 1], function (handleIndex) {\n      var handleThumb = handleThumbs[handleIndex];\n      handleThumb.setStyle('fill', visualInRange.handlesColor[handleIndex]);\n      handleThumb.position[1] = handleEnds[handleIndex]; // Update handle label position.\n\n      var textPoint = graphic.applyTransform(shapes.handleLabelPoints[handleIndex], graphic.getTransform(handleThumb, this.group));\n      handleLabels[handleIndex].setStyle({\n        x: textPoint[0],\n        y: textPoint[1],\n        text: visualMapModel.formatValueText(this._dataInterval[handleIndex]),\n        textVerticalAlign: 'middle',\n        textAlign: this._applyTransform(this._orient === 'horizontal' ? handleIndex === 0 ? 'bottom' : 'top' : 'left', shapes.barGroup)\n      });\n    }, this);\n  },\n\n  /**\n   * @private\n   * @param {number} cursorValue\n   * @param {number} textValue\n   * @param {string} [rangeSymbol]\n   * @param {number} [halfHoverLinkSize]\n   */\n  _showIndicator: function (cursorValue, textValue, rangeSymbol, halfHoverLinkSize) {\n    var visualMapModel = this.visualMapModel;\n    var dataExtent = visualMapModel.getExtent();\n    var itemSize = visualMapModel.itemSize;\n    var sizeExtent = [0, itemSize[1]];\n    var pos = linearMap(cursorValue, dataExtent, sizeExtent, true);\n    var shapes = this._shapes;\n    var indicator = shapes.indicator;\n\n    if (!indicator) {\n      return;\n    }\n\n    indicator.position[1] = pos;\n    indicator.attr('invisible', false);\n    indicator.setShape('points', createIndicatorPoints(!!rangeSymbol, halfHoverLinkSize, pos, itemSize[1]));\n    var opts = {\n      convertOpacityToAlpha: true\n    };\n    var color = this.getControllerVisual(cursorValue, 'color', opts);\n    indicator.setStyle('fill', color); // Update handle label position.\n\n    var textPoint = graphic.applyTransform(shapes.indicatorLabelPoint, graphic.getTransform(indicator, this.group));\n    var indicatorLabel = shapes.indicatorLabel;\n    indicatorLabel.attr('invisible', false);\n\n    var align = this._applyTransform('left', shapes.barGroup);\n\n    var orient = this._orient;\n    indicatorLabel.setStyle({\n      text: (rangeSymbol ? rangeSymbol : '') + visualMapModel.formatValueText(textValue),\n      textVerticalAlign: orient === 'horizontal' ? align : 'middle',\n      textAlign: orient === 'horizontal' ? 'center' : align,\n      x: textPoint[0],\n      y: textPoint[1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLinkToSeries: function () {\n    var self = this;\n\n    this._shapes.barGroup.on('mousemove', function (e) {\n      self._hovering = true;\n\n      if (!self._dragging) {\n        var itemSize = self.visualMapModel.itemSize;\n\n        var pos = self._applyTransform([e.offsetX, e.offsetY], self._shapes.barGroup, true, true); // For hover link show when hover handle, which might be\n        // below or upper than sizeExtent.\n\n\n        pos[1] = mathMin(mathMax(0, pos[1]), itemSize[1]);\n\n        self._doHoverLinkToSeries(pos[1], 0 <= pos[0] && pos[0] <= itemSize[0]);\n      }\n    }).on('mouseout', function () {\n      // When mouse is out of handle, hoverLink still need\n      // to be displayed when realtime is set as false.\n      self._hovering = false;\n      !self._dragging && self._clearHoverLinkToSeries();\n    });\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLinkFromSeries: function () {\n    var zr = this.api.getZr();\n\n    if (this.visualMapModel.option.hoverLink) {\n      zr.on('mouseover', this._hoverLinkFromSeriesMouseOver, this);\n      zr.on('mouseout', this._hideIndicator, this);\n    } else {\n      this._clearHoverLinkFromSeries();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _doHoverLinkToSeries: function (cursorPos, hoverOnBar) {\n    var visualMapModel = this.visualMapModel;\n    var itemSize = visualMapModel.itemSize;\n\n    if (!visualMapModel.option.hoverLink) {\n      return;\n    }\n\n    var sizeExtent = [0, itemSize[1]];\n    var dataExtent = visualMapModel.getExtent(); // For hover link show when hover handle, which might be below or upper than sizeExtent.\n\n    cursorPos = mathMin(mathMax(sizeExtent[0], cursorPos), sizeExtent[1]);\n    var halfHoverLinkSize = getHalfHoverLinkSize(visualMapModel, dataExtent, sizeExtent);\n    var hoverRange = [cursorPos - halfHoverLinkSize, cursorPos + halfHoverLinkSize];\n    var cursorValue = linearMap(cursorPos, sizeExtent, dataExtent, true);\n    var valueRange = [linearMap(hoverRange[0], sizeExtent, dataExtent, true), linearMap(hoverRange[1], sizeExtent, dataExtent, true)]; // Consider data range is out of visualMap range, see test/visualMap-continuous.html,\n    // where china and india has very large population.\n\n    hoverRange[0] < sizeExtent[0] && (valueRange[0] = -Infinity);\n    hoverRange[1] > sizeExtent[1] && (valueRange[1] = Infinity); // Do not show indicator when mouse is over handle,\n    // otherwise labels overlap, especially when dragging.\n\n    if (hoverOnBar) {\n      if (valueRange[0] === -Infinity) {\n        this._showIndicator(cursorValue, valueRange[1], '< ', halfHoverLinkSize);\n      } else if (valueRange[1] === Infinity) {\n        this._showIndicator(cursorValue, valueRange[0], '> ', halfHoverLinkSize);\n      } else {\n        this._showIndicator(cursorValue, cursorValue, '≈ ', halfHoverLinkSize);\n      }\n    } // When realtime is set as false, handles, which are in barGroup,\n    // also trigger hoverLink, which help user to realize where they\n    // focus on when dragging. (see test/heatmap-large.html)\n    // When realtime is set as true, highlight will not show when hover\n    // handle, because the label on handle, which displays a exact value\n    // but not range, might mislead users.\n\n\n    var oldBatch = this._hoverLinkDataIndices;\n    var newBatch = [];\n\n    if (hoverOnBar || useHoverLinkOnHandle(visualMapModel)) {\n      newBatch = this._hoverLinkDataIndices = visualMapModel.findTargetDataIndices(valueRange);\n    }\n\n    var resultBatches = modelUtil.compressBatches(oldBatch, newBatch);\n\n    this._dispatchHighDown('downplay', helper.convertDataIndex(resultBatches[0]));\n\n    this._dispatchHighDown('highlight', helper.convertDataIndex(resultBatches[1]));\n  },\n\n  /**\n   * @private\n   */\n  _hoverLinkFromSeriesMouseOver: function (e) {\n    var el = e.target;\n    var visualMapModel = this.visualMapModel;\n\n    if (!el || el.dataIndex == null) {\n      return;\n    }\n\n    var dataModel = this.ecModel.getSeriesByIndex(el.seriesIndex);\n\n    if (!visualMapModel.isTargetSeries(dataModel)) {\n      return;\n    }\n\n    var data = dataModel.getData(el.dataType);\n    var dim = data.getDimension(visualMapModel.getDataDimension(data));\n    var value = data.get(dim, el.dataIndex, true);\n\n    if (!isNaN(value)) {\n      this._showIndicator(value, value);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _hideIndicator: function () {\n    var shapes = this._shapes;\n    shapes.indicator && shapes.indicator.attr('invisible', true);\n    shapes.indicatorLabel && shapes.indicatorLabel.attr('invisible', true);\n  },\n\n  /**\n   * @private\n   */\n  _clearHoverLinkToSeries: function () {\n    this._hideIndicator();\n\n    var indices = this._hoverLinkDataIndices;\n\n    this._dispatchHighDown('downplay', helper.convertDataIndex(indices));\n\n    indices.length = 0;\n  },\n\n  /**\n   * @private\n   */\n  _clearHoverLinkFromSeries: function () {\n    this._hideIndicator();\n\n    var zr = this.api.getZr();\n    zr.off('mouseover', this._hoverLinkFromSeriesMouseOver);\n    zr.off('mouseout', this._hideIndicator);\n  },\n\n  /**\n   * @private\n   */\n  _applyTransform: function (vertex, element, inverse, global) {\n    var transform = graphic.getTransform(element, global ? null : this.group);\n    return graphic[zrUtil.isArray(vertex) ? 'applyTransform' : 'transformDirection'](vertex, transform, inverse);\n  },\n\n  /**\n   * @private\n   */\n  _dispatchHighDown: function (type, batch) {\n    batch && batch.length && this.api.dispatchAction({\n      type: type,\n      batch: batch\n    });\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._clearHoverLinkFromSeries();\n\n    this._clearHoverLinkToSeries();\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._clearHoverLinkFromSeries();\n\n    this._clearHoverLinkToSeries();\n  }\n});\n\nfunction createPolygon(points, cursor, onDrift, onDragEnd) {\n  return new graphic.Polygon({\n    shape: {\n      points: points\n    },\n    draggable: !!onDrift,\n    cursor: cursor,\n    drift: onDrift,\n    onmousemove: function (e) {\n      // Fot mobile devicem, prevent screen slider on the button.\n      eventTool.stop(e.event);\n    },\n    ondragend: onDragEnd\n  });\n}\n\nfunction createHandlePoints(handleIndex, textSize) {\n  return handleIndex === 0 ? [[0, 0], [textSize, 0], [textSize, -textSize]] : [[0, 0], [textSize, 0], [textSize, textSize]];\n}\n\nfunction createIndicatorPoints(isRange, halfHoverLinkSize, pos, extentMax) {\n  return isRange ? [// indicate range\n  [0, -mathMin(halfHoverLinkSize, mathMax(pos, 0))], [HOVER_LINK_OUT, 0], [0, mathMin(halfHoverLinkSize, mathMax(extentMax - pos, 0))]] : [// indicate single value\n  [0, 0], [5, -5], [5, 5]];\n}\n\nfunction getHalfHoverLinkSize(visualMapModel, dataExtent, sizeExtent) {\n  var halfHoverLinkSize = HOVER_LINK_SIZE / 2;\n  var hoverLinkDataSize = visualMapModel.get('hoverLinkDataSize');\n\n  if (hoverLinkDataSize) {\n    halfHoverLinkSize = linearMap(hoverLinkDataSize, dataExtent, sizeExtent, true) / 2;\n  }\n\n  return halfHoverLinkSize;\n}\n\nfunction useHoverLinkOnHandle(visualMapModel) {\n  var hoverLinkOnHandle = visualMapModel.get('hoverLinkOnHandle');\n  return !!(hoverLinkOnHandle == null ? visualMapModel.get('realtime') : hoverLinkOnHandle);\n}\n\nfunction getCursor(orient) {\n  return orient === 'vertical' ? 'ns-resize' : 'ew-resize';\n}\n\nvar _default = ContinuousView;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./visualMap/preprocessor\");\n\nrequire(\"./visualMap/typeDefaulter\");\n\nrequire(\"./visualMap/visualEncoding\");\n\nrequire(\"./visualMap/PiecewiseModel\");\n\nrequire(\"./visualMap/PiecewiseView\");\n\nrequire(\"./visualMap/visualMapAction\");\n\n/**\n * DataZoom component entry\n */\necharts.registerPreprocessor(preprocessor);","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapModel = require(\"./VisualMapModel\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar visualDefault = require(\"../../visual/visualDefault\");\n\nvar _number = require(\"../../util/number\");\n\nvar reformIntervals = _number.reformIntervals;\nvar PiecewiseModel = VisualMapModel.extend({\n  type: 'visualMap.piecewise',\n\n  /**\n   * Order Rule:\n   *\n   * option.categories / option.pieces / option.text / option.selected:\n   *     If !option.inverse,\n   *     Order when vertical: ['top', ..., 'bottom'].\n   *     Order when horizontal: ['left', ..., 'right'].\n   *     If option.inverse, the meaning of\n   *     the order should be reversed.\n   *\n   * this._pieceList:\n   *     The order is always [low, ..., high].\n   *\n   * Mapping from location to low-high:\n   *     If !option.inverse\n   *     When vertical, top is high.\n   *     When horizontal, right is high.\n   *     If option.inverse, reverse.\n   */\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    selected: null,\n    // Object. If not specified, means selected.\n    // When pieces and splitNumber: {'0': true, '5': true}\n    // When categories: {'cate1': false, 'cate3': true}\n    // When selected === false, means all unselected.\n    minOpen: false,\n    // Whether include values that smaller than `min`.\n    maxOpen: false,\n    // Whether include values that bigger than `max`.\n    align: 'auto',\n    // 'auto', 'left', 'right'\n    itemWidth: 20,\n    // When put the controller vertically, it is the length of\n    // horizontal side of each item. Otherwise, vertical side.\n    itemHeight: 14,\n    // When put the controller vertically, it is the length of\n    // vertical side of each item. Otherwise, horizontal side.\n    itemSymbol: 'roundRect',\n    pieceList: null,\n    // Each item is Object, with some of those attrs:\n    // {min, max, lt, gt, lte, gte, value,\n    // color, colorSaturation, colorAlpha, opacity,\n    // symbol, symbolSize}, which customize the range or visual\n    // coding of the certain piece. Besides, see \"Order Rule\".\n    categories: null,\n    // category names, like: ['some1', 'some2', 'some3'].\n    // Attr min/max are ignored when categories set. See \"Order Rule\"\n    splitNumber: 5,\n    // If set to 5, auto split five pieces equally.\n    // If set to 0 and component type not set, component type will be\n    // determined as \"continuous\". (It is less reasonable but for ec2\n    // compatibility, see echarts/component/visualMap/typeDefaulter)\n    selectedMode: 'multiple',\n    // Can be 'multiple' or 'single'.\n    itemGap: 10,\n    // The gap between two items, in px.\n    hoverLink: true,\n    // Enable hover highlight.\n    showLabel: null // By default, when text is used, label will hide (the logic\n    // is remained for compatibility reason)\n\n  },\n\n  /**\n   * @override\n   */\n  optionUpdated: function (newOption, isInit) {\n    PiecewiseModel.superApply(this, 'optionUpdated', arguments);\n    /**\n     * The order is always [low, ..., high].\n     * [{text: string, interval: Array.<number>}, ...]\n     * @private\n     * @type {Array.<Object>}\n     */\n\n    this._pieceList = [];\n    this.resetExtent();\n    /**\n     * 'pieces', 'categories', 'splitNumber'\n     * @type {string}\n     */\n\n    var mode = this._mode = this._determineMode();\n\n    resetMethods[this._mode].call(this);\n\n    this._resetSelected(newOption, isInit);\n\n    var categories = this.option.categories;\n    this.resetVisual(function (mappingOption, state) {\n      if (mode === 'categories') {\n        mappingOption.mappingMethod = 'category';\n        mappingOption.categories = zrUtil.clone(categories);\n      } else {\n        mappingOption.dataExtent = this.getExtent();\n        mappingOption.mappingMethod = 'piecewise';\n        mappingOption.pieceList = zrUtil.map(this._pieceList, function (piece) {\n          var piece = zrUtil.clone(piece);\n\n          if (state !== 'inRange') {\n            // FIXME\n            // outOfRange do not support special visual in pieces.\n            piece.visual = null;\n          }\n\n          return piece;\n        });\n      }\n    });\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  completeVisualOption: function () {\n    // Consider this case:\n    // visualMap: {\n    //      pieces: [{symbol: 'circle', lt: 0}, {symbol: 'rect', gte: 0}]\n    // }\n    // where no inRange/outOfRange set but only pieces. So we should make\n    // default inRange/outOfRange for this case, otherwise visuals that only\n    // appear in `pieces` will not be taken into account in visual encoding.\n    var option = this.option;\n    var visualTypesInPieces = {};\n    var visualTypes = VisualMapping.listVisualTypes();\n    var isCategory = this.isCategory();\n    zrUtil.each(option.pieces, function (piece) {\n      zrUtil.each(visualTypes, function (visualType) {\n        if (piece.hasOwnProperty(visualType)) {\n          visualTypesInPieces[visualType] = 1;\n        }\n      });\n    });\n    zrUtil.each(visualTypesInPieces, function (v, visualType) {\n      var exists = 0;\n      zrUtil.each(this.stateList, function (state) {\n        exists |= has(option, state, visualType) || has(option.target, state, visualType);\n      }, this);\n      !exists && zrUtil.each(this.stateList, function (state) {\n        (option[state] || (option[state] = {}))[visualType] = visualDefault.get(visualType, state === 'inRange' ? 'active' : 'inactive', isCategory);\n      });\n    }, this);\n\n    function has(obj, state, visualType) {\n      return obj && obj[state] && (zrUtil.isObject(obj[state]) ? obj[state].hasOwnProperty(visualType) : obj[state] === visualType // e.g., inRange: 'symbol'\n      );\n    }\n\n    VisualMapModel.prototype.completeVisualOption.apply(this, arguments);\n  },\n  _resetSelected: function (newOption, isInit) {\n    var thisOption = this.option;\n    var pieceList = this._pieceList; // Selected do not merge but all override.\n\n    var selected = (isInit ? thisOption : newOption).selected || {};\n    thisOption.selected = selected; // Consider 'not specified' means true.\n\n    zrUtil.each(pieceList, function (piece, index) {\n      var key = this.getSelectedMapKey(piece);\n\n      if (!selected.hasOwnProperty(key)) {\n        selected[key] = true;\n      }\n    }, this);\n\n    if (thisOption.selectedMode === 'single') {\n      // Ensure there is only one selected.\n      var hasSel = false;\n      zrUtil.each(pieceList, function (piece, index) {\n        var key = this.getSelectedMapKey(piece);\n\n        if (selected[key]) {\n          hasSel ? selected[key] = false : hasSel = true;\n        }\n      }, this);\n    } // thisOption.selectedMode === 'multiple', default: all selected.\n\n  },\n\n  /**\n   * @public\n   */\n  getSelectedMapKey: function (piece) {\n    return this._mode === 'categories' ? piece.value + '' : piece.index + '';\n  },\n\n  /**\n   * @public\n   */\n  getPieceList: function () {\n    return this._pieceList;\n  },\n\n  /**\n   * @private\n   * @return {string}\n   */\n  _determineMode: function () {\n    var option = this.option;\n    return option.pieces && option.pieces.length > 0 ? 'pieces' : this.option.categories ? 'categories' : 'splitNumber';\n  },\n\n  /**\n   * @public\n   * @override\n   */\n  setSelected: function (selected) {\n    this.option.selected = zrUtil.clone(selected);\n  },\n\n  /**\n   * @public\n   * @override\n   */\n  getValueState: function (value) {\n    var index = VisualMapping.findPieceIndex(value, this._pieceList);\n    return index != null ? this.option.selected[this.getSelectedMapKey(this._pieceList[index])] ? 'inRange' : 'outOfRange' : 'outOfRange';\n  },\n\n  /**\n   * @public\n   * @params {number} pieceIndex piece index in visualMapModel.getPieceList()\n   * @return {Array.<Object>} [{seriesId, dataIndices: <Array.<number>>}, ...]\n   */\n  findTargetDataIndices: function (pieceIndex) {\n    var result = [];\n    this.eachTargetSeries(function (seriesModel) {\n      var dataIndices = [];\n      var data = seriesModel.getData();\n      data.each(this.getDataDimension(data), function (value, dataIndex) {\n        // Should always base on model pieceList, because it is order sensitive.\n        var pIdx = VisualMapping.findPieceIndex(value, this._pieceList);\n        pIdx === pieceIndex && dataIndices.push(dataIndex);\n      }, true, this);\n      result.push({\n        seriesId: seriesModel.id,\n        dataIndex: dataIndices\n      });\n    }, this);\n    return result;\n  },\n\n  /**\n   * @private\n   * @param {Object} piece piece.value or piece.interval is required.\n   * @return {number} Can be Infinity or -Infinity\n   */\n  getRepresentValue: function (piece) {\n    var representValue;\n\n    if (this.isCategory()) {\n      representValue = piece.value;\n    } else {\n      if (piece.value != null) {\n        representValue = piece.value;\n      } else {\n        var pieceInterval = piece.interval || [];\n        representValue = pieceInterval[0] === -Infinity && pieceInterval[1] === Infinity ? 0 : (pieceInterval[0] + pieceInterval[1]) / 2;\n      }\n    }\n\n    return representValue;\n  },\n  getVisualMeta: function (getColorVisual) {\n    // Do not support category. (category axis is ordinal, numerical)\n    if (this.isCategory()) {\n      return;\n    }\n\n    var stops = [];\n    var outerColors = [];\n    var visualMapModel = this;\n\n    function setStop(interval, valueState) {\n      var representValue = visualMapModel.getRepresentValue({\n        interval: interval\n      });\n\n      if (!valueState) {\n        valueState = visualMapModel.getValueState(representValue);\n      }\n\n      var color = getColorVisual(representValue, valueState);\n\n      if (interval[0] === -Infinity) {\n        outerColors[0] = color;\n      } else if (interval[1] === Infinity) {\n        outerColors[1] = color;\n      } else {\n        stops.push({\n          value: interval[0],\n          color: color\n        }, {\n          value: interval[1],\n          color: color\n        });\n      }\n    } // Suplement\n\n\n    var pieceList = this._pieceList.slice();\n\n    if (!pieceList.length) {\n      pieceList.push({\n        interval: [-Infinity, Infinity]\n      });\n    } else {\n      var edge = pieceList[0].interval[0];\n      edge !== -Infinity && pieceList.unshift({\n        interval: [-Infinity, edge]\n      });\n      edge = pieceList[pieceList.length - 1].interval[1];\n      edge !== Infinity && pieceList.push({\n        interval: [edge, Infinity]\n      });\n    }\n\n    var curr = -Infinity;\n    zrUtil.each(pieceList, function (piece) {\n      var interval = piece.interval;\n\n      if (interval) {\n        // Fulfill gap.\n        interval[0] > curr && setStop([curr, interval[0]], 'outOfRange');\n        setStop(interval.slice());\n        curr = interval[1];\n      }\n    }, this);\n    return {\n      stops: stops,\n      outerColors: outerColors\n    };\n  }\n});\n/**\n * Key is this._mode\n * @type {Object}\n * @this {module:echarts/component/viusalMap/PiecewiseMode}\n */\n\nvar resetMethods = {\n  splitNumber: function () {\n    var thisOption = this.option;\n    var pieceList = this._pieceList;\n    var precision = Math.min(thisOption.precision, 20);\n    var dataExtent = this.getExtent();\n    var splitNumber = thisOption.splitNumber;\n    splitNumber = Math.max(parseInt(splitNumber, 10), 1);\n    thisOption.splitNumber = splitNumber;\n    var splitStep = (dataExtent[1] - dataExtent[0]) / splitNumber; // Precision auto-adaption\n\n    while (+splitStep.toFixed(precision) !== splitStep && precision < 5) {\n      precision++;\n    }\n\n    thisOption.precision = precision;\n    splitStep = +splitStep.toFixed(precision);\n    var index = 0;\n\n    if (thisOption.minOpen) {\n      pieceList.push({\n        index: index++,\n        interval: [-Infinity, dataExtent[0]],\n        close: [0, 0]\n      });\n    }\n\n    for (var curr = dataExtent[0], len = index + splitNumber; index < len; curr += splitStep) {\n      var max = index === splitNumber - 1 ? dataExtent[1] : curr + splitStep;\n      pieceList.push({\n        index: index++,\n        interval: [curr, max],\n        close: [1, 1]\n      });\n    }\n\n    if (thisOption.maxOpen) {\n      pieceList.push({\n        index: index++,\n        interval: [dataExtent[1], Infinity],\n        close: [0, 0]\n      });\n    }\n\n    reformIntervals(pieceList);\n    zrUtil.each(pieceList, function (piece) {\n      piece.text = this.formatValueText(piece.interval);\n    }, this);\n  },\n  categories: function () {\n    var thisOption = this.option;\n    zrUtil.each(thisOption.categories, function (cate) {\n      // FIXME category模式也使用pieceList，但在visualMapping中不是使用pieceList。\n      // 是否改一致。\n      this._pieceList.push({\n        text: this.formatValueText(cate, true),\n        value: cate\n      });\n    }, this); // See \"Order Rule\".\n\n    normalizeReverse(thisOption, this._pieceList);\n  },\n  pieces: function () {\n    var thisOption = this.option;\n    var pieceList = this._pieceList;\n    zrUtil.each(thisOption.pieces, function (pieceListItem, index) {\n      if (!zrUtil.isObject(pieceListItem)) {\n        pieceListItem = {\n          value: pieceListItem\n        };\n      }\n\n      var item = {\n        text: '',\n        index: index\n      };\n\n      if (pieceListItem.label != null) {\n        item.text = pieceListItem.label;\n      }\n\n      if (pieceListItem.hasOwnProperty('value')) {\n        var value = item.value = pieceListItem.value;\n        item.interval = [value, value];\n        item.close = [1, 1];\n      } else {\n        // `min` `max` is legacy option.\n        // `lt` `gt` `lte` `gte` is recommanded.\n        var interval = item.interval = [];\n        var close = item.close = [0, 0];\n        var closeList = [1, 0, 1];\n        var infinityList = [-Infinity, Infinity];\n        var useMinMax = [];\n\n        for (var lg = 0; lg < 2; lg++) {\n          var names = [['gte', 'gt', 'min'], ['lte', 'lt', 'max']][lg];\n\n          for (var i = 0; i < 3 && interval[lg] == null; i++) {\n            interval[lg] = pieceListItem[names[i]];\n            close[lg] = closeList[i];\n            useMinMax[lg] = i === 2;\n          }\n\n          interval[lg] == null && (interval[lg] = infinityList[lg]);\n        }\n\n        useMinMax[0] && interval[1] === Infinity && (close[0] = 0);\n        useMinMax[1] && interval[0] === -Infinity && (close[1] = 0);\n\n        if (interval[0] === interval[1] && close[0] && close[1]) {\n          // Consider: [{min: 5, max: 5, visual: {...}}, {min: 0, max: 5}],\n          // we use value to lift the priority when min === max\n          item.value = interval[0];\n        }\n      }\n\n      item.visual = VisualMapping.retrieveVisuals(pieceListItem);\n      pieceList.push(item);\n    }, this); // See \"Order Rule\".\n\n    normalizeReverse(thisOption, pieceList); // Only pieces\n\n    reformIntervals(pieceList);\n    zrUtil.each(pieceList, function (piece) {\n      var close = piece.close;\n      var edgeSymbols = [['<', '≤'][close[1]], ['>', '≥'][close[0]]];\n      piece.text = piece.text || this.formatValueText(piece.value != null ? piece.value : piece.interval, false, edgeSymbols);\n    }, this);\n  }\n};\n\nfunction normalizeReverse(thisOption, pieceList) {\n  var inverse = thisOption.inverse;\n\n  if (thisOption.orient === 'vertical' ? !inverse : inverse) {\n    pieceList.reverse();\n  }\n}\n\nvar _default = PiecewiseModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapView = require(\"./VisualMapView\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar layout = require(\"../../util/layout\");\n\nvar helper = require(\"./helper\");\n\nvar PiecewiseVisualMapView = VisualMapView.extend({\n  type: 'visualMap.piecewise',\n\n  /**\n   * @protected\n   * @override\n   */\n  doRender: function () {\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n    var visualMapModel = this.visualMapModel;\n    var textGap = visualMapModel.get('textGap');\n    var textStyleModel = visualMapModel.textStyleModel;\n    var textFont = textStyleModel.getFont();\n    var textFill = textStyleModel.getTextColor();\n\n    var itemAlign = this._getItemAlign();\n\n    var itemSize = visualMapModel.itemSize;\n\n    var viewData = this._getViewData();\n\n    var endsText = viewData.endsText;\n    var showLabel = zrUtil.retrieve(visualMapModel.get('showLabel', true), !endsText);\n    endsText && this._renderEndsText(thisGroup, endsText[0], itemSize, showLabel, itemAlign);\n    zrUtil.each(viewData.viewPieceList, renderItem, this);\n    endsText && this._renderEndsText(thisGroup, endsText[1], itemSize, showLabel, itemAlign);\n    layout.box(visualMapModel.get('orient'), thisGroup, visualMapModel.get('itemGap'));\n    this.renderBackground(thisGroup);\n    this.positionGroup(thisGroup);\n\n    function renderItem(item) {\n      var piece = item.piece;\n      var itemGroup = new graphic.Group();\n      itemGroup.onclick = zrUtil.bind(this._onItemClick, this, piece);\n\n      this._enableHoverLink(itemGroup, item.indexInModelPieceList);\n\n      var representValue = visualMapModel.getRepresentValue(piece);\n\n      this._createItemSymbol(itemGroup, representValue, [0, 0, itemSize[0], itemSize[1]]);\n\n      if (showLabel) {\n        var visualState = this.visualMapModel.getValueState(representValue);\n        itemGroup.add(new graphic.Text({\n          style: {\n            x: itemAlign === 'right' ? -textGap : itemSize[0] + textGap,\n            y: itemSize[1] / 2,\n            text: piece.text,\n            textVerticalAlign: 'middle',\n            textAlign: itemAlign,\n            textFont: textFont,\n            textFill: textFill,\n            opacity: visualState === 'outOfRange' ? 0.5 : 1\n          }\n        }));\n      }\n\n      thisGroup.add(itemGroup);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLink: function (itemGroup, pieceIndex) {\n    itemGroup.on('mouseover', zrUtil.bind(onHoverLink, this, 'highlight')).on('mouseout', zrUtil.bind(onHoverLink, this, 'downplay'));\n\n    function onHoverLink(method) {\n      var visualMapModel = this.visualMapModel;\n      visualMapModel.option.hoverLink && this.api.dispatchAction({\n        type: method,\n        batch: helper.convertDataIndex(visualMapModel.findTargetDataIndices(pieceIndex))\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _getItemAlign: function () {\n    var visualMapModel = this.visualMapModel;\n    var modelOption = visualMapModel.option;\n\n    if (modelOption.orient === 'vertical') {\n      return helper.getItemAlign(visualMapModel, this.api, visualMapModel.itemSize);\n    } else {\n      // horizontal, most case left unless specifying right.\n      var align = modelOption.align;\n\n      if (!align || align === 'auto') {\n        align = 'left';\n      }\n\n      return align;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderEndsText: function (group, text, itemSize, showLabel, itemAlign) {\n    if (!text) {\n      return;\n    }\n\n    var itemGroup = new graphic.Group();\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    itemGroup.add(new graphic.Text({\n      style: {\n        x: showLabel ? itemAlign === 'right' ? itemSize[0] : 0 : itemSize[0] / 2,\n        y: itemSize[1] / 2,\n        textVerticalAlign: 'middle',\n        textAlign: showLabel ? itemAlign : 'center',\n        text: text,\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    }));\n    group.add(itemGroup);\n  },\n\n  /**\n   * @private\n   * @return {Object} {peiceList, endsText} The order is the same as screen pixel order.\n   */\n  _getViewData: function () {\n    var visualMapModel = this.visualMapModel;\n    var viewPieceList = zrUtil.map(visualMapModel.getPieceList(), function (piece, index) {\n      return {\n        piece: piece,\n        indexInModelPieceList: index\n      };\n    });\n    var endsText = visualMapModel.get('text'); // Consider orient and inverse.\n\n    var orient = visualMapModel.get('orient');\n    var inverse = visualMapModel.get('inverse'); // Order of model pieceList is always [low, ..., high]\n\n    if (orient === 'horizontal' ? inverse : !inverse) {\n      viewPieceList.reverse();\n    } // Origin order of endsText is [high, low]\n    else if (endsText) {\n        endsText = endsText.slice().reverse();\n      }\n\n    return {\n      viewPieceList: viewPieceList,\n      endsText: endsText\n    };\n  },\n\n  /**\n   * @private\n   */\n  _createItemSymbol: function (group, representValue, shapeParam) {\n    group.add(createSymbol(this.getControllerVisual(representValue, 'symbol'), shapeParam[0], shapeParam[1], shapeParam[2], shapeParam[3], this.getControllerVisual(representValue, 'color')));\n  },\n\n  /**\n   * @private\n   */\n  _onItemClick: function (piece) {\n    var visualMapModel = this.visualMapModel;\n    var option = visualMapModel.option;\n    var selected = zrUtil.clone(option.selected);\n    var newKey = visualMapModel.getSelectedMapKey(piece);\n\n    if (option.selectedMode === 'single') {\n      selected[newKey] = true;\n      zrUtil.each(selected, function (o, key) {\n        selected[key] = key === newKey;\n      });\n    } else {\n      selected[newKey] = !selected[newKey];\n    }\n\n    this.api.dispatchAction({\n      type: 'selectDataRange',\n      from: this.uid,\n      visualMapId: this.visualMapModel.id,\n      selected: selected\n    });\n  }\n});\nvar _default = PiecewiseVisualMapView;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./marker/MarkPointModel\");\n\nrequire(\"./marker/MarkPointView\");\n\n// HINT Markpoint can't be used too much\necharts.registerPreprocessor(function (opt) {\n  // Make sure markPoint component is enabled\n  opt.markPoint = opt.markPoint || {};\n});","var MarkerModel = require(\"./MarkerModel\");\n\nvar _default = MarkerModel.extend({\n  type: 'markPoint',\n  defaultOption: {\n    zlevel: 0,\n    z: 5,\n    symbol: 'pin',\n    symbolSize: 50,\n    //symbolRotate: 0,\n    //symbolOffset: [0, 0]\n    tooltip: {\n      trigger: 'item'\n    },\n    label: {\n      normal: {\n        show: true,\n        position: 'inside'\n      },\n      emphasis: {\n        show: true\n      }\n    },\n    itemStyle: {\n      normal: {\n        borderWidth: 2\n      }\n    }\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../../chart/helper/SymbolDraw\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar List = require(\"../../data/List\");\n\nvar markerHelper = require(\"./markerHelper\");\n\nvar MarkerView = require(\"./MarkerView\");\n\nfunction updateMarkerLayout(mpData, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  mpData.each(function (idx) {\n    var itemModel = mpData.getItemModel(idx);\n    var point;\n    var xPx = numberUtil.parsePercent(itemModel.get('x'), api.getWidth());\n    var yPx = numberUtil.parsePercent(itemModel.get('y'), api.getHeight());\n\n    if (!isNaN(xPx) && !isNaN(yPx)) {\n      point = [xPx, yPx];\n    } // Chart like bar may have there own marker positioning logic\n    else if (seriesModel.getMarkerPosition) {\n        // Use the getMarkerPoisition\n        point = seriesModel.getMarkerPosition(mpData.getValues(mpData.dimensions, idx));\n      } else if (coordSys) {\n        var x = mpData.get(coordSys.dimensions[0], idx);\n        var y = mpData.get(coordSys.dimensions[1], idx);\n        point = coordSys.dataToPoint([x, y]);\n      } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n\n    mpData.setItemLayout(idx, point);\n  });\n}\n\nvar _default = MarkerView.extend({\n  type: 'markPoint',\n  updateLayout: function (markPointModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var mpModel = seriesModel.markPointModel;\n\n      if (mpModel) {\n        updateMarkerLayout(mpModel.getData(), seriesModel, api);\n        this.markerGroupMap.get(seriesModel.id).updateLayout(mpModel);\n      }\n    }, this);\n  },\n  renderSeries: function (seriesModel, mpModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesId = seriesModel.id;\n    var seriesData = seriesModel.getData();\n    var symbolDrawMap = this.markerGroupMap;\n    var symbolDraw = symbolDrawMap.get(seriesId) || symbolDrawMap.set(seriesId, new SymbolDraw());\n    var mpData = createList(coordSys, seriesModel, mpModel); // FIXME\n\n    mpModel.setData(mpData);\n    updateMarkerLayout(mpModel.getData(), seriesModel, api);\n    mpData.each(function (idx) {\n      var itemModel = mpData.getItemModel(idx);\n      var symbolSize = itemModel.getShallow('symbolSize');\n\n      if (typeof symbolSize === 'function') {\n        // FIXME 这里不兼容 ECharts 2.x，2.x 貌似参数是整个数据？\n        symbolSize = symbolSize(mpModel.getRawValue(idx), mpModel.getDataParams(idx));\n      }\n\n      mpData.setItemVisual(idx, {\n        symbolSize: symbolSize,\n        color: itemModel.get('itemStyle.normal.color') || seriesData.getVisual('color'),\n        symbol: itemModel.getShallow('symbol')\n      });\n    }); // TODO Text are wrong\n\n    symbolDraw.updateData(mpData);\n    this.group.add(symbolDraw.group); // Set host model for tooltip\n    // FIXME\n\n    mpData.eachItemGraphicEl(function (el) {\n      el.traverse(function (child) {\n        child.dataModel = mpModel;\n      });\n    });\n    symbolDraw.__keep = true;\n    symbolDraw.group.silent = mpModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} [coordSys]\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\n\nfunction createList(coordSys, seriesModel, mpModel) {\n  var coordDimsInfos;\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var info = seriesModel.getData().getDimensionInfo(seriesModel.coordDimToDataDim(coordDim)[0]) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      info.name = coordDim;\n      return info;\n    });\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n  }\n\n  var mpData = new List(coordDimsInfos, mpModel);\n  var dataOpt = zrUtil.map(mpModel.get('data'), zrUtil.curry(markerHelper.dataTransform, seriesModel));\n\n  if (coordSys) {\n    dataOpt = zrUtil.filter(dataOpt, zrUtil.curry(markerHelper.dataFilter, coordSys));\n  }\n\n  mpData.initData(dataOpt, null, coordSys ? markerHelper.dimValueGetter : function (item) {\n    return item.value;\n  });\n  return mpData;\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./marker/MarkLineModel\");\n\nrequire(\"./marker/MarkLineView\");\n\necharts.registerPreprocessor(function (opt) {\n  // Make sure markLine component is enabled\n  opt.markLine = opt.markLine || {};\n});","var MarkerModel = require(\"./MarkerModel\");\n\nvar _default = MarkerModel.extend({\n  type: 'markLine',\n  defaultOption: {\n    zlevel: 0,\n    z: 5,\n    symbol: ['circle', 'arrow'],\n    symbolSize: [8, 16],\n    //symbolRotate: 0,\n    precision: 2,\n    tooltip: {\n      trigger: 'item'\n    },\n    label: {\n      normal: {\n        show: true,\n        position: 'end'\n      },\n      emphasis: {\n        show: true\n      }\n    },\n    lineStyle: {\n      normal: {\n        type: 'dashed'\n      },\n      emphasis: {\n        width: 3\n      }\n    },\n    animationEasing: 'linear'\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar markerHelper = require(\"./markerHelper\");\n\nvar LineDraw = require(\"../../chart/helper/LineDraw\");\n\nvar MarkerView = require(\"./MarkerView\");\n\nvar markLineTransform = function (seriesModel, coordSys, mlModel, item) {\n  var data = seriesModel.getData(); // Special type markLine like 'min', 'max', 'average'\n\n  var mlType = item.type;\n\n  if (!zrUtil.isArray(item) && (mlType === 'min' || mlType === 'max' || mlType === 'average' // In case\n  // data: [{\n  //   yAxis: 10\n  // }]\n  || item.xAxis != null || item.yAxis != null)) {\n    var valueAxis;\n    var valueDataDim;\n    var value;\n\n    if (item.yAxis != null || item.xAxis != null) {\n      valueDataDim = item.yAxis != null ? 'y' : 'x';\n      valueAxis = coordSys.getAxis(valueDataDim);\n      value = zrUtil.retrieve(item.yAxis, item.xAxis);\n    } else {\n      var axisInfo = markerHelper.getAxisInfo(item, data, coordSys, seriesModel);\n      valueDataDim = axisInfo.valueDataDim;\n      valueAxis = axisInfo.valueAxis;\n      value = markerHelper.numCalculate(data, valueDataDim, mlType);\n    }\n\n    var valueIndex = valueDataDim === 'x' ? 0 : 1;\n    var baseIndex = 1 - valueIndex;\n    var mlFrom = zrUtil.clone(item);\n    var mlTo = {};\n    mlFrom.type = null;\n    mlFrom.coord = [];\n    mlTo.coord = [];\n    mlFrom.coord[baseIndex] = -Infinity;\n    mlTo.coord[baseIndex] = Infinity;\n    var precision = mlModel.get('precision');\n\n    if (precision >= 0 && typeof value === 'number') {\n      value = +value.toFixed(Math.min(precision, 20));\n    }\n\n    mlFrom.coord[valueIndex] = mlTo.coord[valueIndex] = value;\n    item = [mlFrom, mlTo, {\n      // Extra option for tooltip and label\n      type: mlType,\n      valueIndex: item.valueIndex,\n      // Force to use the value of calculated value.\n      value: value\n    }];\n  }\n\n  item = [markerHelper.dataTransform(seriesModel, item[0]), markerHelper.dataTransform(seriesModel, item[1]), zrUtil.extend({}, item[2])]; // Avoid line data type is extended by from(to) data type\n\n  item[2].type = item[2].type || ''; // Merge from option and to option into line option\n\n  zrUtil.merge(item[2], item[0]);\n  zrUtil.merge(item[2], item[1]);\n  return item;\n};\n\nfunction isInifinity(val) {\n  return !isNaN(val) && !isFinite(val);\n} // If a markLine has one dim\n\n\nfunction ifMarkLineHasOnlyDim(dimIndex, fromCoord, toCoord, coordSys) {\n  var otherDimIndex = 1 - dimIndex;\n  var dimName = coordSys.dimensions[dimIndex];\n  return isInifinity(fromCoord[otherDimIndex]) && isInifinity(toCoord[otherDimIndex]) && fromCoord[dimIndex] === toCoord[dimIndex] && coordSys.getAxis(dimName).containData(fromCoord[dimIndex]);\n}\n\nfunction markLineFilter(coordSys, item) {\n  if (coordSys.type === 'cartesian2d') {\n    var fromCoord = item[0].coord;\n    var toCoord = item[1].coord; // In case\n    // {\n    //  markLine: {\n    //    data: [{ yAxis: 2 }]\n    //  }\n    // }\n\n    if (fromCoord && toCoord && (ifMarkLineHasOnlyDim(1, fromCoord, toCoord, coordSys) || ifMarkLineHasOnlyDim(0, fromCoord, toCoord, coordSys))) {\n      return true;\n    }\n  }\n\n  return markerHelper.dataFilter(coordSys, item[0]) && markerHelper.dataFilter(coordSys, item[1]);\n}\n\nfunction updateSingleMarkerEndLayout(data, idx, isFrom, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  var itemModel = data.getItemModel(idx);\n  var point;\n  var xPx = numberUtil.parsePercent(itemModel.get('x'), api.getWidth());\n  var yPx = numberUtil.parsePercent(itemModel.get('y'), api.getHeight());\n\n  if (!isNaN(xPx) && !isNaN(yPx)) {\n    point = [xPx, yPx];\n  } else {\n    // Chart like bar may have there own marker positioning logic\n    if (seriesModel.getMarkerPosition) {\n      // Use the getMarkerPoisition\n      point = seriesModel.getMarkerPosition(data.getValues(data.dimensions, idx));\n    } else {\n      var dims = coordSys.dimensions;\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n      point = coordSys.dataToPoint([x, y]);\n    } // Expand line to the edge of grid if value on one axis is Inifnity\n    // In case\n    //  markLine: {\n    //    data: [{\n    //      yAxis: 2\n    //      // or\n    //      type: 'average'\n    //    }]\n    //  }\n\n\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      var dims = coordSys.dimensions;\n\n      if (isInifinity(data.get(dims[0], idx))) {\n        point[0] = xAxis.toGlobalCoord(xAxis.getExtent()[isFrom ? 0 : 1]);\n      } else if (isInifinity(data.get(dims[1], idx))) {\n        point[1] = yAxis.toGlobalCoord(yAxis.getExtent()[isFrom ? 0 : 1]);\n      }\n    } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n  }\n\n  data.setItemLayout(idx, point);\n}\n\nvar _default = MarkerView.extend({\n  type: 'markLine',\n  updateLayout: function (markLineModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var mlModel = seriesModel.markLineModel;\n\n      if (mlModel) {\n        var mlData = mlModel.getData();\n        var fromData = mlModel.__from;\n        var toData = mlModel.__to; // Update visual and layout of from symbol and to symbol\n\n        fromData.each(function (idx) {\n          updateSingleMarkerEndLayout(fromData, idx, true, seriesModel, api);\n          updateSingleMarkerEndLayout(toData, idx, false, seriesModel, api);\n        }); // Update layout of line\n\n        mlData.each(function (idx) {\n          mlData.setItemLayout(idx, [fromData.getItemLayout(idx), toData.getItemLayout(idx)]);\n        });\n        this.markerGroupMap.get(seriesModel.id).updateLayout();\n      }\n    }, this);\n  },\n  renderSeries: function (seriesModel, mlModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesId = seriesModel.id;\n    var seriesData = seriesModel.getData();\n    var lineDrawMap = this.markerGroupMap;\n    var lineDraw = lineDrawMap.get(seriesId) || lineDrawMap.set(seriesId, new LineDraw());\n    this.group.add(lineDraw.group);\n    var mlData = createList(coordSys, seriesModel, mlModel);\n    var fromData = mlData.from;\n    var toData = mlData.to;\n    var lineData = mlData.line;\n    mlModel.__from = fromData;\n    mlModel.__to = toData; // Line data for tooltip and formatter\n\n    mlModel.setData(lineData);\n    var symbolType = mlModel.get('symbol');\n    var symbolSize = mlModel.get('symbolSize');\n\n    if (!zrUtil.isArray(symbolType)) {\n      symbolType = [symbolType, symbolType];\n    }\n\n    if (typeof symbolSize === 'number') {\n      symbolSize = [symbolSize, symbolSize];\n    } // Update visual and layout of from symbol and to symbol\n\n\n    mlData.from.each(function (idx) {\n      updateDataVisualAndLayout(fromData, idx, true);\n      updateDataVisualAndLayout(toData, idx, false);\n    }); // Update visual and layout of line\n\n    lineData.each(function (idx) {\n      var lineColor = lineData.getItemModel(idx).get('lineStyle.normal.color');\n      lineData.setItemVisual(idx, {\n        color: lineColor || fromData.getItemVisual(idx, 'color')\n      });\n      lineData.setItemLayout(idx, [fromData.getItemLayout(idx), toData.getItemLayout(idx)]);\n      lineData.setItemVisual(idx, {\n        'fromSymbolSize': fromData.getItemVisual(idx, 'symbolSize'),\n        'fromSymbol': fromData.getItemVisual(idx, 'symbol'),\n        'toSymbolSize': toData.getItemVisual(idx, 'symbolSize'),\n        'toSymbol': toData.getItemVisual(idx, 'symbol')\n      });\n    });\n    lineDraw.updateData(lineData); // Set host model for tooltip\n    // FIXME\n\n    mlData.line.eachItemGraphicEl(function (el, idx) {\n      el.traverse(function (child) {\n        child.dataModel = mlModel;\n      });\n    });\n\n    function updateDataVisualAndLayout(data, idx, isFrom) {\n      var itemModel = data.getItemModel(idx);\n      updateSingleMarkerEndLayout(data, idx, isFrom, seriesModel, api);\n      data.setItemVisual(idx, {\n        symbolSize: itemModel.get('symbolSize') || symbolSize[isFrom ? 0 : 1],\n        symbol: itemModel.get('symbol', true) || symbolType[isFrom ? 0 : 1],\n        color: itemModel.get('itemStyle.normal.color') || seriesData.getVisual('color')\n      });\n    }\n\n    lineDraw.__keep = true;\n    lineDraw.group.silent = mlModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} coordSys\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\n\nfunction createList(coordSys, seriesModel, mlModel) {\n  var coordDimsInfos;\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var info = seriesModel.getData().getDimensionInfo(seriesModel.coordDimToDataDim(coordDim)[0]) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      info.name = coordDim;\n      return info;\n    });\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n  }\n\n  var fromData = new List(coordDimsInfos, mlModel);\n  var toData = new List(coordDimsInfos, mlModel); // No dimensions\n\n  var lineData = new List([], mlModel);\n  var optData = zrUtil.map(mlModel.get('data'), zrUtil.curry(markLineTransform, seriesModel, coordSys, mlModel));\n\n  if (coordSys) {\n    optData = zrUtil.filter(optData, zrUtil.curry(markLineFilter, coordSys));\n  }\n\n  var dimValueGetter = coordSys ? markerHelper.dimValueGetter : function (item) {\n    return item.value;\n  };\n  fromData.initData(zrUtil.map(optData, function (item) {\n    return item[0];\n  }), null, dimValueGetter);\n  toData.initData(zrUtil.map(optData, function (item) {\n    return item[1];\n  }), null, dimValueGetter);\n  lineData.initData(zrUtil.map(optData, function (item) {\n    return item[2];\n  }));\n  lineData.hasItemOption = true;\n  return {\n    from: fromData,\n    to: toData,\n    line: lineData\n  };\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./marker/MarkAreaModel\");\n\nrequire(\"./marker/MarkAreaView\");\n\necharts.registerPreprocessor(function (opt) {\n  // Make sure markArea component is enabled\n  opt.markArea = opt.markArea || {};\n});","var MarkerModel = require(\"./MarkerModel\");\n\nvar _default = MarkerModel.extend({\n  type: 'markArea',\n  defaultOption: {\n    zlevel: 0,\n    // PENDING\n    z: 1,\n    tooltip: {\n      trigger: 'item'\n    },\n    // markArea should fixed on the coordinate system\n    animation: false,\n    label: {\n      normal: {\n        show: true,\n        position: 'top'\n      },\n      emphasis: {\n        show: true,\n        position: 'top'\n      }\n    },\n    itemStyle: {\n      normal: {\n        // color and borderColor default to use color from series\n        // color: 'auto'\n        // borderColor: 'auto'\n        borderWidth: 0\n      }\n    }\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorUtil = require(\"zrender/lib/tool/color\");\n\nvar List = require(\"../../data/List\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar markerHelper = require(\"./markerHelper\");\n\nvar MarkerView = require(\"./MarkerView\");\n\n// TODO Better on polar\nvar markAreaTransform = function (seriesModel, coordSys, maModel, item) {\n  var lt = markerHelper.dataTransform(seriesModel, item[0]);\n  var rb = markerHelper.dataTransform(seriesModel, item[1]);\n  var retrieve = zrUtil.retrieve; // FIXME make sure lt is less than rb\n\n  var ltCoord = lt.coord;\n  var rbCoord = rb.coord;\n  ltCoord[0] = retrieve(ltCoord[0], -Infinity);\n  ltCoord[1] = retrieve(ltCoord[1], -Infinity);\n  rbCoord[0] = retrieve(rbCoord[0], Infinity);\n  rbCoord[1] = retrieve(rbCoord[1], Infinity); // Merge option into one\n\n  var result = zrUtil.mergeAll([{}, lt, rb]);\n  result.coord = [lt.coord, rb.coord];\n  result.x0 = lt.x;\n  result.y0 = lt.y;\n  result.x1 = rb.x;\n  result.y1 = rb.y;\n  return result;\n};\n\nfunction isInifinity(val) {\n  return !isNaN(val) && !isFinite(val);\n} // If a markArea has one dim\n\n\nfunction ifMarkLineHasOnlyDim(dimIndex, fromCoord, toCoord, coordSys) {\n  var otherDimIndex = 1 - dimIndex;\n  return isInifinity(fromCoord[otherDimIndex]) && isInifinity(toCoord[otherDimIndex]);\n}\n\nfunction markAreaFilter(coordSys, item) {\n  var fromCoord = item.coord[0];\n  var toCoord = item.coord[1];\n\n  if (coordSys.type === 'cartesian2d') {\n    // In case\n    // {\n    //  markArea: {\n    //    data: [{ yAxis: 2 }]\n    //  }\n    // }\n    if (fromCoord && toCoord && (ifMarkLineHasOnlyDim(1, fromCoord, toCoord, coordSys) || ifMarkLineHasOnlyDim(0, fromCoord, toCoord, coordSys))) {\n      return true;\n    }\n  }\n\n  return markerHelper.dataFilter(coordSys, {\n    coord: fromCoord,\n    x: item.x0,\n    y: item.y0\n  }) || markerHelper.dataFilter(coordSys, {\n    coord: toCoord,\n    x: item.x1,\n    y: item.y1\n  });\n} // dims can be ['x0', 'y0'], ['x1', 'y1'], ['x0', 'y1'], ['x1', 'y0']\n\n\nfunction getSingleMarkerEndPoint(data, idx, dims, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  var itemModel = data.getItemModel(idx);\n  var point;\n  var xPx = numberUtil.parsePercent(itemModel.get(dims[0]), api.getWidth());\n  var yPx = numberUtil.parsePercent(itemModel.get(dims[1]), api.getHeight());\n\n  if (!isNaN(xPx) && !isNaN(yPx)) {\n    point = [xPx, yPx];\n  } else {\n    // Chart like bar may have there own marker positioning logic\n    if (seriesModel.getMarkerPosition) {\n      // Use the getMarkerPoisition\n      point = seriesModel.getMarkerPosition(data.getValues(dims, idx));\n    } else {\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n      point = coordSys.dataToPoint([x, y], true);\n    }\n\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n\n      if (isInifinity(x)) {\n        point[0] = xAxis.toGlobalCoord(xAxis.getExtent()[dims[0] === 'x0' ? 0 : 1]);\n      } else if (isInifinity(y)) {\n        point[1] = yAxis.toGlobalCoord(yAxis.getExtent()[dims[1] === 'y0' ? 0 : 1]);\n      }\n    } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n  }\n\n  return point;\n}\n\nvar dimPermutations = [['x0', 'y0'], ['x1', 'y0'], ['x1', 'y1'], ['x0', 'y1']];\nMarkerView.extend({\n  type: 'markArea',\n  updateLayout: function (markAreaModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var maModel = seriesModel.markAreaModel;\n\n      if (maModel) {\n        var areaData = maModel.getData();\n        areaData.each(function (idx) {\n          var points = zrUtil.map(dimPermutations, function (dim) {\n            return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n          }); // Layout\n\n          areaData.setItemLayout(idx, points);\n          var el = areaData.getItemGraphicEl(idx);\n          el.setShape('points', points);\n        });\n      }\n    }, this);\n  },\n  renderSeries: function (seriesModel, maModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesName = seriesModel.name;\n    var seriesData = seriesModel.getData();\n    var areaGroupMap = this.markerGroupMap;\n    var polygonGroup = areaGroupMap.get(seriesName) || areaGroupMap.set(seriesName, {\n      group: new graphic.Group()\n    });\n    this.group.add(polygonGroup.group);\n    polygonGroup.__keep = true;\n    var areaData = createList(coordSys, seriesModel, maModel); // Line data for tooltip and formatter\n\n    maModel.setData(areaData); // Update visual and layout of line\n\n    areaData.each(function (idx) {\n      // Layout\n      areaData.setItemLayout(idx, zrUtil.map(dimPermutations, function (dim) {\n        return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n      })); // Visual\n\n      areaData.setItemVisual(idx, {\n        color: seriesData.getVisual('color')\n      });\n    });\n    areaData.diff(polygonGroup.__data).add(function (idx) {\n      var polygon = new graphic.Polygon({\n        shape: {\n          points: areaData.getItemLayout(idx)\n        }\n      });\n      areaData.setItemGraphicEl(idx, polygon);\n      polygonGroup.group.add(polygon);\n    }).update(function (newIdx, oldIdx) {\n      var polygon = polygonGroup.__data.getItemGraphicEl(oldIdx);\n\n      graphic.updateProps(polygon, {\n        shape: {\n          points: areaData.getItemLayout(newIdx)\n        }\n      }, maModel, newIdx);\n      polygonGroup.group.add(polygon);\n      areaData.setItemGraphicEl(newIdx, polygon);\n    }).remove(function (idx) {\n      var polygon = polygonGroup.__data.getItemGraphicEl(idx);\n\n      polygonGroup.group.remove(polygon);\n    }).execute();\n    areaData.eachItemGraphicEl(function (polygon, idx) {\n      var itemModel = areaData.getItemModel(idx);\n      var labelModel = itemModel.getModel('label.normal');\n      var labelHoverModel = itemModel.getModel('label.emphasis');\n      var color = areaData.getItemVisual(idx, 'color');\n      polygon.useStyle(zrUtil.defaults(itemModel.getModel('itemStyle.normal').getItemStyle(), {\n        fill: colorUtil.modifyAlpha(color, 0.4),\n        stroke: color\n      }));\n      polygon.hoverStyle = itemModel.getModel('itemStyle.emphasis').getItemStyle();\n      graphic.setLabelStyle(polygon.style, polygon.hoverStyle, labelModel, labelHoverModel, {\n        labelFetcher: maModel,\n        labelDataIndex: idx,\n        defaultText: areaData.getName(idx) || '',\n        isRectText: true,\n        autoColor: color\n      });\n      graphic.setHoverStyle(polygon, {});\n      polygon.dataModel = maModel;\n    });\n    polygonGroup.__data = areaData;\n    polygonGroup.group.silent = maModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} coordSys\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\nfunction createList(coordSys, seriesModel, maModel) {\n  var coordDimsInfos;\n  var areaData;\n  var dims = ['x0', 'y0', 'x1', 'y1'];\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var info = seriesModel.getData().getDimensionInfo(seriesModel.coordDimToDataDim(coordDim)[0]) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      info.name = coordDim;\n      return info;\n    });\n    areaData = new List(zrUtil.map(dims, function (dim, idx) {\n      return {\n        name: dim,\n        type: coordDimsInfos[idx % 2].type\n      };\n    }), maModel);\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n    areaData = new List(coordDimsInfos, maModel);\n  }\n\n  var optData = zrUtil.map(maModel.get('data'), zrUtil.curry(markAreaTransform, seriesModel, coordSys, maModel));\n\n  if (coordSys) {\n    optData = zrUtil.filter(optData, zrUtil.curry(markAreaFilter, coordSys));\n  }\n\n  var dimValueGetter = coordSys ? function (item, dimName, dataIndex, dimIndex) {\n    return item.coord[Math.floor(dimIndex / 2)][dimIndex % 2];\n  } : function (item) {\n    return item.value;\n  };\n  areaData.initData(optData, null, dimValueGetter);\n  areaData.hasItemOption = true;\n  return areaData;\n}","var echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./timeline/preprocessor\");\n\nrequire(\"./timeline/typeDefaulter\");\n\nrequire(\"./timeline/timelineAction\");\n\nrequire(\"./timeline/SliderTimelineModel\");\n\nrequire(\"./timeline/SliderTimelineView\");\n\n/**\n * DataZoom component entry\n */\necharts.registerPreprocessor(preprocessor);","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction _default(option) {\n  var timelineOpt = option && option.timeline;\n\n  if (!zrUtil.isArray(timelineOpt)) {\n    timelineOpt = timelineOpt ? [timelineOpt] : [];\n  }\n\n  zrUtil.each(timelineOpt, function (opt) {\n    if (!opt) {\n      return;\n    }\n\n    compatibleEC2(opt);\n  });\n}\n\nfunction compatibleEC2(opt) {\n  var type = opt.type;\n  var ec2Types = {\n    'number': 'value',\n    'time': 'time'\n  }; // Compatible with ec2\n\n  if (ec2Types[type]) {\n    opt.axisType = ec2Types[type];\n    delete opt.type;\n  }\n\n  transferItem(opt);\n\n  if (has(opt, 'controlPosition')) {\n    var controlStyle = opt.controlStyle || (opt.controlStyle = {});\n\n    if (!has(controlStyle, 'position')) {\n      controlStyle.position = opt.controlPosition;\n    }\n\n    if (controlStyle.position === 'none' && !has(controlStyle, 'show')) {\n      controlStyle.show = false;\n      delete controlStyle.position;\n    }\n\n    delete opt.controlPosition;\n  }\n\n  zrUtil.each(opt.data || [], function (dataItem) {\n    if (zrUtil.isObject(dataItem) && !zrUtil.isArray(dataItem)) {\n      if (!has(dataItem, 'value') && has(dataItem, 'name')) {\n        // In ec2, using name as value.\n        dataItem.value = dataItem.name;\n      }\n\n      transferItem(dataItem);\n    }\n  });\n}\n\nfunction transferItem(opt) {\n  var itemStyle = opt.itemStyle || (opt.itemStyle = {});\n  var itemStyleEmphasis = itemStyle.emphasis || (itemStyle.emphasis = {}); // Transfer label out\n\n  var label = opt.label || opt.label || {};\n  var labelNormal = label.normal || (label.normal = {});\n  var excludeLabelAttr = {\n    normal: 1,\n    emphasis: 1\n  };\n  zrUtil.each(label, function (value, name) {\n    if (!excludeLabelAttr[name] && !has(labelNormal, name)) {\n      labelNormal[name] = value;\n    }\n  });\n\n  if (itemStyleEmphasis.label && !has(label, 'emphasis')) {\n    label.emphasis = itemStyleEmphasis.label;\n    delete itemStyleEmphasis.label;\n  }\n}\n\nfunction has(obj, attr) {\n  return obj.hasOwnProperty(attr);\n}\n\nmodule.exports = _default;","var Component = require(\"../../model/Component\");\n\nComponent.registerSubTypeDefaulter('timeline', function () {\n  // Only slider now.\n  return 'slider';\n});","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\necharts.registerAction({\n  type: 'timelineChange',\n  event: 'timelineChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  var timelineModel = ecModel.getComponent('timeline');\n\n  if (timelineModel && payload.currentIndex != null) {\n    timelineModel.setCurrentIndex(payload.currentIndex);\n\n    if (!timelineModel.get('loop', true) && timelineModel.isIndexMax()) {\n      timelineModel.setPlayState(false);\n    }\n  } // Set normalized currentIndex to payload.\n\n\n  ecModel.resetOption('timeline');\n  return zrUtil.defaults({\n    currentIndex: timelineModel.option.currentIndex\n  }, payload);\n});\necharts.registerAction({\n  type: 'timelinePlayChange',\n  event: 'timelinePlayChanged',\n  update: 'update'\n}, function (payload, ecModel) {\n  var timelineModel = ecModel.getComponent('timeline');\n\n  if (timelineModel && payload.playState != null) {\n    timelineModel.setPlayState(payload.playState);\n  }\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar TimelineModel = require(\"./TimelineModel\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar SliderTimelineModel = TimelineModel.extend({\n  type: 'timeline.slider',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 时间轴背景颜色\n    borderColor: '#ccc',\n    // 时间轴边框颜色\n    borderWidth: 0,\n    // 时间轴边框线宽，单位px，默认为0（无边框）\n    orient: 'horizontal',\n    // 'vertical'\n    inverse: false,\n    tooltip: {\n      // boolean or Object\n      trigger: 'item' // data item may also have tootip attr.\n\n    },\n    symbol: 'emptyCircle',\n    symbolSize: 10,\n    lineStyle: {\n      show: true,\n      width: 2,\n      color: '#304654'\n    },\n    label: {\n      // 文本标签\n      position: 'auto',\n      // auto left right top bottom\n      // When using number, label position is not\n      // restricted by viewRect.\n      // positive: right/bottom, negative: left/top\n      normal: {\n        show: true,\n        interval: 'auto',\n        rotate: 0,\n        // formatter: null,\n        // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n        color: '#304654'\n      },\n      emphasis: {\n        show: true,\n        // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n        color: '#c23531'\n      }\n    },\n    itemStyle: {\n      normal: {\n        color: '#304654',\n        borderWidth: 1\n      },\n      emphasis: {\n        color: '#c23531'\n      }\n    },\n    checkpointStyle: {\n      symbol: 'circle',\n      symbolSize: 13,\n      color: '#c23531',\n      borderWidth: 5,\n      borderColor: 'rgba(194,53,49, 0.5)',\n      animation: true,\n      animationDuration: 300,\n      animationEasing: 'quinticInOut'\n    },\n    controlStyle: {\n      show: true,\n      showPlayBtn: true,\n      showPrevBtn: true,\n      showNextBtn: true,\n      itemSize: 22,\n      itemGap: 12,\n      position: 'left',\n      // 'left' 'right' 'top' 'bottom'\n      playIcon: 'path://M31.6,53C17.5,53,6,41.5,6,27.4S17.5,1.8,31.6,1.8C45.7,1.8,57.2,13.3,57.2,27.4S45.7,53,31.6,53z M31.6,3.3 C18.4,3.3,7.5,14.1,7.5,27.4c0,13.3,10.8,24.1,24.1,24.1C44.9,51.5,55.7,40.7,55.7,27.4C55.7,14.1,44.9,3.3,31.6,3.3z M24.9,21.3 c0-2.2,1.6-3.1,3.5-2l10.5,6.1c1.899,1.1,1.899,2.9,0,4l-10.5,6.1c-1.9,1.1-3.5,0.2-3.5-2V21.3z',\n      // jshint ignore:line\n      stopIcon: 'path://M30.9,53.2C16.8,53.2,5.3,41.7,5.3,27.6S16.8,2,30.9,2C45,2,56.4,13.5,56.4,27.6S45,53.2,30.9,53.2z M30.9,3.5C17.6,3.5,6.8,14.4,6.8,27.6c0,13.3,10.8,24.1,24.101,24.1C44.2,51.7,55,40.9,55,27.6C54.9,14.4,44.1,3.5,30.9,3.5z M36.9,35.8c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H36c0.5,0,0.9,0.4,0.9,1V35.8z M27.8,35.8 c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H27c0.5,0,0.9,0.4,0.9,1L27.8,35.8L27.8,35.8z',\n      // jshint ignore:line\n      nextIcon: 'path://M18.6,50.8l22.5-22.5c0.2-0.2,0.3-0.4,0.3-0.7c0-0.3-0.1-0.5-0.3-0.7L18.7,4.4c-0.1-0.1-0.2-0.3-0.2-0.5 c0-0.4,0.3-0.8,0.8-0.8c0.2,0,0.5,0.1,0.6,0.3l23.5,23.5l0,0c0.2,0.2,0.3,0.4,0.3,0.7c0,0.3-0.1,0.5-0.3,0.7l-0.1,0.1L19.7,52 c-0.1,0.1-0.3,0.2-0.5,0.2c-0.4,0-0.8-0.3-0.8-0.8C18.4,51.2,18.5,51,18.6,50.8z',\n      // jshint ignore:line\n      prevIcon: 'path://M43,52.8L20.4,30.3c-0.2-0.2-0.3-0.4-0.3-0.7c0-0.3,0.1-0.5,0.3-0.7L42.9,6.4c0.1-0.1,0.2-0.3,0.2-0.5 c0-0.4-0.3-0.8-0.8-0.8c-0.2,0-0.5,0.1-0.6,0.3L18.3,28.8l0,0c-0.2,0.2-0.3,0.4-0.3,0.7c0,0.3,0.1,0.5,0.3,0.7l0.1,0.1L41.9,54 c0.1,0.1,0.3,0.2,0.5,0.2c0.4,0,0.8-0.3,0.8-0.8C43.2,53.2,43.1,53,43,52.8z',\n      // jshint ignore:line\n      normal: {\n        color: '#304654',\n        borderColor: '#304654',\n        borderWidth: 1\n      },\n      emphasis: {\n        color: '#c23531',\n        borderColor: '#c23531',\n        borderWidth: 2\n      }\n    },\n    data: []\n  }\n});\nzrUtil.mixin(SliderTimelineModel, modelUtil.dataFormatMixin);\nvar _default = SliderTimelineModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar List = require(\"../../data/List\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar TimelineModel = ComponentModel.extend({\n  type: 'timeline',\n  layoutMode: 'box',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 4,\n    // 二级层叠\n    show: true,\n    axisType: 'time',\n    // 模式是时间类型，支持 value, category\n    realtime: true,\n    left: '20%',\n    top: null,\n    right: '20%',\n    bottom: 0,\n    width: null,\n    height: 40,\n    padding: 5,\n    controlPosition: 'left',\n    // 'left' 'right' 'top' 'bottom' 'none'\n    autoPlay: false,\n    rewind: false,\n    // 反向播放\n    loop: true,\n    playInterval: 2000,\n    // 播放时间间隔，单位ms\n    currentIndex: 0,\n    itemStyle: {\n      normal: {},\n      emphasis: {}\n    },\n    label: {\n      normal: {\n        color: '#000'\n      },\n      emphasis: {}\n    },\n    data: []\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * @private\n     * @type {module:echarts/data/List}\n     */\n    this._data;\n    /**\n     * @private\n     * @type {Array.<string>}\n     */\n\n    this._names;\n    this.mergeDefaultAndTheme(option, ecModel);\n\n    this._initData();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option) {\n    TimelineModel.superApply(this, 'mergeOption', arguments);\n\n    this._initData();\n  },\n\n  /**\n   * @param {number} [currentIndex]\n   */\n  setCurrentIndex: function (currentIndex) {\n    if (currentIndex == null) {\n      currentIndex = this.option.currentIndex;\n    }\n\n    var count = this._data.count();\n\n    if (this.option.loop) {\n      currentIndex = (currentIndex % count + count) % count;\n    } else {\n      currentIndex >= count && (currentIndex = count - 1);\n      currentIndex < 0 && (currentIndex = 0);\n    }\n\n    this.option.currentIndex = currentIndex;\n  },\n\n  /**\n   * @return {number} currentIndex\n   */\n  getCurrentIndex: function () {\n    return this.option.currentIndex;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isIndexMax: function () {\n    return this.getCurrentIndex() >= this._data.count() - 1;\n  },\n\n  /**\n   * @param {boolean} state true: play, false: stop\n   */\n  setPlayState: function (state) {\n    this.option.autoPlay = !!state;\n  },\n\n  /**\n   * @return {boolean} true: play, false: stop\n   */\n  getPlayState: function () {\n    return !!this.option.autoPlay;\n  },\n\n  /**\n   * @private\n   */\n  _initData: function () {\n    var thisOption = this.option;\n    var dataArr = thisOption.data || [];\n    var axisType = thisOption.axisType;\n    var names = this._names = [];\n\n    if (axisType === 'category') {\n      var idxArr = [];\n      zrUtil.each(dataArr, function (item, index) {\n        var value = modelUtil.getDataItemValue(item);\n        var newItem;\n\n        if (zrUtil.isObject(item)) {\n          newItem = zrUtil.clone(item);\n          newItem.value = index;\n        } else {\n          newItem = index;\n        }\n\n        idxArr.push(newItem);\n\n        if (!zrUtil.isString(value) && (value == null || isNaN(value))) {\n          value = '';\n        }\n\n        names.push(value + '');\n      });\n      dataArr = idxArr;\n    }\n\n    var dimType = {\n      category: 'ordinal',\n      time: 'time'\n    }[axisType] || 'number';\n    var data = this._data = new List([{\n      name: 'value',\n      type: dimType\n    }], this);\n    data.initData(dataArr, names);\n  },\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @public\n   * @return {Array.<string>} categoreis\n   */\n  getCategories: function () {\n    if (this.get('axisType') === 'category') {\n      return this._names.slice();\n    }\n  }\n});\nvar _default = TimelineModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar layout = require(\"../../util/layout\");\n\nvar TimelineView = require(\"./TimelineView\");\n\nvar TimelineAxis = require(\"./TimelineAxis\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar PI = Math.PI;\n\nvar _default = TimelineView.extend({\n  type: 'timeline.slider',\n  init: function (ecModel, api) {\n    this.api = api;\n    /**\n     * @private\n     * @type {module:echarts/component/timeline/TimelineAxis}\n     */\n\n    this._axis;\n    /**\n     * @private\n     * @type {module:zrender/core/BoundingRect}\n     */\n\n    this._viewRect;\n    /**\n     * @type {number}\n     */\n\n    this._timer;\n    /**\n     * @type {module:zrender/Element}\n     */\n\n    this._currentPointer;\n    /**\n     * @type {module:zrender/container/Group}\n     */\n\n    this._mainGroup;\n    /**\n     * @type {module:zrender/container/Group}\n     */\n\n    this._labelGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (timelineModel, ecModel, api, payload) {\n    this.model = timelineModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    this.group.removeAll();\n\n    if (timelineModel.get('show', true)) {\n      var layoutInfo = this._layout(timelineModel, api);\n\n      var mainGroup = this._createGroup('mainGroup');\n\n      var labelGroup = this._createGroup('labelGroup');\n      /**\n       * @private\n       * @type {module:echarts/component/timeline/TimelineAxis}\n       */\n\n\n      var axis = this._axis = this._createAxis(layoutInfo, timelineModel);\n\n      timelineModel.formatTooltip = function (dataIndex) {\n        return encodeHTML(axis.scale.getLabel(dataIndex));\n      };\n\n      each(['AxisLine', 'AxisTick', 'Control', 'CurrentPointer'], function (name) {\n        this['_render' + name](layoutInfo, mainGroup, axis, timelineModel);\n      }, this);\n\n      this._renderAxisLabel(layoutInfo, labelGroup, axis, timelineModel);\n\n      this._position(layoutInfo, timelineModel);\n    }\n\n    this._doPlayStop();\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._clearTimer();\n\n    this.group.removeAll();\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._clearTimer();\n  },\n  _layout: function (timelineModel, api) {\n    var labelPosOpt = timelineModel.get('label.normal.position');\n    var orient = timelineModel.get('orient');\n    var viewRect = getViewRect(timelineModel, api); // Auto label offset.\n\n    if (labelPosOpt == null || labelPosOpt === 'auto') {\n      labelPosOpt = orient === 'horizontal' ? viewRect.y + viewRect.height / 2 < api.getHeight() / 2 ? '-' : '+' : viewRect.x + viewRect.width / 2 < api.getWidth() / 2 ? '+' : '-';\n    } else if (isNaN(labelPosOpt)) {\n      labelPosOpt = {\n        horizontal: {\n          top: '-',\n          bottom: '+'\n        },\n        vertical: {\n          left: '-',\n          right: '+'\n        }\n      }[orient][labelPosOpt];\n    }\n\n    var labelAlignMap = {\n      horizontal: 'center',\n      vertical: labelPosOpt >= 0 || labelPosOpt === '+' ? 'left' : 'right'\n    };\n    var labelBaselineMap = {\n      horizontal: labelPosOpt >= 0 || labelPosOpt === '+' ? 'top' : 'bottom',\n      vertical: 'middle'\n    };\n    var rotationMap = {\n      horizontal: 0,\n      vertical: PI / 2\n    }; // Position\n\n    var mainLength = orient === 'vertical' ? viewRect.height : viewRect.width;\n    var controlModel = timelineModel.getModel('controlStyle');\n    var showControl = controlModel.get('show');\n    var controlSize = showControl ? controlModel.get('itemSize') : 0;\n    var controlGap = showControl ? controlModel.get('itemGap') : 0;\n    var sizePlusGap = controlSize + controlGap; // Special label rotate.\n\n    var labelRotation = timelineModel.get('label.normal.rotate') || 0;\n    labelRotation = labelRotation * PI / 180; // To radian.\n\n    var playPosition;\n    var prevBtnPosition;\n    var nextBtnPosition;\n    var axisExtent;\n    var controlPosition = controlModel.get('position', true);\n    var showControl = controlModel.get('show', true);\n    var showPlayBtn = showControl && controlModel.get('showPlayBtn', true);\n    var showPrevBtn = showControl && controlModel.get('showPrevBtn', true);\n    var showNextBtn = showControl && controlModel.get('showNextBtn', true);\n    var xLeft = 0;\n    var xRight = mainLength; // position[0] means left, position[1] means middle.\n\n    if (controlPosition === 'left' || controlPosition === 'bottom') {\n      showPlayBtn && (playPosition = [0, 0], xLeft += sizePlusGap);\n      showPrevBtn && (prevBtnPosition = [xLeft, 0], xLeft += sizePlusGap);\n      showNextBtn && (nextBtnPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\n    } else {\n      // 'top' 'right'\n      showPlayBtn && (playPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\n      showPrevBtn && (prevBtnPosition = [0, 0], xLeft += sizePlusGap);\n      showNextBtn && (nextBtnPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\n    }\n\n    axisExtent = [xLeft, xRight];\n\n    if (timelineModel.get('inverse')) {\n      axisExtent.reverse();\n    }\n\n    return {\n      viewRect: viewRect,\n      mainLength: mainLength,\n      orient: orient,\n      rotation: rotationMap[orient],\n      labelRotation: labelRotation,\n      labelPosOpt: labelPosOpt,\n      labelAlign: timelineModel.get('label.normal.align') || labelAlignMap[orient],\n      labelBaseline: timelineModel.get('label.normal.verticalAlign') || timelineModel.get('label.normal.baseline') || labelBaselineMap[orient],\n      // Based on mainGroup.\n      playPosition: playPosition,\n      prevBtnPosition: prevBtnPosition,\n      nextBtnPosition: nextBtnPosition,\n      axisExtent: axisExtent,\n      controlSize: controlSize,\n      controlGap: controlGap\n    };\n  },\n  _position: function (layoutInfo, timelineModel) {\n    // Position is be called finally, because bounding rect is needed for\n    // adapt content to fill viewRect (auto adapt offset).\n    // Timeline may be not all in the viewRect when 'offset' is specified\n    // as a number, because it is more appropriate that label aligns at\n    // 'offset' but not the other edge defined by viewRect.\n    var mainGroup = this._mainGroup;\n    var labelGroup = this._labelGroup;\n    var viewRect = layoutInfo.viewRect;\n\n    if (layoutInfo.orient === 'vertical') {\n      // transfrom to horizontal, inverse rotate by left-top point.\n      var m = matrix.create();\n      var rotateOriginX = viewRect.x;\n      var rotateOriginY = viewRect.y + viewRect.height;\n      matrix.translate(m, m, [-rotateOriginX, -rotateOriginY]);\n      matrix.rotate(m, m, -PI / 2);\n      matrix.translate(m, m, [rotateOriginX, rotateOriginY]);\n      viewRect = viewRect.clone();\n      viewRect.applyTransform(m);\n    }\n\n    var viewBound = getBound(viewRect);\n    var mainBound = getBound(mainGroup.getBoundingRect());\n    var labelBound = getBound(labelGroup.getBoundingRect());\n    var mainPosition = mainGroup.position;\n    var labelsPosition = labelGroup.position;\n    labelsPosition[0] = mainPosition[0] = viewBound[0][0];\n    var labelPosOpt = layoutInfo.labelPosOpt;\n\n    if (isNaN(labelPosOpt)) {\n      // '+' or '-'\n      var mainBoundIdx = labelPosOpt === '+' ? 0 : 1;\n      toBound(mainPosition, mainBound, viewBound, 1, mainBoundIdx);\n      toBound(labelsPosition, labelBound, viewBound, 1, 1 - mainBoundIdx);\n    } else {\n      var mainBoundIdx = labelPosOpt >= 0 ? 0 : 1;\n      toBound(mainPosition, mainBound, viewBound, 1, mainBoundIdx);\n      labelsPosition[1] = mainPosition[1] + labelPosOpt;\n    }\n\n    mainGroup.attr('position', mainPosition);\n    labelGroup.attr('position', labelsPosition);\n    mainGroup.rotation = labelGroup.rotation = layoutInfo.rotation;\n    setOrigin(mainGroup);\n    setOrigin(labelGroup);\n\n    function setOrigin(targetGroup) {\n      var pos = targetGroup.position;\n      targetGroup.origin = [viewBound[0][0] - pos[0], viewBound[1][0] - pos[1]];\n    }\n\n    function getBound(rect) {\n      // [[xmin, xmax], [ymin, ymax]]\n      return [[rect.x, rect.x + rect.width], [rect.y, rect.y + rect.height]];\n    }\n\n    function toBound(fromPos, from, to, dimIdx, boundIdx) {\n      fromPos[dimIdx] += to[dimIdx][boundIdx] - from[dimIdx][boundIdx];\n    }\n  },\n  _createAxis: function (layoutInfo, timelineModel) {\n    var data = timelineModel.getData();\n    var axisType = timelineModel.get('axisType');\n    var scale = axisHelper.createScaleByModel(timelineModel, axisType);\n    var dataExtent = data.getDataExtent('value');\n    scale.setExtent(dataExtent[0], dataExtent[1]);\n\n    this._customizeScale(scale, data);\n\n    scale.niceTicks();\n    var axis = new TimelineAxis('value', scale, layoutInfo.axisExtent, axisType);\n    axis.model = timelineModel;\n    return axis;\n  },\n  _customizeScale: function (scale, data) {\n    scale.getTicks = function () {\n      return data.mapArray(['value'], function (value) {\n        return value;\n      });\n    };\n\n    scale.getTicksLabels = function () {\n      return zrUtil.map(this.getTicks(), scale.getLabel, scale);\n    };\n  },\n  _createGroup: function (name) {\n    var newGroup = this['_' + name] = new graphic.Group();\n    this.group.add(newGroup);\n    return newGroup;\n  },\n  _renderAxisLine: function (layoutInfo, group, axis, timelineModel) {\n    var axisExtent = axis.getExtent();\n\n    if (!timelineModel.get('lineStyle.show')) {\n      return;\n    }\n\n    group.add(new graphic.Line({\n      shape: {\n        x1: axisExtent[0],\n        y1: 0,\n        x2: axisExtent[1],\n        y2: 0\n      },\n      style: zrUtil.extend({\n        lineCap: 'round'\n      }, timelineModel.getModel('lineStyle').getLineStyle()),\n      silent: true,\n      z2: 1\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _renderAxisTick: function (layoutInfo, group, axis, timelineModel) {\n    var data = timelineModel.getData();\n    var ticks = axis.scale.getTicks();\n    each(ticks, function (value, dataIndex) {\n      var tickCoord = axis.dataToCoord(value);\n      var itemModel = data.getItemModel(dataIndex);\n      var itemStyleModel = itemModel.getModel('itemStyle.normal');\n      var hoverStyleModel = itemModel.getModel('itemStyle.emphasis');\n      var symbolOpt = {\n        position: [tickCoord, 0],\n        onclick: bind(this._changeTimeline, this, dataIndex)\n      };\n      var el = giveSymbol(itemModel, itemStyleModel, group, symbolOpt);\n      graphic.setHoverStyle(el, hoverStyleModel.getItemStyle());\n\n      if (itemModel.get('tooltip')) {\n        el.dataIndex = dataIndex;\n        el.dataModel = timelineModel;\n      } else {\n        el.dataIndex = el.dataModel = null;\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _renderAxisLabel: function (layoutInfo, group, axis, timelineModel) {\n    var labelModel = timelineModel.getModel('label.normal');\n\n    if (!labelModel.get('show')) {\n      return;\n    }\n\n    var data = timelineModel.getData();\n    var ticks = axis.scale.getTicks();\n    var labels = axisHelper.getFormattedLabels(axis, labelModel.get('formatter'));\n    var labelInterval = axis.getLabelInterval();\n    each(ticks, function (tick, dataIndex) {\n      if (axis.isLabelIgnored(dataIndex, labelInterval)) {\n        return;\n      }\n\n      var itemModel = data.getItemModel(dataIndex);\n      var normalLabelModel = itemModel.getModel('label.normal');\n      var hoverLabelModel = itemModel.getModel('label.emphasis');\n      var tickCoord = axis.dataToCoord(tick);\n      var textEl = new graphic.Text({\n        position: [tickCoord, 0],\n        rotation: layoutInfo.labelRotation - layoutInfo.rotation,\n        onclick: bind(this._changeTimeline, this, dataIndex),\n        silent: false\n      });\n      graphic.setTextStyle(textEl.style, normalLabelModel, {\n        text: labels[dataIndex],\n        textAlign: layoutInfo.labelAlign,\n        textVerticalAlign: layoutInfo.labelBaseline\n      });\n      group.add(textEl);\n      graphic.setHoverStyle(textEl, graphic.setTextStyle({}, hoverLabelModel));\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _renderControl: function (layoutInfo, group, axis, timelineModel) {\n    var controlSize = layoutInfo.controlSize;\n    var rotation = layoutInfo.rotation;\n    var itemStyle = timelineModel.getModel('controlStyle.normal').getItemStyle();\n    var hoverStyle = timelineModel.getModel('controlStyle.emphasis').getItemStyle();\n    var rect = [0, -controlSize / 2, controlSize, controlSize];\n    var playState = timelineModel.getPlayState();\n    var inverse = timelineModel.get('inverse', true);\n    makeBtn(layoutInfo.nextBtnPosition, 'controlStyle.nextIcon', bind(this._changeTimeline, this, inverse ? '-' : '+'));\n    makeBtn(layoutInfo.prevBtnPosition, 'controlStyle.prevIcon', bind(this._changeTimeline, this, inverse ? '+' : '-'));\n    makeBtn(layoutInfo.playPosition, 'controlStyle.' + (playState ? 'stopIcon' : 'playIcon'), bind(this._handlePlayClick, this, !playState), true);\n\n    function makeBtn(position, iconPath, onclick, willRotate) {\n      if (!position) {\n        return;\n      }\n\n      var opt = {\n        position: position,\n        origin: [controlSize / 2, 0],\n        rotation: willRotate ? -rotation : 0,\n        rectHover: true,\n        style: itemStyle,\n        onclick: onclick\n      };\n      var btn = makeIcon(timelineModel, iconPath, rect, opt);\n      group.add(btn);\n      graphic.setHoverStyle(btn, hoverStyle);\n    }\n  },\n  _renderCurrentPointer: function (layoutInfo, group, axis, timelineModel) {\n    var data = timelineModel.getData();\n    var currentIndex = timelineModel.getCurrentIndex();\n    var pointerModel = data.getItemModel(currentIndex).getModel('checkpointStyle');\n    var me = this;\n    var callback = {\n      onCreate: function (pointer) {\n        pointer.draggable = true;\n        pointer.drift = bind(me._handlePointerDrag, me);\n        pointer.ondragend = bind(me._handlePointerDragend, me);\n        pointerMoveTo(pointer, currentIndex, axis, timelineModel, true);\n      },\n      onUpdate: function (pointer) {\n        pointerMoveTo(pointer, currentIndex, axis, timelineModel);\n      }\n    }; // Reuse when exists, for animation and drag.\n\n    this._currentPointer = giveSymbol(pointerModel, pointerModel, this._mainGroup, {}, this._currentPointer, callback);\n  },\n  _handlePlayClick: function (nextState) {\n    this._clearTimer();\n\n    this.api.dispatchAction({\n      type: 'timelinePlayChange',\n      playState: nextState,\n      from: this.uid\n    });\n  },\n  _handlePointerDrag: function (dx, dy, e) {\n    this._clearTimer();\n\n    this._pointerChangeTimeline([e.offsetX, e.offsetY]);\n  },\n  _handlePointerDragend: function (e) {\n    this._pointerChangeTimeline([e.offsetX, e.offsetY], true);\n  },\n  _pointerChangeTimeline: function (mousePos, trigger) {\n    var toCoord = this._toAxisCoord(mousePos)[0];\n\n    var axis = this._axis;\n    var axisExtent = numberUtil.asc(axis.getExtent().slice());\n    toCoord > axisExtent[1] && (toCoord = axisExtent[1]);\n    toCoord < axisExtent[0] && (toCoord = axisExtent[0]);\n    this._currentPointer.position[0] = toCoord;\n\n    this._currentPointer.dirty();\n\n    var targetDataIndex = this._findNearestTick(toCoord);\n\n    var timelineModel = this.model;\n\n    if (trigger || targetDataIndex !== timelineModel.getCurrentIndex() && timelineModel.get('realtime')) {\n      this._changeTimeline(targetDataIndex);\n    }\n  },\n  _doPlayStop: function () {\n    this._clearTimer();\n\n    if (this.model.getPlayState()) {\n      this._timer = setTimeout(bind(handleFrame, this), this.model.get('playInterval'));\n    }\n\n    function handleFrame() {\n      // Do not cache\n      var timelineModel = this.model;\n\n      this._changeTimeline(timelineModel.getCurrentIndex() + (timelineModel.get('rewind', true) ? -1 : 1));\n    }\n  },\n  _toAxisCoord: function (vertex) {\n    var trans = this._mainGroup.getLocalTransform();\n\n    return graphic.applyTransform(vertex, trans, true);\n  },\n  _findNearestTick: function (axisCoord) {\n    var data = this.model.getData();\n    var dist = Infinity;\n    var targetDataIndex;\n    var axis = this._axis;\n    data.each(['value'], function (value, dataIndex) {\n      var coord = axis.dataToCoord(value);\n      var d = Math.abs(coord - axisCoord);\n\n      if (d < dist) {\n        dist = d;\n        targetDataIndex = dataIndex;\n      }\n    });\n    return targetDataIndex;\n  },\n  _clearTimer: function () {\n    if (this._timer) {\n      clearTimeout(this._timer);\n      this._timer = null;\n    }\n  },\n  _changeTimeline: function (nextIndex) {\n    var currentIndex = this.model.getCurrentIndex();\n\n    if (nextIndex === '+') {\n      nextIndex = currentIndex + 1;\n    } else if (nextIndex === '-') {\n      nextIndex = currentIndex - 1;\n    }\n\n    this.api.dispatchAction({\n      type: 'timelineChange',\n      currentIndex: nextIndex,\n      from: this.uid\n    });\n  }\n});\n\nfunction getViewRect(model, api) {\n  return layout.getLayoutRect(model.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  }, model.get('padding'));\n}\n\nfunction makeIcon(timelineModel, objPath, rect, opts) {\n  var icon = graphic.makePath(timelineModel.get(objPath).replace(/^path:\\/\\//, ''), zrUtil.clone(opts || {}), new BoundingRect(rect[0], rect[1], rect[2], rect[3]), 'center');\n  return icon;\n}\n/**\n * Create symbol or update symbol\n * opt: basic position and event handlers\n */\n\n\nfunction giveSymbol(hostModel, itemStyleModel, group, opt, symbol, callback) {\n  var color = itemStyleModel.get('color');\n\n  if (!symbol) {\n    var symbolType = hostModel.get('symbol');\n    symbol = createSymbol(symbolType, -1, -1, 2, 2, color);\n    symbol.setStyle('strokeNoScale', true);\n    group.add(symbol);\n    callback && callback.onCreate(symbol);\n  } else {\n    symbol.setColor(color);\n    group.add(symbol); // Group may be new, also need to add.\n\n    callback && callback.onUpdate(symbol);\n  } // Style\n\n\n  var itemStyle = itemStyleModel.getItemStyle(['color', 'symbol', 'symbolSize']);\n  symbol.setStyle(itemStyle); // Transform and events.\n\n  opt = zrUtil.merge({\n    rectHover: true,\n    z2: 100\n  }, opt, true);\n  var symbolSize = hostModel.get('symbolSize');\n  symbolSize = symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\n  symbolSize[0] /= 2;\n  symbolSize[1] /= 2;\n  opt.scale = symbolSize;\n  var symbolOffset = hostModel.get('symbolOffset');\n\n  if (symbolOffset) {\n    var pos = opt.position = opt.position || [0, 0];\n    pos[0] += numberUtil.parsePercent(symbolOffset[0], symbolSize[0]);\n    pos[1] += numberUtil.parsePercent(symbolOffset[1], symbolSize[1]);\n  }\n\n  var symbolRotate = hostModel.get('symbolRotate');\n  opt.rotation = (symbolRotate || 0) * Math.PI / 180 || 0;\n  symbol.attr(opt); // FIXME\n  // (1) When symbol.style.strokeNoScale is true and updateTransform is not performed,\n  // getBoundingRect will return wrong result.\n  // (This is supposed to be resolved in zrender, but it is a little difficult to\n  // leverage performance and auto updateTransform)\n  // (2) All of ancesters of symbol do not scale, so we can just updateTransform symbol.\n\n  symbol.updateTransform();\n  return symbol;\n}\n\nfunction pointerMoveTo(pointer, dataIndex, axis, timelineModel, noAnimation) {\n  if (pointer.dragging) {\n    return;\n  }\n\n  var pointerModel = timelineModel.getModel('checkpointStyle');\n  var toCoord = axis.dataToCoord(timelineModel.getData().get(['value'], dataIndex));\n\n  if (noAnimation || !pointerModel.get('animation', true)) {\n    pointer.attr({\n      position: [toCoord, 0]\n    });\n  } else {\n    pointer.stopAnimation(true);\n    pointer.animateTo({\n      position: [toCoord, 0]\n    }, pointerModel.get('animationDuration', true), pointerModel.get('animationEasing', true));\n  }\n}\n\nmodule.exports = _default;","var ComponentView = require(\"../../view/Component\");\n\nvar _default = ComponentView.extend({\n  type: 'timeline'\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../../coord/Axis\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar TimelineAxis = function (dim, scale, coordExtent, axisType) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._autoLabelInterval;\n  /**\n   * Axis model\n   * @param {module:echarts/component/TimelineModel}\n   */\n\n  this.model = null;\n};\n\nTimelineAxis.prototype = {\n  constructor: TimelineAxis,\n\n  /**\n   * @public\n   * @return {number}\n   */\n  getLabelInterval: function () {\n    var timelineModel = this.model;\n    var labelModel = timelineModel.getModel('label.normal');\n    var labelInterval = labelModel.get('interval');\n\n    if (labelInterval != null && labelInterval != 'auto') {\n      return labelInterval;\n    }\n\n    var labelInterval = this._autoLabelInterval;\n\n    if (!labelInterval) {\n      labelInterval = this._autoLabelInterval = axisHelper.getAxisLabelInterval(zrUtil.map(this.scale.getTicks(), this.dataToCoord, this), axisHelper.getFormattedLabels(this, labelModel.get('formatter')), labelModel.getFont(), timelineModel.get('orient') === 'horizontal' ? 0 : 90, labelModel.get('rotate'));\n    }\n\n    return labelInterval;\n  },\n\n  /**\n   * If label is ignored.\n   * Automatically used when axis is category and label can not be all shown\n   * @public\n   * @param  {number} idx\n   * @return {boolean}\n   */\n  isLabelIgnored: function (idx) {\n    if (this.type === 'category') {\n      var labelInterval = this.getLabelInterval();\n      return typeof labelInterval === 'function' && !labelInterval(idx, this.scale.getLabel(idx)) || idx % (labelInterval + 1);\n    }\n  }\n};\nzrUtil.inherits(TimelineAxis, Axis);\nvar _default = TimelineAxis;\nmodule.exports = _default;","require(\"./toolbox/ToolboxModel\");\n\nrequire(\"./toolbox/ToolboxView\");\n\nrequire(\"./toolbox/feature/SaveAsImage\");\n\nrequire(\"./toolbox/feature/MagicType\");\n\nrequire(\"./toolbox/feature/DataView\");\n\nrequire(\"./toolbox/feature/DataZoom\");\n\nrequire(\"./toolbox/feature/Restore\");","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar featureManager = require(\"./featureManager\");\n\nvar ToolboxModel = echarts.extendComponentModel({\n  type: 'toolbox',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  mergeDefaultAndTheme: function (option) {\n    ToolboxModel.superApply(this, 'mergeDefaultAndTheme', arguments);\n    zrUtil.each(this.option.feature, function (featureOpt, featureName) {\n      var Feature = featureManager.get(featureName);\n      Feature && zrUtil.merge(featureOpt, Feature.defaultOption);\n    });\n  },\n  defaultOption: {\n    show: true,\n    z: 6,\n    zlevel: 0,\n    orient: 'horizontal',\n    left: 'right',\n    top: 'top',\n    // right\n    // bottom\n    backgroundColor: 'transparent',\n    borderColor: '#ccc',\n    borderRadius: 0,\n    borderWidth: 0,\n    padding: 5,\n    itemSize: 15,\n    itemGap: 8,\n    showTitle: true,\n    iconStyle: {\n      normal: {\n        borderColor: '#666',\n        color: 'none'\n      },\n      emphasis: {\n        borderColor: '#3E98C5'\n      } // textStyle: {},\n      // feature\n\n    }\n  }\n});\nvar _default = ToolboxModel;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar featureManager = require(\"./featureManager\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\nvar listComponentHelper = require(\"../helper/listComponent\");\n\nvar _default = echarts.extendComponentView({\n  type: 'toolbox',\n  render: function (toolboxModel, ecModel, api, payload) {\n    var group = this.group;\n    group.removeAll();\n\n    if (!toolboxModel.get('show')) {\n      return;\n    }\n\n    var itemSize = +toolboxModel.get('itemSize');\n    var featureOpts = toolboxModel.get('feature') || {};\n    var features = this._features || (this._features = {});\n    var featureNames = [];\n    zrUtil.each(featureOpts, function (opt, name) {\n      featureNames.push(name);\n    });\n    new DataDiffer(this._featureNames || [], featureNames).add(processFeature).update(processFeature).remove(zrUtil.curry(processFeature, null)).execute(); // Keep for diff.\n\n    this._featureNames = featureNames;\n\n    function processFeature(newIndex, oldIndex) {\n      var featureName = featureNames[newIndex];\n      var oldName = featureNames[oldIndex];\n      var featureOpt = featureOpts[featureName];\n      var featureModel = new Model(featureOpt, toolboxModel, toolboxModel.ecModel);\n      var feature;\n\n      if (featureName && !oldName) {\n        // Create\n        if (isUserFeatureName(featureName)) {\n          feature = {\n            model: featureModel,\n            onclick: featureModel.option.onclick,\n            featureName: featureName\n          };\n        } else {\n          var Feature = featureManager.get(featureName);\n\n          if (!Feature) {\n            return;\n          }\n\n          feature = new Feature(featureModel, ecModel, api);\n        }\n\n        features[featureName] = feature;\n      } else {\n        feature = features[oldName]; // If feature does not exsit.\n\n        if (!feature) {\n          return;\n        }\n\n        feature.model = featureModel;\n        feature.ecModel = ecModel;\n        feature.api = api;\n      }\n\n      if (!featureName && oldName) {\n        feature.dispose && feature.dispose(ecModel, api);\n        return;\n      }\n\n      if (!featureModel.get('show') || feature.unusable) {\n        feature.remove && feature.remove(ecModel, api);\n        return;\n      }\n\n      createIconPaths(featureModel, feature, featureName);\n\n      featureModel.setIconStatus = function (iconName, status) {\n        var option = this.option;\n        var iconPaths = this.iconPaths;\n        option.iconStatus = option.iconStatus || {};\n        option.iconStatus[iconName] = status; // FIXME\n\n        iconPaths[iconName] && iconPaths[iconName].trigger(status);\n      };\n\n      if (feature.render) {\n        feature.render(featureModel, ecModel, api, payload);\n      }\n    }\n\n    function createIconPaths(featureModel, feature, featureName) {\n      var iconStyleModel = featureModel.getModel('iconStyle'); // If one feature has mutiple icon. they are orginaized as\n      // {\n      //     icon: {\n      //         foo: '',\n      //         bar: ''\n      //     },\n      //     title: {\n      //         foo: '',\n      //         bar: ''\n      //     }\n      // }\n\n      var icons = feature.getIcons ? feature.getIcons() : featureModel.get('icon');\n      var titles = featureModel.get('title') || {};\n\n      if (typeof icons === 'string') {\n        var icon = icons;\n        var title = titles;\n        icons = {};\n        titles = {};\n        icons[featureName] = icon;\n        titles[featureName] = title;\n      }\n\n      var iconPaths = featureModel.iconPaths = {};\n      zrUtil.each(icons, function (iconStr, iconName) {\n        var path = graphic.createIcon(iconStr, {}, {\n          x: -itemSize / 2,\n          y: -itemSize / 2,\n          width: itemSize,\n          height: itemSize\n        });\n        path.setStyle(iconStyleModel.getModel('normal').getItemStyle());\n        path.hoverStyle = iconStyleModel.getModel('emphasis').getItemStyle();\n        graphic.setHoverStyle(path);\n\n        if (toolboxModel.get('showTitle')) {\n          path.__title = titles[iconName];\n          path.on('mouseover', function () {\n            // Should not reuse above hoverStyle, which might be modified.\n            var hoverStyle = iconStyleModel.getModel('emphasis').getItemStyle();\n            path.setStyle({\n              text: titles[iconName],\n              textPosition: hoverStyle.textPosition || 'bottom',\n              textFill: hoverStyle.fill || hoverStyle.stroke || '#000',\n              textAlign: hoverStyle.textAlign || 'center'\n            });\n          }).on('mouseout', function () {\n            path.setStyle({\n              textFill: null\n            });\n          });\n        }\n\n        path.trigger(featureModel.get('iconStatus.' + iconName) || 'normal');\n        group.add(path);\n        path.on('click', zrUtil.bind(feature.onclick, feature, ecModel, api, iconName));\n        iconPaths[iconName] = path;\n      });\n    }\n\n    listComponentHelper.layout(group, toolboxModel, api); // Render background after group is layout\n    // FIXME\n\n    group.add(listComponentHelper.makeBackground(group.getBoundingRect(), toolboxModel)); // Adjust icon title positions to avoid them out of screen\n\n    group.eachChild(function (icon) {\n      var titleText = icon.__title;\n      var hoverStyle = icon.hoverStyle; // May be background element\n\n      if (hoverStyle && titleText) {\n        var rect = textContain.getBoundingRect(titleText, textContain.makeFont(hoverStyle));\n        var offsetX = icon.position[0] + group.position[0];\n        var offsetY = icon.position[1] + group.position[1] + itemSize;\n        var needPutOnTop = false;\n\n        if (offsetY + rect.height > api.getHeight()) {\n          hoverStyle.textPosition = 'top';\n          needPutOnTop = true;\n        }\n\n        var topOffset = needPutOnTop ? -5 - rect.height : itemSize + 8;\n\n        if (offsetX + rect.width / 2 > api.getWidth()) {\n          hoverStyle.textPosition = ['100%', topOffset];\n          hoverStyle.textAlign = 'right';\n        } else if (offsetX - rect.width / 2 < 0) {\n          hoverStyle.textPosition = [0, topOffset];\n          hoverStyle.textAlign = 'left';\n        }\n      }\n    });\n  },\n  updateView: function (toolboxModel, ecModel, api, payload) {\n    zrUtil.each(this._features, function (feature) {\n      feature.updateView && feature.updateView(feature.model, ecModel, api, payload);\n    });\n  },\n  updateLayout: function (toolboxModel, ecModel, api, payload) {\n    zrUtil.each(this._features, function (feature) {\n      feature.updateLayout && feature.updateLayout(feature.model, ecModel, api, payload);\n    });\n  },\n  remove: function (ecModel, api) {\n    zrUtil.each(this._features, function (feature) {\n      feature.remove && feature.remove(ecModel, api);\n    });\n    this.group.removeAll();\n  },\n  dispose: function (ecModel, api) {\n    zrUtil.each(this._features, function (feature) {\n      feature.dispose && feature.dispose(ecModel, api);\n    });\n  }\n});\n\nfunction isUserFeatureName(featureName) {\n  return featureName.indexOf('my') === 0;\n}\n\nmodule.exports = _default;","var env = require(\"zrender/lib/core/env\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar saveAsImageLang = lang.toolbox.saveAsImage;\n\nfunction SaveAsImage(model) {\n  this.model = model;\n}\n\nSaveAsImage.defaultOption = {\n  show: true,\n  icon: 'M4.7,22.9L29.3,45.5L54.7,23.4M4.6,43.6L4.6,58L53.8,58L53.8,43.6M29.2,45.1L29.2,0',\n  title: saveAsImageLang.title,\n  type: 'png',\n  // Default use option.backgroundColor\n  // backgroundColor: '#fff',\n  name: '',\n  excludeComponents: ['toolbox'],\n  pixelRatio: 1,\n  lang: saveAsImageLang.lang.slice()\n};\nSaveAsImage.prototype.unusable = !env.canvasSupported;\nvar proto = SaveAsImage.prototype;\n\nproto.onclick = function (ecModel, api) {\n  var model = this.model;\n  var title = model.get('name') || ecModel.get('title.0.text') || 'echarts';\n  var $a = document.createElement('a');\n  var type = model.get('type', true) || 'png';\n  $a.download = title + '.' + type;\n  $a.target = '_blank';\n  var url = api.getConnectedDataURL({\n    type: type,\n    backgroundColor: model.get('backgroundColor', true) || ecModel.get('backgroundColor') || '#fff',\n    excludeComponents: model.get('excludeComponents'),\n    pixelRatio: model.get('pixelRatio')\n  });\n  $a.href = url; // Chrome and Firefox\n\n  if (typeof MouseEvent === 'function' && !env.browser.ie && !env.browser.edge) {\n    var evt = new MouseEvent('click', {\n      view: window,\n      bubbles: true,\n      cancelable: false\n    });\n    $a.dispatchEvent(evt);\n  } // IE\n  else {\n      if (window.navigator.msSaveOrOpenBlob) {\n        var bstr = atob(url.split(',')[1]);\n        var n = bstr.length;\n        var u8arr = new Uint8Array(n);\n\n        while (n--) {\n          u8arr[n] = bstr.charCodeAt(n);\n        }\n\n        var blob = new Blob([u8arr]);\n        window.navigator.msSaveOrOpenBlob(blob, title + '.' + type);\n      } else {\n        var lang = model.get('lang');\n        var html = '' + '<body style=\"margin:0;\">' + '<img src=\"' + url + '\" style=\"max-width:100%;\" title=\"' + (lang && lang[0] || '') + '\" />' + '</body>';\n        var tab = window.open();\n        tab.document.write(html);\n      }\n    }\n};\n\nfeatureManager.register('saveAsImage', SaveAsImage);\nvar _default = SaveAsImage;\nmodule.exports = _default;","var echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar magicTypeLang = lang.toolbox.magicType;\n\nfunction MagicType(model) {\n  this.model = model;\n}\n\nMagicType.defaultOption = {\n  show: true,\n  type: [],\n  // Icon group\n  icon: {\n    line: 'M4.1,28.9h7.1l9.3-22l7.4,38l9.7-19.7l3,12.8h14.9M4.1,58h51.4',\n    bar: 'M6.7,22.9h10V48h-10V22.9zM24.9,13h10v35h-10V13zM43.2,2h10v46h-10V2zM3.1,58h53.7',\n    stack: 'M8.2,38.4l-8.4,4.1l30.6,15.3L60,42.5l-8.1-4.1l-21.5,11L8.2,38.4z M51.9,30l-8.1,4.2l-13.4,6.9l-13.9-6.9L8.2,30l-8.4,4.2l8.4,4.2l22.2,11l21.5-11l8.1-4.2L51.9,30z M51.9,21.7l-8.1,4.2L35.7,30l-5.3,2.8L24.9,30l-8.4-4.1l-8.3-4.2l-8.4,4.2L8.2,30l8.3,4.2l13.9,6.9l13.4-6.9l8.1-4.2l8.1-4.1L51.9,21.7zM30.4,2.2L-0.2,17.5l8.4,4.1l8.3,4.2l8.4,4.2l5.5,2.7l5.3-2.7l8.1-4.2l8.1-4.2l8.1-4.1L30.4,2.2z',\n    // jshint ignore:line\n    tiled: 'M2.3,2.2h22.8V25H2.3V2.2z M35,2.2h22.8V25H35V2.2zM2.3,35h22.8v22.8H2.3V35z M35,35h22.8v22.8H35V35z'\n  },\n  // `line`, `bar`, `stack`, `tiled`\n  title: zrUtil.clone(magicTypeLang.title),\n  option: {},\n  seriesIndex: {}\n};\nvar proto = MagicType.prototype;\n\nproto.getIcons = function () {\n  var model = this.model;\n  var availableIcons = model.get('icon');\n  var icons = {};\n  zrUtil.each(model.get('type'), function (type) {\n    if (availableIcons[type]) {\n      icons[type] = availableIcons[type];\n    }\n  });\n  return icons;\n};\n\nvar seriesOptGenreator = {\n  'line': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        type: 'line',\n        // Preserve data related option\n        data: seriesModel.get('data'),\n        stack: seriesModel.get('stack'),\n        markPoint: seriesModel.get('markPoint'),\n        markLine: seriesModel.get('markLine')\n      }, model.get('option.line') || {}, true);\n    }\n  },\n  'bar': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line') {\n      return zrUtil.merge({\n        id: seriesId,\n        type: 'bar',\n        // Preserve data related option\n        data: seriesModel.get('data'),\n        stack: seriesModel.get('stack'),\n        markPoint: seriesModel.get('markPoint'),\n        markLine: seriesModel.get('markLine')\n      }, model.get('option.bar') || {}, true);\n    }\n  },\n  'stack': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line' || seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        stack: '__ec_magicType_stack__'\n      }, model.get('option.stack') || {}, true);\n    }\n  },\n  'tiled': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line' || seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        stack: ''\n      }, model.get('option.tiled') || {}, true);\n    }\n  }\n};\nvar radioTypes = [['line', 'bar'], ['stack', 'tiled']];\n\nproto.onclick = function (ecModel, api, type) {\n  var model = this.model;\n  var seriesIndex = model.get('seriesIndex.' + type); // Not supported magicType\n\n  if (!seriesOptGenreator[type]) {\n    return;\n  }\n\n  var newOption = {\n    series: []\n  };\n\n  var generateNewSeriesTypes = function (seriesModel) {\n    var seriesType = seriesModel.subType;\n    var seriesId = seriesModel.id;\n    var newSeriesOpt = seriesOptGenreator[type](seriesType, seriesId, seriesModel, model);\n\n    if (newSeriesOpt) {\n      // PENDING If merge original option?\n      zrUtil.defaults(newSeriesOpt, seriesModel.option);\n      newOption.series.push(newSeriesOpt);\n    } // Modify boundaryGap\n\n\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.type === 'cartesian2d' && (type === 'line' || type === 'bar')) {\n      var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n\n      if (categoryAxis) {\n        var axisDim = categoryAxis.dim;\n        var axisType = axisDim + 'Axis';\n        var axisModel = ecModel.queryComponents({\n          mainType: axisType,\n          index: seriesModel.get(name + 'Index'),\n          id: seriesModel.get(name + 'Id')\n        })[0];\n        var axisIndex = axisModel.componentIndex;\n        newOption[axisType] = newOption[axisType] || [];\n\n        for (var i = 0; i <= axisIndex; i++) {\n          newOption[axisType][axisIndex] = newOption[axisType][axisIndex] || {};\n        }\n\n        newOption[axisType][axisIndex].boundaryGap = type === 'bar' ? true : false;\n      }\n    }\n  };\n\n  zrUtil.each(radioTypes, function (radio) {\n    if (zrUtil.indexOf(radio, type) >= 0) {\n      zrUtil.each(radio, function (item) {\n        model.setIconStatus(item, 'normal');\n      });\n    }\n  });\n  model.setIconStatus(type, 'emphasis');\n  ecModel.eachComponent({\n    mainType: 'series',\n    query: seriesIndex == null ? null : {\n      seriesIndex: seriesIndex\n    }\n  }, generateNewSeriesTypes);\n  api.dispatchAction({\n    type: 'changeMagicType',\n    currentType: type,\n    newOption: newOption\n  });\n};\n\necharts.registerAction({\n  type: 'changeMagicType',\n  event: 'magicTypeChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  ecModel.mergeOption(payload.newOption);\n});\nfeatureManager.register('magicType', MagicType);\nvar _default = MagicType;\nmodule.exports = _default;","var echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar dataViewLang = lang.toolbox.dataView;\nvar BLOCK_SPLITER = new Array(60).join('-');\nvar ITEM_SPLITER = '\\t';\n/**\n * Group series into two types\n *  1. on category axis, like line, bar\n *  2. others, like scatter, pie\n * @param {module:echarts/model/Global} ecModel\n * @return {Object}\n * @inner\n */\n\nfunction groupSeries(ecModel) {\n  var seriesGroupByCategoryAxis = {};\n  var otherSeries = [];\n  var meta = [];\n  ecModel.eachRawSeries(function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && (coordSys.type === 'cartesian2d' || coordSys.type === 'polar')) {\n      var baseAxis = coordSys.getBaseAxis();\n\n      if (baseAxis.type === 'category') {\n        var key = baseAxis.dim + '_' + baseAxis.index;\n\n        if (!seriesGroupByCategoryAxis[key]) {\n          seriesGroupByCategoryAxis[key] = {\n            categoryAxis: baseAxis,\n            valueAxis: coordSys.getOtherAxis(baseAxis),\n            series: []\n          };\n          meta.push({\n            axisDim: baseAxis.dim,\n            axisIndex: baseAxis.index\n          });\n        }\n\n        seriesGroupByCategoryAxis[key].series.push(seriesModel);\n      } else {\n        otherSeries.push(seriesModel);\n      }\n    } else {\n      otherSeries.push(seriesModel);\n    }\n  });\n  return {\n    seriesGroupByCategoryAxis: seriesGroupByCategoryAxis,\n    other: otherSeries,\n    meta: meta\n  };\n}\n/**\n * Assemble content of series on cateogory axis\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleSeriesWithCategoryAxis(series) {\n  var tables = [];\n  zrUtil.each(series, function (group, key) {\n    var categoryAxis = group.categoryAxis;\n    var valueAxis = group.valueAxis;\n    var valueAxisDim = valueAxis.dim;\n    var headers = [' '].concat(zrUtil.map(group.series, function (series) {\n      return series.name;\n    }));\n    var columns = [categoryAxis.model.getCategories()];\n    zrUtil.each(group.series, function (series) {\n      columns.push(series.getRawData().mapArray(valueAxisDim, function (val) {\n        return val;\n      }));\n    }); // Assemble table content\n\n    var lines = [headers.join(ITEM_SPLITER)];\n\n    for (var i = 0; i < columns[0].length; i++) {\n      var items = [];\n\n      for (var j = 0; j < columns.length; j++) {\n        items.push(columns[j][i]);\n      }\n\n      lines.push(items.join(ITEM_SPLITER));\n    }\n\n    tables.push(lines.join('\\n'));\n  });\n  return tables.join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * Assemble content of other series\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleOtherSeries(series) {\n  return zrUtil.map(series, function (series) {\n    var data = series.getRawData();\n    var lines = [series.name];\n    var vals = [];\n    data.each(data.dimensions, function () {\n      var argLen = arguments.length;\n      var dataIndex = arguments[argLen - 1];\n      var name = data.getName(dataIndex);\n\n      for (var i = 0; i < argLen - 1; i++) {\n        vals[i] = arguments[i];\n      }\n\n      lines.push((name ? name + ITEM_SPLITER : '') + vals.join(ITEM_SPLITER));\n    });\n    return lines.join('\\n');\n  }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * @param {module:echarts/model/Global}\n * @return {Object}\n * @inner\n */\n\n\nfunction getContentFromModel(ecModel) {\n  var result = groupSeries(ecModel);\n  return {\n    value: zrUtil.filter([assembleSeriesWithCategoryAxis(result.seriesGroupByCategoryAxis), assembleOtherSeries(result.other)], function (str) {\n      return str.replace(/[\\n\\t\\s]/g, '');\n    }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n'),\n    meta: result.meta\n  };\n}\n\nfunction trim(str) {\n  return str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n}\n/**\n * If a block is tsv format\n */\n\n\nfunction isTSVFormat(block) {\n  // Simple method to find out if a block is tsv format\n  var firstLine = block.slice(0, block.indexOf('\\n'));\n\n  if (firstLine.indexOf(ITEM_SPLITER) >= 0) {\n    return true;\n  }\n}\n\nvar itemSplitRegex = new RegExp('[' + ITEM_SPLITER + ']+', 'g');\n/**\n * @param {string} tsv\n * @return {Object}\n */\n\nfunction parseTSVContents(tsv) {\n  var tsvLines = tsv.split(/\\n+/g);\n  var headers = trim(tsvLines.shift()).split(itemSplitRegex);\n  var categories = [];\n  var series = zrUtil.map(headers, function (header) {\n    return {\n      name: header,\n      data: []\n    };\n  });\n\n  for (var i = 0; i < tsvLines.length; i++) {\n    var items = trim(tsvLines[i]).split(itemSplitRegex);\n    categories.push(items.shift());\n\n    for (var j = 0; j < items.length; j++) {\n      series[j] && (series[j].data[i] = items[j]);\n    }\n  }\n\n  return {\n    series: series,\n    categories: categories\n  };\n}\n/**\n * @param {string} str\n * @return {Array.<Object>}\n * @inner\n */\n\n\nfunction parseListContents(str) {\n  var lines = str.split(/\\n+/g);\n  var seriesName = trim(lines.shift());\n  var data = [];\n\n  for (var i = 0; i < lines.length; i++) {\n    var items = trim(lines[i]).split(itemSplitRegex);\n    var name = '';\n    var value;\n    var hasName = false;\n\n    if (isNaN(items[0])) {\n      // First item is name\n      hasName = true;\n      name = items[0];\n      items = items.slice(1);\n      data[i] = {\n        name: name,\n        value: []\n      };\n      value = data[i].value;\n    } else {\n      value = data[i] = [];\n    }\n\n    for (var j = 0; j < items.length; j++) {\n      value.push(+items[j]);\n    }\n\n    if (value.length === 1) {\n      hasName ? data[i].value = value[0] : data[i] = value[0];\n    }\n  }\n\n  return {\n    name: seriesName,\n    data: data\n  };\n}\n/**\n * @param {string} str\n * @param {Array.<Object>} blockMetaList\n * @return {Object}\n * @inner\n */\n\n\nfunction parseContents(str, blockMetaList) {\n  var blocks = str.split(new RegExp('\\n*' + BLOCK_SPLITER + '\\n*', 'g'));\n  var newOption = {\n    series: []\n  };\n  zrUtil.each(blocks, function (block, idx) {\n    if (isTSVFormat(block)) {\n      var result = parseTSVContents(block);\n      var blockMeta = blockMetaList[idx];\n      var axisKey = blockMeta.axisDim + 'Axis';\n\n      if (blockMeta) {\n        newOption[axisKey] = newOption[axisKey] || [];\n        newOption[axisKey][blockMeta.axisIndex] = {\n          data: result.categories\n        };\n        newOption.series = newOption.series.concat(result.series);\n      }\n    } else {\n      var result = parseListContents(block);\n      newOption.series.push(result);\n    }\n  });\n  return newOption;\n}\n/**\n * @alias {module:echarts/component/toolbox/feature/DataView}\n * @constructor\n * @param {module:echarts/model/Model} model\n */\n\n\nfunction DataView(model) {\n  this._dom = null;\n  this.model = model;\n}\n\nDataView.defaultOption = {\n  show: true,\n  readOnly: false,\n  optionToContent: null,\n  contentToOption: null,\n  icon: 'M17.5,17.3H33 M17.5,17.3H33 M45.4,29.5h-28 M11.5,2v56H51V14.8L38.4,2H11.5z M38.4,2.2v12.7H51 M45.4,41.7h-28',\n  title: zrUtil.clone(dataViewLang.title),\n  lang: zrUtil.clone(dataViewLang.lang),\n  backgroundColor: '#fff',\n  textColor: '#000',\n  textareaColor: '#fff',\n  textareaBorderColor: '#333',\n  buttonColor: '#c23531',\n  buttonTextColor: '#fff'\n};\n\nDataView.prototype.onclick = function (ecModel, api) {\n  var container = api.getDom();\n  var model = this.model;\n\n  if (this._dom) {\n    container.removeChild(this._dom);\n  }\n\n  var root = document.createElement('div');\n  root.style.cssText = 'position:absolute;left:5px;top:5px;bottom:5px;right:5px;';\n  root.style.backgroundColor = model.get('backgroundColor') || '#fff'; // Create elements\n\n  var header = document.createElement('h4');\n  var lang = model.get('lang') || [];\n  header.innerHTML = lang[0] || model.get('title');\n  header.style.cssText = 'margin: 10px 20px;';\n  header.style.color = model.get('textColor');\n  var viewMain = document.createElement('div');\n  var textarea = document.createElement('textarea');\n  viewMain.style.cssText = 'display:block;width:100%;overflow:auto;';\n  var optionToContent = model.get('optionToContent');\n  var contentToOption = model.get('contentToOption');\n  var result = getContentFromModel(ecModel);\n\n  if (typeof optionToContent === 'function') {\n    var htmlOrDom = optionToContent(api.getOption());\n\n    if (typeof htmlOrDom === 'string') {\n      viewMain.innerHTML = htmlOrDom;\n    } else if (zrUtil.isDom(htmlOrDom)) {\n      viewMain.appendChild(htmlOrDom);\n    }\n  } else {\n    // Use default textarea\n    viewMain.appendChild(textarea);\n    textarea.readOnly = model.get('readOnly');\n    textarea.style.cssText = 'width:100%;height:100%;font-family:monospace;font-size:14px;line-height:1.6rem;';\n    textarea.style.color = model.get('textColor');\n    textarea.style.borderColor = model.get('textareaBorderColor');\n    textarea.style.backgroundColor = model.get('textareaColor');\n    textarea.value = result.value;\n  }\n\n  var blockMetaList = result.meta;\n  var buttonContainer = document.createElement('div');\n  buttonContainer.style.cssText = 'position:absolute;bottom:0;left:0;right:0;';\n  var buttonStyle = 'float:right;margin-right:20px;border:none;' + 'cursor:pointer;padding:2px 5px;font-size:12px;border-radius:3px';\n  var closeButton = document.createElement('div');\n  var refreshButton = document.createElement('div');\n  buttonStyle += ';background-color:' + model.get('buttonColor');\n  buttonStyle += ';color:' + model.get('buttonTextColor');\n  var self = this;\n\n  function close() {\n    container.removeChild(root);\n    self._dom = null;\n  }\n\n  eventTool.addEventListener(closeButton, 'click', close);\n  eventTool.addEventListener(refreshButton, 'click', function () {\n    var newOption;\n\n    try {\n      if (typeof contentToOption === 'function') {\n        newOption = contentToOption(viewMain, api.getOption());\n      } else {\n        newOption = parseContents(textarea.value, blockMetaList);\n      }\n    } catch (e) {\n      close();\n      throw new Error('Data view format error ' + e);\n    }\n\n    if (newOption) {\n      api.dispatchAction({\n        type: 'changeDataView',\n        newOption: newOption\n      });\n    }\n\n    close();\n  });\n  closeButton.innerHTML = lang[1];\n  refreshButton.innerHTML = lang[2];\n  refreshButton.style.cssText = buttonStyle;\n  closeButton.style.cssText = buttonStyle;\n  !model.get('readOnly') && buttonContainer.appendChild(refreshButton);\n  buttonContainer.appendChild(closeButton); // http://stackoverflow.com/questions/6637341/use-tab-to-indent-in-textarea\n\n  eventTool.addEventListener(textarea, 'keydown', function (e) {\n    if ((e.keyCode || e.which) === 9) {\n      // get caret position/selection\n      var val = this.value;\n      var start = this.selectionStart;\n      var end = this.selectionEnd; // set textarea value to: text before caret + tab + text after caret\n\n      this.value = val.substring(0, start) + ITEM_SPLITER + val.substring(end); // put caret at right position again\n\n      this.selectionStart = this.selectionEnd = start + 1; // prevent the focus lose\n\n      eventTool.stop(e);\n    }\n  });\n  root.appendChild(header);\n  root.appendChild(viewMain);\n  root.appendChild(buttonContainer);\n  viewMain.style.height = container.clientHeight - 80 + 'px';\n  container.appendChild(root);\n  this._dom = root;\n};\n\nDataView.prototype.remove = function (ecModel, api) {\n  this._dom && api.getDom().removeChild(this._dom);\n};\n\nDataView.prototype.dispose = function (ecModel, api) {\n  this.remove(ecModel, api);\n};\n/**\n * @inner\n */\n\n\nfunction tryMergeDataOption(newData, originalData) {\n  return zrUtil.map(newData, function (newVal, idx) {\n    var original = originalData && originalData[idx];\n\n    if (zrUtil.isObject(original) && !zrUtil.isArray(original)) {\n      if (zrUtil.isObject(newVal) && !zrUtil.isArray(newVal)) {\n        newVal = newVal.value;\n      } // Original data has option\n\n\n      return zrUtil.defaults({\n        value: newVal\n      }, original);\n    } else {\n      return newVal;\n    }\n  });\n}\n\nfeatureManager.register('dataView', DataView);\necharts.registerAction({\n  type: 'changeDataView',\n  event: 'dataViewChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  var newSeriesOptList = [];\n  zrUtil.each(payload.newOption.series, function (seriesOpt) {\n    var seriesModel = ecModel.getSeriesByName(seriesOpt.name)[0];\n\n    if (!seriesModel) {\n      // New created series\n      // Geuss the series type\n      newSeriesOptList.push(zrUtil.extend({\n        // Default is scatter\n        type: 'scatter'\n      }, seriesOpt));\n    } else {\n      var originalData = seriesModel.get('data');\n      newSeriesOptList.push({\n        name: seriesOpt.name,\n        data: tryMergeDataOption(seriesOpt.data, originalData)\n      });\n    }\n  });\n  ecModel.mergeOption(zrUtil.defaults({\n    series: newSeriesOptList\n  }, payload.newOption));\n});\nvar _default = DataView;\nmodule.exports = _default;","var echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BrushController = require(\"../../helper/BrushController\");\n\nvar BrushTargetManager = require(\"../../helper/BrushTargetManager\");\n\nvar history = require(\"../../dataZoom/history\");\n\nvar sliderMove = require(\"../../helper/sliderMove\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nrequire(\"../../dataZoomSelect\");\n\n// Use dataZoomSelect\nvar dataZoomLang = lang.toolbox.dataZoom;\nvar each = zrUtil.each; // Spectial component id start with \\0ec\\0, see echarts/model/Global.js~hasInnerId\n\nvar DATA_ZOOM_ID_BASE = '\\0_ec_\\0toolbox-dataZoom_';\n\nfunction DataZoom(model, ecModel, api) {\n  /**\n   * @private\n   * @type {module:echarts/component/helper/BrushController}\n   */\n  (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this)).mount();\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._isZoomActive;\n}\n\nDataZoom.defaultOption = {\n  show: true,\n  // Icon group\n  icon: {\n    zoom: 'M0,13.5h26.9 M13.5,26.9V0 M32.1,13.5H58V58H13.5 V32.1',\n    back: 'M22,1.4L9.9,13.5l12.3,12.3 M10.3,13.5H54.9v44.6 H10.3v-26'\n  },\n  // `zoom`, `back`\n  title: zrUtil.clone(dataZoomLang.title)\n};\nvar proto = DataZoom.prototype;\n\nproto.render = function (featureModel, ecModel, api, payload) {\n  this.model = featureModel;\n  this.ecModel = ecModel;\n  this.api = api;\n  updateZoomBtnStatus(featureModel, ecModel, this, payload, api);\n  updateBackBtnStatus(featureModel, ecModel);\n};\n\nproto.onclick = function (ecModel, api, type) {\n  handlers[type].call(this);\n};\n\nproto.remove = function (ecModel, api) {\n  this._brushController.unmount();\n};\n\nproto.dispose = function (ecModel, api) {\n  this._brushController.dispose();\n};\n/**\n * @private\n */\n\n\nvar handlers = {\n  zoom: function () {\n    var nextActive = !this._isZoomActive;\n    this.api.dispatchAction({\n      type: 'takeGlobalCursor',\n      key: 'dataZoomSelect',\n      dataZoomSelectActive: nextActive\n    });\n  },\n  back: function () {\n    this._dispatchZoomAction(history.pop(this.ecModel));\n  }\n};\n/**\n * @private\n */\n\nproto._onBrush = function (areas, opt) {\n  if (!opt.isEnd || !areas.length) {\n    return;\n  }\n\n  var snapshot = {};\n  var ecModel = this.ecModel;\n\n  this._brushController.updateCovers([]); // remove cover\n\n\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(this.model.option), ecModel, {\n    include: ['grid']\n  });\n  brushTargetManager.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    if (coordSys.type !== 'cartesian2d') {\n      return;\n    }\n\n    var brushType = area.brushType;\n\n    if (brushType === 'rect') {\n      setBatch('x', coordSys, coordRange[0]);\n      setBatch('y', coordSys, coordRange[1]);\n    } else {\n      setBatch({\n        lineX: 'x',\n        lineY: 'y'\n      }[brushType], coordSys, coordRange);\n    }\n  });\n  history.push(ecModel, snapshot);\n\n  this._dispatchZoomAction(snapshot);\n\n  function setBatch(dimName, coordSys, minMax) {\n    var axis = coordSys.getAxis(dimName);\n    var axisModel = axis.model;\n    var dataZoomModel = findDataZoom(dimName, axisModel, ecModel); // Restrict range.\n\n    var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy(axisModel).getMinMaxSpan();\n\n    if (minMaxSpan.minValueSpan != null || minMaxSpan.maxValueSpan != null) {\n      minMax = sliderMove(0, minMax.slice(), axis.scale.getExtent(), 0, minMaxSpan.minValueSpan, minMaxSpan.maxValueSpan);\n    }\n\n    dataZoomModel && (snapshot[dataZoomModel.id] = {\n      dataZoomId: dataZoomModel.id,\n      startValue: minMax[0],\n      endValue: minMax[1]\n    });\n  }\n\n  function findDataZoom(dimName, axisModel, ecModel) {\n    var found;\n    ecModel.eachComponent({\n      mainType: 'dataZoom',\n      subType: 'select'\n    }, function (dzModel) {\n      var has = dzModel.getAxisModel(dimName, axisModel.componentIndex);\n      has && (found = dzModel);\n    });\n    return found;\n  }\n};\n/**\n * @private\n */\n\n\nproto._dispatchZoomAction = function (snapshot) {\n  var batch = []; // Convert from hash map to array.\n\n  each(snapshot, function (batchItem, dataZoomId) {\n    batch.push(zrUtil.clone(batchItem));\n  });\n  batch.length && this.api.dispatchAction({\n    type: 'dataZoom',\n    from: this.uid,\n    batch: batch\n  });\n};\n\nfunction retrieveAxisSetting(option) {\n  var setting = {}; // Compatible with previous setting: null => all axis, false => no axis.\n\n  zrUtil.each(['xAxisIndex', 'yAxisIndex'], function (name) {\n    setting[name] = option[name];\n    setting[name] == null && (setting[name] = 'all');\n    (setting[name] === false || setting[name] === 'none') && (setting[name] = []);\n  });\n  return setting;\n}\n\nfunction updateBackBtnStatus(featureModel, ecModel) {\n  featureModel.setIconStatus('back', history.count(ecModel) > 1 ? 'emphasis' : 'normal');\n}\n\nfunction updateZoomBtnStatus(featureModel, ecModel, view, payload, api) {\n  var zoomActive = view._isZoomActive;\n\n  if (payload && payload.type === 'takeGlobalCursor') {\n    zoomActive = payload.key === 'dataZoomSelect' ? payload.dataZoomSelectActive : false;\n  }\n\n  view._isZoomActive = zoomActive;\n  featureModel.setIconStatus('zoom', zoomActive ? 'emphasis' : 'normal');\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(featureModel.option), ecModel, {\n    include: ['grid']\n  });\n\n  view._brushController.setPanels(brushTargetManager.makePanelOpts(api, function (targetInfo) {\n    return targetInfo.xAxisDeclared && !targetInfo.yAxisDeclared ? 'lineX' : !targetInfo.xAxisDeclared && targetInfo.yAxisDeclared ? 'lineY' : 'rect';\n  })).enableBrush(zoomActive ? {\n    brushType: 'auto',\n    brushStyle: {\n      // FIXME user customized?\n      lineWidth: 0,\n      fill: 'rgba(0,0,0,0.2)'\n    }\n  } : false);\n}\n\nfeatureManager.register('dataZoom', DataZoom); // Create special dataZoom option for select\n\necharts.registerPreprocessor(function (option) {\n  if (!option) {\n    return;\n  }\n\n  var dataZoomOpts = option.dataZoom || (option.dataZoom = []);\n\n  if (!zrUtil.isArray(dataZoomOpts)) {\n    option.dataZoom = dataZoomOpts = [dataZoomOpts];\n  }\n\n  var toolboxOpt = option.toolbox;\n\n  if (toolboxOpt) {\n    // Assume there is only one toolbox\n    if (zrUtil.isArray(toolboxOpt)) {\n      toolboxOpt = toolboxOpt[0];\n    }\n\n    if (toolboxOpt && toolboxOpt.feature) {\n      var dataZoomOpt = toolboxOpt.feature.dataZoom;\n      addForAxis('xAxis', dataZoomOpt);\n      addForAxis('yAxis', dataZoomOpt);\n    }\n  }\n\n  function addForAxis(axisName, dataZoomOpt) {\n    if (!dataZoomOpt) {\n      return;\n    } // Try not to modify model, because it is not merged yet.\n\n\n    var axisIndicesName = axisName + 'Index';\n    var givenAxisIndices = dataZoomOpt[axisIndicesName];\n\n    if (givenAxisIndices != null && givenAxisIndices != 'all' && !zrUtil.isArray(givenAxisIndices)) {\n      givenAxisIndices = givenAxisIndices === false || givenAxisIndices === 'none' ? [] : [givenAxisIndices];\n    }\n\n    forEachComponent(axisName, function (axisOpt, axisIndex) {\n      if (givenAxisIndices != null && givenAxisIndices != 'all' && zrUtil.indexOf(givenAxisIndices, axisIndex) === -1) {\n        return;\n      }\n\n      var newOpt = {\n        type: 'select',\n        $fromToolbox: true,\n        // Id for merge mapping.\n        id: DATA_ZOOM_ID_BASE + axisName + axisIndex\n      }; // FIXME\n      // Only support one axis now.\n\n      newOpt[axisIndicesName] = axisIndex;\n      dataZoomOpts.push(newOpt);\n    });\n  }\n\n  function forEachComponent(mainType, cb) {\n    var opts = option[mainType];\n\n    if (!zrUtil.isArray(opts)) {\n      opts = opts ? [opts] : [];\n    }\n\n    each(opts, cb);\n  }\n});\nvar _default = DataZoom;\nmodule.exports = _default;","require(\"./dataZoom/typeDefaulter\");\n\nrequire(\"./dataZoom/DataZoomModel\");\n\nrequire(\"./dataZoom/DataZoomView\");\n\nrequire(\"./dataZoom/SelectZoomModel\");\n\nrequire(\"./dataZoom/SelectZoomView\");\n\nrequire(\"./dataZoom/dataZoomProcessor\");\n\nrequire(\"./dataZoom/dataZoomAction\");","var DataZoomModel = require(\"./DataZoomModel\");\n\nvar _default = DataZoomModel.extend({\n  type: 'dataZoom.select'\n});\n\nmodule.exports = _default;","var DataZoomView = require(\"./DataZoomView\");\n\nvar _default = DataZoomView.extend({\n  type: 'dataZoom.select'\n});\n\nmodule.exports = _default;","var echarts = require(\"../../../echarts\");\n\nvar history = require(\"../../dataZoom/history\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar restoreLang = lang.toolbox.restore;\n\nfunction Restore(model) {\n  this.model = model;\n}\n\nRestore.defaultOption = {\n  show: true,\n  icon: 'M3.8,33.4 M47,18.9h9.8V8.7 M56.3,20.1 C52.1,9,40.5,0.6,26.8,2.1C12.6,3.7,1.6,16.2,2.1,30.6 M13,41.1H3.1v10.2 M3.7,39.9c4.2,11.1,15.8,19.5,29.5,18 c14.2-1.6,25.2-14.1,24.7-28.5',\n  title: restoreLang.title\n};\nvar proto = Restore.prototype;\n\nproto.onclick = function (ecModel, api, type) {\n  history.clear(ecModel);\n  api.dispatchAction({\n    type: 'restore',\n    from: this.uid\n  });\n};\n\nfeatureManager.register('restore', Restore);\necharts.registerAction({\n  type: 'restore',\n  event: 'restore',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  ecModel.resetOption('recreate');\n});\nvar _default = Restore;\nmodule.exports = _default;","require(\"./graphic\");\n\nvar _zrender = require(\"../zrender\");\n\nvar registerPainter = _zrender.registerPainter;\n\nvar Painter = require(\"./Painter\");\n\nregisterPainter('vml', Painter);","var env = require(\"../core/env\");\n\nvar _vector = require(\"../core/vector\");\n\nvar applyTransform = _vector.applyTransform;\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar colorTool = require(\"../tool/color\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"../graphic/helper/text\");\n\nvar RectText = require(\"../graphic/mixin/RectText\");\n\nvar Displayable = require(\"../graphic/Displayable\");\n\nvar ZImage = require(\"../graphic/Image\");\n\nvar Text = require(\"../graphic/Text\");\n\nvar Path = require(\"../graphic/Path\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar Gradient = require(\"../graphic/Gradient\");\n\nvar vmlCore = require(\"./core\");\n\n// http://www.w3.org/TR/NOTE-VML\n// TODO Use proxy like svg instead of overwrite brush methods\nvar CMD = PathProxy.CMD;\nvar round = Math.round;\nvar sqrt = Math.sqrt;\nvar abs = Math.abs;\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar mathMax = Math.max;\n\nif (!env.canvasSupported) {\n  var comma = ',';\n  var imageTransformPrefix = 'progid:DXImageTransform.Microsoft';\n  var Z = 21600;\n  var Z2 = Z / 2;\n  var ZLEVEL_BASE = 100000;\n  var Z_BASE = 1000;\n\n  var initRootElStyle = function (el) {\n    el.style.cssText = 'position:absolute;left:0;top:0;width:1px;height:1px;';\n    el.coordsize = Z + ',' + Z;\n    el.coordorigin = '0,0';\n  };\n\n  var encodeHtmlAttribute = function (s) {\n    return String(s).replace(/&/g, '&amp;').replace(/\"/g, '&quot;');\n  };\n\n  var rgb2Str = function (r, g, b) {\n    return 'rgb(' + [r, g, b].join(',') + ')';\n  };\n\n  var append = function (parent, child) {\n    if (child && parent && child.parentNode !== parent) {\n      parent.appendChild(child);\n    }\n  };\n\n  var remove = function (parent, child) {\n    if (child && parent && child.parentNode === parent) {\n      parent.removeChild(child);\n    }\n  };\n\n  var getZIndex = function (zlevel, z, z2) {\n    // z 的取值范围为 [0, 1000]\n    return (parseFloat(zlevel) || 0) * ZLEVEL_BASE + (parseFloat(z) || 0) * Z_BASE + z2;\n  };\n\n  var parsePercent = function (value, maxValue) {\n    if (typeof value === 'string') {\n      if (value.lastIndexOf('%') >= 0) {\n        return parseFloat(value) / 100 * maxValue;\n      }\n\n      return parseFloat(value);\n    }\n\n    return value;\n  };\n  /***************************************************\n   * PATH\n   **************************************************/\n\n\n  var setColorAndOpacity = function (el, color, opacity) {\n    var colorArr = colorTool.parse(color);\n    opacity = +opacity;\n\n    if (isNaN(opacity)) {\n      opacity = 1;\n    }\n\n    if (colorArr) {\n      el.color = rgb2Str(colorArr[0], colorArr[1], colorArr[2]);\n      el.opacity = opacity * colorArr[3];\n    }\n  };\n\n  var getColorAndAlpha = function (color) {\n    var colorArr = colorTool.parse(color);\n    return [rgb2Str(colorArr[0], colorArr[1], colorArr[2]), colorArr[3]];\n  };\n\n  var updateFillNode = function (el, style, zrEl) {\n    // TODO pattern\n    var fill = style.fill;\n\n    if (fill != null) {\n      // Modified from excanvas\n      if (fill instanceof Gradient) {\n        var gradientType;\n        var angle = 0;\n        var focus = [0, 0]; // additional offset\n\n        var shift = 0; // scale factor for offset\n\n        var expansion = 1;\n        var rect = zrEl.getBoundingRect();\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n\n        if (fill.type === 'linear') {\n          gradientType = 'gradient';\n          var transform = zrEl.transform;\n          var p0 = [fill.x * rectWidth, fill.y * rectHeight];\n          var p1 = [fill.x2 * rectWidth, fill.y2 * rectHeight];\n\n          if (transform) {\n            applyTransform(p0, p0, transform);\n            applyTransform(p1, p1, transform);\n          }\n\n          var dx = p1[0] - p0[0];\n          var dy = p1[1] - p0[1];\n          angle = Math.atan2(dx, dy) * 180 / Math.PI; // The angle should be a non-negative number.\n\n          if (angle < 0) {\n            angle += 360;\n          } // Very small angles produce an unexpected result because they are\n          // converted to a scientific notation string.\n\n\n          if (angle < 1e-6) {\n            angle = 0;\n          }\n        } else {\n          gradientType = 'gradientradial';\n          var p0 = [fill.x * rectWidth, fill.y * rectHeight];\n          var transform = zrEl.transform;\n          var scale = zrEl.scale;\n          var width = rectWidth;\n          var height = rectHeight;\n          focus = [// Percent in bounding rect\n          (p0[0] - rect.x) / width, (p0[1] - rect.y) / height];\n\n          if (transform) {\n            applyTransform(p0, p0, transform);\n          }\n\n          width /= scale[0] * Z;\n          height /= scale[1] * Z;\n          var dimension = mathMax(width, height);\n          shift = 2 * 0 / dimension;\n          expansion = 2 * fill.r / dimension - shift;\n        } // We need to sort the color stops in ascending order by offset,\n        // otherwise IE won't interpret it correctly.\n\n\n        var stops = fill.colorStops.slice();\n        stops.sort(function (cs1, cs2) {\n          return cs1.offset - cs2.offset;\n        });\n        var length = stops.length; // Color and alpha list of first and last stop\n\n        var colorAndAlphaList = [];\n        var colors = [];\n\n        for (var i = 0; i < length; i++) {\n          var stop = stops[i];\n          var colorAndAlpha = getColorAndAlpha(stop.color);\n          colors.push(stop.offset * expansion + shift + ' ' + colorAndAlpha[0]);\n\n          if (i === 0 || i === length - 1) {\n            colorAndAlphaList.push(colorAndAlpha);\n          }\n        }\n\n        if (length >= 2) {\n          var color1 = colorAndAlphaList[0][0];\n          var color2 = colorAndAlphaList[1][0];\n          var opacity1 = colorAndAlphaList[0][1] * style.opacity;\n          var opacity2 = colorAndAlphaList[1][1] * style.opacity;\n          el.type = gradientType;\n          el.method = 'none';\n          el.focus = '100%';\n          el.angle = angle;\n          el.color = color1;\n          el.color2 = color2;\n          el.colors = colors.join(','); // When colors attribute is used, the meanings of opacity and o:opacity2\n          // are reversed.\n\n          el.opacity = opacity2; // FIXME g_o_:opacity ?\n\n          el.opacity2 = opacity1;\n        }\n\n        if (gradientType === 'radial') {\n          el.focusposition = focus.join(',');\n        }\n      } else {\n        // FIXME Change from Gradient fill to color fill\n        setColorAndOpacity(el, fill, style.opacity);\n      }\n    }\n  };\n\n  var updateStrokeNode = function (el, style) {\n    // if (style.lineJoin != null) {\n    //     el.joinstyle = style.lineJoin;\n    // }\n    // if (style.miterLimit != null) {\n    //     el.miterlimit = style.miterLimit * Z;\n    // }\n    // if (style.lineCap != null) {\n    //     el.endcap = style.lineCap;\n    // }\n    if (style.lineDash != null) {\n      el.dashstyle = style.lineDash.join(' ');\n    }\n\n    if (style.stroke != null && !(style.stroke instanceof Gradient)) {\n      setColorAndOpacity(el, style.stroke, style.opacity);\n    }\n  };\n\n  var updateFillAndStroke = function (vmlEl, type, style, zrEl) {\n    var isFill = type == 'fill';\n    var el = vmlEl.getElementsByTagName(type)[0]; // Stroke must have lineWidth\n\n    if (style[type] != null && style[type] !== 'none' && (isFill || !isFill && style.lineWidth)) {\n      vmlEl[isFill ? 'filled' : 'stroked'] = 'true'; // FIXME Remove before updating, or set `colors` will throw error\n\n      if (style[type] instanceof Gradient) {\n        remove(vmlEl, el);\n      }\n\n      if (!el) {\n        el = vmlCore.createNode(type);\n      }\n\n      isFill ? updateFillNode(el, style, zrEl) : updateStrokeNode(el, style);\n      append(vmlEl, el);\n    } else {\n      vmlEl[isFill ? 'filled' : 'stroked'] = 'false';\n      remove(vmlEl, el);\n    }\n  };\n\n  var points = [[], [], []];\n\n  var pathDataToString = function (path, m) {\n    var M = CMD.M;\n    var C = CMD.C;\n    var L = CMD.L;\n    var A = CMD.A;\n    var Q = CMD.Q;\n    var str = [];\n    var nPoint;\n    var cmdStr;\n    var cmd;\n    var i;\n    var xi;\n    var yi;\n    var data = path.data;\n    var dataLength = path.len();\n\n    for (i = 0; i < dataLength;) {\n      cmd = data[i++];\n      cmdStr = '';\n      nPoint = 0;\n\n      switch (cmd) {\n        case M:\n          cmdStr = ' m ';\n          nPoint = 1;\n          xi = data[i++];\n          yi = data[i++];\n          points[0][0] = xi;\n          points[0][1] = yi;\n          break;\n\n        case L:\n          cmdStr = ' l ';\n          nPoint = 1;\n          xi = data[i++];\n          yi = data[i++];\n          points[0][0] = xi;\n          points[0][1] = yi;\n          break;\n\n        case Q:\n        case C:\n          cmdStr = ' c ';\n          nPoint = 3;\n          var x1 = data[i++];\n          var y1 = data[i++];\n          var x2 = data[i++];\n          var y2 = data[i++];\n          var x3;\n          var y3;\n\n          if (cmd === Q) {\n            // Convert quadratic to cubic using degree elevation\n            x3 = x2;\n            y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (xi + 2 * x1) / 3;\n            y1 = (yi + 2 * y1) / 3;\n          } else {\n            x3 = data[i++];\n            y3 = data[i++];\n          }\n\n          points[0][0] = x1;\n          points[0][1] = y1;\n          points[1][0] = x2;\n          points[1][1] = y2;\n          points[2][0] = x3;\n          points[2][1] = y3;\n          xi = x3;\n          yi = y3;\n          break;\n\n        case A:\n          var x = 0;\n          var y = 0;\n          var sx = 1;\n          var sy = 1;\n          var angle = 0;\n\n          if (m) {\n            // Extract SRT from matrix\n            x = m[4];\n            y = m[5];\n            sx = sqrt(m[0] * m[0] + m[1] * m[1]);\n            sy = sqrt(m[2] * m[2] + m[3] * m[3]);\n            angle = Math.atan2(-m[1] / sy, m[0] / sx);\n          }\n\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++] + angle;\n          var endAngle = data[i++] + startAngle + angle; // FIXME\n          // var psi = data[i++];\n\n          i++;\n          var clockwise = data[i++];\n          var x0 = cx + cos(startAngle) * rx;\n          var y0 = cy + sin(startAngle) * ry;\n          var x1 = cx + cos(endAngle) * rx;\n          var y1 = cy + sin(endAngle) * ry;\n          var type = clockwise ? ' wa ' : ' at ';\n\n          if (Math.abs(x0 - x1) < 1e-4) {\n            // IE won't render arches drawn counter clockwise if x0 == x1.\n            if (Math.abs(endAngle - startAngle) > 1e-2) {\n              // Offset x0 by 1/80 of a pixel. Use something\n              // that can be represented in binary\n              if (clockwise) {\n                x0 += 270 / Z;\n              }\n            } else {\n              // Avoid case draw full circle\n              if (Math.abs(y0 - cy) < 1e-4) {\n                if (clockwise && x0 < cx || !clockwise && x0 > cx) {\n                  y1 -= 270 / Z;\n                } else {\n                  y1 += 270 / Z;\n                }\n              } else if (clockwise && y0 < cy || !clockwise && y0 > cy) {\n                x1 += 270 / Z;\n              } else {\n                x1 -= 270 / Z;\n              }\n            }\n          }\n\n          str.push(type, round(((cx - rx) * sx + x) * Z - Z2), comma, round(((cy - ry) * sy + y) * Z - Z2), comma, round(((cx + rx) * sx + x) * Z - Z2), comma, round(((cy + ry) * sy + y) * Z - Z2), comma, round((x0 * sx + x) * Z - Z2), comma, round((y0 * sy + y) * Z - Z2), comma, round((x1 * sx + x) * Z - Z2), comma, round((y1 * sy + y) * Z - Z2));\n          xi = x1;\n          yi = y1;\n          break;\n\n        case CMD.R:\n          var p0 = points[0];\n          var p1 = points[1]; // x0, y0\n\n          p0[0] = data[i++];\n          p0[1] = data[i++]; // x1, y1\n\n          p1[0] = p0[0] + data[i++];\n          p1[1] = p0[1] + data[i++];\n\n          if (m) {\n            applyTransform(p0, p0, m);\n            applyTransform(p1, p1, m);\n          }\n\n          p0[0] = round(p0[0] * Z - Z2);\n          p1[0] = round(p1[0] * Z - Z2);\n          p0[1] = round(p0[1] * Z - Z2);\n          p1[1] = round(p1[1] * Z - Z2);\n          str.push( // x0, y0\n          ' m ', p0[0], comma, p0[1], // x1, y0\n          ' l ', p1[0], comma, p0[1], // x1, y1\n          ' l ', p1[0], comma, p1[1], // x0, y1\n          ' l ', p0[0], comma, p1[1]);\n          break;\n\n        case CMD.Z:\n          // FIXME Update xi, yi\n          str.push(' x ');\n      }\n\n      if (nPoint > 0) {\n        str.push(cmdStr);\n\n        for (var k = 0; k < nPoint; k++) {\n          var p = points[k];\n          m && applyTransform(p, p, m); // 不 round 会非常慢\n\n          str.push(round(p[0] * Z - Z2), comma, round(p[1] * Z - Z2), k < nPoint - 1 ? comma : '');\n        }\n      }\n    }\n\n    return str.join('');\n  }; // Rewrite the original path method\n\n\n  Path.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n    var vmlEl = this._vmlEl;\n\n    if (!vmlEl) {\n      vmlEl = vmlCore.createNode('shape');\n      initRootElStyle(vmlEl);\n      this._vmlEl = vmlEl;\n    }\n\n    updateFillAndStroke(vmlEl, 'fill', style, this);\n    updateFillAndStroke(vmlEl, 'stroke', style, this);\n    var m = this.transform;\n    var needTransform = m != null;\n    var strokeEl = vmlEl.getElementsByTagName('stroke')[0];\n\n    if (strokeEl) {\n      var lineWidth = style.lineWidth; // Get the line scale.\n      // Determinant of this.m_ means how much the area is enlarged by the\n      // transformation. So its square root can be used as a scale factor\n      // for width.\n\n      if (needTransform && !style.strokeNoScale) {\n        var det = m[0] * m[3] - m[1] * m[2];\n        lineWidth *= sqrt(abs(det));\n      }\n\n      strokeEl.weight = lineWidth + 'px';\n    }\n\n    var path = this.path || (this.path = new PathProxy());\n\n    if (this.__dirtyPath) {\n      path.beginPath();\n      this.buildPath(path, this.shape);\n      path.toStatic();\n      this.__dirtyPath = false;\n    }\n\n    vmlEl.path = pathDataToString(path, this.transform);\n    vmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Append to root\n\n    append(vmlRoot, vmlEl); // Text\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, this.getBoundingRect());\n    } else {\n      this.removeRectText(vmlRoot);\n    }\n  };\n\n  Path.prototype.onRemove = function (vmlRoot) {\n    remove(vmlRoot, this._vmlEl);\n    this.removeRectText(vmlRoot);\n  };\n\n  Path.prototype.onAdd = function (vmlRoot) {\n    append(vmlRoot, this._vmlEl);\n    this.appendRectText(vmlRoot);\n  };\n  /***************************************************\n   * IMAGE\n   **************************************************/\n\n\n  var isImage = function (img) {\n    // FIXME img instanceof Image 如果 img 是一个字符串的时候，IE8 下会报错\n    return typeof img === 'object' && img.tagName && img.tagName.toUpperCase() === 'IMG'; // return img instanceof Image;\n  }; // Rewrite the original path method\n\n\n  ZImage.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n    var image = style.image; // Image original width, height\n\n    var ow;\n    var oh;\n\n    if (isImage(image)) {\n      var src = image.src;\n\n      if (src === this._imageSrc) {\n        ow = this._imageWidth;\n        oh = this._imageHeight;\n      } else {\n        var imageRuntimeStyle = image.runtimeStyle;\n        var oldRuntimeWidth = imageRuntimeStyle.width;\n        var oldRuntimeHeight = imageRuntimeStyle.height;\n        imageRuntimeStyle.width = 'auto';\n        imageRuntimeStyle.height = 'auto'; // get the original size\n\n        ow = image.width;\n        oh = image.height; // and remove overides\n\n        imageRuntimeStyle.width = oldRuntimeWidth;\n        imageRuntimeStyle.height = oldRuntimeHeight; // Caching image original width, height and src\n\n        this._imageSrc = src;\n        this._imageWidth = ow;\n        this._imageHeight = oh;\n      }\n\n      image = src;\n    } else {\n      if (image === this._imageSrc) {\n        ow = this._imageWidth;\n        oh = this._imageHeight;\n      }\n    }\n\n    if (!image) {\n      return;\n    }\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var dw = style.width;\n    var dh = style.height;\n    var sw = style.sWidth;\n    var sh = style.sHeight;\n    var sx = style.sx || 0;\n    var sy = style.sy || 0;\n    var hasCrop = sw && sh;\n    var vmlEl = this._vmlEl;\n\n    if (!vmlEl) {\n      // FIXME 使用 group 在 left, top 都不是 0 的时候就无法显示了。\n      // vmlEl = vmlCore.createNode('group');\n      vmlEl = vmlCore.doc.createElement('div');\n      initRootElStyle(vmlEl);\n      this._vmlEl = vmlEl;\n    }\n\n    var vmlElStyle = vmlEl.style;\n    var hasRotation = false;\n    var m;\n    var scaleX = 1;\n    var scaleY = 1;\n\n    if (this.transform) {\n      m = this.transform;\n      scaleX = sqrt(m[0] * m[0] + m[1] * m[1]);\n      scaleY = sqrt(m[2] * m[2] + m[3] * m[3]);\n      hasRotation = m[1] || m[2];\n    }\n\n    if (hasRotation) {\n      // If filters are necessary (rotation exists), create them\n      // filters are bog-slow, so only create them if abbsolutely necessary\n      // The following check doesn't account for skews (which don't exist\n      // in the canvas spec (yet) anyway.\n      // From excanvas\n      var p0 = [x, y];\n      var p1 = [x + dw, y];\n      var p2 = [x, y + dh];\n      var p3 = [x + dw, y + dh];\n      applyTransform(p0, p0, m);\n      applyTransform(p1, p1, m);\n      applyTransform(p2, p2, m);\n      applyTransform(p3, p3, m);\n      var maxX = mathMax(p0[0], p1[0], p2[0], p3[0]);\n      var maxY = mathMax(p0[1], p1[1], p2[1], p3[1]);\n      var transformFilter = [];\n      transformFilter.push('M11=', m[0] / scaleX, comma, 'M12=', m[2] / scaleY, comma, 'M21=', m[1] / scaleX, comma, 'M22=', m[3] / scaleY, comma, 'Dx=', round(x * scaleX + m[4]), comma, 'Dy=', round(y * scaleY + m[5]));\n      vmlElStyle.padding = '0 ' + round(maxX) + 'px ' + round(maxY) + 'px 0'; // FIXME DXImageTransform 在 IE11 的兼容模式下不起作用\n\n      vmlElStyle.filter = imageTransformPrefix + '.Matrix(' + transformFilter.join('') + ', SizingMethod=clip)';\n    } else {\n      if (m) {\n        x = x * scaleX + m[4];\n        y = y * scaleY + m[5];\n      }\n\n      vmlElStyle.filter = '';\n      vmlElStyle.left = round(x) + 'px';\n      vmlElStyle.top = round(y) + 'px';\n    }\n\n    var imageEl = this._imageEl;\n    var cropEl = this._cropEl;\n\n    if (!imageEl) {\n      imageEl = vmlCore.doc.createElement('div');\n      this._imageEl = imageEl;\n    }\n\n    var imageELStyle = imageEl.style;\n\n    if (hasCrop) {\n      // Needs know image original width and height\n      if (!(ow && oh)) {\n        var tmpImage = new Image();\n        var self = this;\n\n        tmpImage.onload = function () {\n          tmpImage.onload = null;\n          ow = tmpImage.width;\n          oh = tmpImage.height; // Adjust image width and height to fit the ratio destinationSize / sourceSize\n\n          imageELStyle.width = round(scaleX * ow * dw / sw) + 'px';\n          imageELStyle.height = round(scaleY * oh * dh / sh) + 'px'; // Caching image original width, height and src\n\n          self._imageWidth = ow;\n          self._imageHeight = oh;\n          self._imageSrc = image;\n        };\n\n        tmpImage.src = image;\n      } else {\n        imageELStyle.width = round(scaleX * ow * dw / sw) + 'px';\n        imageELStyle.height = round(scaleY * oh * dh / sh) + 'px';\n      }\n\n      if (!cropEl) {\n        cropEl = vmlCore.doc.createElement('div');\n        cropEl.style.overflow = 'hidden';\n        this._cropEl = cropEl;\n      }\n\n      var cropElStyle = cropEl.style;\n      cropElStyle.width = round((dw + sx * dw / sw) * scaleX);\n      cropElStyle.height = round((dh + sy * dh / sh) * scaleY);\n      cropElStyle.filter = imageTransformPrefix + '.Matrix(Dx=' + -sx * dw / sw * scaleX + ',Dy=' + -sy * dh / sh * scaleY + ')';\n\n      if (!cropEl.parentNode) {\n        vmlEl.appendChild(cropEl);\n      }\n\n      if (imageEl.parentNode != cropEl) {\n        cropEl.appendChild(imageEl);\n      }\n    } else {\n      imageELStyle.width = round(scaleX * dw) + 'px';\n      imageELStyle.height = round(scaleY * dh) + 'px';\n      vmlEl.appendChild(imageEl);\n\n      if (cropEl && cropEl.parentNode) {\n        vmlEl.removeChild(cropEl);\n        this._cropEl = null;\n      }\n    }\n\n    var filterStr = '';\n    var alpha = style.opacity;\n\n    if (alpha < 1) {\n      filterStr += '.Alpha(opacity=' + round(alpha * 100) + ') ';\n    }\n\n    filterStr += imageTransformPrefix + '.AlphaImageLoader(src=' + image + ', SizingMethod=scale)';\n    imageELStyle.filter = filterStr;\n    vmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Append to root\n\n    append(vmlRoot, vmlEl); // Text\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, this.getBoundingRect());\n    }\n  };\n\n  ZImage.prototype.onRemove = function (vmlRoot) {\n    remove(vmlRoot, this._vmlEl);\n    this._vmlEl = null;\n    this._cropEl = null;\n    this._imageEl = null;\n    this.removeRectText(vmlRoot);\n  };\n\n  ZImage.prototype.onAdd = function (vmlRoot) {\n    append(vmlRoot, this._vmlEl);\n    this.appendRectText(vmlRoot);\n  };\n  /***************************************************\n   * TEXT\n   **************************************************/\n\n\n  var DEFAULT_STYLE_NORMAL = 'normal';\n  var fontStyleCache = {};\n  var fontStyleCacheCount = 0;\n  var MAX_FONT_CACHE_SIZE = 100;\n  var fontEl = document.createElement('div');\n\n  var getFontStyle = function (fontString) {\n    var fontStyle = fontStyleCache[fontString];\n\n    if (!fontStyle) {\n      // Clear cache\n      if (fontStyleCacheCount > MAX_FONT_CACHE_SIZE) {\n        fontStyleCacheCount = 0;\n        fontStyleCache = {};\n      }\n\n      var style = fontEl.style;\n      var fontFamily;\n\n      try {\n        style.font = fontString;\n        fontFamily = style.fontFamily.split(',')[0];\n      } catch (e) {}\n\n      fontStyle = {\n        style: style.fontStyle || DEFAULT_STYLE_NORMAL,\n        variant: style.fontVariant || DEFAULT_STYLE_NORMAL,\n        weight: style.fontWeight || DEFAULT_STYLE_NORMAL,\n        size: parseFloat(style.fontSize || 12) | 0,\n        family: fontFamily || 'Microsoft YaHei'\n      };\n      fontStyleCache[fontString] = fontStyle;\n      fontStyleCacheCount++;\n    }\n\n    return fontStyle;\n  };\n\n  var textMeasureEl; // Overwrite measure text method\n\n  textContain.$override('measureText', function (text, textFont) {\n    var doc = vmlCore.doc;\n\n    if (!textMeasureEl) {\n      textMeasureEl = doc.createElement('div');\n      textMeasureEl.style.cssText = 'position:absolute;top:-20000px;left:0;' + 'padding:0;margin:0;border:none;white-space:pre;';\n      vmlCore.doc.body.appendChild(textMeasureEl);\n    }\n\n    try {\n      textMeasureEl.style.font = textFont;\n    } catch (ex) {// Ignore failures to set to invalid font.\n    }\n\n    textMeasureEl.innerHTML = ''; // Don't use innerHTML or innerText because they allow markup/whitespace.\n\n    textMeasureEl.appendChild(doc.createTextNode(text));\n    return {\n      width: textMeasureEl.offsetWidth\n    };\n  });\n  var tmpRect = new BoundingRect();\n\n  var drawRectText = function (vmlRoot, rect, textRect, fromTextEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!text) {\n      return;\n    } // Convert rich text to plain text. Rich text is not supported in\n    // IE8-, but tags in rich text template will be removed.\n\n\n    if (style.rich) {\n      var contentBlock = textContain.parseRichText(text, style);\n      text = [];\n\n      for (var i = 0; i < contentBlock.lines.length; i++) {\n        var tokens = contentBlock.lines[i].tokens;\n        var textLine = [];\n\n        for (var j = 0; j < tokens.length; j++) {\n          textLine.push(tokens[j].text);\n        }\n\n        text.push(textLine.join(''));\n      }\n\n      text = text.join('\\n');\n    }\n\n    var x;\n    var y;\n    var align = style.textAlign;\n    var verticalAlign = style.textVerticalAlign;\n    var fontStyle = getFontStyle(style.font); // FIXME encodeHtmlAttribute ?\n\n    var font = fontStyle.style + ' ' + fontStyle.variant + ' ' + fontStyle.weight + ' ' + fontStyle.size + 'px \"' + fontStyle.family + '\"';\n    textRect = textRect || textContain.getBoundingRect(text, font, align, verticalAlign); // Transform rect to view space\n\n    var m = this.transform; // Ignore transform for text in other element\n\n    if (m && !fromTextEl) {\n      tmpRect.copy(rect);\n      tmpRect.applyTransform(m);\n      rect = tmpRect;\n    }\n\n    if (!fromTextEl) {\n      var textPosition = style.textPosition;\n      var distance = style.textDistance; // Text position represented by coord\n\n      if (textPosition instanceof Array) {\n        x = rect.x + parsePercent(textPosition[0], rect.width);\n        y = rect.y + parsePercent(textPosition[1], rect.height);\n        align = align || 'left';\n      } else {\n        var res = textContain.adjustTextPositionOnRect(textPosition, rect, distance);\n        x = res.x;\n        y = res.y; // Default align and baseline when has textPosition\n\n        align = align || res.textAlign;\n        verticalAlign = verticalAlign || res.textVerticalAlign;\n      }\n    } else {\n      x = rect.x;\n      y = rect.y;\n    }\n\n    x = textContain.adjustTextX(x, textRect.width, align);\n    y = textContain.adjustTextY(y, textRect.height, verticalAlign); // Force baseline 'middle'\n\n    y += textRect.height / 2; // var fontSize = fontStyle.size;\n    // 1.75 is an arbitrary number, as there is no info about the text baseline\n    // switch (baseline) {\n    // case 'hanging':\n    // case 'top':\n    //     y += fontSize / 1.75;\n    //     break;\n    //     case 'middle':\n    //         break;\n    //     default:\n    //     // case null:\n    //     // case 'alphabetic':\n    //     // case 'ideographic':\n    //     // case 'bottom':\n    //         y -= fontSize / 2.25;\n    //         break;\n    // }\n    // switch (align) {\n    //     case 'left':\n    //         break;\n    //     case 'center':\n    //         x -= textRect.width / 2;\n    //         break;\n    //     case 'right':\n    //         x -= textRect.width;\n    //         break;\n    // case 'end':\n    // align = elementStyle.direction == 'ltr' ? 'right' : 'left';\n    // break;\n    // case 'start':\n    // align = elementStyle.direction == 'rtl' ? 'right' : 'left';\n    // break;\n    // default:\n    //     align = 'left';\n    // }\n\n    var createNode = vmlCore.createNode;\n    var textVmlEl = this._textVmlEl;\n    var pathEl;\n    var textPathEl;\n    var skewEl;\n\n    if (!textVmlEl) {\n      textVmlEl = createNode('line');\n      pathEl = createNode('path');\n      textPathEl = createNode('textpath');\n      skewEl = createNode('skew'); // FIXME Why here is not cammel case\n      // Align 'center' seems wrong\n\n      textPathEl.style['v-text-align'] = 'left';\n      initRootElStyle(textVmlEl);\n      pathEl.textpathok = true;\n      textPathEl.on = true;\n      textVmlEl.from = '0 0';\n      textVmlEl.to = '1000 0.05';\n      append(textVmlEl, skewEl);\n      append(textVmlEl, pathEl);\n      append(textVmlEl, textPathEl);\n      this._textVmlEl = textVmlEl;\n    } else {\n      // 这里是在前面 appendChild 保证顺序的前提下\n      skewEl = textVmlEl.firstChild;\n      pathEl = skewEl.nextSibling;\n      textPathEl = pathEl.nextSibling;\n    }\n\n    var coords = [x, y];\n    var textVmlElStyle = textVmlEl.style; // Ignore transform for text in other element\n\n    if (m && fromTextEl) {\n      applyTransform(coords, coords, m);\n      skewEl.on = true;\n      skewEl.matrix = m[0].toFixed(3) + comma + m[2].toFixed(3) + comma + m[1].toFixed(3) + comma + m[3].toFixed(3) + ',0,0'; // Text position\n\n      skewEl.offset = (round(coords[0]) || 0) + ',' + (round(coords[1]) || 0); // Left top point as origin\n\n      skewEl.origin = '0 0';\n      textVmlElStyle.left = '0px';\n      textVmlElStyle.top = '0px';\n    } else {\n      skewEl.on = false;\n      textVmlElStyle.left = round(x) + 'px';\n      textVmlElStyle.top = round(y) + 'px';\n    }\n\n    textPathEl.string = encodeHtmlAttribute(text); // TODO\n\n    try {\n      textPathEl.style.font = font;\n    } // Error font format\n    catch (e) {}\n\n    updateFillAndStroke(textVmlEl, 'fill', {\n      fill: style.textFill,\n      opacity: style.opacity\n    }, this);\n    updateFillAndStroke(textVmlEl, 'stroke', {\n      stroke: style.textStroke,\n      opacity: style.opacity,\n      lineDash: style.lineDash\n    }, this);\n    textVmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Attached to root\n\n    append(vmlRoot, textVmlEl);\n  };\n\n  var removeRectText = function (vmlRoot) {\n    remove(vmlRoot, this._textVmlEl);\n    this._textVmlEl = null;\n  };\n\n  var appendRectText = function (vmlRoot) {\n    append(vmlRoot, this._textVmlEl);\n  };\n\n  var list = [RectText, Displayable, ZImage, Path, Text]; // In case Displayable has been mixed in RectText\n\n  for (var i = 0; i < list.length; i++) {\n    var proto = list[i].prototype;\n    proto.drawRectText = drawRectText;\n    proto.removeRectText = removeRectText;\n    proto.appendRectText = appendRectText;\n  }\n\n  Text.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, {\n        x: style.x || 0,\n        y: style.y || 0,\n        width: 0,\n        height: 0\n      }, this.getBoundingRect(), true);\n    } else {\n      this.removeRectText(vmlRoot);\n    }\n  };\n\n  Text.prototype.onRemove = function (vmlRoot) {\n    this.removeRectText(vmlRoot);\n  };\n\n  Text.prototype.onAdd = function (vmlRoot) {\n    this.appendRectText(vmlRoot);\n  };\n}","var zrLog = require(\"../core/log\");\n\nvar vmlCore = require(\"./core\");\n\nvar _util = require(\"../core/util\");\n\nvar each = _util.each;\n\n/**\n * VML Painter.\n *\n * @module zrender/vml/Painter\n */\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n/**\n * @alias module:zrender/vml/Painter\n */\n\n\nfunction VMLPainter(root, storage) {\n  vmlCore.initVML();\n  this.root = root;\n  this.storage = storage;\n  var vmlViewport = document.createElement('div');\n  var vmlRoot = document.createElement('div');\n  vmlViewport.style.cssText = 'display:inline-block;overflow:hidden;position:relative;width:300px;height:150px;';\n  vmlRoot.style.cssText = 'position:absolute;left:0;top:0;';\n  root.appendChild(vmlViewport);\n  this._vmlRoot = vmlRoot;\n  this._vmlViewport = vmlViewport;\n  this.resize(); // Modify storage\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n\n    if (el) {\n      el.onRemove && el.onRemove(vmlRoot);\n    }\n  };\n\n  storage.addToStorage = function (el) {\n    // Displayable already has a vml node\n    el.onAdd && el.onAdd(vmlRoot);\n    oldAddToStorage.call(storage, el);\n  };\n\n  this._firstPaint = true;\n}\n\nVMLPainter.prototype = {\n  constructor: VMLPainter,\n  getType: function () {\n    return 'vml';\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._vmlViewport;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   */\n  refresh: function () {\n    var list = this.storage.getDisplayList(true, true);\n\n    this._paintList(list);\n  },\n  _paintList: function (list) {\n    var vmlRoot = this._vmlRoot;\n\n    for (var i = 0; i < list.length; i++) {\n      var el = list[i];\n\n      if (el.invisible || el.ignore) {\n        if (!el.__alreadyNotVisible) {\n          el.onRemove(vmlRoot);\n        } // Set as already invisible\n\n\n        el.__alreadyNotVisible = true;\n      } else {\n        if (el.__alreadyNotVisible) {\n          el.onAdd(vmlRoot);\n        }\n\n        el.__alreadyNotVisible = false;\n\n        if (el.__dirty) {\n          el.beforeBrush && el.beforeBrush();\n          (el.brushVML || el.brush).call(el, vmlRoot);\n          el.afterBrush && el.afterBrush();\n        }\n      }\n\n      el.__dirty = false;\n    }\n\n    if (this._firstPaint) {\n      // Detached from document at first time\n      // to avoid page refreshing too many times\n      // FIXME 如果每次都先 removeChild 可能会导致一些填充和描边的效果改变\n      this._vmlViewport.appendChild(vmlRoot);\n\n      this._firstPaint = false;\n    }\n  },\n  resize: function (width, height) {\n    var width = width == null ? this._getWidth() : width;\n    var height = height == null ? this._getHeight() : height;\n\n    if (this._width != width || this._height != height) {\n      this._width = width;\n      this._height = height;\n      var vmlViewportStyle = this._vmlViewport.style;\n      vmlViewportStyle.width = width + 'px';\n      vmlViewportStyle.height = height + 'px';\n    }\n  },\n  dispose: function () {\n    this.root.innerHTML = '';\n    this._vmlRoot = this._vmlViewport = this.storage = null;\n  },\n  getWidth: function () {\n    return this._width;\n  },\n  getHeight: function () {\n    return this._height;\n  },\n  clear: function () {\n    if (this._vmlViewport) {\n      this.root.removeChild(this._vmlViewport);\n    }\n  },\n  _getWidth: function () {\n    var root = this.root;\n    var stl = root.currentStyle;\n    return (root.clientWidth || parseInt10(stl.width)) - parseInt10(stl.paddingLeft) - parseInt10(stl.paddingRight) | 0;\n  },\n  _getHeight: function () {\n    var root = this.root;\n    var stl = root.currentStyle;\n    return (root.clientHeight || parseInt10(stl.height)) - parseInt10(stl.paddingTop) - parseInt10(stl.paddingBottom) | 0;\n  }\n}; // Not supported methods\n\nfunction createMethodNotSupport(method) {\n  return function () {\n    zrLog('In IE8.0 VML mode painter not support method \"' + method + '\"');\n  };\n} // Unsupported methods\n\n\neach(['getLayer', 'insertLayer', 'eachLayer', 'eachBuiltinLayer', 'eachOtherLayer', 'getLayers', 'modLayer', 'delLayer', 'clearLayer', 'toDataURL', 'pathToImage'], function (name) {\n  VMLPainter.prototype[name] = createMethodNotSupport(name);\n});\nvar _default = VMLPainter;\nmodule.exports = _default;","require(\"./graphic\");\n\nvar _zrender = require(\"../zrender\");\n\nvar registerPainter = _zrender.registerPainter;\n\nvar Painter = require(\"./Painter\");\n\nregisterPainter('svg', Painter);","var _core = require(\"./core\");\n\nvar createElement = _core.createElement;\n\nvar util = require(\"../core/util\");\n\nvar each = util.each;\n\nvar zrLog = require(\"../core/log\");\n\nvar Path = require(\"../graphic/Path\");\n\nvar ZImage = require(\"../graphic/Image\");\n\nvar ZText = require(\"../graphic/Text\");\n\nvar arrayDiff = require(\"../core/arrayDiff2\");\n\nvar GradientManager = require(\"./helper/GradientManager\");\n\nvar ClippathManager = require(\"./helper/ClippathManager\");\n\nvar _graphic = require(\"./graphic\");\n\nvar svgPath = _graphic.path;\nvar svgImage = _graphic.image;\nvar svgText = _graphic.text;\n\n/**\n * SVG Painter\n * @module zrender/svg/Painter\n */\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction getSvgProxy(el) {\n  if (el instanceof Path) {\n    return svgPath;\n  } else if (el instanceof ZImage) {\n    return svgImage;\n  } else if (el instanceof ZText) {\n    return svgText;\n  } else {\n    return svgPath;\n  }\n}\n\nfunction checkParentAvailable(parent, child) {\n  return child && parent && child.parentNode !== parent;\n}\n\nfunction insertAfter(parent, child, prevSibling) {\n  if (checkParentAvailable(parent, child) && prevSibling) {\n    var nextSibling = prevSibling.nextSibling;\n    nextSibling ? parent.insertBefore(child, nextSibling) : parent.appendChild(child);\n  }\n}\n\nfunction prepend(parent, child) {\n  if (checkParentAvailable(parent, child)) {\n    var firstChild = parent.firstChild;\n    firstChild ? parent.insertBefore(child, firstChild) : parent.appendChild(child);\n  }\n}\n\nfunction append(parent, child) {\n  if (checkParentAvailable(parent, child)) {\n    parent.appendChild(child);\n  }\n}\n\nfunction remove(parent, child) {\n  if (child && parent && child.parentNode === parent) {\n    parent.removeChild(child);\n  }\n}\n\nfunction getTextSvgElement(displayable) {\n  return displayable.__textSvgEl;\n}\n\nfunction getSvgElement(displayable) {\n  return displayable.__svgEl;\n}\n/**\n * @alias module:zrender/svg/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar SVGPainter = function (root, storage, opts) {\n  this.root = root;\n  this.storage = storage;\n  this._opts = opts = util.extend({}, opts || {});\n  var svgRoot = createElement('svg');\n  svgRoot.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n  svgRoot.setAttribute('version', '1.1');\n  svgRoot.setAttribute('baseProfile', 'full');\n  svgRoot.style['user-select'] = 'none';\n  svgRoot.style.cssText = 'position:absolute;left:0;top:0;';\n  this.gradientManager = new GradientManager(svgRoot);\n  this.clipPathManager = new ClippathManager(svgRoot);\n  var viewport = document.createElement('div');\n  viewport.style.cssText = 'overflow:hidden;position:relative';\n  this._svgRoot = svgRoot;\n  this._viewport = viewport;\n  root.appendChild(viewport);\n  viewport.appendChild(svgRoot);\n  this.resize(opts.width, opts.height);\n  this._visibleList = [];\n};\n\nSVGPainter.prototype = {\n  constructor: SVGPainter,\n  getType: function () {\n    return 'svg';\n  },\n  getViewportRoot: function () {\n    return this._viewport;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n  refresh: function () {\n    var list = this.storage.getDisplayList(true);\n\n    this._paintList(list);\n  },\n  _paintList: function (list) {\n    this.gradientManager.markAllUnused();\n    this.clipPathManager.markAllUnused();\n    var svgRoot = this._svgRoot;\n    var visibleList = this._visibleList;\n    var listLen = list.length;\n    var newVisibleList = [];\n    var i;\n\n    for (i = 0; i < listLen; i++) {\n      var displayable = list[i];\n      var svgProxy = getSvgProxy(displayable);\n\n      if (!displayable.invisible) {\n        if (displayable.__dirty) {\n          svgProxy && svgProxy.brush(displayable); // Update clipPath\n\n          this.clipPathManager.update(displayable); // Update gradient\n\n          if (displayable.style) {\n            this.gradientManager.update(displayable.style.fill);\n            this.gradientManager.update(displayable.style.stroke);\n          }\n\n          displayable.__dirty = false;\n        }\n\n        newVisibleList.push(displayable);\n      }\n    }\n\n    var diff = arrayDiff(visibleList, newVisibleList);\n    var prevSvgElement; // First do remove, in case element moved to the head and do remove\n    // after add\n\n    for (i = 0; i < diff.length; i++) {\n      var item = diff[i];\n\n      if (item.removed) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = visibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          remove(svgRoot, svgElement);\n          remove(svgRoot, textSvgElement);\n        }\n      }\n    }\n\n    for (i = 0; i < diff.length; i++) {\n      var item = diff[i];\n\n      if (item.added) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = newVisibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          prevSvgElement ? insertAfter(svgRoot, svgElement, prevSvgElement) : prepend(svgRoot, svgElement);\n\n          if (svgElement) {\n            insertAfter(svgRoot, textSvgElement, svgElement);\n          } else if (prevSvgElement) {\n            insertAfter(svgRoot, textSvgElement, prevSvgElement);\n          } else {\n            prepend(svgRoot, textSvgElement);\n          } // Insert text\n\n\n          insertAfter(svgRoot, textSvgElement, svgElement);\n          prevSvgElement = textSvgElement || svgElement || prevSvgElement;\n          this.gradientManager.addWithoutUpdate(svgElement, displayable);\n          this.clipPathManager.markUsed(displayable);\n        }\n      } else if (!item.removed) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = newVisibleList[item.indices[k]];\n          prevSvgElement = svgElement = getTextSvgElement(displayable) || getSvgElement(displayable) || prevSvgElement;\n          this.gradientManager.markUsed(displayable);\n          this.gradientManager.addWithoutUpdate(svgElement, displayable);\n          this.clipPathManager.markUsed(displayable);\n        }\n      }\n    }\n\n    this.gradientManager.removeUnused();\n    this.clipPathManager.removeUnused();\n    this._visibleList = newVisibleList;\n  },\n  _getDefs: function (isForceCreating) {\n    var svgRoot = this._svgRoot;\n\n    var defs = this._svgRoot.getElementsByTagName('defs');\n\n    if (defs.length === 0) {\n      // Not exist\n      if (isForceCreating) {\n        var defs = svgRoot.insertBefore(createElement('defs'), // Create new tag\n        svgRoot.firstChild // Insert in the front of svg\n        );\n\n        if (!defs.contains) {\n          // IE doesn't support contains method\n          defs.contains = function (el) {\n            var children = defs.children;\n\n            if (!children) {\n              return false;\n            }\n\n            for (var i = children.length - 1; i >= 0; --i) {\n              if (children[i] === el) {\n                return true;\n              }\n            }\n\n            return false;\n          };\n        }\n\n        return defs;\n      } else {\n        return null;\n      }\n    } else {\n      return defs[0];\n    }\n  },\n  resize: function (width, height) {\n    var viewport = this._viewport; // FIXME Why ?\n\n    viewport.style.display = 'none'; // Save input w/h\n\n    var opts = this._opts;\n    width != null && (opts.width = width);\n    height != null && (opts.height = height);\n    width = this._getSize(0);\n    height = this._getSize(1);\n    viewport.style.display = '';\n\n    if (this._width !== width && this._height !== height) {\n      this._width = width;\n      this._height = height;\n      var viewportStyle = viewport.style;\n      viewportStyle.width = width + 'px';\n      viewportStyle.height = height + 'px';\n      var svgRoot = this._svgRoot; // Set width by 'svgRoot.width = width' is invalid\n\n      svgRoot.setAttribute('width', width);\n      svgRoot.setAttribute('height', height);\n    }\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  dispose: function () {\n    this.root.innerHTML = '';\n    this._svgRoot = this._viewport = this.storage = null;\n  },\n  clear: function () {\n    if (this._viewport) {\n      this.root.removeChild(this._viewport);\n    }\n  },\n  pathToSvg: function () {\n    this.refresh();\n    var html = this._svgRoot.outerHTML;\n    return 'data:img/svg+xml;utf-8,' + unescape(html);\n  }\n}; // Not supported methods\n\nfunction createMethodNotSupport(method) {\n  return function () {\n    zrLog('In SVG mode painter not support method \"' + method + '\"');\n  };\n} // Unsuppoted methods\n\n\neach(['getLayer', 'insertLayer', 'eachLayer', 'eachBuiltinLayer', 'eachOtherLayer', 'getLayers', 'modLayer', 'delLayer', 'clearLayer', 'toDataURL', 'pathToImage'], function (name) {\n  SVGPainter.prototype[name] = createMethodNotSupport(name);\n});\nvar _default = SVGPainter;\nmodule.exports = _default;","// Myers' Diff Algorithm\n// Modified from https://github.com/kpdecker/jsdiff/blob/master/src/diff/base.js\nfunction Diff() {}\n\nDiff.prototype = {\n  diff: function (oldArr, newArr, equals) {\n    if (!equals) {\n      equals = function (a, b) {\n        return a === b;\n      };\n    }\n\n    this.equals = equals;\n    var self = this;\n    oldArr = oldArr.slice();\n    newArr = newArr.slice(); // Allow subclasses to massage the input prior to running\n\n    var newLen = newArr.length;\n    var oldLen = oldArr.length;\n    var editLength = 1;\n    var maxEditLength = newLen + oldLen;\n    var bestPath = [{\n      newPos: -1,\n      components: []\n    }]; // Seed editLength = 0, i.e. the content starts with the same values\n\n    var oldPos = this.extractCommon(bestPath[0], newArr, oldArr, 0);\n\n    if (bestPath[0].newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n      var indices = [];\n\n      for (var i = 0; i < newArr.length; i++) {\n        indices.push(i);\n      } // Identity per the equality and tokenizer\n\n\n      return [{\n        indices: indices,\n        count: newArr.length\n      }];\n    } // Main worker method. checks all permutations of a given edit length for acceptance.\n\n\n    function execEditLength() {\n      for (var diagonalPath = -1 * editLength; diagonalPath <= editLength; diagonalPath += 2) {\n        var basePath;\n        var addPath = bestPath[diagonalPath - 1];\n        var removePath = bestPath[diagonalPath + 1];\n        var oldPos = (removePath ? removePath.newPos : 0) - diagonalPath;\n\n        if (addPath) {\n          // No one else is going to attempt to use this value, clear it\n          bestPath[diagonalPath - 1] = undefined;\n        }\n\n        var canAdd = addPath && addPath.newPos + 1 < newLen;\n        var canRemove = removePath && 0 <= oldPos && oldPos < oldLen;\n\n        if (!canAdd && !canRemove) {\n          // If this path is a terminal then prune\n          bestPath[diagonalPath] = undefined;\n          continue;\n        } // Select the diagonal that we want to branch from. We select the prior\n        // path whose position in the new string is the farthest from the origin\n        // and does not pass the bounds of the diff graph\n\n\n        if (!canAdd || canRemove && addPath.newPos < removePath.newPos) {\n          basePath = clonePath(removePath);\n          self.pushComponent(basePath.components, undefined, true);\n        } else {\n          basePath = addPath; // No need to clone, we've pulled it from the list\n\n          basePath.newPos++;\n          self.pushComponent(basePath.components, true, undefined);\n        }\n\n        oldPos = self.extractCommon(basePath, newArr, oldArr, diagonalPath); // If we have hit the end of both strings, then we are done\n\n        if (basePath.newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n          return buildValues(self, basePath.components, newArr, oldArr);\n        } else {\n          // Otherwise track this path as a potential candidate and continue.\n          bestPath[diagonalPath] = basePath;\n        }\n      }\n\n      editLength++;\n    }\n\n    while (editLength <= maxEditLength) {\n      var ret = execEditLength();\n\n      if (ret) {\n        return ret;\n      }\n    }\n  },\n  pushComponent: function (components, added, removed) {\n    var last = components[components.length - 1];\n\n    if (last && last.added === added && last.removed === removed) {\n      // We need to clone here as the component clone operation is just\n      // as shallow array clone\n      components[components.length - 1] = {\n        count: last.count + 1,\n        added: added,\n        removed: removed\n      };\n    } else {\n      components.push({\n        count: 1,\n        added: added,\n        removed: removed\n      });\n    }\n  },\n  extractCommon: function (basePath, newArr, oldArr, diagonalPath) {\n    var newLen = newArr.length;\n    var oldLen = oldArr.length;\n    var newPos = basePath.newPos;\n    var oldPos = newPos - diagonalPath;\n    var commonCount = 0;\n\n    while (newPos + 1 < newLen && oldPos + 1 < oldLen && this.equals(newArr[newPos + 1], oldArr[oldPos + 1])) {\n      newPos++;\n      oldPos++;\n      commonCount++;\n    }\n\n    if (commonCount) {\n      basePath.components.push({\n        count: commonCount\n      });\n    }\n\n    basePath.newPos = newPos;\n    return oldPos;\n  },\n  tokenize: function (value) {\n    return value.slice();\n  },\n  join: function (value) {\n    return value.slice();\n  }\n};\n\nfunction buildValues(diff, components, newArr, oldArr) {\n  var componentPos = 0;\n  var componentLen = components.length;\n  var newPos = 0;\n  var oldPos = 0;\n\n  for (; componentPos < componentLen; componentPos++) {\n    var component = components[componentPos];\n\n    if (!component.removed) {\n      var indices = [];\n\n      for (var i = newPos; i < newPos + component.count; i++) {\n        indices.push(i);\n      }\n\n      component.indices = indices;\n      newPos += component.count; // Common case\n\n      if (!component.added) {\n        oldPos += component.count;\n      }\n    } else {\n      var indices = [];\n\n      for (var i = oldPos; i < oldPos + component.count; i++) {\n        indices.push(i);\n      }\n\n      component.indices = indices;\n      oldPos += component.count;\n    }\n  }\n\n  return components;\n}\n\nfunction clonePath(path) {\n  return {\n    newPos: path.newPos,\n    components: path.components.slice(0)\n  };\n}\n\nvar arrayDiff = new Diff();\n\nfunction _default(oldArr, newArr, callback) {\n  return arrayDiff.diff(oldArr, newArr, callback);\n}\n\nmodule.exports = _default;","var Definable = require(\"./Definable\");\n\nvar zrUtil = require(\"../../core/util\");\n\nvar zrLog = require(\"../../core/log\");\n\n/**\n * @file Manages SVG gradient elements.\n * @author Zhang Wenli\n */\n\n/**\n * Manages SVG gradient elements.\n *\n * @class\n * @extends Definable\n * @param   {SVGElement} svgRoot root of SVG document\n */\nfunction GradientManager(svgRoot) {\n  Definable.call(this, svgRoot, ['linearGradient', 'radialGradient'], '__gradient_in_use__');\n}\n\nzrUtil.inherits(GradientManager, Definable);\n/**\n * Create new gradient DOM for fill or stroke if not exist,\n * but will not update gradient if exists.\n *\n * @param {SvgElement}  svgElement   SVG element to paint\n * @param {Displayable} displayable  zrender displayable element\n */\n\nGradientManager.prototype.addWithoutUpdate = function (svgElement, displayable) {\n  if (displayable && displayable.style) {\n    var that = this;\n    zrUtil.each(['fill', 'stroke'], function (fillOrStroke) {\n      if (displayable.style[fillOrStroke] && (displayable.style[fillOrStroke].type === 'linear' || displayable.style[fillOrStroke].type === 'radial')) {\n        var gradient = displayable.style[fillOrStroke];\n        var defs = that.getDefs(true); // Create dom in <defs> if not exists\n\n        var dom;\n\n        if (gradient._dom) {\n          // Gradient exists\n          dom = gradient._dom;\n\n          if (!defs.contains(gradient._dom)) {\n            // _dom is no longer in defs, recreate\n            that.addDom(dom);\n          }\n        } else {\n          // New dom\n          dom = that.add(gradient);\n        }\n\n        that.markUsed(displayable);\n        var id = dom.getAttribute('id');\n        svgElement.setAttribute(fillOrStroke, 'url(#' + id + ')');\n      }\n    });\n  }\n};\n/**\n * Add a new gradient tag in <defs>\n *\n * @param   {Gradient} gradient zr gradient instance\n * @return {SVGLinearGradientElement | SVGRadialGradientElement}\n *                            created DOM\n */\n\n\nGradientManager.prototype.add = function (gradient) {\n  var dom;\n\n  if (gradient.type === 'linear') {\n    dom = this.createElement('linearGradient');\n  } else if (gradient.type === 'radial') {\n    dom = this.createElement('radialGradient');\n  } else {\n    zrLog('Illegal gradient type.');\n    return null;\n  } // Set dom id with gradient id, since each gradient instance\n  // will have no more than one dom element.\n  // id may exists before for those dirty elements, in which case\n  // id should remain the same, and other attributes should be\n  // updated.\n\n\n  gradient.id = gradient.id || this.nextId++;\n  dom.setAttribute('id', 'zr-gradient-' + gradient.id);\n  this.updateDom(gradient, dom);\n  this.addDom(dom);\n  return dom;\n};\n/**\n * Update gradient.\n *\n * @param {Gradient} gradient zr gradient instance\n */\n\n\nGradientManager.prototype.update = function (gradient) {\n  var that = this;\n  Definable.prototype.update.call(this, gradient, function () {\n    var type = gradient.type;\n    var tagName = gradient._dom.tagName;\n\n    if (type === 'linear' && tagName === 'linearGradient' || type === 'radial' && tagName === 'radialGradient') {\n      // Gradient type is not changed, update gradient\n      that.updateDom(gradient, gradient._dom);\n    } else {\n      // Remove and re-create if type is changed\n      that.removeDom(gradient);\n      that.add(gradient);\n    }\n  });\n};\n/**\n * Update gradient dom\n *\n * @param {Gradient} gradient zr gradient instance\n * @param {SVGLinearGradientElement | SVGRadialGradientElement} dom\n *                            DOM to update\n */\n\n\nGradientManager.prototype.updateDom = function (gradient, dom) {\n  if (gradient.type === 'linear') {\n    dom.setAttribute('x1', gradient.x);\n    dom.setAttribute('y1', gradient.y);\n    dom.setAttribute('x2', gradient.x2);\n    dom.setAttribute('y2', gradient.y2);\n  } else if (gradient.type === 'radial') {\n    dom.setAttribute('cx', gradient.x);\n    dom.setAttribute('cy', gradient.y);\n    dom.setAttribute('r', gradient.r);\n  } else {\n    zrLog('Illegal gradient type.');\n    return;\n  }\n\n  if (gradient.global) {\n    // x1, x2, y1, y2 in range of 0 to canvas width or height\n    dom.setAttribute('gradientUnits', 'userSpaceOnUse');\n  } else {\n    // x1, x2, y1, y2 in range of 0 to 1\n    dom.setAttribute('gradientUnits', 'objectBoundingBox');\n  } // Remove color stops if exists\n\n\n  dom.innerHTML = ''; // Add color stops\n\n  var colors = gradient.colorStops;\n\n  for (var i = 0, len = colors.length; i < len; ++i) {\n    var stop = this.createElement('stop');\n    stop.setAttribute('offset', colors[i].offset * 100 + '%');\n    stop.setAttribute('stop-color', colors[i].color);\n    dom.appendChild(stop);\n  } // Store dom element in gradient, to avoid creating multiple\n  // dom instances for the same gradient element\n\n\n  gradient._dom = dom;\n};\n/**\n * Mark a single gradient to be used\n *\n * @param {Displayable} displayable displayable element\n */\n\n\nGradientManager.prototype.markUsed = function (displayable) {\n  if (displayable.style) {\n    var gradient = displayable.style.fill;\n\n    if (gradient && gradient._dom) {\n      Definable.prototype.markUsed.call(this, gradient._dom);\n    }\n\n    gradient = displayable.style.stroke;\n\n    if (gradient && gradient._dom) {\n      Definable.prototype.markUsed.call(this, gradient._dom);\n    }\n  }\n};\n\nvar _default = GradientManager;\nmodule.exports = _default;","var Definable = require(\"./Definable\");\n\nvar zrUtil = require(\"../../core/util\");\n\nvar matrix = require(\"../../core/matrix\");\n\n/**\n * @file Manages SVG clipPath elements.\n * @author Zhang Wenli\n */\n\n/**\n * Manages SVG clipPath elements.\n *\n * @class\n * @extends Definable\n * @param   {SVGElement} svgRoot root of SVG document\n */\nfunction ClippathManager(svgRoot) {\n  Definable.call(this, svgRoot, 'clipPath', '__clippath_in_use__');\n}\n\nzrUtil.inherits(ClippathManager, Definable);\n/**\n * Update clipPath.\n *\n * @param {Displayable} displayable displayable element\n */\n\nClippathManager.prototype.update = function (displayable) {\n  var svgEl = this.getSvgElement(displayable);\n\n  if (svgEl) {\n    this.updateDom(svgEl, displayable.__clipPaths, false);\n  }\n\n  var textEl = this.getTextSvgElement(displayable);\n\n  if (textEl) {\n    // Make another clipPath for text, since it's transform\n    // matrix is not the same with svgElement\n    this.updateDom(textEl, displayable.__clipPaths, true);\n  }\n\n  this.markUsed(displayable);\n};\n/**\n * Create an SVGElement of displayable and create a <clipPath> of its\n * clipPath\n *\n * @param {Displayable} parentEl  parent element\n * @param {ClipPath[]}  clipPaths clipPaths of parent element\n * @param {boolean}     isText    if parent element is Text\n */\n\n\nClippathManager.prototype.updateDom = function (parentEl, clipPaths, isText) {\n  if (clipPaths && clipPaths.length > 0) {\n    // Has clipPath, create <clipPath> with the first clipPath\n    var defs = this.getDefs(true);\n    var clipPath = clipPaths[0];\n    var clipPathEl;\n    var id;\n    var dom = isText ? '_textDom' : '_dom';\n\n    if (clipPath[dom]) {\n      // Use a dom that is already in <defs>\n      id = clipPath[dom].getAttribute('id');\n      clipPathEl = clipPath[dom]; // Use a dom that is already in <defs>\n\n      if (!defs.contains(clipPathEl)) {\n        // This happens when set old clipPath that has\n        // been previously removed\n        defs.appendChild(clipPathEl);\n      }\n    } else {\n      // New <clipPath>\n      id = 'zr-clip-' + this.nextId;\n      ++this.nextId;\n      clipPathEl = this.createElement('clipPath');\n      clipPathEl.setAttribute('id', id);\n      defs.appendChild(clipPathEl);\n      clipPath[dom] = clipPathEl;\n    } // Build path and add to <clipPath>\n\n\n    var svgProxy = this.getSvgProxy(clipPath);\n\n    if (clipPath.transform && clipPath.parent.invTransform && !isText) {\n      /**\n       * If a clipPath has a parent with transform, the transform\n       * of parent should not be considered when setting transform\n       * of clipPath. So we need to transform back from parent's\n       * transform, which is done by multiplying parent's inverse\n       * transform.\n       */\n      // Store old transform\n      var transform = Array.prototype.slice.call(clipPath.transform); // Transform back from parent, and brush path\n\n      matrix.mul(clipPath.transform, clipPath.parent.invTransform, clipPath.transform);\n      svgProxy.brush(clipPath); // Set back transform of clipPath\n\n      clipPath.transform = transform;\n    } else {\n      svgProxy.brush(clipPath);\n    }\n\n    var pathEl = this.getSvgElement(clipPath);\n    /**\n     * Use `cloneNode()` here to appendChild to multiple parents,\n     * which may happend when Text and other shapes are using the same\n     * clipPath. Since Text will create an extra clipPath DOM due to\n     * different transform rules.\n     */\n\n    clipPathEl.appendChild(pathEl.cloneNode());\n    parentEl.setAttribute('clip-path', 'url(#' + id + ')');\n\n    if (clipPaths.length > 1) {\n      // Make the other clipPaths recursively\n      this.updateDom(clipPathEl, clipPaths.slice(1), isText);\n    }\n  } else {\n    // No clipPath\n    if (parentEl) {\n      parentEl.setAttribute('clip-path', 'none');\n    }\n  }\n};\n/**\n * Mark a single clipPath to be used\n *\n * @param {Displayable} displayable displayable element\n */\n\n\nClippathManager.prototype.markUsed = function (displayable) {\n  var that = this;\n\n  if (displayable.__clipPaths && displayable.__clipPaths.length > 0) {\n    zrUtil.each(displayable.__clipPaths, function (clipPath) {\n      if (clipPath._dom) {\n        Definable.prototype.markUsed.call(that, clipPath._dom);\n      }\n\n      if (clipPath._textDom) {\n        Definable.prototype.markUsed.call(that, clipPath._textDom);\n      }\n    });\n  }\n};\n\nvar _default = ClippathManager;\nmodule.exports = _default;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _elementResizeEvent = require('element-resize-event');\n\nvar _elementResizeEvent2 = _interopRequireDefault(_elementResizeEvent);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ReactEcharts = function (_React$Component) {\n  _inherits(ReactEcharts, _React$Component);\n\n  function ReactEcharts(props) {\n    _classCallCheck(this, ReactEcharts);\n\n    var _this = _possibleConstructorReturn(this, (ReactEcharts.__proto__ || Object.getPrototypeOf(ReactEcharts)).call(this, props));\n\n    _this.getEchartsInstance = function () {\n      return _this.echartsInstance.getInstanceByDom(_this.echartsElement) || _this.echartsInstance.init(_this.echartsElement, _this.props.theme);\n    };\n\n    _this.bindEvents = function (instance, events) {\n      var _loopEvent = function _loopEvent(eventName) {\n        // ignore the event config which not satisfy\n        if (typeof eventName === 'string' && typeof events[eventName] === 'function') {\n          // binding event\n          instance.off(eventName);\n          instance.on(eventName, function (param) {\n            events[eventName](param, instance);\n          });\n        }\n      };\n\n      for (var eventName in events) {\n        if (Object.prototype.hasOwnProperty.call(events, eventName)) {\n          _loopEvent(eventName);\n        }\n      }\n    };\n\n    _this.renderEchartDom = function () {\n      // init the echart object\n      var echartObj = _this.getEchartsInstance();\n      // set the echart option\n      echartObj.setOption(_this.props.option, _this.props.notMerge || false, _this.props.lazyUpdate || false);\n      // set loading mask\n      if (_this.props.showLoading) echartObj.showLoading(_this.props.loadingOption || null);else echartObj.hideLoading();\n\n      return echartObj;\n    };\n\n    _this.echartsInstance = _this.props.echarts; // the echarts object.\n    _this.echartsElement = null; // echarts div element\n    return _this;\n  }\n\n  // first add\n\n\n  _createClass(ReactEcharts, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var echartObj = this.renderEchartDom();\n      var onEvents = this.props.onEvents || {};\n\n      this.bindEvents(echartObj, onEvents);\n      // on chart ready\n      if (typeof this.props.onChartReady === 'function') this.props.onChartReady(echartObj);\n\n      // on resize\n      (0, _elementResizeEvent2['default'])(this.echartsElement, function () {\n        echartObj.resize();\n      });\n    }\n\n    // update\n\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      this.renderEchartDom();\n      this.bindEvents(this.getEchartsInstance(), this.props.onEvents || []);\n    }\n\n    // remove\n\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      if (this.echartsElement) {\n        // if elementResizeEvent.unbind exist, just do it.\n        if (typeof _elementResizeEvent2['default'].unbind === 'function') {\n          _elementResizeEvent2['default'].unbind(this.echartsElement);\n        }\n        this.echartsInstance.dispose(this.echartsElement);\n      }\n    }\n    // return the echart object\n\n\n    // bind the events\n\n\n    // render the dom\n\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var style = this.props.style || {\n        height: '300px'\n      };\n      // for render\n      return _react2['default'].createElement('div', {\n        ref: function ref(e) {\n          _this2.echartsElement = e;\n        },\n        style: style,\n        className: this.props.className\n      });\n    }\n  }]);\n\n  return ReactEcharts;\n}(_react2['default'].Component);\n\nexports['default'] = ReactEcharts;\n\n\nReactEcharts.propTypes = {\n  option: _propTypes2['default'].object.isRequired, // eslint-disable-line react/forbid-prop-types\n  echarts: _propTypes2['default'].object.isRequired, // eslint-disable-line react/forbid-prop-types\n  notMerge: _propTypes2['default'].bool,\n  lazyUpdate: _propTypes2['default'].bool,\n  style: _propTypes2['default'].object, // eslint-disable-line react/forbid-prop-types\n  className: _propTypes2['default'].string,\n  theme: _propTypes2['default'].string,\n  onChartReady: _propTypes2['default'].func,\n  showLoading: _propTypes2['default'].bool,\n  loadingOption: _propTypes2['default'].object, // eslint-disable-line react/forbid-prop-types\n  onEvents: _propTypes2['default'].object // eslint-disable-line react/forbid-prop-types\n};\n\nReactEcharts.defaultProps = {\n  echarts: {},\n  notMerge: false,\n  lazyUpdate: false,\n  style: { height: '300px' },\n  className: '',\n  theme: null,\n  onChartReady: function onChartReady() {},\n  showLoading: false,\n  loadingOption: null,\n  onEvents: {}\n};","var exports = function exports(element, fn) {\n  var window = this\n  var document = window.document\n  var isIE\n  var requestFrame\n\n  var attachEvent = document.attachEvent\n  if (typeof navigator !== 'undefined') {\n    isIE = navigator.userAgent.match(/Trident/) || navigator.userAgent.match(/Edge/)\n  }\n\n  requestFrame = (function () {\n    var raf = window.requestAnimationFrame ||\n      window.mozRequestAnimationFrame ||\n        window.webkitRequestAnimationFrame ||\n          function fallbackRAF(func) {\n            return window.setTimeout(func, 20)\n          }\n    return function requestFrameFunction(func) {\n      return raf(func)\n    }\n  })()\n\n  var cancelFrame = (function () {\n    var cancel = window.cancelAnimationFrame ||\n      window.mozCancelAnimationFrame ||\n        window.webkitCancelAnimationFrame ||\n          window.clearTimeout\n    return function cancelFrameFunction(id) {\n      return cancel(id)\n    }\n  })()\n\n  function resizeListener(e) {\n    var win = e.target || e.srcElement\n    if (win.__resizeRAF__) {\n      cancelFrame(win.__resizeRAF__)\n    }\n    win.__resizeRAF__ = requestFrame(function () {\n      var trigger = win.__resizeTrigger__\n      if(trigger !== undefined) {\n        trigger.__resizeListeners__.forEach(function (fn) {\n          fn.call(trigger, e)\n        })\n      }\n    })\n  }\n\n  function objectLoad() {\n    this.contentDocument.defaultView.__resizeTrigger__ = this.__resizeElement__\n    this.contentDocument.defaultView.addEventListener('resize', resizeListener)\n  }\n\n  if (!element.__resizeListeners__) {\n    element.__resizeListeners__ = []\n    if (attachEvent) {\n      element.__resizeTrigger__ = element\n      element.attachEvent('onresize', resizeListener)\n    } else {\n      if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative'\n      }\n      var obj = element.__resizeTrigger__ = document.createElement('object')\n      obj.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1; opacity: 0;')\n      obj.setAttribute('class', 'resize-sensor')\n      obj.__resizeElement__ = element\n      obj.onload = objectLoad\n      obj.type = 'text/html'\n      if (isIE) {\n        element.appendChild(obj)\n      }\n      obj.data = 'about:blank'\n      if (!isIE) {\n        element.appendChild(obj)\n      }\n    }\n  }\n  element.__resizeListeners__.push(fn)\n}\n\nexports.unbind = function(element, fn){\n  var attachEvent = document.attachEvent;\n  element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n  if (!element.__resizeListeners__.length) {\n    if (attachEvent) {\n      element.detachEvent('onresize', resizeListener);\n    } else {\n      element.__resizeTrigger__.contentDocument.defaultView.removeEventListener('resize', resizeListener);\n      element.__resizeTrigger__ = !element.removeChild(element.__resizeTrigger__);\n    }\n  }\n}\n\nmodule.exports = (typeof window === 'undefined') ? exports : exports.bind(window)\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Timeline = require('./Timeline');\n\nvar _Timeline2 = _interopRequireDefault(_Timeline);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nexports['default'] = _Timeline2['default'];\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _toConsumableArray2 = require('babel-runtime/helpers/toConsumableArray');\n\nvar _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);\n\nvar _defineProperty2 = require('babel-runtime/helpers/defineProperty');\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar React = _interopRequireWildcard(_react);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _TimelineItem = require('./TimelineItem');\n\nvar _TimelineItem2 = _interopRequireDefault(_TimelineItem);\n\nvar _icon = require('../icon');\n\nvar _icon2 = _interopRequireDefault(_icon);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar __rest = undefined && undefined.__rest || function (s, e) {\n    var t = {};\n    for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    }if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n        if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n    }return t;\n};\n\nvar Timeline = function (_React$Component) {\n    (0, _inherits3['default'])(Timeline, _React$Component);\n\n    function Timeline() {\n        (0, _classCallCheck3['default'])(this, Timeline);\n        return (0, _possibleConstructorReturn3['default'])(this, (Timeline.__proto__ || Object.getPrototypeOf(Timeline)).apply(this, arguments));\n    }\n\n    (0, _createClass3['default'])(Timeline, [{\n        key: 'render',\n        value: function render() {\n            var _classNames;\n\n            var _a = this.props,\n                prefixCls = _a.prefixCls,\n                _a$pending = _a.pending,\n                pending = _a$pending === undefined ? null : _a$pending,\n                pendingDot = _a.pendingDot,\n                children = _a.children,\n                className = _a.className,\n                reverse = _a.reverse,\n                mode = _a.mode,\n                restProps = __rest(_a, [\"prefixCls\", \"pending\", \"pendingDot\", \"children\", \"className\", \"reverse\", \"mode\"]);\n            var pendingNode = typeof pending === 'boolean' ? null : pending;\n            var classString = (0, _classnames2['default'])(prefixCls, (_classNames = {}, (0, _defineProperty3['default'])(_classNames, prefixCls + '-pending', !!pending), (0, _defineProperty3['default'])(_classNames, prefixCls + '-reverse', !!reverse), (0, _defineProperty3['default'])(_classNames, prefixCls + '-' + mode, !!mode), _classNames), className);\n            var pendingItem = !!pending ? React.createElement(\n                _TimelineItem2['default'],\n                { pending: !!pending, dot: pendingDot || React.createElement(_icon2['default'], { type: 'loading' }) },\n                pendingNode\n            ) : null;\n            var timeLineItems = !!reverse ? [pendingItem].concat((0, _toConsumableArray3['default'])(React.Children.toArray(children).reverse())) : [].concat((0, _toConsumableArray3['default'])(React.Children.toArray(children)), [pendingItem]);\n            // Remove falsy items\n            var truthyItems = timeLineItems.filter(function (item) {\n                return !!item;\n            });\n            var itemsCount = React.Children.count(truthyItems);\n            var lastCls = prefixCls + '-item-last';\n            var items = React.Children.map(truthyItems, function (ele, idx) {\n                return React.cloneElement(ele, {\n                    className: (0, _classnames2['default'])([ele.props.className, !reverse && !!pending ? idx === itemsCount - 2 ? lastCls : '' : idx === itemsCount - 1 ? lastCls : '', mode === 'alternate' ? idx % 2 === 0 ? prefixCls + '-item-left' : prefixCls + '-item-right' : mode === 'right' ? prefixCls + '-item-right' : ''])\n                });\n            });\n            return React.createElement(\n                'ul',\n                (0, _extends3['default'])({}, restProps, { className: classString }),\n                items\n            );\n        }\n    }]);\n    return Timeline;\n}(React.Component);\n\nexports['default'] = Timeline;\n\nTimeline.Item = _TimelineItem2['default'];\nTimeline.defaultProps = {\n    prefixCls: 'ant-timeline',\n    reverse: false,\n    mode: ''\n};\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _defineProperty2 = require('babel-runtime/helpers/defineProperty');\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar React = _interopRequireWildcard(_react);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar __rest = undefined && undefined.__rest || function (s, e) {\n    var t = {};\n    for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    }if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n        if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n    }return t;\n};\n\nvar TimelineItem = function (_React$Component) {\n    (0, _inherits3['default'])(TimelineItem, _React$Component);\n\n    function TimelineItem() {\n        (0, _classCallCheck3['default'])(this, TimelineItem);\n        return (0, _possibleConstructorReturn3['default'])(this, (TimelineItem.__proto__ || Object.getPrototypeOf(TimelineItem)).apply(this, arguments));\n    }\n\n    (0, _createClass3['default'])(TimelineItem, [{\n        key: 'render',\n        value: function render() {\n            var _classNames, _classNames2;\n\n            var _a = this.props,\n                prefixCls = _a.prefixCls,\n                className = _a.className,\n                _a$color = _a.color,\n                color = _a$color === undefined ? '' : _a$color,\n                children = _a.children,\n                pending = _a.pending,\n                dot = _a.dot,\n                restProps = __rest(_a, [\"prefixCls\", \"className\", \"color\", \"children\", \"pending\", \"dot\"]);\n            var itemClassName = (0, _classnames2['default'])((_classNames = {}, (0, _defineProperty3['default'])(_classNames, prefixCls + '-item', true), (0, _defineProperty3['default'])(_classNames, prefixCls + '-item-pending', pending), _classNames), className);\n            var dotClassName = (0, _classnames2['default'])((_classNames2 = {}, (0, _defineProperty3['default'])(_classNames2, prefixCls + '-item-head', true), (0, _defineProperty3['default'])(_classNames2, prefixCls + '-item-head-custom', dot), (0, _defineProperty3['default'])(_classNames2, prefixCls + '-item-head-' + color, true), _classNames2));\n            return React.createElement(\n                'li',\n                (0, _extends3['default'])({}, restProps, { className: itemClassName }),\n                React.createElement('div', { className: prefixCls + '-item-tail' }),\n                React.createElement(\n                    'div',\n                    { className: dotClassName, style: { borderColor: /blue|red|green/.test(color) ? undefined : color } },\n                    dot\n                ),\n                React.createElement(\n                    'div',\n                    { className: prefixCls + '-item-content' },\n                    children\n                )\n            );\n        }\n    }]);\n    return TimelineItem;\n}(React.Component);\n\nexports['default'] = TimelineItem;\n\nTimelineItem.defaultProps = {\n    prefixCls: 'ant-timeline',\n    color: 'blue',\n    pending: false\n};\nmodule.exports = exports['default'];","'use strict';\n\nrequire('../../style/index.less');\n\nrequire('./index.less');","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../css-loader/index.js!../../../../postcss-loader/lib/index.js??postcss!../../../../less-loader/dist/cjs.js??ref--4-oneOf-3-3!./index.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../../style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../css-loader/index.js!../../../../postcss-loader/lib/index.js??postcss!../../../../less-loader/dist/cjs.js??ref--4-oneOf-3-3!./index.less\", function() {\n\t\t\tvar newContent = require(\"!!../../../../css-loader/index.js!../../../../postcss-loader/lib/index.js??postcss!../../../../less-loader/dist/cjs.js??ref--4-oneOf-3-3!./index.less\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* stylelint-disable at-rule-empty-line-before,at-rule-name-space-after,at-rule-no-unknown */\\n/* stylelint-disable no-duplicate-selectors */\\n/* stylelint-disable declaration-bang-space-before,no-duplicate-selectors */\\n/* stylelint-disable declaration-bang-space-before,no-duplicate-selectors,string-no-newline */\\n.ant-timeline {\\n  font-family: \\\"Chinese Quote\\\", -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", \\\"PingFang SC\\\", \\\"Hiragino Sans GB\\\", \\\"Microsoft YaHei\\\", \\\"Helvetica Neue\\\", Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\";\\n  font-size: 14px;\\n  font-variant: tabular-nums;\\n  line-height: 1.5;\\n  color: rgba(0, 0, 0, 0.65);\\n  -webkit-box-sizing: border-box;\\n          box-sizing: border-box;\\n  list-style: none;\\n  margin: 0;\\n  padding: 0;\\n}\\n.ant-timeline-item {\\n  position: relative;\\n  padding: 0 0 20px;\\n  list-style: none;\\n  margin: 0;\\n  font-size: 14px;\\n}\\n.ant-timeline-item-tail {\\n  position: absolute;\\n  left: 4px;\\n  top: 0.75em;\\n  height: 100%;\\n  border-left: 2px solid #e8e8e8;\\n}\\n.ant-timeline-item-pending .ant-timeline-item-head {\\n  font-size: 12px;\\n}\\n.ant-timeline-item-pending .ant-timeline-item-tail {\\n  display: none;\\n}\\n.ant-timeline-item-head {\\n  position: absolute;\\n  width: 10px;\\n  height: 10px;\\n  background-color: #fff;\\n  border-radius: 100px;\\n  border: 2px solid transparent;\\n}\\n.ant-timeline-item-head-blue {\\n  border-color: #1890ff;\\n  color: #1890ff;\\n}\\n.ant-timeline-item-head-red {\\n  border-color: #f5222d;\\n  color: #f5222d;\\n}\\n.ant-timeline-item-head-green {\\n  border-color: #52c41a;\\n  color: #52c41a;\\n}\\n.ant-timeline-item-head-custom {\\n  position: absolute;\\n  text-align: center;\\n  line-height: 1;\\n  margin-top: 0;\\n  border: 0;\\n  height: auto;\\n  border-radius: 0;\\n  padding: 3px 1px;\\n  -webkit-transform: translate(-50%, -50%);\\n      -ms-transform: translate(-50%, -50%);\\n          transform: translate(-50%, -50%);\\n  top: 5.5px;\\n  left: 5px;\\n  width: auto;\\n}\\n.ant-timeline-item-content {\\n  margin: 0 0 0 18px;\\n  position: relative;\\n  top: -6px;\\n}\\n.ant-timeline-item-last .ant-timeline-item-tail {\\n  display: none;\\n}\\n.ant-timeline-item-last .ant-timeline-item-content {\\n  min-height: 48px;\\n}\\n.ant-timeline.ant-timeline-alternate .ant-timeline-item-tail,\\n.ant-timeline.ant-timeline-right .ant-timeline-item-tail,\\n.ant-timeline.ant-timeline-alternate .ant-timeline-item-head,\\n.ant-timeline.ant-timeline-right .ant-timeline-item-head,\\n.ant-timeline.ant-timeline-alternate .ant-timeline-item-head-custom,\\n.ant-timeline.ant-timeline-right .ant-timeline-item-head-custom {\\n  left: 50%;\\n}\\n.ant-timeline.ant-timeline-alternate .ant-timeline-item-head,\\n.ant-timeline.ant-timeline-right .ant-timeline-item-head {\\n  margin-left: -4px;\\n}\\n.ant-timeline.ant-timeline-alternate .ant-timeline-item-head-custom,\\n.ant-timeline.ant-timeline-right .ant-timeline-item-head-custom {\\n  margin-left: 1px;\\n}\\n.ant-timeline.ant-timeline-alternate .ant-timeline-item-left .ant-timeline-item-content,\\n.ant-timeline.ant-timeline-right .ant-timeline-item-left .ant-timeline-item-content {\\n  text-align: left;\\n  left: 50%;\\n  width: 50%;\\n}\\n.ant-timeline.ant-timeline-alternate .ant-timeline-item-right .ant-timeline-item-content,\\n.ant-timeline.ant-timeline-right .ant-timeline-item-right .ant-timeline-item-content {\\n  text-align: right;\\n  right: 50%;\\n  margin-right: 18px;\\n  width: 50%;\\n  left: -30px;\\n}\\n.ant-timeline.ant-timeline-right .ant-timeline-item-right .ant-timeline-item-tail,\\n.ant-timeline.ant-timeline-right .ant-timeline-item-right .ant-timeline-item-head,\\n.ant-timeline.ant-timeline-right .ant-timeline-item-right .ant-timeline-item-head-custom {\\n  left: 100%;\\n}\\n.ant-timeline.ant-timeline-right .ant-timeline-item-right .ant-timeline-item-content {\\n  right: 0;\\n  width: 100%;\\n  left: -30px;\\n}\\n.ant-timeline.ant-timeline-pending .ant-timeline-item-last .ant-timeline-item-tail {\\n  border-left: 2px dotted #e8e8e8;\\n  display: block;\\n}\\n.ant-timeline.ant-timeline-reverse .ant-timeline-item-last .ant-timeline-item-tail {\\n  display: none;\\n}\\n.ant-timeline.ant-timeline-reverse .ant-timeline-item-pending .ant-timeline-item-tail {\\n  border-left: 2px dotted #e8e8e8;\\n  display: block;\\n}\\n.ant-timeline.ant-timeline-reverse .ant-timeline-item-pending .ant-timeline-item-content {\\n  min-height: 48px;\\n}\\n\", \"\"]);\n\n// exports\n"],"sourceRoot":""}