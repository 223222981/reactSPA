"use strict";var precacheConfig=[["/reactSPA/index.html","0e4491efde99ca8b93bbed4852e88f3d"],["/reactSPA/static/css/0.css","e91fc49637a8b8f6b67190c18e1649b3"],["/reactSPA/static/js/10.bc71e81c.chunk.js","a3acbfe603a57a7ac82b2e28d39ddfe9"],["/reactSPA/static/js/11.0956f377.chunk.js","e148b2512231b201231d42b0e6650ea8"],["/reactSPA/static/js/12.6b284742.chunk.js","689b9f6fc5f70b0ac773a58148529e40"],["/reactSPA/static/js/3.f869d16b.chunk.js","96ee6974807cd1adcc2364d4dbcc528e"],["/reactSPA/static/js/4.78e3ff05.chunk.js","f49d20e3acb636cf1bb74dc8905a8bf8"],["/reactSPA/static/js/5.acce3c8f.chunk.js","1a8ac3bc3214209651fe2add2f657bfb"],["/reactSPA/static/js/6.8bf99e63.chunk.js","7cfdaf2cd2c8f51d570de23ca2049d9a"],["/reactSPA/static/js/7.dc83be07.chunk.js","880cfc5c7fab9a5f2dbe626a7b71b850"],["/reactSPA/static/js/8.5565d589.chunk.js","4e5a0088ba544c50a6fd4edcceb25464"],["/reactSPA/static/js/9.a4a3296a.chunk.js","bac37f592c36d0ce24a0ff10c82d71f3"],["/reactSPA/static/js/main.ae85751b.js","d4846057d1ab797e7012d8803030f143"],["/reactSPA/static/js/vendor1.77d8422d.chunk.js","7cb126a940f70659dbbe4184387a8f7c"],["/reactSPA/static/js/vendor2.00c4c07b.chunk.js","dbcf715de7b7c442296d41d804a0f914"],["/reactSPA/static/media/baidu_logo.a11828a5.png","a11828a55989ed8aa44c4984096ddf12"],["/reactSPA/static/media/chutian.d9543fe0.jpg","d9543fe0a6c1470ca86c062def6b8655"],["/reactSPA/static/media/default-skin.b257fa9c.svg","b257fa9c5ac8c515ac4d77a667ce2943"],["/reactSPA/static/media/face.a0e6c687.png","a0e6c6873628ff7882beedbffff9af08"],["/reactSPA/static/media/minren.a392b4dd.jpg","a392b4dd186d98cf009596a75904bedd"],["/reactSPA/static/media/sougou_logo.0a9b0227.png","0a9b02272b523fb2af0d6a8b7d6406da"],["/reactSPA/static/media/xiaoying.e2dedb10.jpg","e2dedb106417b5b30ec6920e000ffea6"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,t,a,c){var n=new URL(e);return c&&n.pathname.match(c)||(n.search+=(n.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),n.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],c=new URL(t,self.location),n=createCacheKey(c,hashParamName,a,/\.\w{8}\./);return[c.toString(),n]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var c=new Request(a,{credentials:"same-origin"});return fetch(c).then(function(t){if(!t.ok)throw new Error("Request for "+a+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(a,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(a){return Promise.all(a.map(function(a){if(!t.has(a.url))return e.delete(a)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,a=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching);(t=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,"index.html"),t=urlsToCacheKeys.has(a));!t&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(a=new URL("/reactSPA/index.html",self.location).toString(),t=urlsToCacheKeys.has(a)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});